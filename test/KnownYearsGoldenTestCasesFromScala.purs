module KnownYearsGoldenTestCasesFromScala
  ( TestCase(..)
  , cases
  ) where

import CommonTypes (FilingStatus(..))
import Data.Date (Date, Year)
import Moneys (Deduction, Income, TaxPayable, makeFromInt)
import Prelude (class Show, show)
import UnsafeDates (unsafeMakeDate, unsafeMakeYear)

newtype TestCase = TestCase
  { year :: Year
  , birthDate :: Date
  , personalExemptions :: Int
  , filingStatus :: FilingStatus
  , socSec :: Income
  , ordinaryIncomeNonSS :: Income
  , qualifiedIncome :: Income
  , itemizedDeductions :: Deduction
  , federalTaxDue :: TaxPayable
  , stateTaxDue :: TaxPayable
  }

instance showTestCase :: Show TestCase where
  show (TestCase tc) = show tc

cases :: Array TestCase
cases =
  [ TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44866, qualifiedIncome: makeFromInt 39386, itemizedDeductions: makeFromInt 403, federalTaxDue: makeFromInt 5292, stateTaxDue: makeFromInt 3868 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45654, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4894, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 34663, qualifiedIncome: makeFromInt 96264, itemizedDeductions: makeFromInt 22306, federalTaxDue: makeFromInt 22257, stateTaxDue: makeFromInt 6091 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113361, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9909, federalTaxDue: makeFromInt 28008, stateTaxDue: makeFromInt 5213 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11909, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25671, ordinaryIncomeNonSS: makeFromInt 22344, qualifiedIncome: makeFromInt 97146, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10604, stateTaxDue: makeFromInt 5645 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30927, ordinaryIncomeNonSS: makeFromInt 145340, qualifiedIncome: makeFromInt 50765, itemizedDeductions: makeFromInt 15453, federalTaxDue: makeFromInt 31722, stateTaxDue: makeFromInt 9257 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37958, ordinaryIncomeNonSS: makeFromInt 142622, qualifiedIncome: makeFromInt 80161, itemizedDeductions: makeFromInt 29851, federalTaxDue: makeFromInt 40668, stateTaxDue: makeFromInt 10684 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13686, ordinaryIncomeNonSS: makeFromInt 125296, qualifiedIncome: makeFromInt 40793, itemizedDeductions: makeFromInt 21282, federalTaxDue: makeFromInt 26210, stateTaxDue: makeFromInt 7929 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67991, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2815 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49056, itemizedDeductions: makeFromInt 15663, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2078 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39516, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27751, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34582, stateTaxDue: makeFromInt 8513 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9322, ordinaryIncomeNonSS: makeFromInt 148068, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8376, federalTaxDue: makeFromInt 42746, stateTaxDue: makeFromInt 11948 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52723, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5919, federalTaxDue: makeFromInt 16736, stateTaxDue: makeFromInt 2464 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54610, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1498, stateTaxDue: makeFromInt 2276 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 132, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78187, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24055, stateTaxDue: makeFromInt 8654 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57447, itemizedDeductions: makeFromInt 28283, federalTaxDue: makeFromInt 1923, stateTaxDue: makeFromInt 2617 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98520, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16903, federalTaxDue: makeFromInt 13689, stateTaxDue: makeFromInt 4678 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28940, itemizedDeductions: makeFromInt 14859, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1129 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53304, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 436, stateTaxDue: makeFromInt 2168 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25553, ordinaryIncomeNonSS: makeFromInt 121248, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25020, stateTaxDue: makeFromInt 5607 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15007, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52943, itemizedDeductions: makeFromInt 26705, federalTaxDue: makeFromInt 381, stateTaxDue: makeFromInt 2149 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79188, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27138, federalTaxDue: makeFromInt 7771, stateTaxDue: makeFromInt 3814 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3459, stateTaxDue: makeFromInt 2063 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23568, itemizedDeductions: makeFromInt 23915, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 923 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53598, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 480, stateTaxDue: makeFromInt 2183 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99353, qualifiedIncome: makeFromInt 86387, itemizedDeductions: makeFromInt 23628, federalTaxDue: makeFromInt 17378, stateTaxDue: makeFromInt 8820 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105790, qualifiedIncome: makeFromInt 70387, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24296, stateTaxDue: makeFromInt 8536 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37961, ordinaryIncomeNonSS: makeFromInt 87556, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32336, stateTaxDue: makeFromInt 9117 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52201, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22934, federalTaxDue: makeFromInt 6799, stateTaxDue: makeFromInt 2135 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47758, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13096, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71462, qualifiedIncome: makeFromInt 36711, itemizedDeductions: makeFromInt 29712, federalTaxDue: makeFromInt 19901, stateTaxDue: makeFromInt 5241 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42410, stateTaxDue: makeFromInt 12526 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26220, federalTaxDue: makeFromInt 38107, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100467, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8112, stateTaxDue: makeFromInt 4348 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9537, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33519, ordinaryIncomeNonSS: makeFromInt 116901, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26304, stateTaxDue: makeFromInt 5738 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146774, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36584, stateTaxDue: makeFromInt 11964 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3353, itemizedDeductions: makeFromInt 4522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15988, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14742, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27876, ordinaryIncomeNonSS: makeFromInt 39660, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16919, stateTaxDue: makeFromInt 6572 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7329, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27656, ordinaryIncomeNonSS: makeFromInt 47854, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24641, federalTaxDue: makeFromInt 4921, stateTaxDue: makeFromInt 1770 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74428, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 540, federalTaxDue: makeFromInt 8228, stateTaxDue: makeFromInt 3266 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13248, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 87 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35075, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21151, federalTaxDue: makeFromInt 8593, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24659, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 896, stateTaxDue: makeFromInt 978 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91287, itemizedDeductions: makeFromInt 7346, federalTaxDue: makeFromInt 2308, stateTaxDue: makeFromInt 4207 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22661, qualifiedIncome: makeFromInt 42854, itemizedDeductions: makeFromInt 22247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2790 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44390, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135754, qualifiedIncome: makeFromInt 77057, itemizedDeductions: makeFromInt 4770, federalTaxDue: makeFromInt 27773, stateTaxDue: makeFromInt 10303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38563, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32057, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27031, federalTaxDue: makeFromInt 42846, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44597, ordinaryIncomeNonSS: makeFromInt 139314, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7369, federalTaxDue: makeFromInt 46946, stateTaxDue: makeFromInt 11756 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32941, ordinaryIncomeNonSS: makeFromInt 120294, qualifiedIncome: makeFromInt 59566, itemizedDeductions: makeFromInt 1962, federalTaxDue: makeFromInt 36060, stateTaxDue: makeFromInt 8744 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4391, ordinaryIncomeNonSS: makeFromInt 36018, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 901, stateTaxDue: makeFromInt 1326 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31377, ordinaryIncomeNonSS: makeFromInt 32005, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5071, federalTaxDue: makeFromInt 3673, stateTaxDue: makeFromInt 1345 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20065, qualifiedIncome: makeFromInt 57003, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10994, stateTaxDue: makeFromInt 3706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132885, qualifiedIncome: makeFromInt 14524, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18609, stateTaxDue: makeFromInt 7089 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23538, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 752 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 81, stateTaxDue: makeFromInt 144 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83450, itemizedDeductions: makeFromInt 15766, federalTaxDue: makeFromInt 39058, stateTaxDue: makeFromInt 11198 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18506, qualifiedIncome: makeFromInt 13326, itemizedDeductions: makeFromInt 27328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1163 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35885, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3200, federalTaxDue: makeFromInt 14245, stateTaxDue: makeFromInt 3813 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31537, qualifiedIncome: makeFromInt 82006, itemizedDeductions: makeFromInt 1521, federalTaxDue: makeFromInt 7900, stateTaxDue: makeFromInt 5362 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10357, stateTaxDue: makeFromInt 4237 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89879, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24055, stateTaxDue: makeFromInt 4237 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22665, ordinaryIncomeNonSS: makeFromInt 52588, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22661, stateTaxDue: makeFromInt 7174 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34377, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1529 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23878, federalTaxDue: makeFromInt 39771, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1685, ordinaryIncomeNonSS: makeFromInt 20526, qualifiedIncome: makeFromInt 94333, itemizedDeductions: makeFromInt 27944, federalTaxDue: makeFromInt 7456, stateTaxDue: makeFromInt 5288 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112127, qualifiedIncome: makeFromInt 45743, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21538, stateTaxDue: makeFromInt 7519 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37215, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35030, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1040, stateTaxDue: makeFromInt 1297 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14713, itemizedDeductions: makeFromInt 10594, federalTaxDue: makeFromInt 26248, stateTaxDue: makeFromInt 7850 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37282, ordinaryIncomeNonSS: makeFromInt 133461, qualifiedIncome: makeFromInt 91265, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34038, stateTaxDue: makeFromInt 10561 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14871, itemizedDeductions: makeFromInt 51, federalTaxDue: makeFromInt 27111, stateTaxDue: makeFromInt 7960 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36137, ordinaryIncomeNonSS: makeFromInt 9641, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 145 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76643, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7174, stateTaxDue: makeFromInt 3358 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47851, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3763, federalTaxDue: makeFromInt 2426, stateTaxDue: makeFromInt 1770 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62780, itemizedDeductions: makeFromInt 16899, federalTaxDue: makeFromInt 2723, stateTaxDue: makeFromInt 2884 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145783, qualifiedIncome: makeFromInt 51981, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27273, stateTaxDue: makeFromInt 9637 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49774, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6770, federalTaxDue: makeFromInt 37066, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84753, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1418, stateTaxDue: makeFromInt 3874 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7966, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6998, stateTaxDue: makeFromInt 4603 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3506, itemizedDeductions: makeFromInt 4091, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68898, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7723, federalTaxDue: makeFromInt 5236, stateTaxDue: makeFromInt 3070 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26563, ordinaryIncomeNonSS: makeFromInt 132786, qualifiedIncome: makeFromInt 91196, itemizedDeductions: makeFromInt 5861, federalTaxDue: makeFromInt 38616, stateTaxDue: makeFromInt 10824 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5312, ordinaryIncomeNonSS: makeFromInt 10416, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 146 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 987 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44183, ordinaryIncomeNonSS: makeFromInt 90564, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1228, federalTaxDue: makeFromInt 14785, stateTaxDue: makeFromInt 4170 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33896, ordinaryIncomeNonSS: makeFromInt 67231, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28512, stateTaxDue: makeFromInt 7907 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32209, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9488, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92404, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8006, stateTaxDue: makeFromInt 4060 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40108, ordinaryIncomeNonSS: makeFromInt 82762, qualifiedIncome: makeFromInt 20658, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17965, stateTaxDue: makeFromInt 4916 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84855, itemizedDeductions: makeFromInt 24484, federalTaxDue: makeFromInt 3766, stateTaxDue: makeFromInt 3668 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47845, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82085, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6907, federalTaxDue: makeFromInt 24798, stateTaxDue: makeFromInt 3962 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25407, federalTaxDue: makeFromInt 14992, stateTaxDue: makeFromInt 7412 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34450, ordinaryIncomeNonSS: makeFromInt 33523, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21614, stateTaxDue: makeFromInt 6463 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9470, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125837, qualifiedIncome: makeFromInt 23845, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22356, stateTaxDue: makeFromInt 7083 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8185, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33380, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53551, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2078 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14283, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6116, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23946, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128378, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15334, stateTaxDue: makeFromInt 5894 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 986 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44585, ordinaryIncomeNonSS: makeFromInt 141776, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33811, stateTaxDue: makeFromInt 7006 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16725, ordinaryIncomeNonSS: makeFromInt 134727, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7136, federalTaxDue: makeFromInt 37104, stateTaxDue: makeFromInt 11161 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22873, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27404, federalTaxDue: makeFromInt 44030, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148046, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21085, stateTaxDue: makeFromInt 6931 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37984, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124915, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21043, federalTaxDue: makeFromInt 19253, stateTaxDue: makeFromInt 6024 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28978, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8159, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112560, qualifiedIncome: makeFromInt 89893, itemizedDeductions: makeFromInt 10956, federalTaxDue: makeFromInt 30130, stateTaxDue: makeFromInt 9868 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25933, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50436, qualifiedIncome: makeFromInt 63755, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25981, stateTaxDue: makeFromInt 5599 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32532, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17698, federalTaxDue: makeFromInt 45639, stateTaxDue: makeFromInt 12301 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30003, ordinaryIncomeNonSS: makeFromInt 60082, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7997, federalTaxDue: makeFromInt 26528, stateTaxDue: makeFromInt 7749 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10863, itemizedDeductions: makeFromInt 17155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 68 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22637, itemizedDeductions: makeFromInt 20712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 604 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27982, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18877, ordinaryIncomeNonSS: makeFromInt 30755, qualifiedIncome: makeFromInt 18656, itemizedDeductions: makeFromInt 28485, federalTaxDue: makeFromInt 1978, stateTaxDue: makeFromInt 2016 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24173, ordinaryIncomeNonSS: makeFromInt 88006, qualifiedIncome: makeFromInt 6192, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14977, stateTaxDue: makeFromInt 4253 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38783, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6043, federalTaxDue: makeFromInt 3448, stateTaxDue: makeFromInt 1464 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21353, ordinaryIncomeNonSS: makeFromInt 80690, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13598, stateTaxDue: makeFromInt 3580 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78009, qualifiedIncome: makeFromInt 3045, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5468, stateTaxDue: makeFromInt 3478 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23993, ordinaryIncomeNonSS: makeFromInt 53576, qualifiedIncome: makeFromInt 88651, itemizedDeductions: makeFromInt 9917, federalTaxDue: makeFromInt 19336, stateTaxDue: makeFromInt 6536 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124886, qualifiedIncome: makeFromInt 44792, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38138, stateTaxDue: makeFromInt 8347 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45783, itemizedDeductions: makeFromInt 29716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1614 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49551, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86129, itemizedDeductions: makeFromInt 17358, federalTaxDue: makeFromInt 12691, stateTaxDue: makeFromInt 3851 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46559, ordinaryIncomeNonSS: makeFromInt 70771, qualifiedIncome: makeFromInt 28601, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19123, stateTaxDue: makeFromInt 4473 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10891, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2325, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23228, stateTaxDue: makeFromInt 7361 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49554, ordinaryIncomeNonSS: makeFromInt 37949, qualifiedIncome: makeFromInt 31746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11565, stateTaxDue: makeFromInt 3106 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25246, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74466, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5916, stateTaxDue: makeFromInt 3268 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41673, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13844, federalTaxDue: makeFromInt 10630, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3098, ordinaryIncomeNonSS: makeFromInt 71613, qualifiedIncome: makeFromInt 30409, itemizedDeductions: makeFromInt 11832, federalTaxDue: makeFromInt 10234, stateTaxDue: makeFromInt 4726 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11725, federalTaxDue: makeFromInt 10071, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122536, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10864, federalTaxDue: makeFromInt 19041, stateTaxDue: makeFromInt 5672 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27169, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22817, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131775, qualifiedIncome: makeFromInt 55449, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27592, stateTaxDue: makeFromInt 8986 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63775, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20884, stateTaxDue: makeFromInt 7934 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47063, ordinaryIncomeNonSS: makeFromInt 21096, qualifiedIncome: makeFromInt 28609, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4888, stateTaxDue: makeFromInt 1984 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49603, ordinaryIncomeNonSS: makeFromInt 83796, qualifiedIncome: makeFromInt 60419, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28925, stateTaxDue: makeFromInt 6956 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18097, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 372 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37772, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4196, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42211, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31964, stateTaxDue: makeFromInt 9356 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7895, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 680 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36107, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 149, stateTaxDue: makeFromInt 2488 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3147, stateTaxDue: makeFromInt 2200 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11395, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22088, itemizedDeductions: makeFromInt 11291, federalTaxDue: makeFromInt 31945, stateTaxDue: makeFromInt 8149 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19596, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 449 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39940, stateTaxDue: makeFromInt 10078 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1212 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24500, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2096, federalTaxDue: makeFromInt 46305, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17615, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3881, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 5570 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46610, ordinaryIncomeNonSS: makeFromInt 42688, qualifiedIncome: makeFromInt 3681, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4722, stateTaxDue: makeFromInt 1712 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6708, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12315, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20352, ordinaryIncomeNonSS: makeFromInt 8259, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20456, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5051, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57729, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5084, stateTaxDue: makeFromInt 2632 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11528, ordinaryIncomeNonSS: makeFromInt 134993, qualifiedIncome: makeFromInt 17180, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23685, stateTaxDue: makeFromInt 7034 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6657, stateTaxDue: makeFromInt 3770 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21886, ordinaryIncomeNonSS: makeFromInt 45312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4926, stateTaxDue: makeFromInt 1891 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36874, itemizedDeductions: makeFromInt 23465, federalTaxDue: makeFromInt 27695, stateTaxDue: makeFromInt 9082 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113029, qualifiedIncome: makeFromInt 2152, itemizedDeductions: makeFromInt 389, federalTaxDue: makeFromInt 34010, stateTaxDue: makeFromInt 5650 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9015, ordinaryIncomeNonSS: makeFromInt 267, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26902, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19534, stateTaxDue: makeFromInt 5984 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45104, ordinaryIncomeNonSS: makeFromInt 32814, qualifiedIncome: makeFromInt 11895, itemizedDeductions: makeFromInt 2452, federalTaxDue: makeFromInt 4838, stateTaxDue: makeFromInt 1660 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28821, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31183, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59569, itemizedDeductions: makeFromInt 16830, federalTaxDue: makeFromInt 2594, stateTaxDue: makeFromInt 2589 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34418, ordinaryIncomeNonSS: makeFromInt 16537, qualifiedIncome: makeFromInt 67413, itemizedDeductions: makeFromInt 8627, federalTaxDue: makeFromInt 13935, stateTaxDue: makeFromInt 4057 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91113, itemizedDeductions: makeFromInt 25712, federalTaxDue: makeFromInt 8019, stateTaxDue: makeFromInt 4422 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1664 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 802, stateTaxDue: makeFromInt 3460 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18453, ordinaryIncomeNonSS: makeFromInt 120539, qualifiedIncome: makeFromInt 78920, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32298, stateTaxDue: makeFromInt 9398 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105610, qualifiedIncome: makeFromInt 45538, itemizedDeductions: makeFromInt 13149, federalTaxDue: makeFromInt 23196, stateTaxDue: makeFromInt 7209 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66980, itemizedDeductions: makeFromInt 3116, federalTaxDue: makeFromInt 27238, stateTaxDue: makeFromInt 10374 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38055, ordinaryIncomeNonSS: makeFromInt 32685, qualifiedIncome: makeFromInt 80208, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14198, stateTaxDue: makeFromInt 5270 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21345, ordinaryIncomeNonSS: makeFromInt 130072, qualifiedIncome: makeFromInt 67162, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29031, stateTaxDue: makeFromInt 9516 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148554, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16873, stateTaxDue: makeFromInt 6953 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2923, ordinaryIncomeNonSS: makeFromInt 111449, qualifiedIncome: makeFromInt 50481, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14455, stateTaxDue: makeFromInt 7606 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51131, itemizedDeductions: makeFromInt 94, federalTaxDue: makeFromInt 39964, stateTaxDue: makeFromInt 9482 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13510, itemizedDeductions: makeFromInt 1935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80522, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25446, federalTaxDue: makeFromInt 20594, stateTaxDue: makeFromInt 8451 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47313, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4274, federalTaxDue: makeFromInt 10466, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43382, ordinaryIncomeNonSS: makeFromInt 105478, qualifiedIncome: makeFromInt 3625, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19302, stateTaxDue: makeFromInt 4880 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62670, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2659 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39188, ordinaryIncomeNonSS: makeFromInt 94782, qualifiedIncome: makeFromInt 32525, itemizedDeductions: makeFromInt 21321, federalTaxDue: makeFromInt 18897, stateTaxDue: makeFromInt 5690 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113919, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7518, federalTaxDue: makeFromInt 33595, stateTaxDue: makeFromInt 5585 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68728, qualifiedIncome: makeFromInt 25413, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7995, stateTaxDue: makeFromInt 4332 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17346, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 817, federalTaxDue: makeFromInt 28566, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32910, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27294, stateTaxDue: makeFromInt 8771 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14272, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35264, itemizedDeductions: makeFromInt 22570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1288 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76306, qualifiedIncome: makeFromInt 82805, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18398, stateTaxDue: makeFromInt 7701 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2201, ordinaryIncomeNonSS: makeFromInt 111076, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17815, stateTaxDue: makeFromInt 5299 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136223, qualifiedIncome: makeFromInt 65530, itemizedDeductions: makeFromInt 19523, federalTaxDue: makeFromInt 31917, stateTaxDue: makeFromInt 9833 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118004, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16411, stateTaxDue: makeFromInt 5467 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11730, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17439, federalTaxDue: makeFromInt 11740, stateTaxDue: makeFromInt 5147 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 161, federalTaxDue: makeFromInt 18933, stateTaxDue: makeFromInt 7500 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37665, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 410, stateTaxDue: makeFromInt 1508 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1307, ordinaryIncomeNonSS: makeFromInt 125892, qualifiedIncome: makeFromInt 27412, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25194, stateTaxDue: makeFromInt 7210 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31397, ordinaryIncomeNonSS: makeFromInt 105083, qualifiedIncome: makeFromInt 27286, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25350, stateTaxDue: makeFromInt 6163 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 772, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17060, qualifiedIncome: makeFromInt 61008, itemizedDeductions: makeFromInt 25065, federalTaxDue: makeFromInt 2900, stateTaxDue: makeFromInt 3448 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17641, federalTaxDue: makeFromInt 23620, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41471, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36609, stateTaxDue: makeFromInt 9643 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73033, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32360, stateTaxDue: makeFromInt 8197 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18871, ordinaryIncomeNonSS: makeFromInt 97807, qualifiedIncome: makeFromInt 86434, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26730, stateTaxDue: makeFromInt 8837 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23228, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 918, stateTaxDue: makeFromInt 706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13305, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94694, itemizedDeductions: makeFromInt 14292, federalTaxDue: makeFromInt 41488, stateTaxDue: makeFromInt 12031 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93857, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21148, federalTaxDue: makeFromInt 34084, stateTaxDue: makeFromInt 9118 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15113, ordinaryIncomeNonSS: makeFromInt 66180, qualifiedIncome: makeFromInt 23371, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5999, stateTaxDue: makeFromInt 3914 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28194, ordinaryIncomeNonSS: makeFromInt 132463, qualifiedIncome: makeFromInt 28490, itemizedDeductions: makeFromInt 15693, federalTaxDue: makeFromInt 29465, stateTaxDue: makeFromInt 7673 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55617, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4195, stateTaxDue: makeFromInt 2263 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42674, ordinaryIncomeNonSS: makeFromInt 80126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18233, stateTaxDue: makeFromInt 3658 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22444, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9026, federalTaxDue: makeFromInt 217, stateTaxDue: makeFromInt 647 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4844, ordinaryIncomeNonSS: makeFromInt 25482, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 871 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6647, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131592, qualifiedIncome: makeFromInt 91984, itemizedDeductions: makeFromInt 27959, federalTaxDue: makeFromInt 42270, stateTaxDue: makeFromInt 10724 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22183, federalTaxDue: makeFromInt 27692, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66632, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2160, federalTaxDue: makeFromInt 5792, stateTaxDue: makeFromInt 2970 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1999, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47899, ordinaryIncomeNonSS: makeFromInt 70846, qualifiedIncome: makeFromInt 20278, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9212, stateTaxDue: makeFromInt 3995 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13561, ordinaryIncomeNonSS: makeFromInt 13124, qualifiedIncome: makeFromInt 81453, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7483, stateTaxDue: makeFromInt 4477 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46959, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21857, itemizedDeductions: makeFromInt 3421, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 564 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49524, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18766, federalTaxDue: makeFromInt 14625, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10516, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16866, federalTaxDue: makeFromInt 28387, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6519, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14341, itemizedDeductions: makeFromInt 28872, federalTaxDue: makeFromInt 23053, stateTaxDue: makeFromInt 7831 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11280, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121595, qualifiedIncome: makeFromInt 80027, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28836, stateTaxDue: makeFromInt 9706 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29542, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31659, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23825, ordinaryIncomeNonSS: makeFromInt 84065, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8030, federalTaxDue: makeFromInt 15343, stateTaxDue: makeFromInt 3948 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35485, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33456, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1298 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60886, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8405, stateTaxDue: makeFromInt 2881 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26335, ordinaryIncomeNonSS: makeFromInt 143202, qualifiedIncome: makeFromInt 34153, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25567, stateTaxDue: makeFromInt 8193 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26325, ordinaryIncomeNonSS: makeFromInt 65330, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16753, stateTaxDue: makeFromInt 7592 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85472, qualifiedIncome: makeFromInt 76786, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32953, stateTaxDue: makeFromInt 7847 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21489, ordinaryIncomeNonSS: makeFromInt 7133, qualifiedIncome: makeFromInt 20558, itemizedDeductions: makeFromInt 5527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 861 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40401, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73181, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5291, federalTaxDue: makeFromInt 15830, stateTaxDue: makeFromInt 3181 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14630, ordinaryIncomeNonSS: makeFromInt 135109, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8169, federalTaxDue: makeFromInt 31651, stateTaxDue: makeFromInt 11080 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9098, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46365, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1307, stateTaxDue: makeFromInt 1936 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36182, qualifiedIncome: makeFromInt 15818, itemizedDeductions: makeFromInt 8365, federalTaxDue: makeFromInt 698, stateTaxDue: makeFromInt 1925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14920, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 271 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21691, ordinaryIncomeNonSS: makeFromInt 131608, qualifiedIncome: makeFromInt 55280, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28897, stateTaxDue: makeFromInt 8769 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32584, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74800, itemizedDeductions: makeFromInt 14245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3265 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29281, ordinaryIncomeNonSS: makeFromInt 37838, qualifiedIncome: makeFromInt 39209, itemizedDeductions: makeFromInt 21895, federalTaxDue: makeFromInt 4211, stateTaxDue: makeFromInt 3244 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22861, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1665, stateTaxDue: makeFromInt 768 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133034, qualifiedIncome: makeFromInt 98743, itemizedDeductions: makeFromInt 8645, federalTaxDue: makeFromInt 43298, stateTaxDue: makeFromInt 11214 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24424, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19202, itemizedDeductions: makeFromInt 11833, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 385 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88969, itemizedDeductions: makeFromInt 7808, federalTaxDue: makeFromInt 7439, stateTaxDue: makeFromInt 4069 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17041, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45125, ordinaryIncomeNonSS: makeFromInt 93558, qualifiedIncome: makeFromInt 7802, itemizedDeductions: makeFromInt 13963, federalTaxDue: makeFromInt 23943, stateTaxDue: makeFromInt 4823 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 787, ordinaryIncomeNonSS: makeFromInt 83999, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12127, stateTaxDue: makeFromInt 3937 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33473, itemizedDeductions: makeFromInt 22652, federalTaxDue: makeFromInt 265, stateTaxDue: makeFromInt 1099 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15478, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29104, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69855, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5383, stateTaxDue: makeFromInt 3012 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43311, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85419, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6640, stateTaxDue: makeFromInt 3908 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93245, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9750, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 3987 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31714, ordinaryIncomeNonSS: makeFromInt 136993, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27926, stateTaxDue: makeFromInt 6436 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3973, itemizedDeductions: makeFromInt 26980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4225, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1090, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20995, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 642 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39049, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5070, federalTaxDue: makeFromInt 3028, stateTaxDue: makeFromInt 1750 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45288, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16167, federalTaxDue: makeFromInt 3304, stateTaxDue: makeFromInt 1881 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18106, ordinaryIncomeNonSS: makeFromInt 50529, qualifiedIncome: makeFromInt 57127, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5907, stateTaxDue: makeFromInt 5042 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32069, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34188, itemizedDeductions: makeFromInt 3236, federalTaxDue: makeFromInt 494, stateTaxDue: makeFromInt 1397 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107014, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7475, federalTaxDue: makeFromInt 15397, stateTaxDue: makeFromInt 4896 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45687, itemizedDeductions: makeFromInt 23462, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1881 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23266, ordinaryIncomeNonSS: makeFromInt 43690, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 449, federalTaxDue: makeFromInt 16952, stateTaxDue: makeFromInt 6777 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38735, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2679, stateTaxDue: makeFromInt 1682 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32608, itemizedDeductions: makeFromInt 29417, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1175 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35523, itemizedDeductions: makeFromInt 6190, federalTaxDue: makeFromInt 42157, stateTaxDue: makeFromInt 9237 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44021, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93831, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2742, stateTaxDue: makeFromInt 4217 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22797, ordinaryIncomeNonSS: makeFromInt 144526, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24306, stateTaxDue: makeFromInt 6718 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28458, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63667, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4700, stateTaxDue: makeFromInt 2900 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29625, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1106 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45974, itemizedDeductions: makeFromInt 7521, federalTaxDue: makeFromInt 50593, stateTaxDue: makeFromInt 9770 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52801, itemizedDeductions: makeFromInt 406, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2165 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7291, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22087, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52564, itemizedDeductions: makeFromInt 524, federalTaxDue: makeFromInt 3066, stateTaxDue: makeFromInt 2173 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49647, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54467, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4560, stateTaxDue: makeFromInt 2553 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12350, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13670, federalTaxDue: makeFromInt 28151, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41969, qualifiedIncome: makeFromInt 96477, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11869, stateTaxDue: makeFromInt 6547 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13335, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42244, ordinaryIncomeNonSS: makeFromInt 28767, qualifiedIncome: makeFromInt 49386, itemizedDeductions: makeFromInt 24799, federalTaxDue: makeFromInt 2011, stateTaxDue: makeFromInt 3333 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3001, stateTaxDue: makeFromInt 1481 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12094, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36387, ordinaryIncomeNonSS: makeFromInt 103484, qualifiedIncome: makeFromInt 59182, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32383, stateTaxDue: makeFromInt 7790 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32191, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8820, ordinaryIncomeNonSS: makeFromInt 149326, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44513, stateTaxDue: makeFromInt 12287 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24298, ordinaryIncomeNonSS: makeFromInt 9292, qualifiedIncome: makeFromInt 61485, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4454, stateTaxDue: makeFromInt 3059 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99883, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4920, stateTaxDue: makeFromInt 4319 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129282, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29578, stateTaxDue: makeFromInt 6185 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2222, federalTaxDue: makeFromInt 7470, stateTaxDue: makeFromInt 3094 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96049, qualifiedIncome: makeFromInt 99904, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25908, stateTaxDue: makeFromInt 9443 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32613, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12768, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104530, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29481, federalTaxDue: makeFromInt 21612, stateTaxDue: makeFromInt 4772 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45872, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24979, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 994 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38639, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1719, ordinaryIncomeNonSS: makeFromInt 31198, qualifiedIncome: makeFromInt 64047, itemizedDeductions: makeFromInt 7135, federalTaxDue: makeFromInt 7177, stateTaxDue: makeFromInt 4511 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9406, ordinaryIncomeNonSS: makeFromInt 60650, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20910, federalTaxDue: makeFromInt 11823, stateTaxDue: makeFromInt 7358 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10768, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40683, ordinaryIncomeNonSS: makeFromInt 1587, qualifiedIncome: makeFromInt 123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37312, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46875, qualifiedIncome: makeFromInt 49844, itemizedDeductions: makeFromInt 2740, federalTaxDue: makeFromInt 17540, stateTaxDue: makeFromInt 4339 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23327, ordinaryIncomeNonSS: makeFromInt 63537, qualifiedIncome: makeFromInt 43052, itemizedDeductions: makeFromInt 18571, federalTaxDue: makeFromInt 16020, stateTaxDue: makeFromInt 5074 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32592, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37333, itemizedDeductions: makeFromInt 9792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33666, itemizedDeductions: makeFromInt 22509, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1008 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30908, ordinaryIncomeNonSS: makeFromInt 123909, qualifiedIncome: makeFromInt 53770, itemizedDeductions: makeFromInt 2977, federalTaxDue: makeFromInt 25296, stateTaxDue: makeFromInt 8409 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33762, ordinaryIncomeNonSS: makeFromInt 51408, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16389, federalTaxDue: makeFromInt 6638, stateTaxDue: makeFromInt 2193 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15594, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25313, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 863 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2034, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48774, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37343, itemizedDeductions: makeFromInt 24184, federalTaxDue: makeFromInt 389, stateTaxDue: makeFromInt 1492 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142775, qualifiedIncome: makeFromInt 77319, itemizedDeductions: makeFromInt 18992, federalTaxDue: makeFromInt 42880, stateTaxDue: makeFromInt 10674 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32476, ordinaryIncomeNonSS: makeFromInt 17824, qualifiedIncome: makeFromInt 17764, itemizedDeductions: makeFromInt 10570, federalTaxDue: makeFromInt 2761, stateTaxDue: makeFromInt 1468 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49847, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31586, itemizedDeductions: makeFromInt 2426, federalTaxDue: makeFromInt 563, stateTaxDue: makeFromInt 1060 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1859, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45035, ordinaryIncomeNonSS: makeFromInt 4436, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17313, stateTaxDue: makeFromInt 5102 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11111, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33063, ordinaryIncomeNonSS: makeFromInt 122566, qualifiedIncome: makeFromInt 35257, itemizedDeductions: makeFromInt 11390, federalTaxDue: makeFromInt 26286, stateTaxDue: makeFromInt 7396 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125090, qualifiedIncome: makeFromInt 57865, itemizedDeductions: makeFromInt 21428, federalTaxDue: makeFromInt 23830, stateTaxDue: makeFromInt 8780 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39174, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90953, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47266, stateTaxDue: makeFromInt 11593 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8262, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87560, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 408, stateTaxDue: makeFromInt 3903 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31190, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26390, ordinaryIncomeNonSS: makeFromInt 5886, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7402, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49216, ordinaryIncomeNonSS: makeFromInt 90248, qualifiedIncome: makeFromInt 45181, itemizedDeductions: makeFromInt 2019, federalTaxDue: makeFromInt 21063, stateTaxDue: makeFromInt 6096 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29045, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 777 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37318, ordinaryIncomeNonSS: makeFromInt 77237, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9131, stateTaxDue: makeFromInt 3387 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28162, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79825, itemizedDeductions: makeFromInt 21960, federalTaxDue: makeFromInt 35918, stateTaxDue: makeFromInt 10816 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41512, ordinaryIncomeNonSS: makeFromInt 49006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11758, stateTaxDue: makeFromInt 2275 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53186, itemizedDeductions: makeFromInt 28796, federalTaxDue: makeFromInt 2330, stateTaxDue: makeFromInt 2488 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5690, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 30 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 897, ordinaryIncomeNonSS: makeFromInt 108370, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25394, federalTaxDue: makeFromInt 8596, stateTaxDue: makeFromInt 4874 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37184, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28732, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41396, ordinaryIncomeNonSS: makeFromInt 43555, qualifiedIncome: makeFromInt 21552, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13730, stateTaxDue: makeFromInt 2864 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128300, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14064, stateTaxDue: makeFromInt 5940 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2002, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8888, ordinaryIncomeNonSS: makeFromInt 135872, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27099, federalTaxDue: makeFromInt 35557, stateTaxDue: makeFromInt 11219 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5242, itemizedDeductions: makeFromInt 12279, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116893, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23088, stateTaxDue: makeFromInt 5309 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9068, ordinaryIncomeNonSS: makeFromInt 145398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23492, federalTaxDue: makeFromInt 17874, stateTaxDue: makeFromInt 6795 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53361, itemizedDeductions: makeFromInt 19561, federalTaxDue: makeFromInt 7205, stateTaxDue: makeFromInt 2413 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25367, federalTaxDue: makeFromInt 677, stateTaxDue: makeFromInt 1228 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4628, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43255, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142502, qualifiedIncome: makeFromInt 66329, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32485, stateTaxDue: makeFromInt 10100 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145273, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42331, stateTaxDue: makeFromInt 12162 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39251, qualifiedIncome: makeFromInt 38909, itemizedDeductions: makeFromInt 6179, federalTaxDue: makeFromInt 6008, stateTaxDue: makeFromInt 3653 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42617, ordinaryIncomeNonSS: makeFromInt 58431, qualifiedIncome: makeFromInt 75538, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28178, stateTaxDue: makeFromInt 6608 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6929, federalTaxDue: makeFromInt 34678, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15743, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15391, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28939, stateTaxDue: makeFromInt 8088 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56373, qualifiedIncome: makeFromInt 23126, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13169, stateTaxDue: makeFromInt 3504 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36896, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 770, stateTaxDue: makeFromInt 1170 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4848 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9240, federalTaxDue: makeFromInt 26780, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36496, itemizedDeductions: makeFromInt 25215, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1150 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17248, ordinaryIncomeNonSS: makeFromInt 117796, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1196, federalTaxDue: makeFromInt 24074, stateTaxDue: makeFromInt 5661 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22913, itemizedDeductions: makeFromInt 103, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 740 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60743, qualifiedIncome: makeFromInt 17286, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5191, stateTaxDue: makeFromInt 3326 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121740, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29725, stateTaxDue: makeFromInt 5632 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8048, qualifiedIncome: makeFromInt 62566, itemizedDeductions: makeFromInt 15345, federalTaxDue: makeFromInt 5648, stateTaxDue: makeFromInt 3051 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29712, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94684, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9619, stateTaxDue: makeFromInt 4482 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15644, ordinaryIncomeNonSS: makeFromInt 4838, qualifiedIncome: makeFromInt 831, itemizedDeductions: makeFromInt 13834, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25086, ordinaryIncomeNonSS: makeFromInt 63942, qualifiedIncome: makeFromInt 41715, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8784, stateTaxDue: makeFromInt 4808 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26132, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122916, qualifiedIncome: makeFromInt 73458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30151, stateTaxDue: makeFromInt 9564 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16946, federalTaxDue: makeFromInt 26013, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22339, ordinaryIncomeNonSS: makeFromInt 68525, qualifiedIncome: makeFromInt 49944, itemizedDeductions: makeFromInt 29314, federalTaxDue: makeFromInt 13929, stateTaxDue: makeFromInt 5348 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40245, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24717, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17809, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35, ordinaryIncomeNonSS: makeFromInt 39605, qualifiedIncome: makeFromInt 66116, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1043, stateTaxDue: makeFromInt 4811 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4791, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68273, itemizedDeductions: makeFromInt 5338, federalTaxDue: makeFromInt 6324, stateTaxDue: makeFromInt 3039 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49802, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49624, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125725, qualifiedIncome: makeFromInt 71936, itemizedDeductions: makeFromInt 20428, federalTaxDue: makeFromInt 28816, stateTaxDue: makeFromInt 9638 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47464, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26193, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64104, itemizedDeductions: makeFromInt 19925, federalTaxDue: makeFromInt 1996, stateTaxDue: makeFromInt 2719 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40541, ordinaryIncomeNonSS: makeFromInt 33005, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10681, federalTaxDue: makeFromInt 4035, stateTaxDue: makeFromInt 1337 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85166, qualifiedIncome: makeFromInt 48160, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11430, stateTaxDue: makeFromInt 6087 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47273, ordinaryIncomeNonSS: makeFromInt 89853, qualifiedIncome: makeFromInt 53544, itemizedDeductions: makeFromInt 11352, federalTaxDue: makeFromInt 33166, stateTaxDue: makeFromInt 7089 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64275, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74076, itemizedDeductions: makeFromInt 4144, federalTaxDue: makeFromInt 2149, stateTaxDue: makeFromInt 3129 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35808, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69288, itemizedDeductions: makeFromInt 12286, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2881 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138853, qualifiedIncome: makeFromInt 78943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33935, stateTaxDue: makeFromInt 10659 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5304, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56630, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2847, stateTaxDue: makeFromInt 2460 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15444, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67090, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2504, stateTaxDue: makeFromInt 2871 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3251, stateTaxDue: makeFromInt 1465 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13627, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23719, itemizedDeductions: makeFromInt 25880, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 781 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18542, qualifiedIncome: makeFromInt 88085, itemizedDeductions: makeFromInt 22389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4856 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55281, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1598, stateTaxDue: makeFromInt 2309 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9208, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27998, federalTaxDue: makeFromInt 13878, stateTaxDue: makeFromInt 3737 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34985, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22167, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35167, ordinaryIncomeNonSS: makeFromInt 98166, qualifiedIncome: makeFromInt 89963, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25858, stateTaxDue: makeFromInt 8931 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18244, ordinaryIncomeNonSS: makeFromInt 110579, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 698, federalTaxDue: makeFromInt 19893, stateTaxDue: makeFromInt 5074 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31505, qualifiedIncome: makeFromInt 58261, itemizedDeductions: makeFromInt 15557, federalTaxDue: makeFromInt 12836, stateTaxDue: makeFromInt 4129 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31965, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9744, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5184, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8861, ordinaryIncomeNonSS: makeFromInt 128751, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20102, federalTaxDue: makeFromInt 19968, stateTaxDue: makeFromInt 5863 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49345, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 180, stateTaxDue: makeFromInt 1792 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20888, ordinaryIncomeNonSS: makeFromInt 38457, qualifiedIncome: makeFromInt 54410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13703, stateTaxDue: makeFromInt 4266 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26055, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40617, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 774, stateTaxDue: makeFromInt 1776 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136096, qualifiedIncome: makeFromInt 11153, itemizedDeductions: makeFromInt 10779, federalTaxDue: makeFromInt 15805, stateTaxDue: makeFromInt 6887 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35508, ordinaryIncomeNonSS: makeFromInt 100748, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22833, stateTaxDue: makeFromInt 4710 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22951, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11656, federalTaxDue: makeFromInt 38641, stateTaxDue: makeFromInt 12181 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13774, ordinaryIncomeNonSS: makeFromInt 126407, qualifiedIncome: makeFromInt 42198, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23888, stateTaxDue: makeFromInt 8150 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30146, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46510, ordinaryIncomeNonSS: makeFromInt 27334, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8962, federalTaxDue: makeFromInt 22094, stateTaxDue: makeFromInt 6112 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90521, itemizedDeductions: makeFromInt 18174, federalTaxDue: makeFromInt 46136, stateTaxDue: makeFromInt 11651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7188, ordinaryIncomeNonSS: makeFromInt 18013, qualifiedIncome: makeFromInt 55900, itemizedDeductions: makeFromInt 14301, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3021 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91456, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1534, federalTaxDue: makeFromInt 7448, stateTaxDue: makeFromInt 3898 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7005, ordinaryIncomeNonSS: makeFromInt 29719, qualifiedIncome: makeFromInt 27893, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1302, stateTaxDue: makeFromInt 2306 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49443, itemizedDeductions: makeFromInt 9823, federalTaxDue: makeFromInt 24607, stateTaxDue: makeFromInt 9297 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47336, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60585, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11942, stateTaxDue: makeFromInt 2865 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41335, ordinaryIncomeNonSS: makeFromInt 135814, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29378, stateTaxDue: makeFromInt 6515 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18542, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30786, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37595, stateTaxDue: makeFromInt 8873 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41116, ordinaryIncomeNonSS: makeFromInt 116660, qualifiedIncome: makeFromInt 88638, itemizedDeductions: makeFromInt 10224, federalTaxDue: makeFromInt 40250, stateTaxDue: makeFromInt 10042 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38710, ordinaryIncomeNonSS: makeFromInt 75116, qualifiedIncome: makeFromInt 34183, itemizedDeductions: makeFromInt 25511, federalTaxDue: makeFromInt 18587, stateTaxDue: makeFromInt 5210 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7859, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29473, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27654, federalTaxDue: makeFromInt 21624, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20979, federalTaxDue: makeFromInt 3712, stateTaxDue: makeFromInt 1524 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114655, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37242, stateTaxDue: makeFromInt 10723 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28883, qualifiedIncome: makeFromInt 60354, itemizedDeductions: makeFromInt 21849, federalTaxDue: makeFromInt 2442, stateTaxDue: makeFromInt 3887 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17485, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 495 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89282, itemizedDeductions: makeFromInt 28437, federalTaxDue: makeFromInt 5832, stateTaxDue: makeFromInt 4003 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25472, federalTaxDue: makeFromInt 12428, stateTaxDue: makeFromInt 5568 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16226, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65854, qualifiedIncome: makeFromInt 77916, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18029, stateTaxDue: makeFromInt 6934 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43166, ordinaryIncomeNonSS: makeFromInt 36479, qualifiedIncome: makeFromInt 98263, itemizedDeductions: makeFromInt 13282, federalTaxDue: makeFromInt 14211, stateTaxDue: makeFromInt 6062 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14544, federalTaxDue: makeFromInt 26684, stateTaxDue: makeFromInt 7151 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26876, federalTaxDue: makeFromInt 3045, stateTaxDue: makeFromInt 3168 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4175, stateTaxDue: makeFromInt 3697 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99642, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11707, stateTaxDue: makeFromInt 4407 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2673, ordinaryIncomeNonSS: makeFromInt 63066, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15933, federalTaxDue: makeFromInt 6141, stateTaxDue: makeFromInt 2870 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84840, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1431, stateTaxDue: makeFromInt 3878 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30518, itemizedDeductions: makeFromInt 132, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 904 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63220, itemizedDeductions: makeFromInt 25816, federalTaxDue: makeFromInt 2789, stateTaxDue: makeFromInt 2706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98962, qualifiedIncome: makeFromInt 80974, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23797, stateTaxDue: makeFromInt 8626 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39286, ordinaryIncomeNonSS: makeFromInt 122953, qualifiedIncome: makeFromInt 66688, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39314, stateTaxDue: makeFromInt 9243 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50594, itemizedDeductions: makeFromInt 21538, federalTaxDue: makeFromInt 24780, stateTaxDue: makeFromInt 9355 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7549, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54730, itemizedDeductions: makeFromInt 15475, federalTaxDue: makeFromInt 34099, stateTaxDue: makeFromInt 9995 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25448, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75575, itemizedDeductions: makeFromInt 20119, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3170 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4328, ordinaryIncomeNonSS: makeFromInt 889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19219, ordinaryIncomeNonSS: makeFromInt 56994, qualifiedIncome: makeFromInt 38837, itemizedDeductions: makeFromInt 11740, federalTaxDue: makeFromInt 14508, stateTaxDue: makeFromInt 4541 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21743, federalTaxDue: makeFromInt 37594, stateTaxDue: makeFromInt 12301 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21209, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24599, ordinaryIncomeNonSS: makeFromInt 23126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3725, federalTaxDue: makeFromInt 819, stateTaxDue: makeFromInt 731 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8795, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27431, stateTaxDue: makeFromInt 9690 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99249, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17477, stateTaxDue: makeFromInt 9509 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34096, ordinaryIncomeNonSS: makeFromInt 11669, qualifiedIncome: makeFromInt 1553, itemizedDeductions: makeFromInt 12316, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 226 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49227, ordinaryIncomeNonSS: makeFromInt 141929, qualifiedIncome: makeFromInt 720, itemizedDeductions: makeFromInt 26183, federalTaxDue: makeFromInt 28956, stateTaxDue: makeFromInt 6724 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21753, itemizedDeductions: makeFromInt 1144, federalTaxDue: makeFromInt 30510, stateTaxDue: makeFromInt 8451 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26755, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 791, ordinaryIncomeNonSS: makeFromInt 147791, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19323, federalTaxDue: makeFromInt 24829, stateTaxDue: makeFromInt 6935 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39541, qualifiedIncome: makeFromInt 55237, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3570, stateTaxDue: makeFromInt 4164 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48443, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39824, stateTaxDue: makeFromInt 9347 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46374, ordinaryIncomeNonSS: makeFromInt 55672, qualifiedIncome: makeFromInt 66464, itemizedDeductions: makeFromInt 24117, federalTaxDue: makeFromInt 17171, stateTaxDue: makeFromInt 5576 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32973, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38743, itemizedDeductions: makeFromInt 25012, federalTaxDue: makeFromInt 37915, stateTaxDue: makeFromInt 9279 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11376, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6822, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25595, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4557, ordinaryIncomeNonSS: makeFromInt 12053, qualifiedIncome: makeFromInt 40443, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 419, stateTaxDue: makeFromInt 2249 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5619, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90285, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6849, stateTaxDue: makeFromInt 4059 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3591, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12539, itemizedDeductions: makeFromInt 835, federalTaxDue: makeFromInt 34874, stateTaxDue: makeFromInt 8065 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18897, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45441, itemizedDeductions: makeFromInt 16651, federalTaxDue: makeFromInt 30649, stateTaxDue: makeFromInt 9315 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36268, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89543, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11329, stateTaxDue: makeFromInt 4022 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10402, ordinaryIncomeNonSS: makeFromInt 25116, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 730 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43518, ordinaryIncomeNonSS: makeFromInt 57852, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8580, federalTaxDue: makeFromInt 13564, stateTaxDue: makeFromInt 2438 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25144, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1979 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46148, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18163, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3104, ordinaryIncomeNonSS: makeFromInt 73957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6394, stateTaxDue: makeFromInt 3221 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27122, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8508, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91074, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5291, federalTaxDue: makeFromInt 6985, stateTaxDue: makeFromInt 3879 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142229, qualifiedIncome: makeFromInt 54172, itemizedDeductions: makeFromInt 20978, federalTaxDue: makeFromInt 30626, stateTaxDue: makeFromInt 9565 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36103, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83373, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6858, stateTaxDue: makeFromInt 3824 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132586, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2410, federalTaxDue: makeFromInt 13360, stateTaxDue: makeFromInt 5954 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42867, ordinaryIncomeNonSS: makeFromInt 121233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29250, stateTaxDue: makeFromInt 5958 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18679, itemizedDeductions: makeFromInt 20600, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 504 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12478, federalTaxDue: makeFromInt 35832, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124651, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21484, federalTaxDue: makeFromInt 16322, stateTaxDue: makeFromInt 5908 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87678, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5592, stateTaxDue: makeFromInt 3921 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43898, itemizedDeductions: makeFromInt 28471, federalTaxDue: makeFromInt 937, stateTaxDue: makeFromInt 1810 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3983, ordinaryIncomeNonSS: makeFromInt 44583, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14993, federalTaxDue: makeFromInt 16799, stateTaxDue: makeFromInt 6974 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49400, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43896, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3272, ordinaryIncomeNonSS: makeFromInt 80252, qualifiedIncome: makeFromInt 32247, itemizedDeductions: makeFromInt 13092, federalTaxDue: makeFromInt 17081, stateTaxDue: makeFromInt 5513 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97623, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8392, stateTaxDue: makeFromInt 4426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17598, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14734, itemizedDeductions: makeFromInt 1728, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 201 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23956, ordinaryIncomeNonSS: makeFromInt 71301, qualifiedIncome: makeFromInt 48612, itemizedDeductions: makeFromInt 1299, federalTaxDue: makeFromInt 20632, stateTaxDue: makeFromInt 5833 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42799, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43926, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15368, itemizedDeductions: makeFromInt 18415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 559 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7561, ordinaryIncomeNonSS: makeFromInt 98143, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23574, stateTaxDue: makeFromInt 9232 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46214, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46190, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1085, stateTaxDue: makeFromInt 1907 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46858, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10764, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10947, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14454, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96489, itemizedDeductions: makeFromInt 6909, federalTaxDue: makeFromInt 8781, stateTaxDue: makeFromInt 4493 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14383, federalTaxDue: makeFromInt 35724, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124521, qualifiedIncome: makeFromInt 4028, itemizedDeductions: makeFromInt 8301, federalTaxDue: makeFromInt 25049, stateTaxDue: makeFromInt 6332 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24877, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1371, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 664, stateTaxDue: makeFromInt 1162 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10467, federalTaxDue: makeFromInt 19679, stateTaxDue: makeFromInt 3739 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32827, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27934, itemizedDeductions: makeFromInt 2941, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1022 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5488, stateTaxDue: makeFromInt 3806 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148982, qualifiedIncome: makeFromInt 5757, itemizedDeductions: makeFromInt 28526, federalTaxDue: makeFromInt 20213, stateTaxDue: makeFromInt 7341 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40951, ordinaryIncomeNonSS: makeFromInt 38403, qualifiedIncome: makeFromInt 8043, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8655, stateTaxDue: makeFromInt 1867 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43344, ordinaryIncomeNonSS: makeFromInt 127827, qualifiedIncome: makeFromInt 15818, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22615, stateTaxDue: makeFromInt 6507 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49745, ordinaryIncomeNonSS: makeFromInt 120103, qualifiedIncome: makeFromInt 88649, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40620, stateTaxDue: makeFromInt 9997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12004, ordinaryIncomeNonSS: makeFromInt 19897, qualifiedIncome: makeFromInt 36758, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2488, stateTaxDue: makeFromInt 2378 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57509, qualifiedIncome: makeFromInt 62686, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9568, stateTaxDue: makeFromInt 5579 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10108, ordinaryIncomeNonSS: makeFromInt 54497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7054, stateTaxDue: makeFromInt 2530 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24253, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47758, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1885 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32964, itemizedDeductions: makeFromInt 29284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1018 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38791, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14625, federalTaxDue: makeFromInt 33545, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119828, qualifiedIncome: makeFromInt 78598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28197, stateTaxDue: makeFromInt 9346 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28853, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50874, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35215, stateTaxDue: makeFromInt 9898 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5131, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4119, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37449, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27179, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12030, qualifiedIncome: makeFromInt 32110, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6191, stateTaxDue: makeFromInt 1952 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8452, ordinaryIncomeNonSS: makeFromInt 43061, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25720, federalTaxDue: makeFromInt 9124, stateTaxDue: makeFromInt 6478 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22438, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15292, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16484, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11036, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 290 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83813, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11913, stateTaxDue: makeFromInt 3928 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9550, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11534, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11335, federalTaxDue: makeFromInt 20835, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3310, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5431, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117735, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21749, stateTaxDue: makeFromInt 5454 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1298 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4848, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12111, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6975, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64319, itemizedDeductions: makeFromInt 21005, federalTaxDue: makeFromInt 8538, stateTaxDue: makeFromInt 2961 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44020, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1694 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43281, ordinaryIncomeNonSS: makeFromInt 28057, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4859, stateTaxDue: makeFromInt 1207 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31625, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25414, itemizedDeductions: makeFromInt 26370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1016 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21008, ordinaryIncomeNonSS: makeFromInt 74316, qualifiedIncome: makeFromInt 73233, itemizedDeductions: makeFromInt 26192, federalTaxDue: makeFromInt 16599, stateTaxDue: makeFromInt 7007 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48472, ordinaryIncomeNonSS: makeFromInt 3610, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16216, stateTaxDue: makeFromInt 4937 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44259, itemizedDeductions: makeFromInt 7206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1838 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145742, qualifiedIncome: makeFromInt 85765, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32630, stateTaxDue: makeFromInt 11154 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5469, stateTaxDue: makeFromInt 3204 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14211, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38961, stateTaxDue: makeFromInt 11897 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16238, itemizedDeductions: makeFromInt 6894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 277 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105991, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12045, federalTaxDue: makeFromInt 10044, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17973, qualifiedIncome: makeFromInt 13493, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 392, stateTaxDue: makeFromInt 1118 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45082, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44259, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54811, itemizedDeductions: makeFromInt 28682, federalTaxDue: makeFromInt 1494, stateTaxDue: makeFromInt 2166 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18937, ordinaryIncomeNonSS: makeFromInt 85452, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14724, stateTaxDue: makeFromInt 4018 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92254, qualifiedIncome: makeFromInt 31498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9349, stateTaxDue: makeFromInt 5713 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26019, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38178, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24593, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19633, stateTaxDue: makeFromInt 4800 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18611, stateTaxDue: makeFromInt 5916 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49551, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27521, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16878, ordinaryIncomeNonSS: makeFromInt 85061, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29483, stateTaxDue: makeFromInt 8798 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79811, itemizedDeductions: makeFromInt 21844, federalTaxDue: makeFromInt 5720, stateTaxDue: makeFromInt 3736 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13177, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12821, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29369, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 5253 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26097, ordinaryIncomeNonSS: makeFromInt 82757, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24404, stateTaxDue: makeFromInt 8668 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12808, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11120, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 185 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32284, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3207, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127640, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24045, federalTaxDue: makeFromInt 27272, stateTaxDue: makeFromInt 10907 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41213, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19327, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89507, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6797, stateTaxDue: makeFromInt 3800 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37939, ordinaryIncomeNonSS: makeFromInt 73213, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21409, federalTaxDue: makeFromInt 21918, stateTaxDue: makeFromInt 8181 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3263, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23544, ordinaryIncomeNonSS: makeFromInt 50543, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7376, stateTaxDue: makeFromInt 2072 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47714, itemizedDeductions: makeFromInt 22345, federalTaxDue: makeFromInt 1510, stateTaxDue: makeFromInt 2005 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47919, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 927, stateTaxDue: makeFromInt 2437 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42881, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68609, itemizedDeductions: makeFromInt 23286, federalTaxDue: makeFromInt 6932, stateTaxDue: makeFromInt 3176 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33825, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17060, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43981, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1744 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25944, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6808, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22744, itemizedDeductions: makeFromInt 8956, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 562 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84298, qualifiedIncome: makeFromInt 24287, itemizedDeductions: makeFromInt 21972, federalTaxDue: makeFromInt 6962, stateTaxDue: makeFromInt 4954 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14324, ordinaryIncomeNonSS: makeFromInt 116964, qualifiedIncome: makeFromInt 42653, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18824, stateTaxDue: makeFromInt 7306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11861, ordinaryIncomeNonSS: makeFromInt 131818, qualifiedIncome: makeFromInt 77646, itemizedDeductions: makeFromInt 16629, federalTaxDue: makeFromInt 34089, stateTaxDue: makeFromInt 10254 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33176, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34597, itemizedDeductions: makeFromInt 22616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1101 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24848, ordinaryIncomeNonSS: makeFromInt 27278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4765, federalTaxDue: makeFromInt 673, stateTaxDue: makeFromInt 933 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13400, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97890, itemizedDeductions: makeFromInt 27804, federalTaxDue: makeFromInt 9036, stateTaxDue: makeFromInt 4768 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48813, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46971, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34852, stateTaxDue: makeFromInt 9174 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95158, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7580, stateTaxDue: makeFromInt 4503 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64905, qualifiedIncome: makeFromInt 87336, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20679, stateTaxDue: makeFromInt 7540 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26852, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34083, itemizedDeductions: makeFromInt 5203, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1289 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80105, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3530 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39693, stateTaxDue: makeFromInt 7286 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91913, itemizedDeductions: makeFromInt 26030, federalTaxDue: makeFromInt 38065, stateTaxDue: makeFromInt 11991 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21053, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2705, stateTaxDue: makeFromInt 727 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6119, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11727, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13038, itemizedDeductions: makeFromInt 9688, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 397 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44547, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6123, itemizedDeductions: makeFromInt 20645, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28510, ordinaryIncomeNonSS: makeFromInt 48229, qualifiedIncome: makeFromInt 72050, itemizedDeductions: makeFromInt 13627, federalTaxDue: makeFromInt 14161, stateTaxDue: makeFromInt 5583 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84907, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12187, stateTaxDue: makeFromInt 3983 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96885, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4814, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 9592 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39879, ordinaryIncomeNonSS: makeFromInt 39935, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21157, federalTaxDue: makeFromInt 21033, stateTaxDue: makeFromInt 6723 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42057, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34333, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36128, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47738, itemizedDeductions: makeFromInt 20704, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1712 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40632, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3105, ordinaryIncomeNonSS: makeFromInt 101848, qualifiedIncome: makeFromInt 61686, itemizedDeductions: makeFromInt 18491, federalTaxDue: makeFromInt 15753, stateTaxDue: makeFromInt 7502 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147213, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25150, federalTaxDue: makeFromInt 33331, stateTaxDue: makeFromInt 7106 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67409, qualifiedIncome: makeFromInt 30537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20614, stateTaxDue: makeFromInt 4642 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27398, ordinaryIncomeNonSS: makeFromInt 69608, qualifiedIncome: makeFromInt 81871, itemizedDeductions: makeFromInt 26448, federalTaxDue: makeFromInt 17078, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33580, qualifiedIncome: makeFromInt 32424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 73, stateTaxDue: makeFromInt 2713 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12471, ordinaryIncomeNonSS: makeFromInt 55717, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15647, federalTaxDue: makeFromInt 5526, stateTaxDue: makeFromInt 2291 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24390, ordinaryIncomeNonSS: makeFromInt 134100, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35443, stateTaxDue: makeFromInt 11388 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8479, ordinaryIncomeNonSS: makeFromInt 118407, qualifiedIncome: makeFromInt 42971, itemizedDeductions: makeFromInt 3173, federalTaxDue: makeFromInt 20430, stateTaxDue: makeFromInt 7705 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7952, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89142, qualifiedIncome: makeFromInt 59640, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28766, stateTaxDue: makeFromInt 7037 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11304, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71161, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29803, stateTaxDue: makeFromInt 10383 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65039, itemizedDeductions: makeFromInt 13622, federalTaxDue: makeFromInt 44434, stateTaxDue: makeFromInt 10177 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10952, ordinaryIncomeNonSS: makeFromInt 44913, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15182, federalTaxDue: makeFromInt 4785, stateTaxDue: makeFromInt 2066 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19707, ordinaryIncomeNonSS: makeFromInt 122965, qualifiedIncome: makeFromInt 24103, itemizedDeductions: makeFromInt 14167, federalTaxDue: makeFromInt 19581, stateTaxDue: makeFromInt 6678 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42412, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23225, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 838 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8209, stateTaxDue: makeFromInt 4050 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35717, ordinaryIncomeNonSS: makeFromInt 34291, qualifiedIncome: makeFromInt 35508, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6283, stateTaxDue: makeFromInt 3115 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32455, ordinaryIncomeNonSS: makeFromInt 98663, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2568, federalTaxDue: makeFromInt 36007, stateTaxDue: makeFromInt 9678 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27356, ordinaryIncomeNonSS: makeFromInt 86807, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10829, federalTaxDue: makeFromInt 18093, stateTaxDue: makeFromInt 4080 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75295, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38002, stateTaxDue: makeFromInt 11010 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28939, stateTaxDue: makeFromInt 10741 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9528, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28545, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39371, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1976, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26720, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27268, stateTaxDue: makeFromInt 8261 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59841, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19029, federalTaxDue: makeFromInt 17806, stateTaxDue: makeFromInt 7805 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47062, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24920, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43594, stateTaxDue: makeFromInt 8574 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18324, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 541 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23543, itemizedDeductions: makeFromInt 23333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 502 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26205, itemizedDeductions: makeFromInt 26624, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 888 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58038, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34338, stateTaxDue: makeFromInt 9947 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21207, ordinaryIncomeNonSS: makeFromInt 115190, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12861, federalTaxDue: makeFromInt 19621, stateTaxDue: makeFromInt 5385 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60583, itemizedDeductions: makeFromInt 3030, federalTaxDue: makeFromInt 6432, stateTaxDue: makeFromInt 2774 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20859, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 411 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41165, ordinaryIncomeNonSS: makeFromInt 126436, qualifiedIncome: makeFromInt 44730, itemizedDeductions: makeFromInt 26315, federalTaxDue: makeFromInt 31852, stateTaxDue: makeFromInt 8301 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28958, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1193 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32601, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40994, itemizedDeductions: makeFromInt 21315, federalTaxDue: makeFromInt 31844, stateTaxDue: makeFromInt 9292 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46563, ordinaryIncomeNonSS: makeFromInt 62546, qualifiedIncome: makeFromInt 34739, itemizedDeductions: makeFromInt 19762, federalTaxDue: makeFromInt 20560, stateTaxDue: makeFromInt 4737 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16895, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4048, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44703, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31498, ordinaryIncomeNonSS: makeFromInt 84132, qualifiedIncome: makeFromInt 37450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20724, stateTaxDue: makeFromInt 5752 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42534, qualifiedIncome: makeFromInt 9461, itemizedDeductions: makeFromInt 13103, federalTaxDue: makeFromInt 2072, stateTaxDue: makeFromInt 2225 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22426, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70879, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4726, stateTaxDue: makeFromInt 3155 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34847, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74016, itemizedDeductions: makeFromInt 4139, federalTaxDue: makeFromInt 2935, stateTaxDue: makeFromInt 3326 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12586, federalTaxDue: makeFromInt 4129, stateTaxDue: makeFromInt 2753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5702, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49579, ordinaryIncomeNonSS: makeFromInt 49651, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5340, stateTaxDue: makeFromInt 2104 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21709, itemizedDeductions: makeFromInt 2127, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 711 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39890, ordinaryIncomeNonSS: makeFromInt 2563, qualifiedIncome: makeFromInt 89755, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5903, stateTaxDue: makeFromInt 4157 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25704, ordinaryIncomeNonSS: makeFromInt 20508, qualifiedIncome: makeFromInt 24001, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1292, stateTaxDue: makeFromInt 1842 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67753, itemizedDeductions: makeFromInt 16042, federalTaxDue: makeFromInt 42721, stateTaxDue: makeFromInt 10513 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4815, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45234, itemizedDeductions: makeFromInt 25330, federalTaxDue: makeFromInt 30257, stateTaxDue: makeFromInt 9187 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122543, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13393, federalTaxDue: makeFromInt 24327, stateTaxDue: makeFromInt 5597 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59541, itemizedDeductions: makeFromInt 27935, federalTaxDue: makeFromInt 3610, stateTaxDue: makeFromInt 2602 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13773, ordinaryIncomeNonSS: makeFromInt 121424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20724, stateTaxDue: makeFromInt 5968 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7108, ordinaryIncomeNonSS: makeFromInt 132794, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14735, stateTaxDue: makeFromInt 5965 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32279, ordinaryIncomeNonSS: makeFromInt 121997, qualifiedIncome: makeFromInt 74398, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38604, stateTaxDue: makeFromInt 9588 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40759, ordinaryIncomeNonSS: makeFromInt 16184, qualifiedIncome: makeFromInt 67430, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11287, stateTaxDue: makeFromInt 3836 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26366, ordinaryIncomeNonSS: makeFromInt 112622, qualifiedIncome: makeFromInt 52783, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21640, stateTaxDue: makeFromInt 7595 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1928, qualifiedIncome: makeFromInt 49156, itemizedDeductions: makeFromInt 27871, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2079 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13564, ordinaryIncomeNonSS: makeFromInt 71927, qualifiedIncome: makeFromInt 5492, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10822, stateTaxDue: makeFromInt 3520 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44654, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80599, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12833, federalTaxDue: makeFromInt 11700, stateTaxDue: makeFromInt 3886 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22669, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15227, federalTaxDue: makeFromInt 41982, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53434, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19727, federalTaxDue: makeFromInt 3151, stateTaxDue: makeFromInt 2072 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85224, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6724, stateTaxDue: makeFromInt 3806 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111239, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25311, stateTaxDue: makeFromInt 9887 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13944, ordinaryIncomeNonSS: makeFromInt 85841, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11333, stateTaxDue: makeFromInt 3827 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89523, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4355, federalTaxDue: makeFromInt 7573, stateTaxDue: makeFromInt 3913 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42385, ordinaryIncomeNonSS: makeFromInt 91695, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18419, stateTaxDue: makeFromInt 4010 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57450, qualifiedIncome: makeFromInt 12856, itemizedDeductions: makeFromInt 26704, federalTaxDue: makeFromInt 3077, stateTaxDue: makeFromInt 3137 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7217, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49151, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8582, stateTaxDue: makeFromInt 2078 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41748, ordinaryIncomeNonSS: makeFromInt 137788, qualifiedIncome: makeFromInt 91448, itemizedDeductions: makeFromInt 23819, federalTaxDue: makeFromInt 43666, stateTaxDue: makeFromInt 11007 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74824, itemizedDeductions: makeFromInt 29912, federalTaxDue: makeFromInt 33880, stateTaxDue: makeFromInt 10786 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44754, ordinaryIncomeNonSS: makeFromInt 40967, qualifiedIncome: makeFromInt 23514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6418, stateTaxDue: makeFromInt 2636 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34052, qualifiedIncome: makeFromInt 90469, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6011, stateTaxDue: makeFromInt 6004 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8189, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11837, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27796, stateTaxDue: makeFromInt 7829 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9172, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29702, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1066 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9842, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27605, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8125, ordinaryIncomeNonSS: makeFromInt 44251, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11436, stateTaxDue: makeFromInt 6638 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86030, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5345, stateTaxDue: makeFromInt 3837 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1759, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39410, stateTaxDue: makeFromInt 12199 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28383, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1523, stateTaxDue: makeFromInt 964 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82879, qualifiedIncome: makeFromInt 96631, itemizedDeductions: makeFromInt 4588, federalTaxDue: makeFromInt 32235, stateTaxDue: makeFromInt 8601 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43963, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19950, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26774, itemizedDeductions: makeFromInt 23779, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 917 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 970, itemizedDeductions: makeFromInt 8171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19386, ordinaryIncomeNonSS: makeFromInt 19274, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10171, federalTaxDue: makeFromInt 721, stateTaxDue: makeFromInt 509 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26828, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40611, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3938, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9905, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28586, ordinaryIncomeNonSS: makeFromInt 103134, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15178, stateTaxDue: makeFromInt 4582 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1206, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9080, itemizedDeductions: makeFromInt 17437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45991, ordinaryIncomeNonSS: makeFromInt 56260, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18466, federalTaxDue: makeFromInt 7540, stateTaxDue: makeFromInt 2138 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66608, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15607, federalTaxDue: makeFromInt 12722, stateTaxDue: makeFromInt 2955 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10317, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46404, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26081, stateTaxDue: makeFromInt 9345 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16033, federalTaxDue: makeFromInt 10907, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75226, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17503, federalTaxDue: makeFromInt 13600, stateTaxDue: makeFromInt 8086 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28288, ordinaryIncomeNonSS: makeFromInt 133463, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29705, stateTaxDue: makeFromInt 6378 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43964, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1463, federalTaxDue: makeFromInt 10717, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36498, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4474, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32217, stateTaxDue: makeFromInt 7531 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65853, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2706 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48658, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1957, stateTaxDue: makeFromInt 1858 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9722, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29230, stateTaxDue: makeFromInt 7151 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43066, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58283, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41851, stateTaxDue: makeFromInt 10276 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47617, ordinaryIncomeNonSS: makeFromInt 41462, qualifiedIncome: makeFromInt 35840, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19044, stateTaxDue: makeFromInt 3718 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33931, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27684, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 963 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40030, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35499, itemizedDeductions: makeFromInt 6898, federalTaxDue: makeFromInt 709, stateTaxDue: makeFromInt 1320 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15550, ordinaryIncomeNonSS: makeFromInt 1504, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49327, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9816, stateTaxDue: makeFromInt 2291 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48969, qualifiedIncome: makeFromInt 4042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4680, stateTaxDue: makeFromInt 2357 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8916, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54232, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30559, stateTaxDue: makeFromInt 9967 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3055, stateTaxDue: makeFromInt 2441 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40566, itemizedDeductions: makeFromInt 19489, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1553 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29543, qualifiedIncome: makeFromInt 22191, itemizedDeductions: makeFromInt 12519, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2088 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39521, ordinaryIncomeNonSS: makeFromInt 109638, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20733, stateTaxDue: makeFromInt 4907 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30856, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1068 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137180, qualifiedIncome: makeFromInt 39691, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25513, stateTaxDue: makeFromInt 8589 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38401, ordinaryIncomeNonSS: makeFromInt 147333, qualifiedIncome: makeFromInt 29369, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28191, stateTaxDue: makeFromInt 8160 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24849, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1948, stateTaxDue: makeFromInt 819 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92425, qualifiedIncome: makeFromInt 58794, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17860, stateTaxDue: makeFromInt 7306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3712, ordinaryIncomeNonSS: makeFromInt 105734, qualifiedIncome: makeFromInt 7686, itemizedDeductions: makeFromInt 4474, federalTaxDue: makeFromInt 15755, stateTaxDue: makeFromInt 5336 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1994, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51436, stateTaxDue: makeFromInt 11003 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45530, ordinaryIncomeNonSS: makeFromInt 5173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 662, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 39 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24893, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53351, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4912, stateTaxDue: makeFromInt 2472 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63418, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5617, federalTaxDue: makeFromInt 19949, stateTaxDue: makeFromInt 7906 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36445, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10366, federalTaxDue: makeFromInt 1000, stateTaxDue: makeFromInt 1347 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62539, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21649, stateTaxDue: makeFromInt 7652 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121091, qualifiedIncome: makeFromInt 81111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36211, stateTaxDue: makeFromInt 10088 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119278, qualifiedIncome: makeFromInt 57741, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38195, stateTaxDue: makeFromInt 8596 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40101, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2834, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9262, ordinaryIncomeNonSS: makeFromInt 66232, qualifiedIncome: makeFromInt 36829, itemizedDeductions: makeFromInt 16944, federalTaxDue: makeFromInt 8375, stateTaxDue: makeFromInt 4705 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28622, ordinaryIncomeNonSS: makeFromInt 83404, qualifiedIncome: makeFromInt 52217, itemizedDeductions: makeFromInt 16066, federalTaxDue: makeFromInt 24007, stateTaxDue: makeFromInt 6627 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39940, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49718, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5471, stateTaxDue: makeFromInt 2231 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70190, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3035 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33206, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32547, ordinaryIncomeNonSS: makeFromInt 143992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26244, stateTaxDue: makeFromInt 6691 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93269, qualifiedIncome: makeFromInt 47126, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12847, stateTaxDue: makeFromInt 6507 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47646, ordinaryIncomeNonSS: makeFromInt 53919, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25338, federalTaxDue: makeFromInt 7954, stateTaxDue: makeFromInt 2301 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7854, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83558, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4494, stateTaxDue: makeFromInt 3603 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 704, federalTaxDue: makeFromInt 4938, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82799, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13838, stateTaxDue: makeFromInt 3998 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116104, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18631, stateTaxDue: makeFromInt 5269 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146690, qualifiedIncome: makeFromInt 72175, itemizedDeductions: makeFromInt 13997, federalTaxDue: makeFromInt 36962, stateTaxDue: makeFromInt 10734 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17902, federalTaxDue: makeFromInt 27207, stateTaxDue: makeFromInt 4952 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1334, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54766, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28543, federalTaxDue: makeFromInt 2862, stateTaxDue: makeFromInt 2569 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45753, ordinaryIncomeNonSS: makeFromInt 101041, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18178, stateTaxDue: makeFromInt 4677 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38158, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59322, itemizedDeductions: makeFromInt 3340, federalTaxDue: makeFromInt 4722, stateTaxDue: makeFromInt 2597 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63588, itemizedDeductions: makeFromInt 21072, federalTaxDue: makeFromInt 1640, stateTaxDue: makeFromInt 2504 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25160, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27491, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22257, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 118, stateTaxDue: makeFromInt 2709 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23148, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39267, ordinaryIncomeNonSS: makeFromInt 5234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23619, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19815, itemizedDeductions: makeFromInt 2284, federalTaxDue: makeFromInt 32141, stateTaxDue: makeFromInt 8030 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14150, ordinaryIncomeNonSS: makeFromInt 144068, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20179, stateTaxDue: makeFromInt 6728 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42502, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2337, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3070, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37265, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 38967, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20946, federalTaxDue: makeFromInt 6829, stateTaxDue: makeFromInt 6573 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76667, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19201, stateTaxDue: makeFromInt 3378 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3141, stateTaxDue: makeFromInt 3292 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23996, qualifiedIncome: makeFromInt 83786, itemizedDeductions: makeFromInt 965, federalTaxDue: makeFromInt 22376, stateTaxDue: makeFromInt 5272 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46041, qualifiedIncome: makeFromInt 22941, itemizedDeductions: makeFromInt 14372, federalTaxDue: makeFromInt 2493, stateTaxDue: makeFromInt 2874 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35563, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2219, stateTaxDue: makeFromInt 1939 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20055, itemizedDeductions: makeFromInt 25229, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 676 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64939, qualifiedIncome: makeFromInt 22714, itemizedDeductions: makeFromInt 20003, federalTaxDue: makeFromInt 2775, stateTaxDue: makeFromInt 3818 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45533, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1943, stateTaxDue: makeFromInt 1602 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47520, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38361, itemizedDeductions: makeFromInt 25252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1243 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13056, qualifiedIncome: makeFromInt 16027, itemizedDeductions: makeFromInt 1384, federalTaxDue: makeFromInt 271, stateTaxDue: makeFromInt 1259 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95602, itemizedDeductions: makeFromInt 12044, federalTaxDue: makeFromInt 6780, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142401, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10565, federalTaxDue: makeFromInt 22754, stateTaxDue: makeFromInt 6712 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7393, itemizedDeductions: makeFromInt 22302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44178, qualifiedIncome: makeFromInt 65933, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8674, stateTaxDue: makeFromInt 5217 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8343, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76388, itemizedDeductions: makeFromInt 9672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3413 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29561, qualifiedIncome: makeFromInt 13417, itemizedDeductions: makeFromInt 10171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1539 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122336, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21303, federalTaxDue: makeFromInt 35455, stateTaxDue: makeFromInt 10642 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39672, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1595 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8654, federalTaxDue: makeFromInt 41541, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29242, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50699, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1860 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57866, itemizedDeductions: makeFromInt 17506, federalTaxDue: makeFromInt 33258, stateTaxDue: makeFromInt 10050 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8427, federalTaxDue: makeFromInt 20740, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42610, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41646, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113592, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18355, stateTaxDue: makeFromInt 5005 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113354, qualifiedIncome: makeFromInt 73004, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26506, stateTaxDue: makeFromInt 8866 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78911, itemizedDeductions: makeFromInt 2958, federalTaxDue: makeFromInt 452, stateTaxDue: makeFromInt 3576 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14570, ordinaryIncomeNonSS: makeFromInt 69345, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5924, stateTaxDue: makeFromInt 3092 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5709, federalTaxDue: makeFromInt 16165, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43087, ordinaryIncomeNonSS: makeFromInt 23586, qualifiedIncome: makeFromInt 69351, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12139, stateTaxDue: makeFromInt 4515 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113472, qualifiedIncome: makeFromInt 38638, itemizedDeductions: makeFromInt 28939, federalTaxDue: makeFromInt 21688, stateTaxDue: makeFromInt 7533 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130831, qualifiedIncome: makeFromInt 52891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 8611 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35813, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72841, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3062 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41972, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15391, federalTaxDue: makeFromInt 2452, stateTaxDue: makeFromInt 1692 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37690, ordinaryIncomeNonSS: makeFromInt 23585, qualifiedIncome: makeFromInt 3656, itemizedDeductions: makeFromInt 16034, federalTaxDue: makeFromInt 2171, stateTaxDue: makeFromInt 1042 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1311, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4391 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23466, qualifiedIncome: makeFromInt 50479, itemizedDeductions: makeFromInt 8917, federalTaxDue: makeFromInt 5098, stateTaxDue: makeFromInt 3222 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17074, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110759, qualifiedIncome: makeFromInt 66554, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23068, stateTaxDue: makeFromInt 8491 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30788, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30907, stateTaxDue: makeFromInt 9678 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14685, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46078, ordinaryIncomeNonSS: makeFromInt 129625, qualifiedIncome: makeFromInt 10911, itemizedDeductions: makeFromInt 3922, federalTaxDue: makeFromInt 28505, stateTaxDue: makeFromInt 6452 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69898, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1250, stateTaxDue: makeFromInt 3020 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39841, ordinaryIncomeNonSS: makeFromInt 69296, qualifiedIncome: makeFromInt 64695, itemizedDeductions: makeFromInt 26879, federalTaxDue: makeFromInt 17273, stateTaxDue: makeFromInt 6025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17649, ordinaryIncomeNonSS: makeFromInt 145418, qualifiedIncome: makeFromInt 77066, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43132, stateTaxDue: makeFromInt 11000 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10400, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26197, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37876, itemizedDeductions: makeFromInt 27675, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1319 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30802, itemizedDeductions: makeFromInt 6605, federalTaxDue: makeFromInt 32808, stateTaxDue: makeFromInt 8565 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15187, ordinaryIncomeNonSS: makeFromInt 92393, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13236, stateTaxDue: makeFromInt 4161 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 282 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39052, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1528 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29611, ordinaryIncomeNonSS: makeFromInt 45973, qualifiedIncome: makeFromInt 6601, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9340, stateTaxDue: makeFromInt 2174 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71825, itemizedDeductions: makeFromInt 2020, federalTaxDue: makeFromInt 4080, stateTaxDue: makeFromInt 3336 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12949, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73831, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22592, stateTaxDue: makeFromInt 8437 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47063, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23941, qualifiedIncome: makeFromInt 91921, itemizedDeductions: makeFromInt 16638, federalTaxDue: makeFromInt 20603, stateTaxDue: makeFromInt 5629 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37743, ordinaryIncomeNonSS: makeFromInt 121620, qualifiedIncome: makeFromInt 83973, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39116, stateTaxDue: makeFromInt 10025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24747, ordinaryIncomeNonSS: makeFromInt 63194, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24137, federalTaxDue: makeFromInt 17457, stateTaxDue: makeFromInt 7685 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38600, ordinaryIncomeNonSS: makeFromInt 34740, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2869, stateTaxDue: makeFromInt 1162 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24797, ordinaryIncomeNonSS: makeFromInt 54611, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8505, stateTaxDue: makeFromInt 2276 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28276, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26666, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 809 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67390, qualifiedIncome: makeFromInt 62875, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13322, stateTaxDue: makeFromInt 6419 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11590, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31945, itemizedDeductions: makeFromInt 29233, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1022 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28383, qualifiedIncome: makeFromInt 67965, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21054, stateTaxDue: makeFromInt 4689 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59755, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8215, federalTaxDue: makeFromInt 4739, stateTaxDue: makeFromInt 2701 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22931, ordinaryIncomeNonSS: makeFromInt 143495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7693, federalTaxDue: makeFromInt 20048, stateTaxDue: makeFromInt 6500 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13244, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44486, itemizedDeductions: makeFromInt 455, federalTaxDue: makeFromInt 767, stateTaxDue: makeFromInt 1822 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141703, qualifiedIncome: makeFromInt 83991, itemizedDeductions: makeFromInt 2110, federalTaxDue: makeFromInt 30122, stateTaxDue: makeFromInt 10751 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21457, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1138, ordinaryIncomeNonSS: makeFromInt 127452, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22067, stateTaxDue: makeFromInt 6012 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31903, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44622, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27718, ordinaryIncomeNonSS: makeFromInt 149857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22167, stateTaxDue: makeFromInt 6818 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42904, ordinaryIncomeNonSS: makeFromInt 5528, qualifiedIncome: makeFromInt 99125, itemizedDeductions: makeFromInt 29672, federalTaxDue: makeFromInt 10037, stateTaxDue: makeFromInt 4740 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93837, itemizedDeductions: makeFromInt 2239, federalTaxDue: makeFromInt 8428, stateTaxDue: makeFromInt 4357 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29878, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48979, itemizedDeductions: makeFromInt 21502, federalTaxDue: makeFromInt 389, stateTaxDue: makeFromInt 1874 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112253, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27628, federalTaxDue: makeFromInt 19201, stateTaxDue: makeFromInt 5138 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71012, qualifiedIncome: makeFromInt 87612, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15552, stateTaxDue: makeFromInt 7356 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10589, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30127, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1178 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26934, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2846, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30894, ordinaryIncomeNonSS: makeFromInt 61400, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13049, federalTaxDue: makeFromInt 9657, stateTaxDue: makeFromInt 2683 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116460, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24665, federalTaxDue: makeFromInt 26459, stateTaxDue: makeFromInt 10148 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33698, itemizedDeductions: makeFromInt 26532, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1230 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18814, ordinaryIncomeNonSS: makeFromInt 122095, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5037, federalTaxDue: makeFromInt 16217, stateTaxDue: makeFromInt 5430 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92338, itemizedDeductions: makeFromInt 23981, federalTaxDue: makeFromInt 34591, stateTaxDue: makeFromInt 11808 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70127, qualifiedIncome: makeFromInt 52420, itemizedDeductions: makeFromInt 22891, federalTaxDue: makeFromInt 11340, stateTaxDue: makeFromInt 5752 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112967, qualifiedIncome: makeFromInt 2540, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11953, stateTaxDue: makeFromInt 5238 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23412, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1486, stateTaxDue: makeFromInt 970 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6858, ordinaryIncomeNonSS: makeFromInt 117448, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20121, stateTaxDue: makeFromInt 5561 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62954, qualifiedIncome: makeFromInt 51668, itemizedDeductions: makeFromInt 12664, federalTaxDue: makeFromInt 9400, stateTaxDue: makeFromInt 5397 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39340, ordinaryIncomeNonSS: makeFromInt 38996, qualifiedIncome: makeFromInt 2974, itemizedDeductions: makeFromInt 13971, federalTaxDue: makeFromInt 7883, stateTaxDue: makeFromInt 1844 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10817, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9436, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46238, qualifiedIncome: makeFromInt 24445, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1704, stateTaxDue: makeFromInt 2859 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73050, qualifiedIncome: makeFromInt 25045, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8088, stateTaxDue: makeFromInt 4530 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25987, ordinaryIncomeNonSS: makeFromInt 5302, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 46 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30991, ordinaryIncomeNonSS: makeFromInt 65817, qualifiedIncome: makeFromInt 60005, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12172, stateTaxDue: makeFromInt 5616 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12797, itemizedDeductions: makeFromInt 5458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 165 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28229, ordinaryIncomeNonSS: makeFromInt 20079, qualifiedIncome: makeFromInt 70089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7021, stateTaxDue: makeFromInt 4133 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14752, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5302 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82877, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3469, stateTaxDue: makeFromInt 3769 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43618, ordinaryIncomeNonSS: makeFromInt 69904, qualifiedIncome: makeFromInt 86529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20152, stateTaxDue: makeFromInt 7347 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4781, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15031, ordinaryIncomeNonSS: makeFromInt 31151, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27445, federalTaxDue: makeFromInt 704, stateTaxDue: makeFromInt 1140 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27443, federalTaxDue: makeFromInt 24483, stateTaxDue: makeFromInt 5710 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109205, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11149, federalTaxDue: makeFromInt 17799, stateTaxDue: makeFromInt 5223 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93999, qualifiedIncome: makeFromInt 67737, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19548, stateTaxDue: makeFromInt 7832 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19488, itemizedDeductions: makeFromInt 8056, federalTaxDue: makeFromInt 25281, stateTaxDue: makeFromInt 7899 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21183, ordinaryIncomeNonSS: makeFromInt 75307, qualifiedIncome: makeFromInt 69387, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22870, stateTaxDue: makeFromInt 6951 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45510, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27189, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76208, qualifiedIncome: makeFromInt 49575, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22260, stateTaxDue: makeFromInt 5834 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64150, qualifiedIncome: makeFromInt 35145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4171, stateTaxDue: makeFromInt 4290 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32366, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26152, federalTaxDue: makeFromInt 621, stateTaxDue: makeFromInt 1043 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28564, ordinaryIncomeNonSS: makeFromInt 140553, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21380, stateTaxDue: makeFromInt 6452 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46596, ordinaryIncomeNonSS: makeFromInt 20625, qualifiedIncome: makeFromInt 35517, itemizedDeductions: makeFromInt 8197, federalTaxDue: makeFromInt 13095, stateTaxDue: makeFromInt 2639 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140556, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6555, federalTaxDue: makeFromInt 20091, stateTaxDue: makeFromInt 6653 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22844, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13593, ordinaryIncomeNonSS: makeFromInt 117234, qualifiedIncome: makeFromInt 5763, itemizedDeductions: makeFromInt 1828, federalTaxDue: makeFromInt 26995, stateTaxDue: makeFromInt 6048 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21053, ordinaryIncomeNonSS: makeFromInt 124678, qualifiedIncome: makeFromInt 99499, itemizedDeductions: makeFromInt 15515, federalTaxDue: makeFromInt 30482, stateTaxDue: makeFromInt 10734 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84409, itemizedDeductions: makeFromInt 21662, federalTaxDue: makeFromInt 7014, stateTaxDue: makeFromInt 3876 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32574, qualifiedIncome: makeFromInt 39523, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5065, stateTaxDue: makeFromInt 3130 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27461, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 522 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81512, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4939, stateTaxDue: makeFromInt 3672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14105, ordinaryIncomeNonSS: makeFromInt 144293, qualifiedIncome: makeFromInt 46323, itemizedDeductions: makeFromInt 11140, federalTaxDue: makeFromInt 25522, stateTaxDue: makeFromInt 9056 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27258, federalTaxDue: makeFromInt 26841, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26336, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45318, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28914, stateTaxDue: makeFromInt 9091 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15156, qualifiedIncome: makeFromInt 41511, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2258 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44786, ordinaryIncomeNonSS: makeFromInt 15727, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7813, stateTaxDue: makeFromInt 5111 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16976, ordinaryIncomeNonSS: makeFromInt 43639, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18101, federalTaxDue: makeFromInt 19651, stateTaxDue: makeFromInt 7032 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6170, ordinaryIncomeNonSS: makeFromInt 89478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9557, stateTaxDue: makeFromInt 4099 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33540, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7535, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12974, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58904, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16670, federalTaxDue: makeFromInt 19490, stateTaxDue: makeFromInt 7690 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131573, qualifiedIncome: makeFromInt 44503, itemizedDeductions: makeFromInt 4250, federalTaxDue: makeFromInt 27885, stateTaxDue: makeFromInt 8549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 403, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49920, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1821 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146765, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14866, federalTaxDue: makeFromInt 25830, stateTaxDue: makeFromInt 7189 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21046, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 421 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79400, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17330, federalTaxDue: makeFromInt 16154, stateTaxDue: makeFromInt 8295 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12941, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 7 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37278, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29963, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68473, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2949 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16150, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1793, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3917, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1665, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14192, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4508 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28333, ordinaryIncomeNonSS: makeFromInt 60624, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27788, federalTaxDue: makeFromInt 23956, stateTaxDue: makeFromInt 7967 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7799, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21224, itemizedDeductions: makeFromInt 27856, federalTaxDue: makeFromInt 21857, stateTaxDue: makeFromInt 8080 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19185, qualifiedIncome: makeFromInt 53385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2954 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10494, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19139, ordinaryIncomeNonSS: makeFromInt 77748, qualifiedIncome: makeFromInt 5626, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7755, stateTaxDue: makeFromInt 3694 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13779, ordinaryIncomeNonSS: makeFromInt 26453, qualifiedIncome: makeFromInt 88594, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12441, stateTaxDue: makeFromInt 5297 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22462, ordinaryIncomeNonSS: makeFromInt 95338, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17096, stateTaxDue: makeFromInt 4312 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41298, ordinaryIncomeNonSS: makeFromInt 22403, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1195, stateTaxDue: makeFromInt 745 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42841, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70457, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11180, stateTaxDue: makeFromInt 3369 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126967, qualifiedIncome: makeFromInt 18148, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22826, stateTaxDue: makeFromInt 7001 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5086, ordinaryIncomeNonSS: makeFromInt 81361, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7569, stateTaxDue: makeFromInt 3693 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51845, qualifiedIncome: makeFromInt 52700, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17919, stateTaxDue: makeFromInt 5057 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7441, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41913, ordinaryIncomeNonSS: makeFromInt 42947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17121, federalTaxDue: makeFromInt 4643, stateTaxDue: makeFromInt 1741 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81853, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4375, stateTaxDue: makeFromInt 3718 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38186, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2150, stateTaxDue: makeFromInt 1397 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49299, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26783, federalTaxDue: makeFromInt 4789, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145607, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21304, stateTaxDue: makeFromInt 6905 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117133, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5487, federalTaxDue: makeFromInt 26818, stateTaxDue: makeFromInt 5423 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34041, ordinaryIncomeNonSS: makeFromInt 17685, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 351 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1534, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3380, ordinaryIncomeNonSS: makeFromInt 35242, qualifiedIncome: makeFromInt 98848, itemizedDeductions: makeFromInt 10829, federalTaxDue: makeFromInt 13575, stateTaxDue: makeFromInt 6492 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28136, ordinaryIncomeNonSS: makeFromInt 67456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 332, federalTaxDue: makeFromInt 12801, stateTaxDue: makeFromInt 2918 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2874, ordinaryIncomeNonSS: makeFromInt 120991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18707, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 5595 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39871, ordinaryIncomeNonSS: makeFromInt 88922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14120, stateTaxDue: makeFromInt 4071 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48972, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25463, stateTaxDue: makeFromInt 9402 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28764, itemizedDeductions: makeFromInt 9362, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1063 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42072, ordinaryIncomeNonSS: makeFromInt 113769, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18255, federalTaxDue: makeFromInt 19246, stateTaxDue: makeFromInt 5099 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2532, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13923, ordinaryIncomeNonSS: makeFromInt 45789, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5219, stateTaxDue: makeFromInt 1886 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20530, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133708, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39330, stateTaxDue: makeFromInt 11572 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46705, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21886, ordinaryIncomeNonSS: makeFromInt 25532, qualifiedIncome: makeFromInt 84381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7228, stateTaxDue: makeFromInt 5121 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14103, ordinaryIncomeNonSS: makeFromInt 144436, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27174, stateTaxDue: makeFromInt 6767 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10998, itemizedDeductions: makeFromInt 9761, federalTaxDue: makeFromInt 29059, stateTaxDue: makeFromInt 7782 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21872, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41601, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10278, ordinaryIncomeNonSS: makeFromInt 118357, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29565, federalTaxDue: makeFromInt 32242, stateTaxDue: makeFromInt 10463 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95779, qualifiedIncome: makeFromInt 21449, itemizedDeductions: makeFromInt 10705, federalTaxDue: makeFromInt 14877, stateTaxDue: makeFromInt 5428 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6477, ordinaryIncomeNonSS: makeFromInt 69345, qualifiedIncome: makeFromInt 15548, itemizedDeductions: makeFromInt 22042, federalTaxDue: makeFromInt 4221, stateTaxDue: makeFromInt 3779 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28010, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2537, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138307, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14619, stateTaxDue: makeFromInt 6240 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23582, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19338, federalTaxDue: makeFromInt 9387, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9394, qualifiedIncome: makeFromInt 75796, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14228, stateTaxDue: makeFromInt 3805 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42585, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16058, federalTaxDue: makeFromInt 2444, stateTaxDue: makeFromInt 1723 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47281, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19884, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95350, itemizedDeductions: makeFromInt 28963, federalTaxDue: makeFromInt 6743, stateTaxDue: makeFromInt 4312 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45029, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2007, itemizedDeductions: makeFromInt 25885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6624, ordinaryIncomeNonSS: makeFromInt 38500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22066, federalTaxDue: makeFromInt 2428, stateTaxDue: makeFromInt 1470 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12911, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12869, federalTaxDue: makeFromInt 8249, stateTaxDue: makeFromInt 4971 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22392, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10809, stateTaxDue: makeFromInt 5645 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12244, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24856, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36432, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7849, federalTaxDue: makeFromInt 50785, stateTaxDue: makeFromInt 12322 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33882, itemizedDeductions: makeFromInt 8755, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1177 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10561, ordinaryIncomeNonSS: makeFromInt 131245, qualifiedIncome: makeFromInt 40723, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29394, stateTaxDue: makeFromInt 8343 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73606, qualifiedIncome: makeFromInt 55129, itemizedDeductions: makeFromInt 607, federalTaxDue: makeFromInt 6431, stateTaxDue: makeFromInt 5762 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48885, ordinaryIncomeNonSS: makeFromInt 40717, qualifiedIncome: makeFromInt 35897, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3875, stateTaxDue: makeFromInt 3255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43647, ordinaryIncomeNonSS: makeFromInt 124823, qualifiedIncome: makeFromInt 23865, itemizedDeductions: makeFromInt 5544, federalTaxDue: makeFromInt 32073, stateTaxDue: makeFromInt 7179 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79135, itemizedDeductions: makeFromInt 3116, federalTaxDue: makeFromInt 5964, stateTaxDue: makeFromInt 3774 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11667, qualifiedIncome: makeFromInt 29212, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1038, stateTaxDue: makeFromInt 1860 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39259, ordinaryIncomeNonSS: makeFromInt 149129, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39605, stateTaxDue: makeFromInt 12053 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21822, itemizedDeductions: makeFromInt 16316, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 685 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44309, ordinaryIncomeNonSS: makeFromInt 127829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20599, stateTaxDue: makeFromInt 5916 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17706, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64474, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2111, stateTaxDue: makeFromInt 2737 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10727, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8873, federalTaxDue: makeFromInt 29598, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119003, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5149, federalTaxDue: makeFromInt 29919, stateTaxDue: makeFromInt 10575 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26642, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4892, federalTaxDue: makeFromInt 45369, stateTaxDue: makeFromInt 12199 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19887, ordinaryIncomeNonSS: makeFromInt 104079, qualifiedIncome: makeFromInt 49886, itemizedDeductions: makeFromInt 25047, federalTaxDue: makeFromInt 22176, stateTaxDue: makeFromInt 7424 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41417, ordinaryIncomeNonSS: makeFromInt 96894, qualifiedIncome: makeFromInt 85161, itemizedDeductions: makeFromInt 24609, federalTaxDue: makeFromInt 26062, stateTaxDue: makeFromInt 8632 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5728, ordinaryIncomeNonSS: makeFromInt 21935, qualifiedIncome: makeFromInt 30548, itemizedDeductions: makeFromInt 7769, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2024 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15903, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21202, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7983, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54482, itemizedDeductions: makeFromInt 1867, federalTaxDue: makeFromInt 612, stateTaxDue: makeFromInt 2432 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23078, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75958, itemizedDeductions: makeFromInt 20000, federalTaxDue: makeFromInt 47421, stateTaxDue: makeFromInt 11043 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121350, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30482, stateTaxDue: makeFromInt 10493 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16762, ordinaryIncomeNonSS: makeFromInt 68840, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8161, stateTaxDue: makeFromInt 2867 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58524, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2251 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41310, ordinaryIncomeNonSS: makeFromInt 107642, qualifiedIncome: makeFromInt 2041, itemizedDeductions: makeFromInt 5221, federalTaxDue: makeFromInt 20925, stateTaxDue: makeFromInt 4909 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29783, ordinaryIncomeNonSS: makeFromInt 84569, qualifiedIncome: makeFromInt 919, itemizedDeductions: makeFromInt 18800, federalTaxDue: makeFromInt 14752, stateTaxDue: makeFromInt 3974 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57312, itemizedDeductions: makeFromInt 4836, federalTaxDue: makeFromInt 8919, stateTaxDue: makeFromInt 2611 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18305, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 419, federalTaxDue: makeFromInt 26092, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12430, federalTaxDue: makeFromInt 25886, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45403, ordinaryIncomeNonSS: makeFromInt 24678, qualifiedIncome: makeFromInt 76037, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16310, stateTaxDue: makeFromInt 4708 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24426, ordinaryIncomeNonSS: makeFromInt 136597, qualifiedIncome: makeFromInt 45381, itemizedDeductions: makeFromInt 624, federalTaxDue: makeFromInt 27264, stateTaxDue: makeFromInt 8424 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 428, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39656, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32256, stateTaxDue: makeFromInt 9228 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91310, qualifiedIncome: makeFromInt 97678, itemizedDeductions: makeFromInt 8668, federalTaxDue: makeFromInt 23458, stateTaxDue: makeFromInt 9074 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17191, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33916, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14432, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51031, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5531, federalTaxDue: makeFromInt 2437, stateTaxDue: makeFromInt 1877 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6514, ordinaryIncomeNonSS: makeFromInt 57672, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5035, stateTaxDue: makeFromInt 2513 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87833, qualifiedIncome: makeFromInt 98320, itemizedDeductions: makeFromInt 22525, federalTaxDue: makeFromInt 16043, stateTaxDue: makeFromInt 8841 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1461, ordinaryIncomeNonSS: makeFromInt 82328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11852, stateTaxDue: makeFromInt 3852 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6877, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81070, itemizedDeductions: makeFromInt 13933, federalTaxDue: makeFromInt 8243, stateTaxDue: makeFromInt 3679 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52751, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26141, stateTaxDue: makeFromInt 9663 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37887, qualifiedIncome: makeFromInt 98119, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10783, stateTaxDue: makeFromInt 6444 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10865, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 799, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46851, itemizedDeductions: makeFromInt 11393, federalTaxDue: makeFromInt 1380, stateTaxDue: makeFromInt 2165 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90661, qualifiedIncome: makeFromInt 51790, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17749, stateTaxDue: makeFromInt 6816 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17670, ordinaryIncomeNonSS: makeFromInt 16390, qualifiedIncome: makeFromInt 41508, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 141, stateTaxDue: makeFromInt 2320 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11097, ordinaryIncomeNonSS: makeFromInt 63488, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14799, stateTaxDue: makeFromInt 7685 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36173, ordinaryIncomeNonSS: makeFromInt 26772, qualifiedIncome: makeFromInt 39533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11198, stateTaxDue: makeFromInt 3060 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69611, qualifiedIncome: makeFromInt 72610, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15313, stateTaxDue: makeFromInt 6536 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9571, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29491, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41321, ordinaryIncomeNonSS: makeFromInt 15058, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4104, federalTaxDue: makeFromInt 15978, stateTaxDue: makeFromInt 5440 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11381, ordinaryIncomeNonSS: makeFromInt 60624, qualifiedIncome: makeFromInt 61818, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13894, stateTaxDue: makeFromInt 5667 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35915, ordinaryIncomeNonSS: makeFromInt 18375, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 221, stateTaxDue: makeFromInt 544 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26803, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28283, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15278, ordinaryIncomeNonSS: makeFromInt 122157, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15570, stateTaxDue: makeFromInt 5633 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39410, stateTaxDue: makeFromInt 12199 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 635, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35937, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3354, federalTaxDue: makeFromInt 2726, stateTaxDue: makeFromInt 1486 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9416, federalTaxDue: makeFromInt 50626, stateTaxDue: makeFromInt 12282 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54373, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8046, federalTaxDue: makeFromInt 7592, stateTaxDue: makeFromInt 2324 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35376, itemizedDeductions: makeFromInt 3673, federalTaxDue: makeFromInt 32553, stateTaxDue: makeFromInt 9139 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7785, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27875, stateTaxDue: makeFromInt 7434 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34830, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5379, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39808, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39372, stateTaxDue: makeFromInt 11737 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49132, itemizedDeductions: makeFromInt 7678, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2138 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123864, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11361, federalTaxDue: makeFromInt 19359, stateTaxDue: makeFromInt 5938 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20263, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8865, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22112, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27483, stateTaxDue: makeFromInt 8031 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40251, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22347, ordinaryIncomeNonSS: makeFromInt 36963, qualifiedIncome: makeFromInt 62862, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2675, stateTaxDue: makeFromInt 4516 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27394, federalTaxDue: makeFromInt 17856, stateTaxDue: makeFromInt 5880 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63981, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4106, stateTaxDue: makeFromInt 2724 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60563, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3228, stateTaxDue: makeFromInt 2553 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85643, qualifiedIncome: makeFromInt 3450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26536, stateTaxDue: makeFromInt 4319 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11837, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28448, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32962, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74962, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39079, stateTaxDue: makeFromInt 10820 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39761, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10712, federalTaxDue: makeFromInt 48187, stateTaxDue: makeFromInt 12199 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45840, ordinaryIncomeNonSS: makeFromInt 131800, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30137, stateTaxDue: makeFromInt 6273 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18291, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2427, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18434, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5311, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88980, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12189, stateTaxDue: makeFromInt 3994 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35357, ordinaryIncomeNonSS: makeFromInt 71848, qualifiedIncome: makeFromInt 26448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9769, stateTaxDue: makeFromInt 4240 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10051, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29477, federalTaxDue: makeFromInt 34629, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110877, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12374, federalTaxDue: makeFromInt 24070, stateTaxDue: makeFromInt 4969 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12301 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24633, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29954, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9319, ordinaryIncomeNonSS: makeFromInt 96121, qualifiedIncome: makeFromInt 73305, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23075, stateTaxDue: makeFromInt 8016 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11787, ordinaryIncomeNonSS: makeFromInt 82621, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 812, federalTaxDue: makeFromInt 24099, stateTaxDue: makeFromInt 8556 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39354, ordinaryIncomeNonSS: makeFromInt 145170, qualifiedIncome: makeFromInt 19021, itemizedDeductions: makeFromInt 2906, federalTaxDue: makeFromInt 30838, stateTaxDue: makeFromInt 7721 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42639, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20638, federalTaxDue: makeFromInt 2358, stateTaxDue: makeFromInt 1557 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37540, ordinaryIncomeNonSS: makeFromInt 63754, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32099, stateTaxDue: makeFromInt 8127 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44054, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7089, itemizedDeductions: makeFromInt 18441, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 136 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1380, federalTaxDue: makeFromInt 4513, stateTaxDue: makeFromInt 2250 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26357, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 863 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21421, qualifiedIncome: makeFromInt 25929, itemizedDeductions: makeFromInt 29757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2113 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45376, ordinaryIncomeNonSS: makeFromInt 47810, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2985, stateTaxDue: makeFromInt 1786 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3678, stateTaxDue: makeFromInt 3838 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48855, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18427, federalTaxDue: makeFromInt 8397, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2181, ordinaryIncomeNonSS: makeFromInt 144142, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29406, federalTaxDue: makeFromInt 18382, stateTaxDue: makeFromInt 6800 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29046, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32526, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104200, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11631, stateTaxDue: makeFromInt 4755 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25352, ordinaryIncomeNonSS: makeFromInt 28932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 585, stateTaxDue: makeFromInt 1251 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19680, ordinaryIncomeNonSS: makeFromInt 142435, qualifiedIncome: makeFromInt 92717, itemizedDeductions: makeFromInt 28917, federalTaxDue: makeFromInt 37743, stateTaxDue: makeFromInt 11564 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27191, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9055, federalTaxDue: makeFromInt 10159, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43948, qualifiedIncome: makeFromInt 17239, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2146, stateTaxDue: makeFromInt 2692 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27057, federalTaxDue: makeFromInt 41541, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41365, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16430, ordinaryIncomeNonSS: makeFromInt 58473, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21670, federalTaxDue: makeFromInt 6075, stateTaxDue: makeFromInt 2533 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43040, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19015, federalTaxDue: makeFromInt 43372, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12570, ordinaryIncomeNonSS: makeFromInt 54870, qualifiedIncome: makeFromInt 81830, itemizedDeductions: makeFromInt 1502, federalTaxDue: makeFromInt 14598, stateTaxDue: makeFromInt 6523 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99591, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17122, federalTaxDue: makeFromInt 23393, stateTaxDue: makeFromInt 4725 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106056, qualifiedIncome: makeFromInt 94269, itemizedDeductions: makeFromInt 14087, federalTaxDue: makeFromInt 30418, stateTaxDue: makeFromInt 9870 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87638, itemizedDeductions: makeFromInt 361, federalTaxDue: makeFromInt 40749, stateTaxDue: makeFromInt 11691 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34296, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56110, itemizedDeductions: makeFromInt 27021, federalTaxDue: makeFromInt 36722, stateTaxDue: makeFromInt 9731 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79754, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8518, stateTaxDue: makeFromInt 3619 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8831, ordinaryIncomeNonSS: makeFromInt 18994, qualifiedIncome: makeFromInt 8111, itemizedDeductions: makeFromInt 27889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 880 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53423, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2497, stateTaxDue: makeFromInt 2296 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46962, qualifiedIncome: makeFromInt 42323, itemizedDeductions: makeFromInt 4465, federalTaxDue: makeFromInt 3636, stateTaxDue: makeFromInt 4089 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19658, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38462, itemizedDeductions: makeFromInt 3524, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1348 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56485, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23999, federalTaxDue: makeFromInt 14495, stateTaxDue: makeFromInt 7449 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79706, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14739, federalTaxDue: makeFromInt 16193, stateTaxDue: makeFromInt 8512 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5293, ordinaryIncomeNonSS: makeFromInt 118842, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21429, federalTaxDue: makeFromInt 29713, stateTaxDue: makeFromInt 10610 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24689, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77366, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17983, federalTaxDue: makeFromInt 23086, stateTaxDue: makeFromInt 8699 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147383, qualifiedIncome: makeFromInt 22578, itemizedDeductions: makeFromInt 2112, federalTaxDue: makeFromInt 37227, stateTaxDue: makeFromInt 8123 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29089, itemizedDeductions: makeFromInt 4998, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 831 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14769, federalTaxDue: makeFromInt 16228, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28429, ordinaryIncomeNonSS: makeFromInt 71817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5932, stateTaxDue: makeFromInt 3010 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4404, ordinaryIncomeNonSS: makeFromInt 103378, qualifiedIncome: makeFromInt 41258, itemizedDeductions: makeFromInt 8585, federalTaxDue: makeFromInt 23872, stateTaxDue: makeFromInt 7030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55509, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11143, federalTaxDue: makeFromInt 28415, stateTaxDue: makeFromInt 7320 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76977, qualifiedIncome: makeFromInt 67852, itemizedDeductions: makeFromInt 4909, federalTaxDue: makeFromInt 20654, stateTaxDue: makeFromInt 6766 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3892, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16691, itemizedDeductions: makeFromInt 14776, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 627 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25746, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12349, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40280, ordinaryIncomeNonSS: makeFromInt 121568, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1888, federalTaxDue: makeFromInt 25861, stateTaxDue: makeFromInt 5649 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99761, itemizedDeductions: makeFromInt 8716, federalTaxDue: makeFromInt 6002, stateTaxDue: makeFromInt 4613 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46942, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 51675, stateTaxDue: makeFromInt 12526 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4307, ordinaryIncomeNonSS: makeFromInt 46283, qualifiedIncome: makeFromInt 37017, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2074, stateTaxDue: makeFromInt 3690 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36445, qualifiedIncome: makeFromInt 67376, itemizedDeductions: makeFromInt 20443, federalTaxDue: makeFromInt 915, stateTaxDue: makeFromInt 4516 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 38040, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12336, stateTaxDue: makeFromInt 6612 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104180, qualifiedIncome: makeFromInt 70064, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36020, stateTaxDue: makeFromInt 8457 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18735, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48494, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2050 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102764, qualifiedIncome: makeFromInt 39937, itemizedDeductions: makeFromInt 8153, federalTaxDue: makeFromInt 12025, stateTaxDue: makeFromInt 6660 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45646, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35381, itemizedDeductions: makeFromInt 14135, federalTaxDue: makeFromInt 1337, stateTaxDue: makeFromInt 1580 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72058, qualifiedIncome: makeFromInt 80446, itemizedDeductions: makeFromInt 21940, federalTaxDue: makeFromInt 14916, stateTaxDue: makeFromInt 7349 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12940, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70755, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3053, stateTaxDue: makeFromInt 3058 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8665, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38205, itemizedDeductions: makeFromInt 17960, federalTaxDue: makeFromInt 26997, stateTaxDue: makeFromInt 8946 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81205, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4426, stateTaxDue: makeFromInt 3591 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30794, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31171, ordinaryIncomeNonSS: makeFromInt 74997, qualifiedIncome: makeFromInt 2435, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11884, stateTaxDue: makeFromInt 3417 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48804, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40426, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1546 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10657, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63510, qualifiedIncome: makeFromInt 80027, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16981, stateTaxDue: makeFromInt 6892 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5731, qualifiedIncome: makeFromInt 61754, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9398, stateTaxDue: makeFromInt 2891 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10002, ordinaryIncomeNonSS: makeFromInt 11014, qualifiedIncome: makeFromInt 74482, itemizedDeductions: makeFromInt 23108, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3800 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24965, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8009, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10544, ordinaryIncomeNonSS: makeFromInt 131612, qualifiedIncome: makeFromInt 66351, itemizedDeductions: makeFromInt 11844, federalTaxDue: makeFromInt 33364, stateTaxDue: makeFromInt 9668 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38134, ordinaryIncomeNonSS: makeFromInt 95200, qualifiedIncome: makeFromInt 12673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27772, stateTaxDue: makeFromInt 5277 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30672, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1059 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32516, ordinaryIncomeNonSS: makeFromInt 31019, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6637, federalTaxDue: makeFromInt 2786, stateTaxDue: makeFromInt 976 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8104, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4871, ordinaryIncomeNonSS: makeFromInt 36806, qualifiedIncome: makeFromInt 64793, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7630, stateTaxDue: makeFromInt 4787 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46331, ordinaryIncomeNonSS: makeFromInt 87122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18924, stateTaxDue: makeFromInt 4219 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33746, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2249, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26971, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7118, stateTaxDue: makeFromInt 5974 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47278, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11766, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93082, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9775, federalTaxDue: makeFromInt 9196, stateTaxDue: makeFromInt 4079 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20765, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27905, stateTaxDue: makeFromInt 8260 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21438, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16584, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 374 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4871, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1163, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35144, ordinaryIncomeNonSS: makeFromInt 91385, qualifiedIncome: makeFromInt 19881, itemizedDeductions: makeFromInt 8858, federalTaxDue: makeFromInt 21766, stateTaxDue: makeFromInt 5246 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37214, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24362, federalTaxDue: makeFromInt 9251, stateTaxDue: makeFromInt 6486 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19696, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40714, ordinaryIncomeNonSS: makeFromInt 81985, qualifiedIncome: makeFromInt 25605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22122, stateTaxDue: makeFromInt 5059 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107351, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29218, stateTaxDue: makeFromInt 10126 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6382, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28375, ordinaryIncomeNonSS: makeFromInt 37202, qualifiedIncome: makeFromInt 34198, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7606, stateTaxDue: makeFromInt 3213 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20342, qualifiedIncome: makeFromInt 3683, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 726 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32900, ordinaryIncomeNonSS: makeFromInt 137052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11385, federalTaxDue: makeFromInt 27370, stateTaxDue: makeFromInt 6478 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5824, stateTaxDue: makeFromInt 4000 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36937, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1959, itemizedDeductions: makeFromInt 26722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42021, ordinaryIncomeNonSS: makeFromInt 100021, qualifiedIncome: makeFromInt 15752, itemizedDeductions: makeFromInt 11998, federalTaxDue: makeFromInt 26583, stateTaxDue: makeFromInt 5558 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81559, qualifiedIncome: makeFromInt 25091, itemizedDeductions: makeFromInt 18544, federalTaxDue: makeFromInt 5843, stateTaxDue: makeFromInt 4858 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18946, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21946, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66575, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33229, stateTaxDue: makeFromInt 8149 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26172, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64267, itemizedDeductions: makeFromInt 15441, federalTaxDue: makeFromInt 678, stateTaxDue: makeFromInt 2838 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80657, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22531, stateTaxDue: makeFromInt 8658 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11652, ordinaryIncomeNonSS: makeFromInt 127784, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17791, federalTaxDue: makeFromInt 34403, stateTaxDue: makeFromInt 10814 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58510, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23667, federalTaxDue: makeFromInt 9086, stateTaxDue: makeFromInt 7251 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20594, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149779, qualifiedIncome: makeFromInt 45236, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28430, stateTaxDue: makeFromInt 9599 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5514, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9617, stateTaxDue: makeFromInt 4037 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134110, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25506, federalTaxDue: makeFromInt 29732, stateTaxDue: makeFromInt 11231 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54603, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20683, federalTaxDue: makeFromInt 3520, stateTaxDue: makeFromInt 2155 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22380, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12892, ordinaryIncomeNonSS: makeFromInt 72879, qualifiedIncome: makeFromInt 37293, itemizedDeductions: makeFromInt 5010, federalTaxDue: makeFromInt 9789, stateTaxDue: makeFromInt 5170 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 445, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14793, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12977, qualifiedIncome: makeFromInt 85480, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3860, stateTaxDue: makeFromInt 4548 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29498, ordinaryIncomeNonSS: makeFromInt 133433, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4666, federalTaxDue: makeFromInt 19062, stateTaxDue: makeFromInt 6197 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7866, ordinaryIncomeNonSS: makeFromInt 127730, qualifiedIncome: makeFromInt 37715, itemizedDeductions: makeFromInt 12677, federalTaxDue: makeFromInt 27549, stateTaxDue: makeFromInt 7817 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60764, qualifiedIncome: makeFromInt 72918, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12841, stateTaxDue: makeFromInt 6593 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40255, ordinaryIncomeNonSS: makeFromInt 27149, qualifiedIncome: makeFromInt 5296, itemizedDeductions: makeFromInt 16458, federalTaxDue: makeFromInt 1434, stateTaxDue: makeFromInt 1147 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90926, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18980, stateTaxDue: makeFromInt 9186 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43336, ordinaryIncomeNonSS: makeFromInt 36152, qualifiedIncome: makeFromInt 49707, itemizedDeductions: makeFromInt 3185, federalTaxDue: makeFromInt 7503, stateTaxDue: makeFromInt 3618 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84471, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21028, federalTaxDue: makeFromInt 7302, stateTaxDue: makeFromInt 3649 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49026, ordinaryIncomeNonSS: makeFromInt 26555, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7206, federalTaxDue: makeFromInt 11710, stateTaxDue: makeFromInt 5653 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44720, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1861 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16451, ordinaryIncomeNonSS: makeFromInt 105909, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17010, federalTaxDue: makeFromInt 15132, stateTaxDue: makeFromInt 4721 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22152, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20714, federalTaxDue: makeFromInt 35467, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82576, itemizedDeductions: makeFromInt 24579, federalTaxDue: makeFromInt 4826, stateTaxDue: makeFromInt 3865 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29571, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 173, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14383, ordinaryIncomeNonSS: makeFromInt 128201, qualifiedIncome: makeFromInt 78398, itemizedDeductions: makeFromInt 7491, federalTaxDue: makeFromInt 34246, stateTaxDue: makeFromInt 10088 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10133, federalTaxDue: makeFromInt 15027, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111318, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14309, federalTaxDue: makeFromInt 14929, stateTaxDue: makeFromInt 5249 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32835, qualifiedIncome: makeFromInt 92950, itemizedDeductions: makeFromInt 12993, federalTaxDue: makeFromInt 8295, stateTaxDue: makeFromInt 5987 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1749, ordinaryIncomeNonSS: makeFromInt 43245, qualifiedIncome: makeFromInt 26471, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1548, stateTaxDue: makeFromInt 3231 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56390, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2345 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8275, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70793, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37939, stateTaxDue: makeFromInt 10585 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18552, ordinaryIncomeNonSS: makeFromInt 27199, qualifiedIncome: makeFromInt 50078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6226, stateTaxDue: makeFromInt 3594 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9823, federalTaxDue: makeFromInt 19690, stateTaxDue: makeFromInt 5783 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42712, ordinaryIncomeNonSS: makeFromInt 122500, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27913, stateTaxDue: makeFromInt 6023 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54263, itemizedDeductions: makeFromInt 21744, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2238 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30341, ordinaryIncomeNonSS: makeFromInt 52158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9848, stateTaxDue: makeFromInt 2153 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137282, qualifiedIncome: makeFromInt 84527, itemizedDeductions: makeFromInt 26087, federalTaxDue: makeFromInt 40437, stateTaxDue: makeFromInt 10761 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3025, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30858, itemizedDeductions: makeFromInt 12245, federalTaxDue: makeFromInt 24543, stateTaxDue: makeFromInt 8487 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26179, qualifiedIncome: makeFromInt 54507, itemizedDeductions: makeFromInt 2177, federalTaxDue: makeFromInt 11692, stateTaxDue: makeFromInt 3564 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17324, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78778, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3264 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13586, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36762, qualifiedIncome: makeFromInt 86691, itemizedDeductions: makeFromInt 9724, federalTaxDue: makeFromInt 7141, stateTaxDue: makeFromInt 5745 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109552, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16600, stateTaxDue: makeFromInt 5023 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11676, ordinaryIncomeNonSS: makeFromInt 94927, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5969, federalTaxDue: makeFromInt 16574, stateTaxDue: makeFromInt 4413 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66085, itemizedDeductions: makeFromInt 18886, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2922 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4424, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5348, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25901, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17532, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33546, stateTaxDue: makeFromInt 7922 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49227, itemizedDeductions: makeFromInt 23180, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2042 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7574, ordinaryIncomeNonSS: makeFromInt 110140, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29403, federalTaxDue: makeFromInt 12880, stateTaxDue: makeFromInt 5132 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14667, federalTaxDue: makeFromInt 172, stateTaxDue: makeFromInt 569 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9059, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69293, itemizedDeductions: makeFromInt 22422, federalTaxDue: makeFromInt 1691, stateTaxDue: makeFromInt 2790 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57691, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2883, stateTaxDue: makeFromInt 2410 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48270, ordinaryIncomeNonSS: makeFromInt 143126, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26192, stateTaxDue: makeFromInt 6481 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50780, itemizedDeductions: makeFromInt 18832, federalTaxDue: makeFromInt 6422, stateTaxDue: makeFromInt 2284 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56626, qualifiedIncome: makeFromInt 56615, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22683, stateTaxDue: makeFromInt 5407 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23167, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 912, stateTaxDue: makeFromInt 903 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87386, itemizedDeductions: makeFromInt 27515, federalTaxDue: makeFromInt 5548, stateTaxDue: makeFromInt 3906 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33258, ordinaryIncomeNonSS: makeFromInt 27489, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1240, federalTaxDue: makeFromInt 1642, stateTaxDue: makeFromInt 974 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18028, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33154, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34822, stateTaxDue: makeFromInt 8054 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12665, federalTaxDue: makeFromInt 11764, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21867, ordinaryIncomeNonSS: makeFromInt 143251, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15269, federalTaxDue: makeFromInt 26101, stateTaxDue: makeFromInt 6588 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86148, qualifiedIncome: makeFromInt 76869, itemizedDeductions: makeFromInt 8711, federalTaxDue: makeFromInt 19947, stateTaxDue: makeFromInt 7576 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36257, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34270, ordinaryIncomeNonSS: makeFromInt 11699, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10097, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 10 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1401, ordinaryIncomeNonSS: makeFromInt 55930, qualifiedIncome: makeFromInt 84200, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7752, stateTaxDue: makeFromInt 6430 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43493, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17934, stateTaxDue: makeFromInt 6700 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 490, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14193, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82917, itemizedDeductions: makeFromInt 29897, federalTaxDue: makeFromInt 38237, stateTaxDue: makeFromInt 11391 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45002, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 229, itemizedDeductions: makeFromInt 3776, federalTaxDue: makeFromInt 36542, stateTaxDue: makeFromInt 7056 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27646, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92333, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7225, stateTaxDue: makeFromInt 4117 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10078, ordinaryIncomeNonSS: makeFromInt 74527, qualifiedIncome: makeFromInt 65094, itemizedDeductions: makeFromInt 6486, federalTaxDue: makeFromInt 16763, stateTaxDue: makeFromInt 6406 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10589, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 55 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47415, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26794, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142320, qualifiedIncome: makeFromInt 81474, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37072, stateTaxDue: makeFromInt 10715 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17262, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31142, ordinaryIncomeNonSS: makeFromInt 89045, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25848, federalTaxDue: makeFromInt 15702, stateTaxDue: makeFromInt 4194 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10414, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14318, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 141 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49654, ordinaryIncomeNonSS: makeFromInt 139537, qualifiedIncome: makeFromInt 14600, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27290, stateTaxDue: makeFromInt 7340 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49707, ordinaryIncomeNonSS: makeFromInt 95221, qualifiedIncome: makeFromInt 60631, itemizedDeductions: makeFromInt 7694, federalTaxDue: makeFromInt 28446, stateTaxDue: makeFromInt 7218 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140234, qualifiedIncome: makeFromInt 90090, itemizedDeductions: makeFromInt 21403, federalTaxDue: makeFromInt 32411, stateTaxDue: makeFromInt 11196 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75687, qualifiedIncome: makeFromInt 64114, itemizedDeductions: makeFromInt 3418, federalTaxDue: makeFromInt 8341, stateTaxDue: makeFromInt 6515 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5878, federalTaxDue: makeFromInt 656, stateTaxDue: makeFromInt 459 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46934, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96306, itemizedDeductions: makeFromInt 25316, federalTaxDue: makeFromInt 1058, stateTaxDue: makeFromInt 4340 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10989, ordinaryIncomeNonSS: makeFromInt 60813, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13554, federalTaxDue: makeFromInt 4891, stateTaxDue: makeFromInt 2566 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25837, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16032, federalTaxDue: makeFromInt 21815, stateTaxDue: makeFromInt 5837 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83604, qualifiedIncome: makeFromInt 81920, itemizedDeductions: makeFromInt 12924, federalTaxDue: makeFromInt 19399, stateTaxDue: makeFromInt 7901 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39661, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39954, itemizedDeductions: makeFromInt 11430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1385 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94211, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 634, federalTaxDue: makeFromInt 13425, stateTaxDue: makeFromInt 4256 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10493, ordinaryIncomeNonSS: makeFromInt 51190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4181, stateTaxDue: makeFromInt 2185 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66475, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2411, stateTaxDue: makeFromInt 3043 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135736, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20927, stateTaxDue: makeFromInt 6309 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31551, ordinaryIncomeNonSS: makeFromInt 60925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7127, stateTaxDue: makeFromInt 2658 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104981, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13098, stateTaxDue: makeFromInt 4803 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21554, stateTaxDue: makeFromInt 7232 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38839, ordinaryIncomeNonSS: makeFromInt 86586, qualifiedIncome: makeFromInt 89387, itemizedDeductions: makeFromInt 9228, federalTaxDue: makeFromInt 36215, stateTaxDue: makeFromInt 8750 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82677, itemizedDeductions: makeFromInt 6711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3659 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81596, qualifiedIncome: makeFromInt 70111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20049, stateTaxDue: makeFromInt 7309 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90718, itemizedDeductions: makeFromInt 16323, federalTaxDue: makeFromInt 7954, stateTaxDue: makeFromInt 4081 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126867, qualifiedIncome: makeFromInt 33475, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31869, stateTaxDue: makeFromInt 7762 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16333, ordinaryIncomeNonSS: makeFromInt 133582, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27945, stateTaxDue: makeFromInt 6466 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6650, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6298, itemizedDeductions: makeFromInt 17811, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132105, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9424, federalTaxDue: makeFromInt 28263, stateTaxDue: makeFromInt 6230 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17433, ordinaryIncomeNonSS: makeFromInt 30283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 903, stateTaxDue: makeFromInt 1116 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62264, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17878, stateTaxDue: makeFromInt 7738 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40043, ordinaryIncomeNonSS: makeFromInt 121401, qualifiedIncome: makeFromInt 52807, itemizedDeductions: makeFromInt 17867, federalTaxDue: makeFromInt 31549, stateTaxDue: makeFromInt 8334 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75404, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9754, stateTaxDue: makeFromInt 3499 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61955, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45312, stateTaxDue: makeFromInt 10259 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4883, ordinaryIncomeNonSS: makeFromInt 84801, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13141, federalTaxDue: makeFromInt 6730, stateTaxDue: makeFromInt 3765 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14342, federalTaxDue: makeFromInt 15322, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35551, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39969, itemizedDeductions: makeFromInt 7996, federalTaxDue: makeFromInt 35606, stateTaxDue: makeFromInt 9123 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24349, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21717, ordinaryIncomeNonSS: makeFromInt 32456, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17684, federalTaxDue: makeFromInt 15532, stateTaxDue: makeFromInt 6408 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 145, ordinaryIncomeNonSS: makeFromInt 15662, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7876, federalTaxDue: makeFromInt 226, stateTaxDue: makeFromInt 452 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6484, federalTaxDue: makeFromInt 10596, stateTaxDue: makeFromInt 6700 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41709, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17861, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47937, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37558, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48528, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33880, stateTaxDue: makeFromInt 9471 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19519, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39113, ordinaryIncomeNonSS: makeFromInt 73957, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16436, stateTaxDue: makeFromInt 3243 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15384, ordinaryIncomeNonSS: makeFromInt 130539, qualifiedIncome: makeFromInt 58208, itemizedDeductions: makeFromInt 1658, federalTaxDue: makeFromInt 25555, stateTaxDue: makeFromInt 8762 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112401, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19753, federalTaxDue: makeFromInt 38534, stateTaxDue: makeFromInt 10245 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2981, qualifiedIncome: makeFromInt 88875, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7541, stateTaxDue: makeFromInt 4460 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1055, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15012, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6083, itemizedDeductions: makeFromInt 16310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 86 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33053, ordinaryIncomeNonSS: makeFromInt 5244, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9344, federalTaxDue: makeFromInt 10095, stateTaxDue: makeFromInt 4687 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28906, ordinaryIncomeNonSS: makeFromInt 122583, qualifiedIncome: makeFromInt 3975, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22734, stateTaxDue: makeFromInt 5873 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25524, qualifiedIncome: makeFromInt 40469, itemizedDeductions: makeFromInt 6417, federalTaxDue: makeFromInt 5996, stateTaxDue: makeFromInt 2917 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18779, itemizedDeductions: makeFromInt 25967, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 407 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36853, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63402, itemizedDeductions: makeFromInt 7137, federalTaxDue: makeFromInt 5087, stateTaxDue: makeFromInt 2683 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29057, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96596, itemizedDeductions: makeFromInt 1630, federalTaxDue: makeFromInt 8409, stateTaxDue: makeFromInt 4580 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24853, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19616, itemizedDeductions: makeFromInt 10018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 654 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43660, ordinaryIncomeNonSS: makeFromInt 79295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15197, stateTaxDue: makeFromInt 3390 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24828, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80969, qualifiedIncome: makeFromInt 93243, itemizedDeductions: makeFromInt 16568, federalTaxDue: makeFromInt 31242, stateTaxDue: makeFromInt 8436 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9561, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9552, federalTaxDue: makeFromInt 18979, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17619, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91456, itemizedDeductions: makeFromInt 4420, federalTaxDue: makeFromInt 2423, stateTaxDue: makeFromInt 4011 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48201, ordinaryIncomeNonSS: makeFromInt 135723, qualifiedIncome: makeFromInt 78734, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34698, stateTaxDue: makeFromInt 10248 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3290, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19116, federalTaxDue: makeFromInt 26705, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20617, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32713, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38469, stateTaxDue: makeFromInt 8972 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31386, ordinaryIncomeNonSS: makeFromInt 122343, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18990, stateTaxDue: makeFromInt 5689 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13960, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 355 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43170, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34044, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31967, ordinaryIncomeNonSS: makeFromInt 58798, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7631, stateTaxDue: makeFromInt 2365 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26615, ordinaryIncomeNonSS: makeFromInt 115981, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17743, federalTaxDue: makeFromInt 23086, stateTaxDue: makeFromInt 5344 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41982, ordinaryIncomeNonSS: makeFromInt 83624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7413, federalTaxDue: makeFromInt 11476, stateTaxDue: makeFromInt 3506 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66779, itemizedDeductions: makeFromInt 11991, federalTaxDue: makeFromInt 3957, stateTaxDue: makeFromInt 3084 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33367, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99675, itemizedDeductions: makeFromInt 25495, federalTaxDue: makeFromInt 8974, stateTaxDue: makeFromInt 4529 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42680, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68134, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10795, stateTaxDue: makeFromInt 3250 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132247, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31048, stateTaxDue: makeFromInt 6194 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59821, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1150, stateTaxDue: makeFromInt 2516 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28602, ordinaryIncomeNonSS: makeFromInt 79494, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12719, stateTaxDue: makeFromInt 3400 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34629, ordinaryIncomeNonSS: makeFromInt 74978, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28484, federalTaxDue: makeFromInt 9854, stateTaxDue: makeFromInt 3375 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13975, ordinaryIncomeNonSS: makeFromInt 85736, qualifiedIncome: makeFromInt 42679, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17663, stateTaxDue: makeFromInt 5846 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49538, ordinaryIncomeNonSS: makeFromInt 115214, qualifiedIncome: makeFromInt 89607, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34401, stateTaxDue: makeFromInt 9697 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44481, ordinaryIncomeNonSS: makeFromInt 2362, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3036, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9009, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28058, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54325, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 720, stateTaxDue: makeFromInt 2322 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8271, ordinaryIncomeNonSS: makeFromInt 129350, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1235, federalTaxDue: makeFromInt 15232, stateTaxDue: makeFromInt 5993 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7720, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62943, itemizedDeductions: makeFromInt 24860, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88347, qualifiedIncome: makeFromInt 69392, itemizedDeductions: makeFromInt 17602, federalTaxDue: makeFromInt 12551, stateTaxDue: makeFromInt 7412 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47866, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65624, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 53374, stateTaxDue: makeFromInt 10772 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46965, ordinaryIncomeNonSS: makeFromInt 35734, qualifiedIncome: makeFromInt 51509, itemizedDeductions: makeFromInt 28496, federalTaxDue: makeFromInt 3576, stateTaxDue: makeFromInt 3797 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48051, ordinaryIncomeNonSS: makeFromInt 93360, qualifiedIncome: makeFromInt 26547, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28493, stateTaxDue: makeFromInt 5768 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148618, qualifiedIncome: makeFromInt 80109, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34564, stateTaxDue: makeFromInt 10981 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103560, qualifiedIncome: makeFromInt 3965, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28147, stateTaxDue: makeFromInt 5137 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126263, qualifiedIncome: makeFromInt 74469, itemizedDeductions: makeFromInt 19539, federalTaxDue: makeFromInt 28381, stateTaxDue: makeFromInt 9789 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60355, itemizedDeductions: makeFromInt 18920, federalTaxDue: makeFromInt 6201, stateTaxDue: makeFromInt 2563 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52068, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27159, stateTaxDue: makeFromInt 9760 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11451, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85070, itemizedDeductions: makeFromInt 23677, federalTaxDue: makeFromInt 6067, stateTaxDue: makeFromInt 3999 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42869, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83548, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11922, stateTaxDue: makeFromInt 3702 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4768, ordinaryIncomeNonSS: makeFromInt 323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45680, ordinaryIncomeNonSS: makeFromInt 66634, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2655, federalTaxDue: makeFromInt 9964, stateTaxDue: makeFromInt 2746 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4781, ordinaryIncomeNonSS: makeFromInt 19961, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 523 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13454, qualifiedIncome: makeFromInt 47745, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 468, stateTaxDue: makeFromInt 2605 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29171, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31191, stateTaxDue: makeFromInt 6076 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1224, ordinaryIncomeNonSS: makeFromInt 138651, qualifiedIncome: makeFromInt 34654, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20121, stateTaxDue: makeFromInt 7990 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55152, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19774, federalTaxDue: makeFromInt 3302, stateTaxDue: makeFromInt 2341 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20919, ordinaryIncomeNonSS: makeFromInt 126006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11379, federalTaxDue: makeFromInt 25755, stateTaxDue: makeFromInt 5939 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30753, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34922, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75762, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19521, federalTaxDue: makeFromInt 8122, stateTaxDue: makeFromInt 3333 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71619, qualifiedIncome: makeFromInt 30075, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4613, stateTaxDue: makeFromInt 4534 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30171, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2092, ordinaryIncomeNonSS: makeFromInt 123108, qualifiedIncome: makeFromInt 25051, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22359, stateTaxDue: makeFromInt 7107 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13355, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5766, itemizedDeductions: makeFromInt 9358, federalTaxDue: makeFromInt 23223, stateTaxDue: makeFromInt 7413 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58216, qualifiedIncome: makeFromInt 28267, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14236, stateTaxDue: makeFromInt 3822 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52618, itemizedDeductions: makeFromInt 17019, federalTaxDue: makeFromInt 1199, stateTaxDue: makeFromInt 2376 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35937, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66394, itemizedDeductions: makeFromInt 3923, federalTaxDue: makeFromInt 6816, stateTaxDue: makeFromInt 3039 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46475, ordinaryIncomeNonSS: makeFromInt 93424, qualifiedIncome: makeFromInt 37967, itemizedDeductions: makeFromInt 23533, federalTaxDue: makeFromInt 24848, stateTaxDue: makeFromInt 6354 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23677, ordinaryIncomeNonSS: makeFromInt 102974, qualifiedIncome: makeFromInt 28364, itemizedDeductions: makeFromInt 14374, federalTaxDue: makeFromInt 17685, stateTaxDue: makeFromInt 6188 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21077, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48622, itemizedDeductions: makeFromInt 393, federalTaxDue: makeFromInt 127, stateTaxDue: makeFromInt 2031 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24802, ordinaryIncomeNonSS: makeFromInt 1522, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9531, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59111, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3174, stateTaxDue: makeFromInt 2790 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3218, ordinaryIncomeNonSS: makeFromInt 109488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18314, federalTaxDue: makeFromInt 9523, stateTaxDue: makeFromInt 4999 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8869, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72553, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35050, stateTaxDue: makeFromInt 10753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12316, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26071, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6222, federalTaxDue: makeFromInt 40632, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14840, ordinaryIncomeNonSS: makeFromInt 53770, qualifiedIncome: makeFromInt 1083, itemizedDeductions: makeFromInt 12397, federalTaxDue: makeFromInt 4022, stateTaxDue: makeFromInt 2268 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112784, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16497, federalTaxDue: makeFromInt 13531, stateTaxDue: makeFromInt 5064 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4762, itemizedDeductions: makeFromInt 24959, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14737, federalTaxDue: makeFromInt 18452, stateTaxDue: makeFromInt 5842 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13282, ordinaryIncomeNonSS: makeFromInt 122879, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31794, stateTaxDue: makeFromInt 10769 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66534, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17572, stateTaxDue: makeFromInt 7752 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9525, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57014, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2459 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11078, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27481, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25032, stateTaxDue: makeFromInt 8399 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40398, ordinaryIncomeNonSS: makeFromInt 25162, qualifiedIncome: makeFromInt 62261, itemizedDeductions: makeFromInt 29079, federalTaxDue: makeFromInt 8276, stateTaxDue: makeFromInt 3796 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46915, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38755, ordinaryIncomeNonSS: makeFromInt 32186, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24466, stateTaxDue: makeFromInt 6517 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47899, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1720 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3296, federalTaxDue: makeFromInt 3321, stateTaxDue: makeFromInt 2552 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147557, qualifiedIncome: makeFromInt 31844, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41495, stateTaxDue: makeFromInt 8925 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43062, itemizedDeductions: makeFromInt 7397, federalTaxDue: makeFromInt 2218, stateTaxDue: makeFromInt 1768 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33800, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35647, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 137, ordinaryIncomeNonSS: makeFromInt 48070, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13130, stateTaxDue: makeFromInt 7327 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25878, ordinaryIncomeNonSS: makeFromInt 930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6569, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25335, stateTaxDue: makeFromInt 7361 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41559, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30942, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34320, stateTaxDue: makeFromInt 8575 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85944, qualifiedIncome: makeFromInt 70103, itemizedDeductions: makeFromInt 24045, federalTaxDue: makeFromInt 22964, stateTaxDue: makeFromInt 7127 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21409, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4767, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66913, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4389, stateTaxDue: makeFromInt 3188 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 674, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2870, federalTaxDue: makeFromInt 17317, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4157, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1341, federalTaxDue: makeFromInt 25198, stateTaxDue: makeFromInt 7232 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70183, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3648, stateTaxDue: makeFromInt 3029 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54899, qualifiedIncome: makeFromInt 26230, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2644, stateTaxDue: makeFromInt 3381 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39600, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37179, itemizedDeductions: makeFromInt 21025, federalTaxDue: makeFromInt 38481, stateTaxDue: makeFromInt 9118 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33076, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4088, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53010, itemizedDeductions: makeFromInt 3719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77108, itemizedDeductions: makeFromInt 11991, federalTaxDue: makeFromInt 1504, stateTaxDue: makeFromInt 3180 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3133, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28656, itemizedDeductions: makeFromInt 1886, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 978 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40409, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31694, stateTaxDue: makeFromInt 9265 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 951, ordinaryIncomeNonSS: makeFromInt 35999, qualifiedIncome: makeFromInt 56814, itemizedDeductions: makeFromInt 3072, federalTaxDue: makeFromInt 3099, stateTaxDue: makeFromInt 4066 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80363, itemizedDeductions: makeFromInt 13475, federalTaxDue: makeFromInt 4494, stateTaxDue: makeFromInt 3752 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47119, ordinaryIncomeNonSS: makeFromInt 38460, qualifiedIncome: makeFromInt 70186, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16334, stateTaxDue: makeFromInt 4857 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131281, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3848, federalTaxDue: makeFromInt 15481, stateTaxDue: makeFromInt 6043 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23987, ordinaryIncomeNonSS: makeFromInt 68340, qualifiedIncome: makeFromInt 24990, itemizedDeductions: makeFromInt 8193, federalTaxDue: makeFromInt 16443, stateTaxDue: makeFromInt 4289 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 266 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3965, ordinaryIncomeNonSS: makeFromInt 51964, qualifiedIncome: makeFromInt 39959, itemizedDeductions: makeFromInt 23122, federalTaxDue: makeFromInt 1196, stateTaxDue: makeFromInt 4035 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32438, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20651, itemizedDeductions: makeFromInt 3268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 778 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75274, qualifiedIncome: makeFromInt 59650, itemizedDeductions: makeFromInt 18563, federalTaxDue: makeFromInt 15390, stateTaxDue: makeFromInt 6171 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15849, ordinaryIncomeNonSS: makeFromInt 137463, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13899, federalTaxDue: makeFromInt 25737, stateTaxDue: makeFromInt 6582 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110987, qualifiedIncome: makeFromInt 2803, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11939, stateTaxDue: makeFromInt 5115 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41981, itemizedDeductions: makeFromInt 16666, federalTaxDue: makeFromInt 32587, stateTaxDue: makeFromInt 9567 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80044, itemizedDeductions: makeFromInt 29781, federalTaxDue: makeFromInt 7432, stateTaxDue: makeFromInt 3735 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35270, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17097, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3234, ordinaryIncomeNonSS: makeFromInt 142959, qualifiedIncome: makeFromInt 76449, itemizedDeductions: makeFromInt 19550, federalTaxDue: makeFromInt 35145, stateTaxDue: makeFromInt 10715 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18390, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93922, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7395, stateTaxDue: makeFromInt 4441 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47195, ordinaryIncomeNonSS: makeFromInt 126987, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30237, stateTaxDue: makeFromInt 6252 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3295, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44475, ordinaryIncomeNonSS: makeFromInt 73516, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12238, stateTaxDue: makeFromInt 3301 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130076, qualifiedIncome: makeFromInt 71934, itemizedDeductions: makeFromInt 10516, federalTaxDue: makeFromInt 39974, stateTaxDue: makeFromInt 9726 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11242, ordinaryIncomeNonSS: makeFromInt 25368, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20977, federalTaxDue: makeFromInt 10739, stateTaxDue: makeFromInt 6047 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13592, itemizedDeductions: makeFromInt 2970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 5 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104895, qualifiedIncome: makeFromInt 69430, itemizedDeductions: makeFromInt 16564, federalTaxDue: makeFromInt 27032, stateTaxDue: makeFromInt 8041 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98072, qualifiedIncome: makeFromInt 3555, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29963, stateTaxDue: makeFromInt 4959 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134504, qualifiedIncome: makeFromInt 51840, itemizedDeductions: makeFromInt 1838, federalTaxDue: makeFromInt 21558, stateTaxDue: makeFromInt 8842 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40536, ordinaryIncomeNonSS: makeFromInt 90831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18174, stateTaxDue: makeFromInt 4082 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80648, itemizedDeductions: makeFromInt 20560, federalTaxDue: makeFromInt 3135, stateTaxDue: makeFromInt 3657 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14142, itemizedDeductions: makeFromInt 1016, federalTaxDue: makeFromInt 30777, stateTaxDue: makeFromInt 8024 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32485, ordinaryIncomeNonSS: makeFromInt 149160, qualifiedIncome: makeFromInt 67032, itemizedDeductions: makeFromInt 28298, federalTaxDue: makeFromInt 40887, stateTaxDue: makeFromInt 10679 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51137, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 762, stateTaxDue: makeFromInt 2182 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22457, federalTaxDue: makeFromInt 9340, stateTaxDue: makeFromInt 4696 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86997, qualifiedIncome: makeFromInt 16663, itemizedDeductions: makeFromInt 12451, federalTaxDue: makeFromInt 6496, stateTaxDue: makeFromInt 4508 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12122, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10869, ordinaryIncomeNonSS: makeFromInt 89041, qualifiedIncome: makeFromInt 89549, itemizedDeductions: makeFromInt 18047, federalTaxDue: makeFromInt 18256, stateTaxDue: makeFromInt 8255 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43352, ordinaryIncomeNonSS: makeFromInt 83860, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17320, stateTaxDue: makeFromInt 3892 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40472, ordinaryIncomeNonSS: makeFromInt 89953, qualifiedIncome: makeFromInt 49536, itemizedDeductions: makeFromInt 15645, federalTaxDue: makeFromInt 25625, stateTaxDue: makeFromInt 6701 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6026, ordinaryIncomeNonSS: makeFromInt 9432, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 5183 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4606 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19151, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10523, ordinaryIncomeNonSS: makeFromInt 67205, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7997, stateTaxDue: makeFromInt 2979 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24970, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39512, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22057, federalTaxDue: makeFromInt 2709, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14651, qualifiedIncome: makeFromInt 36013, itemizedDeductions: makeFromInt 27778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2058 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26795, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28040, federalTaxDue: makeFromInt 28911, stateTaxDue: makeFromInt 7353 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15816, ordinaryIncomeNonSS: makeFromInt 137423, qualifiedIncome: makeFromInt 40265, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24509, stateTaxDue: makeFromInt 8409 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64237, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2537 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49084, ordinaryIncomeNonSS: makeFromInt 64939, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27296, federalTaxDue: makeFromInt 26756, stateTaxDue: makeFromInt 7872 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12628, ordinaryIncomeNonSS: makeFromInt 138232, qualifiedIncome: makeFromInt 28612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21255, stateTaxDue: makeFromInt 7667 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71319, qualifiedIncome: makeFromInt 76691, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22517, stateTaxDue: makeFromInt 7324 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17408, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28243, stateTaxDue: makeFromInt 7915 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136300, qualifiedIncome: makeFromInt 15236, itemizedDeductions: makeFromInt 26487, federalTaxDue: makeFromInt 16219, stateTaxDue: makeFromInt 7076 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146514, qualifiedIncome: makeFromInt 67022, itemizedDeductions: makeFromInt 12010, federalTaxDue: makeFromInt 31575, stateTaxDue: makeFromInt 10302 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89168, itemizedDeductions: makeFromInt 8342, federalTaxDue: makeFromInt 7207, stateTaxDue: makeFromInt 4201 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93707, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7205, stateTaxDue: makeFromInt 4010 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8377, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13549, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99025, itemizedDeductions: makeFromInt 15968, federalTaxDue: makeFromInt 9206, stateTaxDue: makeFromInt 4826 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113598, qualifiedIncome: makeFromInt 21363, itemizedDeductions: makeFromInt 28806, federalTaxDue: makeFromInt 15976, stateTaxDue: makeFromInt 6373 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78423, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17083, stateTaxDue: makeFromInt 3449 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22526, ordinaryIncomeNonSS: makeFromInt 94214, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25497, federalTaxDue: makeFromInt 14638, stateTaxDue: makeFromInt 4256 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93791, qualifiedIncome: makeFromInt 59638, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15481, stateTaxDue: makeFromInt 7304 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26804, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24017, federalTaxDue: makeFromInt 6734, stateTaxDue: makeFromInt 5765 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 662, itemizedDeductions: makeFromInt 3746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14805, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27335, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 65 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49154, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18157, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14608, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21324, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137258, qualifiedIncome: makeFromInt 68153, itemizedDeductions: makeFromInt 18953, federalTaxDue: makeFromInt 32906, stateTaxDue: makeFromInt 10252 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17702, qualifiedIncome: makeFromInt 81123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5975, stateTaxDue: makeFromInt 4486 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7132, ordinaryIncomeNonSS: makeFromInt 96599, qualifiedIncome: makeFromInt 28901, itemizedDeductions: makeFromInt 27788, federalTaxDue: makeFromInt 15103, stateTaxDue: makeFromInt 5700 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31428, ordinaryIncomeNonSS: makeFromInt 26312, qualifiedIncome: makeFromInt 51393, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2099, stateTaxDue: makeFromInt 3310 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46681, qualifiedIncome: makeFromInt 86988, itemizedDeductions: makeFromInt 24209, federalTaxDue: makeFromInt 22650, stateTaxDue: makeFromInt 6428 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76001, qualifiedIncome: makeFromInt 8283, itemizedDeductions: makeFromInt 6460, federalTaxDue: makeFromInt 24462, stateTaxDue: makeFromInt 4074 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51818, qualifiedIncome: makeFromInt 62462, itemizedDeductions: makeFromInt 22162, federalTaxDue: makeFromInt 4572, stateTaxDue: makeFromInt 5125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60986, qualifiedIncome: makeFromInt 1641, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1074, stateTaxDue: makeFromInt 2643 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5925, ordinaryIncomeNonSS: makeFromInt 33275, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20026, federalTaxDue: makeFromInt 894, stateTaxDue: makeFromInt 1189 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81470, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6365, stateTaxDue: makeFromInt 3502 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23503, ordinaryIncomeNonSS: makeFromInt 95264, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14071, stateTaxDue: makeFromInt 4188 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35667, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17493, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36439, ordinaryIncomeNonSS: makeFromInt 71298, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27417, federalTaxDue: makeFromInt 7258, stateTaxDue: makeFromInt 2983 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47142, ordinaryIncomeNonSS: makeFromInt 147853, qualifiedIncome: makeFromInt 33370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39743, stateTaxDue: makeFromInt 8692 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60725, itemizedDeductions: makeFromInt 29908, federalTaxDue: makeFromInt 5121, stateTaxDue: makeFromInt 2581 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42820, qualifiedIncome: makeFromInt 21192, itemizedDeductions: makeFromInt 3969, federalTaxDue: makeFromInt 997, stateTaxDue: makeFromInt 2612 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73570, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4586, federalTaxDue: makeFromInt 5941, stateTaxDue: makeFromInt 3201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37513, ordinaryIncomeNonSS: makeFromInt 24666, qualifiedIncome: makeFromInt 85339, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13870, stateTaxDue: makeFromInt 5333 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13109, ordinaryIncomeNonSS: makeFromInt 99655, qualifiedIncome: makeFromInt 40839, itemizedDeductions: makeFromInt 24145, federalTaxDue: makeFromInt 21029, stateTaxDue: makeFromInt 6818 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16208, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40522, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 431, stateTaxDue: makeFromInt 1638 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23426, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3315, ordinaryIncomeNonSS: makeFromInt 105015, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12441, stateTaxDue: makeFromInt 4676 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20489, ordinaryIncomeNonSS: makeFromInt 26922, qualifiedIncome: makeFromInt 46415, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1029, stateTaxDue: makeFromInt 3291 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54909, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12931, federalTaxDue: makeFromInt 5223, stateTaxDue: makeFromInt 2576 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17388, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5317, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11939, itemizedDeductions: makeFromInt 8272, federalTaxDue: makeFromInt 30107, stateTaxDue: makeFromInt 7830 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11655, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45301, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27625, stateTaxDue: makeFromInt 9308 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146911, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50091, stateTaxDue: makeFromInt 12091 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79786, itemizedDeductions: makeFromInt 239, federalTaxDue: makeFromInt 8484, stateTaxDue: makeFromInt 3518 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18600, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16358, itemizedDeductions: makeFromInt 20253, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 402 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31058, qualifiedIncome: makeFromInt 63572, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6546, stateTaxDue: makeFromInt 4479 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55911, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18943, stateTaxDue: makeFromInt 7341 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9061, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4801, ordinaryIncomeNonSS: makeFromInt 139628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22256, stateTaxDue: makeFromInt 6606 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11268, itemizedDeductions: makeFromInt 9060, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 108 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37034, ordinaryIncomeNonSS: makeFromInt 140386, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2446, federalTaxDue: makeFromInt 22001, stateTaxDue: makeFromInt 6544 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35040, ordinaryIncomeNonSS: makeFromInt 74619, qualifiedIncome: makeFromInt 47914, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19346, stateTaxDue: makeFromInt 5872 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11283, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15829, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25266, ordinaryIncomeNonSS: makeFromInt 104740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19159, federalTaxDue: makeFromInt 18448, stateTaxDue: makeFromInt 4744 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43872, qualifiedIncome: makeFromInt 37520, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1393, stateTaxDue: makeFromInt 3600 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129043, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23221, stateTaxDue: makeFromInt 6234 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30997, itemizedDeductions: makeFromInt 13464, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6571, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25918, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35990, ordinaryIncomeNonSS: makeFromInt 122675, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33054, stateTaxDue: makeFromInt 6032 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58647, itemizedDeductions: makeFromInt 1021, federalTaxDue: makeFromInt 4475, stateTaxDue: makeFromInt 2440 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19640, federalTaxDue: makeFromInt 23581, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26747, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5643, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46003, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 751, federalTaxDue: makeFromInt 2488, stateTaxDue: makeFromInt 1725 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17510, ordinaryIncomeNonSS: makeFromInt 64758, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13049, stateTaxDue: makeFromInt 3078 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19885, ordinaryIncomeNonSS: makeFromInt 82262, qualifiedIncome: makeFromInt 8006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9020, stateTaxDue: makeFromInt 3951 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44998, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97375, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9975, stateTaxDue: makeFromInt 4414 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99460, qualifiedIncome: makeFromInt 18897, itemizedDeductions: makeFromInt 20587, federalTaxDue: makeFromInt 15494, stateTaxDue: makeFromInt 5663 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25261, ordinaryIncomeNonSS: makeFromInt 63550, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23289, stateTaxDue: makeFromInt 7892 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3591, ordinaryIncomeNonSS: makeFromInt 130328, qualifiedIncome: makeFromInt 55967, itemizedDeductions: makeFromInt 9075, federalTaxDue: makeFromInt 23417, stateTaxDue: makeFromInt 8640 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42912, ordinaryIncomeNonSS: makeFromInt 32946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2661, stateTaxDue: makeFromInt 1272 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22092, ordinaryIncomeNonSS: makeFromInt 85405, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11638, stateTaxDue: makeFromInt 3895 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16844, ordinaryIncomeNonSS: makeFromInt 102292, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25771, stateTaxDue: makeFromInt 9569 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7712, ordinaryIncomeNonSS: makeFromInt 62713, qualifiedIncome: makeFromInt 60834, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6116, stateTaxDue: makeFromInt 5502 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5416, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34698, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29750, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43171, ordinaryIncomeNonSS: makeFromInt 120602, qualifiedIncome: makeFromInt 55706, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38002, stateTaxDue: makeFromInt 8563 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30102, stateTaxDue: makeFromInt 9035 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1578, ordinaryIncomeNonSS: makeFromInt 23659, qualifiedIncome: makeFromInt 89748, itemizedDeductions: makeFromInt 12048, federalTaxDue: makeFromInt 4255, stateTaxDue: makeFromInt 5335 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13357, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5332 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43015, qualifiedIncome: makeFromInt 96412, itemizedDeductions: makeFromInt 616, federalTaxDue: makeFromInt 24929, stateTaxDue: makeFromInt 6682 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32459, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99577, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3642, stateTaxDue: makeFromInt 4426 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14016, ordinaryIncomeNonSS: makeFromInt 55914, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23076, federalTaxDue: makeFromInt 5462, stateTaxDue: makeFromInt 2341 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47329, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71693, itemizedDeductions: makeFromInt 15578, federalTaxDue: makeFromInt 3231, stateTaxDue: makeFromInt 3004 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30265, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10462, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13553, qualifiedIncome: makeFromInt 81300, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3825, stateTaxDue: makeFromInt 4168 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31870, ordinaryIncomeNonSS: makeFromInt 18085, qualifiedIncome: makeFromInt 63577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10581, stateTaxDue: makeFromInt 3628 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13201, qualifiedIncome: makeFromInt 52008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2866, stateTaxDue: makeFromInt 3101 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1852 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17306, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 658 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86083, qualifiedIncome: makeFromInt 15104, itemizedDeductions: makeFromInt 18101, federalTaxDue: makeFromInt 20562, stateTaxDue: makeFromInt 4732 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14365, ordinaryIncomeNonSS: makeFromInt 61691, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17421, federalTaxDue: makeFromInt 6124, stateTaxDue: makeFromInt 2510 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45321, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17291, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22204, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 229 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39228, ordinaryIncomeNonSS: makeFromInt 33567, qualifiedIncome: makeFromInt 18240, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3576, stateTaxDue: makeFromInt 1989 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135278, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39917, stateTaxDue: makeFromInt 6675 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41821, ordinaryIncomeNonSS: makeFromInt 45857, qualifiedIncome: makeFromInt 44753, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13974, stateTaxDue: makeFromInt 4070 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36058, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5760, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13041, ordinaryIncomeNonSS: makeFromInt 88459, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14969, federalTaxDue: makeFromInt 14223, stateTaxDue: makeFromInt 4168 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4938, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45790, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2769, ordinaryIncomeNonSS: makeFromInt 47449, qualifiedIncome: makeFromInt 92092, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16108, stateTaxDue: makeFromInt 6522 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9111, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61622, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2466 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82587, itemizedDeductions: makeFromInt 28858, federalTaxDue: makeFromInt 3491, stateTaxDue: makeFromInt 3763 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116920, qualifiedIncome: makeFromInt 33032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25145, stateTaxDue: makeFromInt 7301 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93512, itemizedDeductions: makeFromInt 7257, federalTaxDue: makeFromInt 6407, stateTaxDue: makeFromInt 4422 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93623, qualifiedIncome: makeFromInt 33454, itemizedDeductions: makeFromInt 24811, federalTaxDue: makeFromInt 24631, stateTaxDue: makeFromInt 5930 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5692, ordinaryIncomeNonSS: makeFromInt 134183, qualifiedIncome: makeFromInt 11104, itemizedDeductions: makeFromInt 25279, federalTaxDue: makeFromInt 19336, stateTaxDue: makeFromInt 6859 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13298, ordinaryIncomeNonSS: makeFromInt 107472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13095, federalTaxDue: makeFromInt 16272, stateTaxDue: makeFromInt 4999 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11009, ordinaryIncomeNonSS: makeFromInt 114501, qualifiedIncome: makeFromInt 70044, itemizedDeductions: makeFromInt 14037, federalTaxDue: makeFromInt 28671, stateTaxDue: makeFromInt 8983 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59471, itemizedDeductions: makeFromInt 7424, federalTaxDue: makeFromInt 7509, stateTaxDue: makeFromInt 2686 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113327, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28518, federalTaxDue: makeFromInt 27359, stateTaxDue: makeFromInt 10291 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33358, qualifiedIncome: makeFromInt 68271, itemizedDeductions: makeFromInt 21621, federalTaxDue: makeFromInt 8214, stateTaxDue: makeFromInt 4530 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28185, ordinaryIncomeNonSS: makeFromInt 73385, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2934, federalTaxDue: makeFromInt 12003, stateTaxDue: makeFromInt 3396 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16613, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39360, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30257, ordinaryIncomeNonSS: makeFromInt 26271, qualifiedIncome: makeFromInt 87211, itemizedDeductions: makeFromInt 16699, federalTaxDue: makeFromInt 13185, stateTaxDue: makeFromInt 5099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45572, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6981, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34038, ordinaryIncomeNonSS: makeFromInt 40517, qualifiedIncome: makeFromInt 62124, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6358, stateTaxDue: makeFromInt 4657 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 476, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14958, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 73 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85588, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14322, stateTaxDue: makeFromInt 3824 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14483, ordinaryIncomeNonSS: makeFromInt 96681, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25659, federalTaxDue: makeFromInt 21702, stateTaxDue: makeFromInt 9378 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35823, qualifiedIncome: makeFromInt 38568, itemizedDeductions: makeFromInt 3526, federalTaxDue: makeFromInt 5351, stateTaxDue: makeFromInt 3465 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85886, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35083, stateTaxDue: makeFromInt 11339 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50916, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18185, federalTaxDue: makeFromInt 3839, stateTaxDue: makeFromInt 2372 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28934, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 972 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48703, ordinaryIncomeNonSS: makeFromInt 83675, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12150, stateTaxDue: makeFromInt 3509 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47155, ordinaryIncomeNonSS: makeFromInt 106314, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16876, federalTaxDue: makeFromInt 16398, stateTaxDue: makeFromInt 4641 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66792, qualifiedIncome: makeFromInt 40147, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8664, stateTaxDue: makeFromInt 4772 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1945, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137192, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4886, federalTaxDue: makeFromInt 25258, stateTaxDue: makeFromInt 6650 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6687, qualifiedIncome: makeFromInt 88564, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7033, stateTaxDue: makeFromInt 4508 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17623, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4661, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90341, itemizedDeductions: makeFromInt 20378, federalTaxDue: makeFromInt 4589, stateTaxDue: makeFromInt 4142 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108849, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26420, federalTaxDue: makeFromInt 22319, stateTaxDue: makeFromInt 4867 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37016, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1176 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33874, itemizedDeductions: makeFromInt 29139, federalTaxDue: makeFromInt 23251, stateTaxDue: makeFromInt 8519 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11072, qualifiedIncome: makeFromInt 80554, itemizedDeductions: makeFromInt 1510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4106 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29863, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16272, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45740, ordinaryIncomeNonSS: makeFromInt 60335, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12093, stateTaxDue: makeFromInt 2628 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19254, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36721, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41833, ordinaryIncomeNonSS: makeFromInt 47805, qualifiedIncome: makeFromInt 19896, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11206, stateTaxDue: makeFromInt 3010 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1977, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95248, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6727, stateTaxDue: makeFromInt 4307 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40149, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59109, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 936, stateTaxDue: makeFromInt 2381 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 360, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76620, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8068, stateTaxDue: makeFromInt 3459 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17306, ordinaryIncomeNonSS: makeFromInt 42065, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4070, stateTaxDue: makeFromInt 1717 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12057, ordinaryIncomeNonSS: makeFromInt 105060, qualifiedIncome: makeFromInt 55073, itemizedDeductions: makeFromInt 9887, federalTaxDue: makeFromInt 27181, stateTaxDue: makeFromInt 7663 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35260, ordinaryIncomeNonSS: makeFromInt 56248, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22569, federalTaxDue: makeFromInt 21621, stateTaxDue: makeFromInt 7540 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34554, qualifiedIncome: makeFromInt 69815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4486, stateTaxDue: makeFromInt 4843 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82840, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18715, stateTaxDue: makeFromInt 3776 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40555, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18666, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10498, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18474, itemizedDeductions: makeFromInt 13072, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 493 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11684, itemizedDeductions: makeFromInt 5662, federalTaxDue: makeFromInt 18944, stateTaxDue: makeFromInt 7409 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34581, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28744, qualifiedIncome: makeFromInt 70040, itemizedDeductions: makeFromInt 18247, federalTaxDue: makeFromInt 4859, stateTaxDue: makeFromInt 4610 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25416, ordinaryIncomeNonSS: makeFromInt 20649, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 829 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32710, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39883, itemizedDeductions: makeFromInt 1852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1519 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77335, itemizedDeductions: makeFromInt 11143, federalTaxDue: makeFromInt 51639, stateTaxDue: makeFromInt 11247 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38555, ordinaryIncomeNonSS: makeFromInt 59644, qualifiedIncome: makeFromInt 33386, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8249, stateTaxDue: makeFromInt 3977 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20426, federalTaxDue: makeFromInt 24498, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13713, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27279, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58645, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4762, federalTaxDue: makeFromInt 4933, stateTaxDue: makeFromInt 2477 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42266, ordinaryIncomeNonSS: makeFromInt 93488, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26458, federalTaxDue: makeFromInt 32347, stateTaxDue: makeFromInt 9299 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16968, qualifiedIncome: makeFromInt 59869, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4432, stateTaxDue: makeFromInt 3490 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97615, itemizedDeductions: makeFromInt 27230, federalTaxDue: makeFromInt 2140, stateTaxDue: makeFromInt 4406 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108598, qualifiedIncome: makeFromInt 41780, itemizedDeductions: makeFromInt 16743, federalTaxDue: makeFromInt 19761, stateTaxDue: makeFromInt 7220 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8504, federalTaxDue: makeFromInt 10575, stateTaxDue: makeFromInt 3880 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24506, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27278, stateTaxDue: makeFromInt 7687 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45845, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1889 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20823, ordinaryIncomeNonSS: makeFromInt 140096, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24229, stateTaxDue: makeFromInt 6430 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89680, itemizedDeductions: makeFromInt 1414, federalTaxDue: makeFromInt 4490, stateTaxDue: makeFromInt 4109 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40584, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8717, ordinaryIncomeNonSS: makeFromInt 6540, qualifiedIncome: makeFromInt 72517, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3318, stateTaxDue: makeFromInt 3481 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48194, ordinaryIncomeNonSS: makeFromInt 1052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22026, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1326, qualifiedIncome: makeFromInt 75538, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12011, stateTaxDue: makeFromInt 3388 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3811, ordinaryIncomeNonSS: makeFromInt 139730, qualifiedIncome: makeFromInt 31613, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34912, stateTaxDue: makeFromInt 8514 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20542, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39272, itemizedDeductions: makeFromInt 4724, federalTaxDue: makeFromInt 36682, stateTaxDue: makeFromInt 9009 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94551, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22088, stateTaxDue: makeFromInt 9473 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55135, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3659, stateTaxDue: makeFromInt 2587 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50413, qualifiedIncome: makeFromInt 4951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2121, stateTaxDue: makeFromInt 2093 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17269, ordinaryIncomeNonSS: makeFromInt 31386, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16675, federalTaxDue: makeFromInt 2089, stateTaxDue: makeFromInt 1194 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25027, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 494 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7063, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46153, itemizedDeductions: makeFromInt 17589, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1633 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91690, qualifiedIncome: makeFromInt 60946, itemizedDeductions: makeFromInt 2004, federalTaxDue: makeFromInt 12187, stateTaxDue: makeFromInt 6957 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48171, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4388, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45585, ordinaryIncomeNonSS: makeFromInt 78106, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18903, federalTaxDue: makeFromInt 32798, stateTaxDue: makeFromInt 8859 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10829, itemizedDeductions: makeFromInt 23376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72549, itemizedDeductions: makeFromInt 8432, federalTaxDue: makeFromInt 8916, stateTaxDue: makeFromInt 3272 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23584, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98443, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2954, stateTaxDue: makeFromInt 4527 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9086, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51963, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1734, stateTaxDue: makeFromInt 2143 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21359, itemizedDeductions: makeFromInt 22156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 393 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35262, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12230, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28674, federalTaxDue: makeFromInt 23461, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41610, ordinaryIncomeNonSS: makeFromInt 121751, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24969, stateTaxDue: makeFromInt 5513 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4060, federalTaxDue: makeFromInt 13566, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41947, qualifiedIncome: makeFromInt 48805, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15342, stateTaxDue: makeFromInt 4078 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16752, ordinaryIncomeNonSS: makeFromInt 25097, qualifiedIncome: makeFromInt 18159, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2616, stateTaxDue: makeFromInt 1908 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75352, itemizedDeductions: makeFromInt 5692, federalTaxDue: makeFromInt 5070, stateTaxDue: makeFromInt 3513 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9465, qualifiedIncome: makeFromInt 94333, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8360, stateTaxDue: makeFromInt 4865 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4948, qualifiedIncome: makeFromInt 91163, itemizedDeductions: makeFromInt 11448, federalTaxDue: makeFromInt 4712, stateTaxDue: makeFromInt 4231 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135447, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15288, federalTaxDue: makeFromInt 21085, stateTaxDue: makeFromInt 6357 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123014, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21714, stateTaxDue: makeFromInt 5927 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24060, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14473, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33813, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15539, federalTaxDue: makeFromInt 33063, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8909, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45024, itemizedDeductions: makeFromInt 12985, federalTaxDue: makeFromInt 1525, stateTaxDue: makeFromInt 1949 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42388, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47869, ordinaryIncomeNonSS: makeFromInt 139109, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50946, stateTaxDue: makeFromInt 11766 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27332, ordinaryIncomeNonSS: makeFromInt 28064, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2592, stateTaxDue: makeFromInt 1148 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65877, qualifiedIncome: makeFromInt 59083, itemizedDeductions: makeFromInt 2702, federalTaxDue: makeFromInt 11283, stateTaxDue: makeFromInt 5924 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20424, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3992, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 5646 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12067, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70386, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31042, stateTaxDue: makeFromInt 10544 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19404, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41772, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7804, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5031, ordinaryIncomeNonSS: makeFromInt 89659, qualifiedIncome: makeFromInt 69207, itemizedDeductions: makeFromInt 23948, federalTaxDue: makeFromInt 21163, stateTaxDue: makeFromInt 7755 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3410, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38263, ordinaryIncomeNonSS: makeFromInt 4778, qualifiedIncome: makeFromInt 89266, itemizedDeductions: makeFromInt 25233, federalTaxDue: makeFromInt 2095, stateTaxDue: makeFromInt 4143 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6068, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36802, ordinaryIncomeNonSS: makeFromInt 149958, qualifiedIncome: makeFromInt 4061, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30986, stateTaxDue: makeFromInt 7446 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5003, ordinaryIncomeNonSS: makeFromInt 29689, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 861 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49185, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19042, federalTaxDue: makeFromInt 35741, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23892, ordinaryIncomeNonSS: makeFromInt 61755, qualifiedIncome: makeFromInt 38709, itemizedDeductions: makeFromInt 11285, federalTaxDue: makeFromInt 15714, stateTaxDue: makeFromInt 4768 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30465, ordinaryIncomeNonSS: makeFromInt 125186, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25892, stateTaxDue: makeFromInt 6004 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13746, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8864, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17671, ordinaryIncomeNonSS: makeFromInt 112628, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25892, stateTaxDue: makeFromInt 10191 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144924, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45717, stateTaxDue: makeFromInt 12267 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89291, qualifiedIncome: makeFromInt 60513, itemizedDeductions: makeFromInt 9903, federalTaxDue: makeFromInt 14745, stateTaxDue: makeFromInt 7191 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69867, itemizedDeductions: makeFromInt 23001, federalTaxDue: makeFromInt 3048, stateTaxDue: makeFromInt 3114 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5004, ordinaryIncomeNonSS: makeFromInt 41405, qualifiedIncome: makeFromInt 37091, itemizedDeductions: makeFromInt 22041, federalTaxDue: makeFromInt 5027, stateTaxDue: makeFromInt 3470 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31100, ordinaryIncomeNonSS: makeFromInt 109610, qualifiedIncome: makeFromInt 26889, itemizedDeductions: makeFromInt 20325, federalTaxDue: makeFromInt 25206, stateTaxDue: makeFromInt 6570 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46858, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39959, stateTaxDue: makeFromInt 11494 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21177, ordinaryIncomeNonSS: makeFromInt 40298, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4892, stateTaxDue: makeFromInt 1560 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29667, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19124, itemizedDeductions: makeFromInt 9622, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 481 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27031, federalTaxDue: makeFromInt 46507, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28263, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27778, ordinaryIncomeNonSS: makeFromInt 11047, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7086, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 97 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36686, ordinaryIncomeNonSS: makeFromInt 109058, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11175, federalTaxDue: makeFromInt 36424, stateTaxDue: makeFromInt 10078 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43794, itemizedDeductions: makeFromInt 16410, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1767 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37735, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3215, stateTaxDue: makeFromInt 1212 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102326, qualifiedIncome: makeFromInt 52959, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13861, stateTaxDue: makeFromInt 7289 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6511, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121398, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31225, stateTaxDue: makeFromInt 10863 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42585, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2951, federalTaxDue: makeFromInt 3362, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7816, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85137, qualifiedIncome: makeFromInt 23519, itemizedDeductions: makeFromInt 25566, federalTaxDue: makeFromInt 12251, stateTaxDue: makeFromInt 4978 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12106, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 725, stateTaxDue: makeFromInt 189 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41284, ordinaryIncomeNonSS: makeFromInt 138720, qualifiedIncome: makeFromInt 1407, itemizedDeductions: makeFromInt 16987, federalTaxDue: makeFromInt 24288, stateTaxDue: makeFromInt 6531 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46683, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19726, stateTaxDue: makeFromInt 7256 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20399, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16144, ordinaryIncomeNonSS: makeFromInt 146653, qualifiedIncome: makeFromInt 55391, itemizedDeductions: makeFromInt 27057, federalTaxDue: makeFromInt 29356, stateTaxDue: makeFromInt 9759 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55178, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2084 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119102, qualifiedIncome: makeFromInt 58670, itemizedDeductions: makeFromInt 621, federalTaxDue: makeFromInt 33943, stateTaxDue: makeFromInt 8514 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135685, qualifiedIncome: makeFromInt 50065, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39521, stateTaxDue: makeFromInt 8922 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20535, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96625, itemizedDeductions: makeFromInt 15028, federalTaxDue: makeFromInt 9194, stateTaxDue: makeFromInt 4657 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30312, ordinaryIncomeNonSS: makeFromInt 142739, qualifiedIncome: makeFromInt 21444, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32723, stateTaxDue: makeFromInt 7925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45998, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85728, itemizedDeductions: makeFromInt 16729, federalTaxDue: makeFromInt 50382, stateTaxDue: makeFromInt 11675 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46048, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90741, itemizedDeductions: makeFromInt 28501, federalTaxDue: makeFromInt 3769, stateTaxDue: makeFromInt 4062 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42699, qualifiedIncome: makeFromInt 6891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14643, stateTaxDue: makeFromInt 2305 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28611, federalTaxDue: makeFromInt 23632, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11462, ordinaryIncomeNonSS: makeFromInt 101308, qualifiedIncome: makeFromInt 14155, itemizedDeductions: makeFromInt 10529, federalTaxDue: makeFromInt 18408, stateTaxDue: makeFromInt 5318 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24790, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19646, ordinaryIncomeNonSS: makeFromInt 97663, qualifiedIncome: makeFromInt 81592, itemizedDeductions: makeFromInt 12612, federalTaxDue: makeFromInt 30833, stateTaxDue: makeFromInt 8628 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34165, ordinaryIncomeNonSS: makeFromInt 615, qualifiedIncome: makeFromInt 60580, itemizedDeductions: makeFromInt 5379, federalTaxDue: makeFromInt 46, stateTaxDue: makeFromInt 2385 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68689, qualifiedIncome: makeFromInt 71144, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11841, stateTaxDue: makeFromInt 6417 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3518, ordinaryIncomeNonSS: makeFromInt 127130, qualifiedIncome: makeFromInt 37337, itemizedDeductions: makeFromInt 20041, federalTaxDue: makeFromInt 19600, stateTaxDue: makeFromInt 7735 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6710, ordinaryIncomeNonSS: makeFromInt 28240, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10699, federalTaxDue: makeFromInt 1856, stateTaxDue: makeFromInt 1093 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31150, itemizedDeductions: makeFromInt 6104, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1303 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36099, itemizedDeductions: makeFromInt 2858, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1130 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48618, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27320, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105363, qualifiedIncome: makeFromInt 94549, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29216, stateTaxDue: makeFromInt 9541 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12808, ordinaryIncomeNonSS: makeFromInt 100859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9877, federalTaxDue: makeFromInt 14585, stateTaxDue: makeFromInt 4468 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141501, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8478, federalTaxDue: makeFromInt 41335, stateTaxDue: makeFromInt 11970 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36207, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71772, itemizedDeductions: makeFromInt 9492, federalTaxDue: makeFromInt 9855, stateTaxDue: makeFromInt 3232 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57739, itemizedDeductions: makeFromInt 24563, federalTaxDue: makeFromInt 771, stateTaxDue: makeFromInt 2572 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14394, ordinaryIncomeNonSS: makeFromInt 101909, qualifiedIncome: makeFromInt 42941, itemizedDeductions: makeFromInt 23032, federalTaxDue: makeFromInt 15477, stateTaxDue: makeFromInt 6735 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10920, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16002, itemizedDeductions: makeFromInt 12514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 367 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47246, ordinaryIncomeNonSS: makeFromInt 43394, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7788, federalTaxDue: makeFromInt 22848, stateTaxDue: makeFromInt 6864 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10968, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90923, itemizedDeductions: makeFromInt 22245, federalTaxDue: makeFromInt 36938, stateTaxDue: makeFromInt 11671 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88621, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17827, stateTaxDue: makeFromInt 4056 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19188, ordinaryIncomeNonSS: makeFromInt 32376, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24772, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 998 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17892, ordinaryIncomeNonSS: makeFromInt 95229, qualifiedIncome: makeFromInt 93609, itemizedDeductions: makeFromInt 23584, federalTaxDue: makeFromInt 29040, stateTaxDue: makeFromInt 9284 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6698, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89859, itemizedDeductions: makeFromInt 24889, federalTaxDue: makeFromInt 5859, stateTaxDue: makeFromInt 4236 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5144, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85389, itemizedDeductions: makeFromInt 3628, federalTaxDue: makeFromInt 7161, stateTaxDue: makeFromInt 3926 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48732, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80693, itemizedDeductions: makeFromInt 6550, federalTaxDue: makeFromInt 7512, stateTaxDue: makeFromInt 3565 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26397, ordinaryIncomeNonSS: makeFromInt 30324, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15841, federalTaxDue: makeFromInt 2118, stateTaxDue: makeFromInt 1141 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44475, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14111, federalTaxDue: makeFromInt 6234, stateTaxDue: makeFromInt 6715 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41960, itemizedDeductions: makeFromInt 6726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1793 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10690, ordinaryIncomeNonSS: makeFromInt 135919, qualifiedIncome: makeFromInt 20, itemizedDeductions: makeFromInt 3393, federalTaxDue: makeFromInt 30743, stateTaxDue: makeFromInt 6708 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17015, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3451, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3691, federalTaxDue: makeFromInt 3140, stateTaxDue: makeFromInt 1997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7447, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10922, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4998, ordinaryIncomeNonSS: makeFromInt 124054, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34371, stateTaxDue: makeFromInt 11080 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28300, ordinaryIncomeNonSS: makeFromInt 4958, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15097, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4802 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43313, ordinaryIncomeNonSS: makeFromInt 116588, qualifiedIncome: makeFromInt 53695, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27641, stateTaxDue: makeFromInt 8039 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20797, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104176, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17224, federalTaxDue: makeFromInt 12268, stateTaxDue: makeFromInt 4864 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80691, itemizedDeductions: makeFromInt 26574, federalTaxDue: makeFromInt 3141, stateTaxDue: makeFromInt 3660 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1068 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36994, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8571, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51083, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2558, stateTaxDue: makeFromInt 2079 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46700, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25924, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46836, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50587, itemizedDeductions: makeFromInt 26871, federalTaxDue: makeFromInt 38488, stateTaxDue: makeFromInt 9654 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24782, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1090, stateTaxDue: makeFromInt 984 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3720, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34150, ordinaryIncomeNonSS: makeFromInt 130602, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11758, federalTaxDue: makeFromInt 27943, stateTaxDue: makeFromInt 6275 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10760, qualifiedIncome: makeFromInt 85320, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4129 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6617, qualifiedIncome: makeFromInt 12919, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 722 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43809, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15429, federalTaxDue: makeFromInt 3153, stateTaxDue: makeFromInt 1935 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35186, ordinaryIncomeNonSS: makeFromInt 127759, qualifiedIncome: makeFromInt 15064, itemizedDeductions: makeFromInt 670, federalTaxDue: makeFromInt 28450, stateTaxDue: makeFromInt 6667 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39531, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3913, stateTaxDue: makeFromInt 1792 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97695, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21636, federalTaxDue: makeFromInt 12041, stateTaxDue: makeFromInt 4630 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13891, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14544, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 313 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34664, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45183, itemizedDeductions: makeFromInt 20736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1652 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29101, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31569, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86475, qualifiedIncome: makeFromInt 43806, itemizedDeductions: makeFromInt 25983, federalTaxDue: makeFromInt 14227, stateTaxDue: makeFromInt 6139 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12266, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5759, federalTaxDue: makeFromInt 20972, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16999, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15482, itemizedDeductions: makeFromInt 4431, federalTaxDue: makeFromInt 34933, stateTaxDue: makeFromInt 8093 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136303, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16013, federalTaxDue: makeFromInt 19071, stateTaxDue: makeFromInt 6440 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1302, qualifiedIncome: makeFromInt 65218, itemizedDeductions: makeFromInt 23544, federalTaxDue: makeFromInt 2223, stateTaxDue: makeFromInt 3046 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14404, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41587, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96607, qualifiedIncome: makeFromInt 32307, itemizedDeductions: makeFromInt 24728, federalTaxDue: makeFromInt 12972, stateTaxDue: makeFromInt 6126 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82967, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18760, federalTaxDue: makeFromInt 23564, stateTaxDue: makeFromInt 8896 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43672, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63736, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 427, stateTaxDue: makeFromInt 2598 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12226, ordinaryIncomeNonSS: makeFromInt 49906, qualifiedIncome: makeFromInt 3809, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5699, stateTaxDue: makeFromInt 2431 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20801, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1569, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20215, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12005, federalTaxDue: makeFromInt 4596, stateTaxDue: makeFromInt 5682 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24914, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1947 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4734, ordinaryIncomeNonSS: makeFromInt 14645, qualifiedIncome: makeFromInt 16246, itemizedDeductions: makeFromInt 11959, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 923 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15540, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44146, stateTaxDue: makeFromInt 12526 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19094, ordinaryIncomeNonSS: makeFromInt 135597, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19080, stateTaxDue: makeFromInt 6105 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44515, itemizedDeductions: makeFromInt 18049, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33693, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12067, federalTaxDue: makeFromInt 4402, stateTaxDue: makeFromInt 1270 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21281, ordinaryIncomeNonSS: makeFromInt 65251, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21776, federalTaxDue: makeFromInt 7053, stateTaxDue: makeFromInt 2688 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32466, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73839, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39899, stateTaxDue: makeFromInt 10737 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24162, itemizedDeductions: makeFromInt 26966, federalTaxDue: makeFromInt 39233, stateTaxDue: makeFromInt 8535 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17096, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14529, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44279, itemizedDeductions: makeFromInt 6909, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1605 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40544, ordinaryIncomeNonSS: makeFromInt 78205, qualifiedIncome: makeFromInt 11094, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12129, stateTaxDue: makeFromInt 3790 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48136, ordinaryIncomeNonSS: makeFromInt 47000, qualifiedIncome: makeFromInt 65368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22744, stateTaxDue: makeFromInt 5384 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23184, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5854 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57689, qualifiedIncome: makeFromInt 26870, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11636, stateTaxDue: makeFromInt 4088 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113009, qualifiedIncome: makeFromInt 86943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30427, stateTaxDue: makeFromInt 9769 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31386, ordinaryIncomeNonSS: makeFromInt 109830, qualifiedIncome: makeFromInt 79742, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29317, stateTaxDue: makeFromInt 9104 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28303, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2229, stateTaxDue: makeFromInt 1219 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18279, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29494, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1000 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24481, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12217, federalTaxDue: makeFromInt 36309, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22536, ordinaryIncomeNonSS: makeFromInt 3962, qualifiedIncome: makeFromInt 61061, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3512, stateTaxDue: makeFromInt 2888 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45415, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18138, federalTaxDue: makeFromInt 3963, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137404, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2505, federalTaxDue: makeFromInt 38578, stateTaxDue: makeFromInt 11415 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56145, qualifiedIncome: makeFromInt 47560, itemizedDeductions: makeFromInt 29701, federalTaxDue: makeFromInt 5630, stateTaxDue: makeFromInt 4942 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18248, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141349, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21185, federalTaxDue: makeFromInt 31375, stateTaxDue: makeFromInt 6692 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26040, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 711 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75878, qualifiedIncome: makeFromInt 45245, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5562, stateTaxDue: makeFromInt 5381 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6230, ordinaryIncomeNonSS: makeFromInt 1689, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2685, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4409 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20742, federalTaxDue: makeFromInt 35459, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31123, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 406, federalTaxDue: makeFromInt 13167, stateTaxDue: makeFromInt 6081 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14001, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30316, qualifiedIncome: makeFromInt 10811, itemizedDeductions: makeFromInt 25214, federalTaxDue: makeFromInt 5368, stateTaxDue: makeFromInt 1873 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29659, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67111, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4007, stateTaxDue: makeFromInt 2901 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42691, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36599, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104181, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9269, stateTaxDue: makeFromInt 4615 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21759, itemizedDeductions: makeFromInt 12033, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 457 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6518, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41684, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12505, ordinaryIncomeNonSS: makeFromInt 88386, qualifiedIncome: makeFromInt 64920, itemizedDeductions: makeFromInt 553, federalTaxDue: makeFromInt 23626, stateTaxDue: makeFromInt 7390 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24857, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72430, itemizedDeductions: makeFromInt 1818, federalTaxDue: makeFromInt 38293, stateTaxDue: makeFromInt 10547 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18770, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63585, qualifiedIncome: makeFromInt 16680, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11537, stateTaxDue: makeFromInt 3869 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46687, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13167, ordinaryIncomeNonSS: makeFromInt 116839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17363, stateTaxDue: makeFromInt 5587 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18986, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20936, federalTaxDue: makeFromInt 23150, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23157, ordinaryIncomeNonSS: makeFromInt 102311, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15850, federalTaxDue: makeFromInt 32245, stateTaxDue: makeFromInt 9889 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4599, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94815, qualifiedIncome: makeFromInt 89838, itemizedDeductions: makeFromInt 11414, federalTaxDue: makeFromInt 18791, stateTaxDue: makeFromInt 8558 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34469, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35206, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59592, qualifiedIncome: makeFromInt 22295, itemizedDeductions: makeFromInt 27819, federalTaxDue: makeFromInt 3499, stateTaxDue: makeFromInt 3719 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9190, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14889, federalTaxDue: makeFromInt 21618, stateTaxDue: makeFromInt 4553 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4887, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89646, itemizedDeductions: makeFromInt 25347, federalTaxDue: makeFromInt 5534, stateTaxDue: makeFromInt 4184 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17376, ordinaryIncomeNonSS: makeFromInt 145235, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44109, stateTaxDue: makeFromInt 11807 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1033 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30500, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1005 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26164, ordinaryIncomeNonSS: makeFromInt 75930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8850, stateTaxDue: makeFromInt 3220 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38583, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63019, itemizedDeductions: makeFromInt 12772, federalTaxDue: makeFromInt 38439, stateTaxDue: makeFromInt 10211 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90837, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8702, stateTaxDue: makeFromInt 3967 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37323, ordinaryIncomeNonSS: makeFromInt 40614, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9833, stateTaxDue: makeFromInt 1847 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7431, itemizedDeductions: makeFromInt 18538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 117 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25073, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11292, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46092, ordinaryIncomeNonSS: makeFromInt 71386, qualifiedIncome: makeFromInt 49461, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20451, stateTaxDue: makeFromInt 5787 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37480, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50335, itemizedDeductions: makeFromInt 25037, federalTaxDue: makeFromInt 38587, stateTaxDue: makeFromInt 9762 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25108, ordinaryIncomeNonSS: makeFromInt 124113, qualifiedIncome: makeFromInt 36151, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22320, stateTaxDue: makeFromInt 7538 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19607, itemizedDeductions: makeFromInt 3847, federalTaxDue: makeFromInt 25299, stateTaxDue: makeFromInt 7905 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25555, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16218, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29427, stateTaxDue: makeFromInt 8049 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5133, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10161, ordinaryIncomeNonSS: makeFromInt 100516, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14141, stateTaxDue: makeFromInt 4576 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29217, ordinaryIncomeNonSS: makeFromInt 149260, qualifiedIncome: makeFromInt 37952, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34735, stateTaxDue: makeFromInt 8786 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24751, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26854, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14522, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48329, ordinaryIncomeNonSS: makeFromInt 4133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6221, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22239, ordinaryIncomeNonSS: makeFromInt 14671, qualifiedIncome: makeFromInt 80629, itemizedDeductions: makeFromInt 17511, federalTaxDue: makeFromInt 1755, stateTaxDue: makeFromInt 4090 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27997, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31673, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1187 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18489, ordinaryIncomeNonSS: makeFromInt 103374, qualifiedIncome: makeFromInt 32161, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19731, stateTaxDue: makeFromInt 6322 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16273, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59522, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2587 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18818, ordinaryIncomeNonSS: makeFromInt 95734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23367, federalTaxDue: makeFromInt 27767, stateTaxDue: makeFromInt 9554 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126379, qualifiedIncome: makeFromInt 96844, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31216, stateTaxDue: makeFromInt 10786 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102473, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20956, stateTaxDue: makeFromInt 9649 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42281, ordinaryIncomeNonSS: makeFromInt 91577, qualifiedIncome: makeFromInt 9728, itemizedDeductions: makeFromInt 953, federalTaxDue: makeFromInt 16668, stateTaxDue: makeFromInt 4514 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126962, qualifiedIncome: makeFromInt 19521, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15051, stateTaxDue: makeFromInt 6649 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27537, ordinaryIncomeNonSS: makeFromInt 71889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8066, stateTaxDue: makeFromInt 3019 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15448, itemizedDeductions: makeFromInt 6629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 563 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23941, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 6097 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39981, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23365, itemizedDeductions: makeFromInt 8971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 743 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 161, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34379, stateTaxDue: makeFromInt 12181 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91862, qualifiedIncome: makeFromInt 66571, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28433, stateTaxDue: makeFromInt 7667 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13184, ordinaryIncomeNonSS: makeFromInt 495, qualifiedIncome: makeFromInt 58160, itemizedDeductions: makeFromInt 17649, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2558 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137992, qualifiedIncome: makeFromInt 64273, itemizedDeductions: makeFromInt 17733, federalTaxDue: makeFromInt 41065, stateTaxDue: makeFromInt 9867 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92503, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8228, stateTaxDue: makeFromInt 4493 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4474, ordinaryIncomeNonSS: makeFromInt 130510, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14592, federalTaxDue: makeFromInt 13740, stateTaxDue: makeFromInt 5851 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49557, qualifiedIncome: makeFromInt 10937, itemizedDeductions: makeFromInt 5998, federalTaxDue: makeFromInt 2420, stateTaxDue: makeFromInt 2350 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27786, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23380, ordinaryIncomeNonSS: makeFromInt 74320, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13841, federalTaxDue: makeFromInt 9440, stateTaxDue: makeFromInt 3341 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83271, itemizedDeductions: makeFromInt 26734, federalTaxDue: makeFromInt 4931, stateTaxDue: makeFromInt 3696 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60216, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24036, federalTaxDue: makeFromInt 8905, stateTaxDue: makeFromInt 2520 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20446, qualifiedIncome: makeFromInt 51016, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14309, stateTaxDue: makeFromInt 3298 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 38111, qualifiedIncome: makeFromInt 91791, itemizedDeductions: makeFromInt 29605, federalTaxDue: makeFromInt 9235, stateTaxDue: makeFromInt 6401 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9501, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5510, itemizedDeductions: makeFromInt 23144, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32134, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1088 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126768, qualifiedIncome: makeFromInt 70190, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40043, stateTaxDue: makeFromInt 9494 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149732, qualifiedIncome: makeFromInt 2528, itemizedDeductions: makeFromInt 8326, federalTaxDue: makeFromInt 25102, stateTaxDue: makeFromInt 7316 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47863, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1532, stateTaxDue: makeFromInt 2217 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43846, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2168, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13432, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67780, itemizedDeductions: makeFromInt 533, federalTaxDue: makeFromInt 4729, stateTaxDue: makeFromInt 3232 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49914, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50458, stateTaxDue: makeFromInt 12015 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34800, ordinaryIncomeNonSS: makeFromInt 42596, qualifiedIncome: makeFromInt 71288, itemizedDeductions: makeFromInt 15884, federalTaxDue: makeFromInt 11392, stateTaxDue: makeFromInt 5105 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43968, ordinaryIncomeNonSS: makeFromInt 28774, qualifiedIncome: makeFromInt 33904, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6446, stateTaxDue: makeFromInt 2759 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56893, itemizedDeductions: makeFromInt 27536, federalTaxDue: makeFromInt 662, stateTaxDue: makeFromInt 2453 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13271, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 24 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22860, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 5668 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32754, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20549, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38481, stateTaxDue: makeFromInt 8270 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30223, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73644, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3007 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43155, itemizedDeductions: makeFromInt 5512, federalTaxDue: makeFromInt 473, stateTaxDue: makeFromInt 1903 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9685, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9631, itemizedDeductions: makeFromInt 21073, federalTaxDue: makeFromInt 26680, stateTaxDue: makeFromInt 7407 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15181, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2080, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20166, stateTaxDue: makeFromInt 7129 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6614, ordinaryIncomeNonSS: makeFromInt 121571, qualifiedIncome: makeFromInt 17114, itemizedDeductions: makeFromInt 7520, federalTaxDue: makeFromInt 23442, stateTaxDue: makeFromInt 6645 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122734, qualifiedIncome: makeFromInt 77781, itemizedDeductions: makeFromInt 8934, federalTaxDue: makeFromInt 22860, stateTaxDue: makeFromInt 9351 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43712, ordinaryIncomeNonSS: makeFromInt 28613, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 726, stateTaxDue: makeFromInt 807 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33154, qualifiedIncome: makeFromInt 9264, itemizedDeductions: makeFromInt 10399, federalTaxDue: makeFromInt 2069, stateTaxDue: makeFromInt 1866 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23311, qualifiedIncome: makeFromInt 2410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 811 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10614, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97687, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11114, stateTaxDue: makeFromInt 4429 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 982, ordinaryIncomeNonSS: makeFromInt 64465, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5404, stateTaxDue: makeFromInt 2941 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49969, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23536, federalTaxDue: makeFromInt 13308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42376, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33328, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6146, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 692, ordinaryIncomeNonSS: makeFromInt 51372, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24514, federalTaxDue: makeFromInt 13796, stateTaxDue: makeFromInt 7373 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20532, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3058, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 619 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65604, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3986, stateTaxDue: makeFromInt 2693 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68739, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18770, stateTaxDue: makeFromInt 3159 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129212, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12618, stateTaxDue: makeFromInt 5786 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148735, qualifiedIncome: makeFromInt 99970, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31908, stateTaxDue: makeFromInt 11760 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16920, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89124, qualifiedIncome: makeFromInt 82673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23816, stateTaxDue: makeFromInt 8333 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 48564, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3392, itemizedDeductions: makeFromInt 4564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84649, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6791, stateTaxDue: makeFromInt 4053 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34897, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28246, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8701, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95583, itemizedDeductions: makeFromInt 23304, federalTaxDue: makeFromInt 3042, stateTaxDue: makeFromInt 4222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24063, federalTaxDue: makeFromInt 3248, stateTaxDue: makeFromInt 3094 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133773, qualifiedIncome: makeFromInt 59219, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27188, stateTaxDue: makeFromInt 9195 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33576, ordinaryIncomeNonSS: makeFromInt 84391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21522, federalTaxDue: makeFromInt 11444, stateTaxDue: makeFromInt 3651 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34383, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15085, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61474, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12256, stateTaxDue: makeFromInt 7807 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37348, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34760, ordinaryIncomeNonSS: makeFromInt 10399, qualifiedIncome: makeFromInt 31867, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1438 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46950, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1212, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29981, ordinaryIncomeNonSS: makeFromInt 132870, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39363, stateTaxDue: makeFromInt 11069 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17573, ordinaryIncomeNonSS: makeFromInt 144543, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25655, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26254, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19917, ordinaryIncomeNonSS: makeFromInt 135190, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1115, federalTaxDue: makeFromInt 20065, stateTaxDue: makeFromInt 6242 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28048, ordinaryIncomeNonSS: makeFromInt 27422, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9182, federalTaxDue: makeFromInt 3289, stateTaxDue: makeFromInt 1174 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14672, ordinaryIncomeNonSS: makeFromInt 140466, qualifiedIncome: makeFromInt 9230, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19222, stateTaxDue: makeFromInt 7010 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9809, ordinaryIncomeNonSS: makeFromInt 24531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8270, stateTaxDue: makeFromInt 5800 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12102, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42603, stateTaxDue: makeFromInt 12322 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39793, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28744, federalTaxDue: makeFromInt 1106, stateTaxDue: makeFromInt 1735 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38902, qualifiedIncome: makeFromInt 21780, itemizedDeductions: makeFromInt 15816, federalTaxDue: makeFromInt 9854, stateTaxDue: makeFromInt 2459 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10567, ordinaryIncomeNonSS: makeFromInt 84255, qualifiedIncome: makeFromInt 36577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11380, stateTaxDue: makeFromInt 5510 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45983, ordinaryIncomeNonSS: makeFromInt 144316, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2473, federalTaxDue: makeFromInt 33676, stateTaxDue: makeFromInt 6911 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28239, ordinaryIncomeNonSS: makeFromInt 91326, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2033, federalTaxDue: makeFromInt 22431, stateTaxDue: makeFromInt 4433 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108288, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20569, federalTaxDue: makeFromInt 14606, stateTaxDue: makeFromInt 4959 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39002, itemizedDeductions: makeFromInt 14411, federalTaxDue: makeFromInt 3077, stateTaxDue: makeFromInt 1765 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11886, qualifiedIncome: makeFromInt 845, itemizedDeductions: makeFromInt 21970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 262 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145713, qualifiedIncome: makeFromInt 20121, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24347, stateTaxDue: makeFromInt 7917 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63210, qualifiedIncome: makeFromInt 45769, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8919, stateTaxDue: makeFromInt 5194 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18105, itemizedDeductions: makeFromInt 8416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 699 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146742, qualifiedIncome: makeFromInt 54810, itemizedDeductions: makeFromInt 15496, federalTaxDue: makeFromInt 44836, stateTaxDue: makeFromInt 9823 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73097, qualifiedIncome: makeFromInt 21709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20632, stateTaxDue: makeFromInt 4285 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20026, ordinaryIncomeNonSS: makeFromInt 74091, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7041, federalTaxDue: makeFromInt 12659, stateTaxDue: makeFromInt 3250 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36029, ordinaryIncomeNonSS: makeFromInt 93927, qualifiedIncome: makeFromInt 46687, itemizedDeductions: makeFromInt 6031, federalTaxDue: makeFromInt 27203, stateTaxDue: makeFromInt 6776 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42134, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44583, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1754 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4518, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27229, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21838, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26402, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56722, itemizedDeductions: makeFromInt 25172, federalTaxDue: makeFromInt 948, stateTaxDue: makeFromInt 2342 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131838, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26755, federalTaxDue: makeFromInt 33620, stateTaxDue: makeFromInt 11337 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41916, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4230, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53368, itemizedDeductions: makeFromInt 20537, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1993 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58737, itemizedDeductions: makeFromInt 12963, federalTaxDue: makeFromInt 34152, stateTaxDue: makeFromInt 10197 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47182, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2630, stateTaxDue: makeFromInt 1984 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14761, ordinaryIncomeNonSS: makeFromInt 78387, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7605, stateTaxDue: makeFromInt 3549 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47498, ordinaryIncomeNonSS: makeFromInt 38488, qualifiedIncome: makeFromInt 31257, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15338, stateTaxDue: makeFromInt 3333 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1553, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64085, qualifiedIncome: makeFromInt 86258, itemizedDeductions: makeFromInt 9841, federalTaxDue: makeFromInt 17026, stateTaxDue: makeFromInt 7239 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48496, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27447, itemizedDeductions: makeFromInt 3664, federalTaxDue: makeFromInt 43157, stateTaxDue: makeFromInt 8825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37835, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34167, itemizedDeductions: makeFromInt 2980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1333 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4630, stateTaxDue: makeFromInt 4156 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108653, qualifiedIncome: makeFromInt 48328, itemizedDeductions: makeFromInt 21417, federalTaxDue: makeFromInt 24694, stateTaxDue: makeFromInt 7174 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73542, qualifiedIncome: makeFromInt 95753, itemizedDeductions: makeFromInt 23586, federalTaxDue: makeFromInt 30762, stateTaxDue: makeFromInt 8287 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14955, itemizedDeductions: makeFromInt 20191, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 73 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64625, qualifiedIncome: makeFromInt 78523, itemizedDeductions: makeFromInt 20356, federalTaxDue: makeFromInt 10439, stateTaxDue: makeFromInt 6785 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27891, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45446, itemizedDeductions: makeFromInt 2550, federalTaxDue: makeFromInt 3998, stateTaxDue: makeFromInt 1889 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25157, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18402, federalTaxDue: makeFromInt 27481, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3581, ordinaryIncomeNonSS: makeFromInt 131169, qualifiedIncome: makeFromInt 86003, itemizedDeductions: makeFromInt 21345, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 10484 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31614, qualifiedIncome: makeFromInt 8699, itemizedDeductions: makeFromInt 26651, federalTaxDue: makeFromInt 4036, stateTaxDue: makeFromInt 1441 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78323, qualifiedIncome: makeFromInt 42303, itemizedDeductions: makeFromInt 12426, federalTaxDue: makeFromInt 12500, stateTaxDue: makeFromInt 5703 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19362, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33961, ordinaryIncomeNonSS: makeFromInt 21969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21901, federalTaxDue: makeFromInt 473, stateTaxDue: makeFromInt 774 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25247, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46735, ordinaryIncomeNonSS: makeFromInt 38987, qualifiedIncome: makeFromInt 31080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6255, stateTaxDue: makeFromInt 3028 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8829, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15947, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6671, ordinaryIncomeNonSS: makeFromInt 53914, qualifiedIncome: makeFromInt 47855, itemizedDeductions: makeFromInt 14373, federalTaxDue: makeFromInt 7874, stateTaxDue: makeFromInt 4713 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87085, qualifiedIncome: makeFromInt 28048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12084, stateTaxDue: makeFromInt 5382 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9457, ordinaryIncomeNonSS: makeFromInt 87216, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5920, federalTaxDue: makeFromInt 9674, stateTaxDue: makeFromInt 3986 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4170, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25296, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5045, ordinaryIncomeNonSS: makeFromInt 147389, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3424, federalTaxDue: makeFromInt 28004, stateTaxDue: makeFromInt 7088 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72514, itemizedDeductions: makeFromInt 9527, federalTaxDue: makeFromInt 2507, stateTaxDue: makeFromInt 3251 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20944, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8852, ordinaryIncomeNonSS: makeFromInt 57815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12164, stateTaxDue: makeFromInt 7600 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68689, itemizedDeductions: makeFromInt 26362, federalTaxDue: makeFromInt 1330, stateTaxDue: makeFromInt 2759 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40262, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1758 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83734, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1309, federalTaxDue: makeFromInt 7140, stateTaxDue: makeFromInt 3812 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27604, ordinaryIncomeNonSS: makeFromInt 77898, qualifiedIncome: makeFromInt 21979, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10327, stateTaxDue: makeFromInt 4543 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30730, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36907, stateTaxDue: makeFromInt 9885 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147940, qualifiedIncome: makeFromInt 64198, itemizedDeductions: makeFromInt 7242, federalTaxDue: makeFromInt 40928, stateTaxDue: makeFromInt 10595 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46279, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56066, itemizedDeductions: makeFromInt 13595, federalTaxDue: makeFromInt 40209, stateTaxDue: makeFromInt 9928 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31441, stateTaxDue: makeFromInt 5928 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26080, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38555, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27273, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17580, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68965, itemizedDeductions: makeFromInt 5084, federalTaxDue: makeFromInt 5846, stateTaxDue: makeFromInt 3293 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71412, qualifiedIncome: makeFromInt 97954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20041, stateTaxDue: makeFromInt 7893 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20078, ordinaryIncomeNonSS: makeFromInt 132713, qualifiedIncome: makeFromInt 29033, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25671, stateTaxDue: makeFromInt 7712 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15620, stateTaxDue: makeFromInt 4920 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105228, qualifiedIncome: makeFromInt 73122, itemizedDeductions: makeFromInt 18154, federalTaxDue: makeFromInt 39097, stateTaxDue: makeFromInt 8871 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2788, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65014, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33581, stateTaxDue: makeFromInt 10176 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2947 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120262, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16512, stateTaxDue: makeFromInt 5438 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18137, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27, stateTaxDue: makeFromInt 497 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11920, ordinaryIncomeNonSS: makeFromInt 17445, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 417 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 3551 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5422, qualifiedIncome: makeFromInt 69632, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1482, stateTaxDue: makeFromInt 3378 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128310, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21502, stateTaxDue: makeFromInt 6161 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86747, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3662 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4867, ordinaryIncomeNonSS: makeFromInt 88311, qualifiedIncome: makeFromInt 37985, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14754, stateTaxDue: makeFromInt 5940 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91875, itemizedDeductions: makeFromInt 26340, federalTaxDue: makeFromInt 8134, stateTaxDue: makeFromInt 4257 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43070, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38265, ordinaryIncomeNonSS: makeFromInt 117713, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25689, stateTaxDue: makeFromInt 5431 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19876, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1102 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65522, itemizedDeductions: makeFromInt 29755, federalTaxDue: makeFromInt 31585, stateTaxDue: makeFromInt 10645 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8583, ordinaryIncomeNonSS: makeFromInt 123158, qualifiedIncome: makeFromInt 19609, itemizedDeductions: makeFromInt 7311, federalTaxDue: makeFromInt 29324, stateTaxDue: makeFromInt 7057 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48724, ordinaryIncomeNonSS: makeFromInt 16145, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1048, stateTaxDue: makeFromInt 352 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27518, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26714, federalTaxDue: makeFromInt 27926, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68042, qualifiedIncome: makeFromInt 49998, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11512, stateTaxDue: makeFromInt 5647 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13911, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22457, ordinaryIncomeNonSS: makeFromInt 1197, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2382, ordinaryIncomeNonSS: makeFromInt 46786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1476, stateTaxDue: makeFromInt 1937 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49887, ordinaryIncomeNonSS: makeFromInt 66889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9161, stateTaxDue: makeFromInt 2731 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13426, ordinaryIncomeNonSS: makeFromInt 28776, qualifiedIncome: makeFromInt 11493, itemizedDeductions: makeFromInt 27717, federalTaxDue: makeFromInt 1291, stateTaxDue: makeFromInt 1558 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46878, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7049, stateTaxDue: makeFromInt 4404 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5874, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57541, qualifiedIncome: makeFromInt 23035, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14182, stateTaxDue: makeFromInt 3654 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12864, ordinaryIncomeNonSS: makeFromInt 90817, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15021, stateTaxDue: makeFromInt 4086 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25285, qualifiedIncome: makeFromInt 52554, itemizedDeductions: makeFromInt 7643, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3417 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88489, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22890, federalTaxDue: makeFromInt 11159, stateTaxDue: makeFromInt 4289 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14189, qualifiedIncome: makeFromInt 22685, itemizedDeductions: makeFromInt 5537, federalTaxDue: makeFromInt 1283, stateTaxDue: makeFromInt 1330 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20950, ordinaryIncomeNonSS: makeFromInt 61200, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7783, stateTaxDue: makeFromInt 2545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24984, ordinaryIncomeNonSS: makeFromInt 94932, qualifiedIncome: makeFromInt 92961, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23598, stateTaxDue: makeFromInt 8720 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45020, ordinaryIncomeNonSS: makeFromInt 138441, qualifiedIncome: makeFromInt 24767, itemizedDeductions: makeFromInt 29789, federalTaxDue: makeFromInt 27754, stateTaxDue: makeFromInt 7798 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37779, ordinaryIncomeNonSS: makeFromInt 109881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24324, federalTaxDue: makeFromInt 22415, stateTaxDue: makeFromInt 5125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24786, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45989, ordinaryIncomeNonSS: makeFromInt 130211, qualifiedIncome: makeFromInt 28919, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31328, stateTaxDue: makeFromInt 7382 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10269, federalTaxDue: makeFromInt 3153, stateTaxDue: makeFromInt 2282 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49267, ordinaryIncomeNonSS: makeFromInt 23923, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 995, federalTaxDue: makeFromInt 2178, stateTaxDue: makeFromInt 621 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141646, qualifiedIncome: makeFromInt 38507, itemizedDeductions: makeFromInt 16993, federalTaxDue: makeFromInt 28349, stateTaxDue: makeFromInt 8841 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39185, itemizedDeductions: makeFromInt 29778, federalTaxDue: makeFromInt 28567, stateTaxDue: makeFromInt 9204 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5202, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11738, itemizedDeductions: makeFromInt 13085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 170 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1591, stateTaxDue: makeFromInt 1680 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51731, itemizedDeductions: makeFromInt 18415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1985 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46123, qualifiedIncome: makeFromInt 51777, itemizedDeductions: makeFromInt 10597, federalTaxDue: makeFromInt 4386, stateTaxDue: makeFromInt 4544 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76345, itemizedDeductions: makeFromInt 22042, federalTaxDue: makeFromInt 3892, stateTaxDue: makeFromInt 3547 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80414, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19112, federalTaxDue: makeFromInt 21320, stateTaxDue: makeFromInt 8646 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16226, ordinaryIncomeNonSS: makeFromInt 50995, qualifiedIncome: makeFromInt 48356, itemizedDeductions: makeFromInt 15686, federalTaxDue: makeFromInt 9354, stateTaxDue: makeFromInt 4393 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118140, qualifiedIncome: makeFromInt 67787, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21387, stateTaxDue: makeFromInt 8821 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25374, ordinaryIncomeNonSS: makeFromInt 5256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5548, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29912, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29751, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8877, ordinaryIncomeNonSS: makeFromInt 145468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25633, stateTaxDue: makeFromInt 6970 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6460, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16899, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30454, stateTaxDue: makeFromInt 7890 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27572, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46206, itemizedDeductions: makeFromInt 7133, federalTaxDue: makeFromInt 39263, stateTaxDue: makeFromInt 9355 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41912, ordinaryIncomeNonSS: makeFromInt 7607, qualifiedIncome: makeFromInt 39197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 650, stateTaxDue: makeFromInt 1865 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23491, ordinaryIncomeNonSS: makeFromInt 12290, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7875, federalTaxDue: makeFromInt 7492, stateTaxDue: makeFromInt 5278 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134709, qualifiedIncome: makeFromInt 93178, itemizedDeductions: makeFromInt 14706, federalTaxDue: makeFromInt 30457, stateTaxDue: makeFromInt 10969 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35647, ordinaryIncomeNonSS: makeFromInt 89632, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20330, federalTaxDue: makeFromInt 12984, stateTaxDue: makeFromInt 4122 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72530, qualifiedIncome: makeFromInt 25015, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8962, stateTaxDue: makeFromInt 4502 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88617, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1998, stateTaxDue: makeFromInt 3867 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25582, federalTaxDue: makeFromInt 10905, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10669, ordinaryIncomeNonSS: makeFromInt 20517, qualifiedIncome: makeFromInt 29696, itemizedDeductions: makeFromInt 7372, federalTaxDue: makeFromInt 39, stateTaxDue: makeFromInt 2036 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19368, federalTaxDue: makeFromInt 10608, stateTaxDue: makeFromInt 2233 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46647, ordinaryIncomeNonSS: makeFromInt 80174, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20916, stateTaxDue: makeFromInt 3742 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26827, ordinaryIncomeNonSS: makeFromInt 84880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17253, stateTaxDue: makeFromInt 4104 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98618, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37767, stateTaxDue: makeFromInt 12131 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17500, ordinaryIncomeNonSS: makeFromInt 42562, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2528, federalTaxDue: makeFromInt 4788, stateTaxDue: makeFromInt 1673 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16792, ordinaryIncomeNonSS: makeFromInt 8106, qualifiedIncome: makeFromInt 19647, itemizedDeductions: makeFromInt 16770, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 763 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23704, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6156, ordinaryIncomeNonSS: makeFromInt 101891, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29161, stateTaxDue: makeFromInt 9848 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8359, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50205, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1838, stateTaxDue: makeFromInt 2132 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13755, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93825, itemizedDeductions: makeFromInt 16753, federalTaxDue: makeFromInt 5959, stateTaxDue: makeFromInt 4316 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9199, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42611, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50083, stateTaxDue: makeFromInt 11141 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89412, itemizedDeductions: makeFromInt 12143, federalTaxDue: makeFromInt 5852, stateTaxDue: makeFromInt 4009 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12002, ordinaryIncomeNonSS: makeFromInt 139771, qualifiedIncome: makeFromInt 92289, itemizedDeductions: makeFromInt 567, federalTaxDue: makeFromInt 40144, stateTaxDue: makeFromInt 11348 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7471, ordinaryIncomeNonSS: makeFromInt 99895, qualifiedIncome: makeFromInt 96540, itemizedDeductions: makeFromInt 25358, federalTaxDue: makeFromInt 26393, stateTaxDue: makeFromInt 9447 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82099, itemizedDeductions: makeFromInt 3507, federalTaxDue: makeFromInt 4402, stateTaxDue: makeFromInt 3601 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20803, federalTaxDue: makeFromInt 23542, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42606, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22050, qualifiedIncome: makeFromInt 25144, itemizedDeductions: makeFromInt 17082, federalTaxDue: makeFromInt 5903, stateTaxDue: makeFromInt 1985 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67643, itemizedDeductions: makeFromInt 26297, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2797 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36722, ordinaryIncomeNonSS: makeFromInt 2042, qualifiedIncome: makeFromInt 26595, itemizedDeductions: makeFromInt 25641, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1057 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33927, ordinaryIncomeNonSS: makeFromInt 114106, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10890, federalTaxDue: makeFromInt 26298, stateTaxDue: makeFromInt 5473 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38119, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 898, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96824, itemizedDeductions: makeFromInt 22062, federalTaxDue: makeFromInt 37981, stateTaxDue: makeFromInt 11766 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14396, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126177, qualifiedIncome: makeFromInt 19287, itemizedDeductions: makeFromInt 19549, federalTaxDue: makeFromInt 20080, stateTaxDue: makeFromInt 6970 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 616, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42475, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16043, stateTaxDue: makeFromInt 6869 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49951, ordinaryIncomeNonSS: makeFromInt 111198, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44679, stateTaxDue: makeFromInt 10424 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113476, qualifiedIncome: makeFromInt 66882, itemizedDeductions: makeFromInt 20194, federalTaxDue: makeFromInt 23818, stateTaxDue: makeFromInt 8749 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39156, ordinaryIncomeNonSS: makeFromInt 52993, qualifiedIncome: makeFromInt 15815, itemizedDeductions: makeFromInt 17020, federalTaxDue: makeFromInt 8851, stateTaxDue: makeFromInt 2958 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24541, ordinaryIncomeNonSS: makeFromInt 89679, qualifiedIncome: makeFromInt 48480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20781, stateTaxDue: makeFromInt 6453 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28911, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47610, qualifiedIncome: makeFromInt 61061, itemizedDeductions: makeFromInt 2086, federalTaxDue: makeFromInt 18769, stateTaxDue: makeFromInt 4859 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45589, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21995, federalTaxDue: makeFromInt 12610, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61665, itemizedDeductions: makeFromInt 1847, federalTaxDue: makeFromInt 1495, stateTaxDue: makeFromInt 2798 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7309, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78511, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12013, federalTaxDue: makeFromInt 30401, stateTaxDue: makeFromInt 8351 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20182, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 554 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 119, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31576, stateTaxDue: makeFromInt 7003 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75517, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14682, stateTaxDue: makeFromInt 3201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32937, ordinaryIncomeNonSS: makeFromInt 382, qualifiedIncome: makeFromInt 98702, itemizedDeductions: makeFromInt 19848, federalTaxDue: makeFromInt 7275, stateTaxDue: makeFromInt 4579 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24022, itemizedDeductions: makeFromInt 24549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 746 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13429, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40600, ordinaryIncomeNonSS: makeFromInt 140398, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47285, stateTaxDue: makeFromInt 11765 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11020, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9803, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32276, stateTaxDue: makeFromInt 7415 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49613, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13237, itemizedDeductions: makeFromInt 25448, federalTaxDue: makeFromInt 30081, stateTaxDue: makeFromInt 7672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3447, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23040, itemizedDeductions: makeFromInt 17723, federalTaxDue: makeFromInt 28492, stateTaxDue: makeFromInt 8172 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38766, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97792, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41517, stateTaxDue: makeFromInt 12189 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45593, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9554, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22529, qualifiedIncome: makeFromInt 28384, itemizedDeductions: makeFromInt 4581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2168 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12827, ordinaryIncomeNonSS: makeFromInt 85713, qualifiedIncome: makeFromInt 63296, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15182, stateTaxDue: makeFromInt 7049 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22808, ordinaryIncomeNonSS: makeFromInt 78475, qualifiedIncome: makeFromInt 87573, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19274, stateTaxDue: makeFromInt 7627 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120429, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19254, stateTaxDue: makeFromInt 5713 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9583, ordinaryIncomeNonSS: makeFromInt 8595, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138422, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16131, stateTaxDue: makeFromInt 6446 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22166, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10795, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14347, ordinaryIncomeNonSS: makeFromInt 112138, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16198, stateTaxDue: makeFromInt 5232 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29858, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23484, federalTaxDue: makeFromInt 22160, stateTaxDue: makeFromInt 6751 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48509, ordinaryIncomeNonSS: makeFromInt 56288, qualifiedIncome: makeFromInt 11907, itemizedDeductions: makeFromInt 26322, federalTaxDue: makeFromInt 14344, stateTaxDue: makeFromInt 3254 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 101, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81139, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7383, stateTaxDue: makeFromInt 3552 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19239, ordinaryIncomeNonSS: makeFromInt 124445, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25949, federalTaxDue: makeFromInt 19525, stateTaxDue: makeFromInt 5918 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34319, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20882, federalTaxDue: makeFromInt 29359, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39769, ordinaryIncomeNonSS: makeFromInt 83387, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10119, stateTaxDue: makeFromInt 3494 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149203, qualifiedIncome: makeFromInt 56337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33891, stateTaxDue: makeFromInt 10022 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43262, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88262, itemizedDeductions: makeFromInt 1274, federalTaxDue: makeFromInt 12015, stateTaxDue: makeFromInt 3958 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10812, ordinaryIncomeNonSS: makeFromInt 120788, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20827, stateTaxDue: makeFromInt 5784 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29533, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42127, ordinaryIncomeNonSS: makeFromInt 85492, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13397, federalTaxDue: makeFromInt 37116, stateTaxDue: makeFromInt 9236 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6596, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31558, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14049, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 872, stateTaxDue: makeFromInt 2520 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15445, qualifiedIncome: makeFromInt 37991, itemizedDeductions: makeFromInt 16908, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2276 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30051, ordinaryIncomeNonSS: makeFromInt 140597, qualifiedIncome: makeFromInt 84879, itemizedDeductions: makeFromInt 15458, federalTaxDue: makeFromInt 39866, stateTaxDue: makeFromInt 10699 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28285, itemizedDeductions: makeFromInt 15392, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 839 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43365, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34417, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20996, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32945, itemizedDeductions: makeFromInt 21109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1192 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14502, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22061, stateTaxDue: makeFromInt 6929 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21259, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28543, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47028, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49433, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 61, stateTaxDue: makeFromInt 1868 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33447, ordinaryIncomeNonSS: makeFromInt 10961, qualifiedIncome: makeFromInt 14138, itemizedDeductions: makeFromInt 24047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 852 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32513, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25429, stateTaxDue: makeFromInt 6929 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23765, ordinaryIncomeNonSS: makeFromInt 118022, qualifiedIncome: makeFromInt 25110, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25971, stateTaxDue: makeFromInt 7075 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4396, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83701, itemizedDeductions: makeFromInt 505, federalTaxDue: makeFromInt 6908, stateTaxDue: makeFromInt 3840 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 282, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78438, itemizedDeductions: makeFromInt 15185, federalTaxDue: makeFromInt 2803, stateTaxDue: makeFromInt 3547 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47702, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26111, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29125, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46573, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68464, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21195, federalTaxDue: makeFromInt 5555, stateTaxDue: makeFromInt 3043 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118785, qualifiedIncome: makeFromInt 23446, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29623, stateTaxDue: makeFromInt 6907 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28357, stateTaxDue: makeFromInt 6112 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141086, qualifiedIncome: makeFromInt 15974, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20877, stateTaxDue: makeFromInt 7582 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27742, ordinaryIncomeNonSS: makeFromInt 89019, qualifiedIncome: makeFromInt 39446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17307, stateTaxDue: makeFromInt 5899 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44927, ordinaryIncomeNonSS: makeFromInt 34620, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4365, stateTaxDue: makeFromInt 1337 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62578, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 424, stateTaxDue: makeFromInt 2554 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48706, ordinaryIncomeNonSS: makeFromInt 23398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19599, federalTaxDue: makeFromInt 339, stateTaxDue: makeFromInt 695 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149805, qualifiedIncome: makeFromInt 44590, itemizedDeductions: makeFromInt 27207, federalTaxDue: makeFromInt 24874, stateTaxDue: makeFromInt 9045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96472, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41012, stateTaxDue: makeFromInt 11849 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47053, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16668, itemizedDeductions: makeFromInt 17249, federalTaxDue: makeFromInt 36721, stateTaxDue: makeFromInt 8051 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28402, itemizedDeductions: makeFromInt 2229, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1224 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33537, qualifiedIncome: makeFromInt 4011, itemizedDeductions: makeFromInt 10541, federalTaxDue: makeFromInt 275, stateTaxDue: makeFromInt 1487 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39165, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96793, itemizedDeductions: makeFromInt 9286, federalTaxDue: makeFromInt 7384, stateTaxDue: makeFromInt 4488 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22627, federalTaxDue: makeFromInt 23324, stateTaxDue: makeFromInt 7030 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35687, ordinaryIncomeNonSS: makeFromInt 40682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7826, stateTaxDue: makeFromInt 1850 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83274, itemizedDeductions: makeFromInt 26043, federalTaxDue: makeFromInt 10021, stateTaxDue: makeFromInt 3709 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83383, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19844, stateTaxDue: makeFromInt 3714 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78994, itemizedDeductions: makeFromInt 14763, federalTaxDue: makeFromInt 4289, stateTaxDue: makeFromInt 3478 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1169, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27151, itemizedDeductions: makeFromInt 15862, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1160 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26766, federalTaxDue: makeFromInt 4043, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45498, ordinaryIncomeNonSS: makeFromInt 16481, qualifiedIncome: makeFromInt 14454, itemizedDeductions: makeFromInt 23992, federalTaxDue: makeFromInt 151, stateTaxDue: makeFromInt 872 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10612, qualifiedIncome: makeFromInt 51117, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2711 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30267, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34321, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1200 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14353, ordinaryIncomeNonSS: makeFromInt 14884, qualifiedIncome: makeFromInt 63399, itemizedDeductions: makeFromInt 29521, federalTaxDue: makeFromInt 547, stateTaxDue: makeFromInt 3539 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94150, itemizedDeductions: makeFromInt 5197, federalTaxDue: makeFromInt 5160, stateTaxDue: makeFromInt 4333 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11724, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48408, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25907, itemizedDeductions: makeFromInt 19243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 820 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34052, ordinaryIncomeNonSS: makeFromInt 108566, qualifiedIncome: makeFromInt 3047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23091, stateTaxDue: makeFromInt 5326 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44861, qualifiedIncome: makeFromInt 11395, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5959, stateTaxDue: makeFromInt 2138 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14723, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1950, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28680, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19898, itemizedDeductions: makeFromInt 11910, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 740 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21181, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22411, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45021, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27122, federalTaxDue: makeFromInt 32075, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13581, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29033, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15013, ordinaryIncomeNonSS: makeFromInt 117964, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3951, federalTaxDue: makeFromInt 21682, stateTaxDue: makeFromInt 5443 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5448, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40250, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1338 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23757, federalTaxDue: makeFromInt 48572, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27150, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58306, itemizedDeductions: makeFromInt 892, federalTaxDue: makeFromInt 43863, stateTaxDue: makeFromInt 10277 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25809, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20551, federalTaxDue: makeFromInt 34291, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91913, qualifiedIncome: makeFromInt 78938, itemizedDeductions: makeFromInt 8829, federalTaxDue: makeFromInt 14946, stateTaxDue: makeFromInt 8068 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4977, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2531, stateTaxDue: makeFromInt 3256 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13260, ordinaryIncomeNonSS: makeFromInt 125273, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6170, federalTaxDue: makeFromInt 22403, stateTaxDue: makeFromInt 5809 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4292, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4768 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27497, ordinaryIncomeNonSS: makeFromInt 7914, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14767, federalTaxDue: makeFromInt 2134, stateTaxDue: makeFromInt 4921 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17360, ordinaryIncomeNonSS: makeFromInt 12498, qualifiedIncome: makeFromInt 30268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1792, stateTaxDue: makeFromInt 1883 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4257, ordinaryIncomeNonSS: makeFromInt 97274, qualifiedIncome: makeFromInt 9162, itemizedDeductions: makeFromInt 11012, federalTaxDue: makeFromInt 13357, stateTaxDue: makeFromInt 4747 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45812, ordinaryIncomeNonSS: makeFromInt 84680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21183, federalTaxDue: makeFromInt 32985, stateTaxDue: makeFromInt 8979 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10584, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8664, qualifiedIncome: makeFromInt 54887, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2792 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7227, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5883, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 39 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35076, ordinaryIncomeNonSS: makeFromInt 117217, qualifiedIncome: makeFromInt 1606, itemizedDeductions: makeFromInt 2129, federalTaxDue: makeFromInt 25836, stateTaxDue: makeFromInt 5486 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101954, qualifiedIncome: makeFromInt 46543, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22860, stateTaxDue: makeFromInt 7145 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36889, stateTaxDue: makeFromInt 6123 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46311, ordinaryIncomeNonSS: makeFromInt 66795, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12073, stateTaxDue: makeFromInt 2765 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14752, ordinaryIncomeNonSS: makeFromInt 69232, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6286, stateTaxDue: makeFromInt 2987 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31227, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1133 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6790, ordinaryIncomeNonSS: makeFromInt 47667, qualifiedIncome: makeFromInt 26458, itemizedDeductions: makeFromInt 5042, federalTaxDue: makeFromInt 2921, stateTaxDue: makeFromInt 3230 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32505, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27423, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89938, itemizedDeductions: makeFromInt 2738, federalTaxDue: makeFromInt 8700, stateTaxDue: makeFromInt 4042 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20056, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28562, federalTaxDue: makeFromInt 17950, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4753, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38014, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31483, ordinaryIncomeNonSS: makeFromInt 111652, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16338, stateTaxDue: makeFromInt 5144 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69441, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18263, federalTaxDue: makeFromInt 7049, stateTaxDue: makeFromInt 3017 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36153, qualifiedIncome: makeFromInt 63063, itemizedDeductions: makeFromInt 382, federalTaxDue: makeFromInt 15968, stateTaxDue: makeFromInt 4509 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47987, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1724 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37730, itemizedDeductions: makeFromInt 17045, federalTaxDue: makeFromInt 12, stateTaxDue: makeFromInt 1700 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41147, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44530, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36383, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68441, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4591, stateTaxDue: makeFromInt 3234 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12023, ordinaryIncomeNonSS: makeFromInt 40726, qualifiedIncome: makeFromInt 91074, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11857, stateTaxDue: makeFromInt 6171 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130536, qualifiedIncome: makeFromInt 13815, itemizedDeductions: makeFromInt 20821, federalTaxDue: makeFromInt 21804, stateTaxDue: makeFromInt 6963 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79910, itemizedDeductions: makeFromInt 13875, federalTaxDue: makeFromInt 37618, stateTaxDue: makeFromInt 11241 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36423, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3911, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103514, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1274, federalTaxDue: makeFromInt 23883, stateTaxDue: makeFromInt 4830 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26714, itemizedDeductions: makeFromInt 27616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 861 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77583, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8547, federalTaxDue: makeFromInt 20556, stateTaxDue: makeFromInt 8304 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12846, federalTaxDue: makeFromInt 8809, stateTaxDue: makeFromInt 3723 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95540, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2946, stateTaxDue: makeFromInt 4220 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44916, ordinaryIncomeNonSS: makeFromInt 52431, qualifiedIncome: makeFromInt 61856, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18361, stateTaxDue: makeFromInt 5259 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36526, qualifiedIncome: makeFromInt 36341, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 923, stateTaxDue: makeFromInt 2968 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22953, ordinaryIncomeNonSS: makeFromInt 101902, qualifiedIncome: makeFromInt 99483, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31710, stateTaxDue: makeFromInt 9694 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3906, itemizedDeductions: makeFromInt 25977, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142976, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25636, stateTaxDue: makeFromInt 6863 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1842 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49396, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37955, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15312, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 461 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35160, ordinaryIncomeNonSS: makeFromInt 115041, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34546, stateTaxDue: makeFromInt 10539 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4860, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42597, itemizedDeductions: makeFromInt 29175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1724 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13866, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77473, itemizedDeductions: makeFromInt 24669, federalTaxDue: makeFromInt 326, stateTaxDue: makeFromInt 3502 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130689, qualifiedIncome: makeFromInt 44353, itemizedDeductions: makeFromInt 14844, federalTaxDue: makeFromInt 28291, stateTaxDue: makeFromInt 8297 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85599, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3805 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10601, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91106, qualifiedIncome: makeFromInt 85065, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22267, stateTaxDue: makeFromInt 8234 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6492, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21393, ordinaryIncomeNonSS: makeFromInt 71072, qualifiedIncome: makeFromInt 87795, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21524, stateTaxDue: makeFromInt 7568 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20044, federalTaxDue: makeFromInt 52547, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24749, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2853, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25160, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11403, ordinaryIncomeNonSS: makeFromInt 132587, qualifiedIncome: makeFromInt 94858, itemizedDeductions: makeFromInt 28029, federalTaxDue: makeFromInt 35049, stateTaxDue: makeFromInt 11117 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4640, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65853, itemizedDeductions: makeFromInt 6547, federalTaxDue: makeFromInt 2318, stateTaxDue: makeFromInt 2808 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10848, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 167 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24814, ordinaryIncomeNonSS: makeFromInt 51901, qualifiedIncome: makeFromInt 63799, itemizedDeductions: makeFromInt 12756, federalTaxDue: makeFromInt 18327, stateTaxDue: makeFromInt 5530 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10463, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13299, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26830, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24153, ordinaryIncomeNonSS: makeFromInt 106687, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12179, stateTaxDue: makeFromInt 4659 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28127, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29477, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7096, ordinaryIncomeNonSS: makeFromInt 10172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14106, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4934 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1314, ordinaryIncomeNonSS: makeFromInt 117613, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32062, stateTaxDue: makeFromInt 10649 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41795, ordinaryIncomeNonSS: makeFromInt 122123, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19580, stateTaxDue: makeFromInt 5431 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85074, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6677, federalTaxDue: makeFromInt 9336, stateTaxDue: makeFromInt 3890 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49840, qualifiedIncome: makeFromInt 92267, itemizedDeductions: makeFromInt 29824, federalTaxDue: makeFromInt 9968, stateTaxDue: makeFromInt 6730 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32445, ordinaryIncomeNonSS: makeFromInt 62833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22838, federalTaxDue: makeFromInt 10178, stateTaxDue: makeFromInt 2858 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35674, ordinaryIncomeNonSS: makeFromInt 104714, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13723, stateTaxDue: makeFromInt 4561 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50987, qualifiedIncome: makeFromInt 55763, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2099, stateTaxDue: makeFromInt 4863 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49526, ordinaryIncomeNonSS: makeFromInt 133165, qualifiedIncome: makeFromInt 10598, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32782, stateTaxDue: makeFromInt 6781 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 187, ordinaryIncomeNonSS: makeFromInt 112492, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27923, federalTaxDue: makeFromInt 9574, stateTaxDue: makeFromInt 5150 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43140, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11795, ordinaryIncomeNonSS: makeFromInt 111336, qualifiedIncome: makeFromInt 60884, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25349, stateTaxDue: makeFromInt 8355 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37411, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36839, itemizedDeductions: makeFromInt 29626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1467 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41744, itemizedDeductions: makeFromInt 16638, federalTaxDue: makeFromInt 614, stateTaxDue: makeFromInt 1905 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49862, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52541, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46856, stateTaxDue: makeFromInt 9804 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21800, federalTaxDue: makeFromInt 24168, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29998, ordinaryIncomeNonSS: makeFromInt 7127, qualifiedIncome: makeFromInt 75324, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8955, stateTaxDue: makeFromInt 3868 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34623, qualifiedIncome: makeFromInt 19808, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1437, stateTaxDue: makeFromInt 2347 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28136, federalTaxDue: makeFromInt 27740, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27119, ordinaryIncomeNonSS: makeFromInt 67066, qualifiedIncome: makeFromInt 45348, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9422, stateTaxDue: makeFromInt 4946 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96819, itemizedDeductions: makeFromInt 6609, federalTaxDue: makeFromInt 11624, stateTaxDue: makeFromInt 4266 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68057, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23272, stateTaxDue: makeFromInt 8347 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57285, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2551, stateTaxDue: makeFromInt 2575 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1450, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55704, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1662, stateTaxDue: makeFromInt 2530 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124369, qualifiedIncome: makeFromInt 8708, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38168, stateTaxDue: makeFromInt 6563 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48784, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24617, federalTaxDue: makeFromInt 31441, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41700, ordinaryIncomeNonSS: makeFromInt 14841, qualifiedIncome: makeFromInt 52374, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8866, stateTaxDue: makeFromInt 3000 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43639, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13901, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37867, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131544, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25808, federalTaxDue: makeFromInt 24491, stateTaxDue: makeFromInt 6260 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28035, ordinaryIncomeNonSS: makeFromInt 61717, qualifiedIncome: makeFromInt 93064, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15130, stateTaxDue: makeFromInt 7264 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66111, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2357, stateTaxDue: makeFromInt 3025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10870, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3558, stateTaxDue: makeFromInt 2905 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80855, itemizedDeductions: makeFromInt 12776, federalTaxDue: makeFromInt 6068, stateTaxDue: makeFromInt 3788 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18937, ordinaryIncomeNonSS: makeFromInt 126158, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32645, stateTaxDue: makeFromInt 10775 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98975, itemizedDeductions: makeFromInt 4163, federalTaxDue: makeFromInt 6934, stateTaxDue: makeFromInt 4655 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71915, qualifiedIncome: makeFromInt 31123, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12343, stateTaxDue: makeFromInt 4697 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3246 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17312, itemizedDeductions: makeFromInt 21669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 411 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34982, qualifiedIncome: makeFromInt 52872, itemizedDeductions: makeFromInt 2577, federalTaxDue: makeFromInt 4489, stateTaxDue: makeFromInt 4134 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62083, itemizedDeductions: makeFromInt 5301, federalTaxDue: makeFromInt 2619, stateTaxDue: makeFromInt 2849 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114245, qualifiedIncome: makeFromInt 73191, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21951, stateTaxDue: makeFromInt 8697 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17445, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25406, federalTaxDue: makeFromInt 26359, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15544, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 341 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11357, ordinaryIncomeNonSS: makeFromInt 65684, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23428, stateTaxDue: makeFromInt 8029 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21195, qualifiedIncome: makeFromInt 28642, itemizedDeductions: makeFromInt 20019, federalTaxDue: makeFromInt 8744, stateTaxDue: makeFromInt 2237 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 5213 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117232, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14585, federalTaxDue: makeFromInt 42968, stateTaxDue: makeFromInt 10607 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7165, qualifiedIncome: makeFromInt 49724, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2269 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11382, ordinaryIncomeNonSS: makeFromInt 65021, qualifiedIncome: makeFromInt 54068, itemizedDeductions: makeFromInt 11809, federalTaxDue: makeFromInt 13176, stateTaxDue: makeFromInt 5625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23739, ordinaryIncomeNonSS: makeFromInt 72964, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12345, stateTaxDue: makeFromInt 3393 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3268, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51675, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 191, stateTaxDue: makeFromInt 2085 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12907, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 6 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38328, ordinaryIncomeNonSS: makeFromInt 112398, qualifiedIncome: makeFromInt 27493, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24472, stateTaxDue: makeFromInt 6721 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6633, qualifiedIncome: makeFromInt 88103, itemizedDeductions: makeFromInt 5309, federalTaxDue: makeFromInt 4845, stateTaxDue: makeFromInt 4362 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29560, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89526, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6735, stateTaxDue: makeFromInt 4221 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17943, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96278, itemizedDeductions: makeFromInt 25871, federalTaxDue: makeFromInt 8190, stateTaxDue: makeFromInt 4359 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4710, stateTaxDue: makeFromInt 3093 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16276, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 523, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4980, ordinaryIncomeNonSS: makeFromInt 41570, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7955, federalTaxDue: makeFromInt 16941, stateTaxDue: makeFromInt 6624 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44099, ordinaryIncomeNonSS: makeFromInt 118215, qualifiedIncome: makeFromInt 87182, itemizedDeductions: makeFromInt 23540, federalTaxDue: makeFromInt 41985, stateTaxDue: makeFromInt 10251 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30413, ordinaryIncomeNonSS: makeFromInt 138484, qualifiedIncome: makeFromInt 62524, itemizedDeductions: makeFromInt 27456, federalTaxDue: makeFromInt 34799, stateTaxDue: makeFromInt 9475 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40836, ordinaryIncomeNonSS: makeFromInt 118473, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3492, federalTaxDue: makeFromInt 43174, stateTaxDue: makeFromInt 10918 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48463, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1622, stateTaxDue: makeFromInt 2247 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50153, itemizedDeductions: makeFromInt 8661, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1833 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98684, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9566, federalTaxDue: makeFromInt 13564, stateTaxDue: makeFromInt 4679 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26505, ordinaryIncomeNonSS: makeFromInt 92070, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2602, federalTaxDue: makeFromInt 17136, stateTaxDue: makeFromInt 4149 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39495, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1361 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120683, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7727, federalTaxDue: makeFromInt 17542, stateTaxDue: makeFromInt 5604 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35247, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11540, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30435, stateTaxDue: makeFromInt 7908 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14486, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6037, ordinaryIncomeNonSS: makeFromInt 132114, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31032, stateTaxDue: makeFromInt 11131 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76445, qualifiedIncome: makeFromInt 19311, itemizedDeductions: makeFromInt 3272, federalTaxDue: makeFromInt 12889, stateTaxDue: makeFromInt 4411 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25302, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10930, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 638 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22693, itemizedDeductions: makeFromInt 17283, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 505 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47025, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47741, itemizedDeductions: makeFromInt 11093, federalTaxDue: makeFromInt 33146, stateTaxDue: makeFromInt 9412 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23629, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63908, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3989, stateTaxDue: makeFromInt 2740 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139936, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29957, federalTaxDue: makeFromInt 30912, stateTaxDue: makeFromInt 11470 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36167, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12148, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7432, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1435 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37205, ordinaryIncomeNonSS: makeFromInt 34130, qualifiedIncome: makeFromInt 20982, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3977, stateTaxDue: makeFromInt 2181 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4476, ordinaryIncomeNonSS: makeFromInt 40273, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18902, federalTaxDue: makeFromInt 1331, stateTaxDue: makeFromInt 1539 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65664, itemizedDeductions: makeFromInt 24264, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2696 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42236, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35832, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14944, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7931, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19871, ordinaryIncomeNonSS: makeFromInt 116308, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17510, federalTaxDue: makeFromInt 19228, stateTaxDue: makeFromInt 5440 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20911, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26135, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12169, federalTaxDue: makeFromInt 349, stateTaxDue: makeFromInt 932 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94325, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5154, stateTaxDue: makeFromInt 4041 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43391, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6632, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24396, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18140, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 452 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30077, ordinaryIncomeNonSS: makeFromInt 82852, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17973, federalTaxDue: makeFromInt 22561, stateTaxDue: makeFromInt 8468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15322, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58084, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10348, stateTaxDue: makeFromInt 7409 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29345, ordinaryIncomeNonSS: makeFromInt 18557, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27380, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 353 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51932, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2020, stateTaxDue: makeFromInt 2302 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28008, ordinaryIncomeNonSS: makeFromInt 73566, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11602, stateTaxDue: makeFromInt 3528 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21530, ordinaryIncomeNonSS: makeFromInt 2165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19379, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65613, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 2806 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18113, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32897, stateTaxDue: makeFromInt 10436 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 5780 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90221, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11095, federalTaxDue: makeFromInt 13066, stateTaxDue: makeFromInt 4254 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6579, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124829, qualifiedIncome: makeFromInt 19449, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28008, stateTaxDue: makeFromInt 7134 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27094, ordinaryIncomeNonSS: makeFromInt 47892, qualifiedIncome: makeFromInt 73695, itemizedDeductions: makeFromInt 8975, federalTaxDue: makeFromInt 14811, stateTaxDue: makeFromInt 5704 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8761, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64413, itemizedDeductions: makeFromInt 24997, federalTaxDue: makeFromInt 28491, stateTaxDue: makeFromInt 10246 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1518 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32400, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88729, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6101, federalTaxDue: makeFromInt 11374, stateTaxDue: makeFromInt 3981 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27772, ordinaryIncomeNonSS: makeFromInt 76466, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2909, federalTaxDue: makeFromInt 18202, stateTaxDue: makeFromInt 3675 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23557, federalTaxDue: makeFromInt 32340, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21506, ordinaryIncomeNonSS: makeFromInt 53940, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26239, stateTaxDue: makeFromInt 7627 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9537, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26524, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14137, federalTaxDue: makeFromInt 33678, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26623, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8504, federalTaxDue: makeFromInt 11145, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44326, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12319, federalTaxDue: makeFromInt 25955, stateTaxDue: makeFromInt 6761 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78933, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5558, stateTaxDue: makeFromInt 3372 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30252, ordinaryIncomeNonSS: makeFromInt 35311, qualifiedIncome: makeFromInt 51200, itemizedDeductions: makeFromInt 15193, federalTaxDue: makeFromInt 13864, stateTaxDue: makeFromInt 4188 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16358, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40096, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23797, federalTaxDue: makeFromInt 29603, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21381, ordinaryIncomeNonSS: makeFromInt 93482, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9455, stateTaxDue: makeFromInt 4199 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32095, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4576, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42380, stateTaxDue: makeFromInt 10456 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21174, ordinaryIncomeNonSS: makeFromInt 69875, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11186, stateTaxDue: makeFromInt 3039 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122627, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24224, stateTaxDue: makeFromInt 5756 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61202, qualifiedIncome: makeFromInt 4434, itemizedDeductions: makeFromInt 26842, federalTaxDue: makeFromInt 3884, stateTaxDue: makeFromInt 3001 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6679, itemizedDeductions: makeFromInt 24411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34305, itemizedDeductions: makeFromInt 3963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1460 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115676, qualifiedIncome: makeFromInt 80449, itemizedDeductions: makeFromInt 5830, federalTaxDue: makeFromInt 21588, stateTaxDue: makeFromInt 9331 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48863, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46881, ordinaryIncomeNonSS: makeFromInt 7912, qualifiedIncome: makeFromInt 99875, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17082, stateTaxDue: makeFromInt 5150 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27380, ordinaryIncomeNonSS: makeFromInt 38217, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21219, stateTaxDue: makeFromInt 6702 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47787, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32392, stateTaxDue: makeFromInt 8618 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35983, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1611 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2836, ordinaryIncomeNonSS: makeFromInt 48863, qualifiedIncome: makeFromInt 1234, itemizedDeductions: makeFromInt 22626, federalTaxDue: makeFromInt 840, stateTaxDue: makeFromInt 2127 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16624, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29260, federalTaxDue: makeFromInt 41390, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24378, ordinaryIncomeNonSS: makeFromInt 52521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10079, federalTaxDue: makeFromInt 7561, stateTaxDue: makeFromInt 2230 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26380, ordinaryIncomeNonSS: makeFromInt 122260, qualifiedIncome: makeFromInt 77638, itemizedDeductions: makeFromInt 24054, federalTaxDue: makeFromInt 29154, stateTaxDue: makeFromInt 9320 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16609, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8071, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21657, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27393, stateTaxDue: makeFromInt 7151 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46053, itemizedDeductions: makeFromInt 21515, federalTaxDue: makeFromInt 4718, stateTaxDue: makeFromInt 2104 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58765, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1255, stateTaxDue: makeFromInt 2446 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85493, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27498, federalTaxDue: makeFromInt 8699, stateTaxDue: makeFromInt 4136 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8539, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67320, qualifiedIncome: makeFromInt 48703, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22140, stateTaxDue: makeFromInt 5468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19549, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16456, itemizedDeductions: makeFromInt 10576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 148 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74280, qualifiedIncome: makeFromInt 75251, itemizedDeductions: makeFromInt 13481, federalTaxDue: makeFromInt 15951, stateTaxDue: makeFromInt 6902 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117090, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3343, federalTaxDue: makeFromInt 22924, stateTaxDue: makeFromInt 5747 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97191, itemizedDeductions: makeFromInt 11029, federalTaxDue: makeFromInt 6666, stateTaxDue: makeFromInt 4565 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56109, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2209 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48578, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35885, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36672, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24049, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 729, ordinaryIncomeNonSS: makeFromInt 80808, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8789, stateTaxDue: makeFromInt 3672 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30859, ordinaryIncomeNonSS: makeFromInt 26760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27797, federalTaxDue: makeFromInt 1042, stateTaxDue: makeFromInt 963 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57740, qualifiedIncome: makeFromInt 79858, itemizedDeductions: makeFromInt 11021, federalTaxDue: makeFromInt 12176, stateTaxDue: makeFromInt 6305 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28250, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113318, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11538, stateTaxDue: makeFromInt 5351 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97779, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5704, stateTaxDue: makeFromInt 4314 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24333, qualifiedIncome: makeFromInt 3305, itemizedDeductions: makeFromInt 14324, federalTaxDue: makeFromInt 1123, stateTaxDue: makeFromInt 907 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31537, ordinaryIncomeNonSS: makeFromInt 66896, qualifiedIncome: makeFromInt 39635, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16281, stateTaxDue: makeFromInt 4882 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28054, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28172, ordinaryIncomeNonSS: makeFromInt 86755, qualifiedIncome: makeFromInt 18497, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15077, stateTaxDue: makeFromInt 4817 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14118, ordinaryIncomeNonSS: makeFromInt 118660, qualifiedIncome: makeFromInt 5360, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20379, stateTaxDue: makeFromInt 5774 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45870, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41227, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54794, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10006, federalTaxDue: makeFromInt 5443, stateTaxDue: makeFromInt 2448 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109839, qualifiedIncome: makeFromInt 82606, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35310, stateTaxDue: makeFromInt 9247 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107703, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22369, stateTaxDue: makeFromInt 9910 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46193, ordinaryIncomeNonSS: makeFromInt 100171, qualifiedIncome: makeFromInt 85211, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34596, stateTaxDue: makeFromInt 9018 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140260, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29938, federalTaxDue: makeFromInt 29315, stateTaxDue: makeFromInt 6438 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28414, qualifiedIncome: makeFromInt 94206, itemizedDeductions: makeFromInt 8667, federalTaxDue: makeFromInt 6609, stateTaxDue: makeFromInt 5556 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28482, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43895, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1520 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76590, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3449, stateTaxDue: makeFromInt 3255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27869, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65512, itemizedDeductions: makeFromInt 15759, federalTaxDue: makeFromInt 3767, stateTaxDue: makeFromInt 2821 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30909, ordinaryIncomeNonSS: makeFromInt 26653, qualifiedIncome: makeFromInt 34880, itemizedDeductions: makeFromInt 1376, federalTaxDue: makeFromInt 2824, stateTaxDue: makeFromInt 2402 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2375, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4744 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 597, stateTaxDue: makeFromInt 2612 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37926, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28331, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28161, ordinaryIncomeNonSS: makeFromInt 80319, qualifiedIncome: makeFromInt 49176, itemizedDeductions: makeFromInt 4479, federalTaxDue: makeFromInt 20820, stateTaxDue: makeFromInt 6155 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39503, qualifiedIncome: makeFromInt 81185, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15545, stateTaxDue: makeFromInt 5727 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9247, ordinaryIncomeNonSS: makeFromInt 82855, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8934, federalTaxDue: makeFromInt 6942, stateTaxDue: makeFromInt 3468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18261, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3753, federalTaxDue: makeFromInt 35606, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53747, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26287, federalTaxDue: makeFromInt 3101, stateTaxDue: makeFromInt 2290 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147258, qualifiedIncome: makeFromInt 21058, itemizedDeductions: makeFromInt 10009, federalTaxDue: makeFromInt 19747, stateTaxDue: makeFromInt 7741 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97195, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7856, federalTaxDue: makeFromInt 30259, stateTaxDue: makeFromInt 9710 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22713, ordinaryIncomeNonSS: makeFromInt 140309, qualifiedIncome: makeFromInt 51692, itemizedDeductions: makeFromInt 7516, federalTaxDue: makeFromInt 37708, stateTaxDue: makeFromInt 9364 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42962, ordinaryIncomeNonSS: makeFromInt 135605, qualifiedIncome: makeFromInt 70064, itemizedDeductions: makeFromInt 16409, federalTaxDue: makeFromInt 46012, stateTaxDue: makeFromInt 10265 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14440, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19371, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27289, stateTaxDue: makeFromInt 8094 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95995, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11379, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60255, qualifiedIncome: makeFromInt 65926, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6716, stateTaxDue: makeFromInt 5834 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9736, stateTaxDue: makeFromInt 4106 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5781, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86793, itemizedDeductions: makeFromInt 26856, federalTaxDue: makeFromInt 5459, stateTaxDue: makeFromInt 4080 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20572, ordinaryIncomeNonSS: makeFromInt 140967, qualifiedIncome: makeFromInt 29071, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26983, stateTaxDue: makeFromInt 8127 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48055, ordinaryIncomeNonSS: makeFromInt 147766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16558, federalTaxDue: makeFromInt 33434, stateTaxDue: makeFromInt 7013 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43669, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18983, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 540 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120477, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2479, federalTaxDue: makeFromInt 13104, stateTaxDue: makeFromInt 5492 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56757, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4979, stateTaxDue: makeFromInt 2670 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93724, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24171, stateTaxDue: makeFromInt 9533 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48441, ordinaryIncomeNonSS: makeFromInt 2479, qualifiedIncome: makeFromInt 26813, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 786, stateTaxDue: makeFromInt 1210 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17015, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4188, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8391, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16200, ordinaryIncomeNonSS: makeFromInt 49798, qualifiedIncome: makeFromInt 95996, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20238, stateTaxDue: makeFromInt 7035 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38195, ordinaryIncomeNonSS: makeFromInt 100143, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29425, federalTaxDue: makeFromInt 29579, stateTaxDue: makeFromInt 9554 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69038, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2868 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26994, qualifiedIncome: makeFromInt 41589, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9999, stateTaxDue: makeFromInt 2947 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12533, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6672, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22693, stateTaxDue: makeFromInt 7468 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21964, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28255, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70107, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4469, stateTaxDue: makeFromInt 3030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21873, ordinaryIncomeNonSS: makeFromInt 59100, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5283, stateTaxDue: makeFromInt 2280 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18203, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20452, federalTaxDue: makeFromInt 17546, stateTaxDue: makeFromInt 5535 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 617, stateTaxDue: makeFromInt 2618 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132812, qualifiedIncome: makeFromInt 36059, itemizedDeductions: makeFromInt 9734, federalTaxDue: makeFromInt 43673, stateTaxDue: makeFromInt 8388 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139430, qualifiedIncome: makeFromInt 96745, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35154, stateTaxDue: makeFromInt 11698 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42679, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50952, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 842, stateTaxDue: makeFromInt 2173 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1651, stateTaxDue: makeFromInt 2272 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29263, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18585, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77476, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43647, stateTaxDue: makeFromInt 11173 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10883, itemizedDeductions: makeFromInt 3915, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16633, qualifiedIncome: makeFromInt 21760, itemizedDeductions: makeFromInt 2132, federalTaxDue: makeFromInt 2790, stateTaxDue: makeFromInt 1545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144078, qualifiedIncome: makeFromInt 12802, itemizedDeductions: makeFromInt 16550, federalTaxDue: makeFromInt 25927, stateTaxDue: makeFromInt 7589 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145915, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25727, stateTaxDue: makeFromInt 7041 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5841, ordinaryIncomeNonSS: makeFromInt 102209, qualifiedIncome: makeFromInt 8419, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9791, stateTaxDue: makeFromInt 5091 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58885, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10202, stateTaxDue: makeFromInt 2489 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12560, ordinaryIncomeNonSS: makeFromInt 62057, qualifiedIncome: makeFromInt 61636, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13491, stateTaxDue: makeFromInt 5810 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48780, ordinaryIncomeNonSS: makeFromInt 135663, qualifiedIncome: makeFromInt 86944, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36200, stateTaxDue: makeFromInt 10655 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19532, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43437, ordinaryIncomeNonSS: makeFromInt 4176, qualifiedIncome: makeFromInt 23986, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1033 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35643, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31037, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112026, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2550, federalTaxDue: makeFromInt 9499, stateTaxDue: makeFromInt 5126 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2936, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28969, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29986, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11477, federalTaxDue: makeFromInt 42578, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49201, ordinaryIncomeNonSS: makeFromInt 68947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11998, federalTaxDue: makeFromInt 16222, stateTaxDue: makeFromInt 2992 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44203, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6403, stateTaxDue: makeFromInt 1835 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20618, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23963, stateTaxDue: makeFromInt 5927 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38984, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8639, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4807, federalTaxDue: makeFromInt 18806, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36628, ordinaryIncomeNonSS: makeFromInt 110895, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10412, federalTaxDue: makeFromInt 18837, stateTaxDue: makeFromInt 5003 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73712, qualifiedIncome: makeFromInt 17826, itemizedDeductions: makeFromInt 29832, federalTaxDue: makeFromInt 17294, stateTaxDue: makeFromInt 4322 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65778, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8541, stateTaxDue: makeFromInt 2926 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5914, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73547, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4924, stateTaxDue: makeFromInt 3302 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10907, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14096, ordinaryIncomeNonSS: makeFromInt 102102, qualifiedIncome: makeFromInt 56789, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27999, stateTaxDue: makeFromInt 7757 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15330, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44435, itemizedDeductions: makeFromInt 15384, federalTaxDue: makeFromInt 29131, stateTaxDue: makeFromInt 9263 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137250, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3253, federalTaxDue: makeFromInt 17643, stateTaxDue: makeFromInt 6347 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24681, ordinaryIncomeNonSS: makeFromInt 129014, qualifiedIncome: makeFromInt 1439, itemizedDeductions: makeFromInt 1796, federalTaxDue: makeFromInt 17405, stateTaxDue: makeFromInt 5848 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20858, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20091, federalTaxDue: makeFromInt 10395, stateTaxDue: makeFromInt 5368 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133355, qualifiedIncome: makeFromInt 11190, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24285, stateTaxDue: makeFromInt 6972 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62783, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8029, stateTaxDue: makeFromInt 2774 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1228, stateTaxDue: makeFromInt 1134 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50662, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2520, stateTaxDue: makeFromInt 1958 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68719, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2748, stateTaxDue: makeFromInt 3158 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43484, ordinaryIncomeNonSS: makeFromInt 116001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22673, federalTaxDue: makeFromInt 17843, stateTaxDue: makeFromInt 5325 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33806, ordinaryIncomeNonSS: makeFromInt 124511, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11948, federalTaxDue: makeFromInt 35063, stateTaxDue: makeFromInt 10893 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12206, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54430, itemizedDeductions: makeFromInt 8333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2247 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84781, itemizedDeductions: makeFromInt 13169, federalTaxDue: makeFromInt 5430, stateTaxDue: makeFromInt 3837 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17613, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23707, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98394, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9067, stateTaxDue: makeFromInt 4590 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9377, ordinaryIncomeNonSS: makeFromInt 116475, qualifiedIncome: makeFromInt 29094, itemizedDeductions: makeFromInt 27947, federalTaxDue: makeFromInt 19318, stateTaxDue: makeFromInt 6903 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48672, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22157, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 579 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39896, ordinaryIncomeNonSS: makeFromInt 5336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7841, federalTaxDue: makeFromInt 21715, stateTaxDue: makeFromInt 6556 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 393, stateTaxDue: makeFromInt 1650 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41976, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93633, itemizedDeductions: makeFromInt 28466, federalTaxDue: makeFromInt 8352, stateTaxDue: makeFromInt 4347 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64840, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6118, stateTaxDue: makeFromInt 2987 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23353, ordinaryIncomeNonSS: makeFromInt 112220, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16502, federalTaxDue: makeFromInt 37177, stateTaxDue: makeFromInt 10476 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9839, qualifiedIncome: makeFromInt 7484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 333 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49586, ordinaryIncomeNonSS: makeFromInt 27818, qualifiedIncome: makeFromInt 18340, itemizedDeductions: makeFromInt 17886, federalTaxDue: makeFromInt 8970, stateTaxDue: makeFromInt 2130 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6947, ordinaryIncomeNonSS: makeFromInt 66496, qualifiedIncome: makeFromInt 64391, itemizedDeductions: makeFromInt 24604, federalTaxDue: makeFromInt 13287, stateTaxDue: makeFromInt 6169 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21495, ordinaryIncomeNonSS: makeFromInt 53295, qualifiedIncome: makeFromInt 78822, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14383, stateTaxDue: makeFromInt 6031 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127047, qualifiedIncome: makeFromInt 76953, itemizedDeductions: makeFromInt 23479, federalTaxDue: makeFromInt 33034, stateTaxDue: makeFromInt 9525 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36398, itemizedDeductions: makeFromInt 14844, federalTaxDue: makeFromInt 41086, stateTaxDue: makeFromInt 8868 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33139, ordinaryIncomeNonSS: makeFromInt 99861, qualifiedIncome: makeFromInt 9375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14801, stateTaxDue: makeFromInt 4987 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46180, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46027, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87966, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14364, stateTaxDue: makeFromInt 4018 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4400, qualifiedIncome: makeFromInt 30463, itemizedDeductions: makeFromInt 29200, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1068 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 152, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5345, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18332, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65079, itemizedDeductions: makeFromInt 19963, federalTaxDue: makeFromInt 8933, stateTaxDue: makeFromInt 2999 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20678, ordinaryIncomeNonSS: makeFromInt 123378, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30201, stateTaxDue: makeFromInt 10694 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118594, qualifiedIncome: makeFromInt 40387, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19037, stateTaxDue: makeFromInt 7455 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16270, ordinaryIncomeNonSS: makeFromInt 5447, qualifiedIncome: makeFromInt 30000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1583 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140217, qualifiedIncome: makeFromInt 25971, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25860, stateTaxDue: makeFromInt 7925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21894, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8755, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7995, itemizedDeductions: makeFromInt 7592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32311, ordinaryIncomeNonSS: makeFromInt 52594, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2738, federalTaxDue: makeFromInt 21925, stateTaxDue: makeFromInt 7231 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35691, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29638, qualifiedIncome: makeFromInt 38853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17046, stateTaxDue: makeFromInt 3269 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27555, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 162, ordinaryIncomeNonSS: makeFromInt 44219, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2062, stateTaxDue: makeFromInt 1806 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 416, ordinaryIncomeNonSS: makeFromInt 124018, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29538, federalTaxDue: makeFromInt 14417, stateTaxDue: makeFromInt 5897 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30400, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11239, federalTaxDue: makeFromInt 31834, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107334, qualifiedIncome: makeFromInt 45886, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17006, stateTaxDue: makeFromInt 7161 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85391, qualifiedIncome: makeFromInt 36991, itemizedDeductions: makeFromInt 7366, federalTaxDue: makeFromInt 23502, stateTaxDue: makeFromInt 5544 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 569, ordinaryIncomeNonSS: makeFromInt 49979, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3024, stateTaxDue: makeFromInt 2124 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53803, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8482, federalTaxDue: makeFromInt 2215, stateTaxDue: makeFromInt 2091 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13498, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23693, itemizedDeductions: makeFromInt 25876, federalTaxDue: makeFromInt 23269, stateTaxDue: makeFromInt 8210 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49604, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37465, itemizedDeductions: makeFromInt 11631, federalTaxDue: makeFromInt 42640, stateTaxDue: makeFromInt 9118 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95664, itemizedDeductions: makeFromInt 888, federalTaxDue: makeFromInt 2164, stateTaxDue: makeFromInt 4108 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135144, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17116, stateTaxDue: makeFromInt 6240 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30074, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59264, itemizedDeductions: makeFromInt 28646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2346 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30879, ordinaryIncomeNonSS: makeFromInt 75716, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3800, federalTaxDue: makeFromInt 12401, stateTaxDue: makeFromInt 3311 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2773, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46885, qualifiedIncome: makeFromInt 3249, itemizedDeductions: makeFromInt 24213, federalTaxDue: makeFromInt 2131, stateTaxDue: makeFromInt 2210 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44106, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15337, federalTaxDue: makeFromInt 2861, stateTaxDue: makeFromInt 1699 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22193, qualifiedIncome: makeFromInt 30556, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4454, stateTaxDue: makeFromInt 2062 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137869, qualifiedIncome: makeFromInt 27558, itemizedDeductions: makeFromInt 21133, federalTaxDue: makeFromInt 18656, stateTaxDue: makeFromInt 7596 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56416, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1769, stateTaxDue: makeFromInt 2566 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82173, qualifiedIncome: makeFromInt 10250, itemizedDeductions: makeFromInt 16681, federalTaxDue: makeFromInt 14950, stateTaxDue: makeFromInt 4061 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52098, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28943, federalTaxDue: makeFromInt 6404, stateTaxDue: makeFromInt 1930 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45948, ordinaryIncomeNonSS: makeFromInt 125357, qualifiedIncome: makeFromInt 63412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38603, stateTaxDue: makeFromInt 9183 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115, qualifiedIncome: makeFromInt 13084, itemizedDeductions: makeFromInt 20408, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 449 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84666, qualifiedIncome: makeFromInt 237, itemizedDeductions: makeFromInt 26464, federalTaxDue: makeFromInt 15920, stateTaxDue: makeFromInt 3902 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71562, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26845, stateTaxDue: makeFromInt 8097 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42896, ordinaryIncomeNonSS: makeFromInt 76508, qualifiedIncome: makeFromInt 51032, itemizedDeductions: makeFromInt 29472, federalTaxDue: makeFromInt 21814, stateTaxDue: makeFromInt 6158 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48567, ordinaryIncomeNonSS: makeFromInt 143183, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29545, federalTaxDue: makeFromInt 44935, stateTaxDue: makeFromInt 11735 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117826, qualifiedIncome: makeFromInt 95105, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31012, stateTaxDue: makeFromInt 10411 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35706, ordinaryIncomeNonSS: makeFromInt 81505, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13559, federalTaxDue: makeFromInt 13326, stateTaxDue: makeFromInt 3500 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51253, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1888 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105400, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11906, stateTaxDue: makeFromInt 4695 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26556, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27197, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1163 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98058, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25300, stateTaxDue: makeFromInt 9754 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44968, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3687, federalTaxDue: makeFromInt 26938, stateTaxDue: makeFromInt 6478 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31780, qualifiedIncome: makeFromInt 58736, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7154, stateTaxDue: makeFromInt 3851 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36025, ordinaryIncomeNonSS: makeFromInt 91476, qualifiedIncome: makeFromInt 53412, itemizedDeductions: makeFromInt 18558, federalTaxDue: makeFromInt 26261, stateTaxDue: makeFromInt 6789 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13793, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4792, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41219, itemizedDeductions: makeFromInt 1989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1686 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15223, ordinaryIncomeNonSS: makeFromInt 35746, qualifiedIncome: makeFromInt 48188, itemizedDeductions: makeFromInt 25135, federalTaxDue: makeFromInt 1998, stateTaxDue: makeFromInt 3832 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21049, federalTaxDue: makeFromInt 12594, stateTaxDue: makeFromInt 5580 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25284, stateTaxDue: makeFromInt 6799 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40578, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88279, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1177, stateTaxDue: makeFromInt 3739 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37167, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51950, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 48777, stateTaxDue: makeFromInt 10075 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13252, ordinaryIncomeNonSS: makeFromInt 63836, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20443, stateTaxDue: makeFromInt 7805 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51955, qualifiedIncome: makeFromInt 10323, itemizedDeductions: makeFromInt 27253, federalTaxDue: makeFromInt 2170, stateTaxDue: makeFromInt 2727 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3787, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 176, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 531, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35702, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6516, stateTaxDue: makeFromInt 3134 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78741, itemizedDeductions: makeFromInt 4909, federalTaxDue: makeFromInt 5811, stateTaxDue: makeFromInt 3482 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22118, ordinaryIncomeNonSS: makeFromInt 64961, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11843, stateTaxDue: makeFromInt 2966 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43903, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16794, stateTaxDue: makeFromInt 6174 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54227, qualifiedIncome: makeFromInt 31086, itemizedDeductions: makeFromInt 17484, federalTaxDue: makeFromInt 7670, stateTaxDue: makeFromInt 4011 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24247, ordinaryIncomeNonSS: makeFromInt 63108, qualifiedIncome: makeFromInt 82398, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15398, stateTaxDue: makeFromInt 6768 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38595, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72284, itemizedDeductions: makeFromInt 9233, federalTaxDue: makeFromInt 46810, stateTaxDue: makeFromInt 10908 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35966, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63453, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6462, stateTaxDue: makeFromInt 2889 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88388, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21045, stateTaxDue: makeFromInt 3964 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19373, qualifiedIncome: makeFromInt 39582, itemizedDeductions: makeFromInt 16416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2354 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36490, ordinaryIncomeNonSS: makeFromInt 90024, qualifiedIncome: makeFromInt 97457, itemizedDeductions: makeFromInt 2199, federalTaxDue: makeFromInt 25438, stateTaxDue: makeFromInt 8699 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114762, qualifiedIncome: makeFromInt 15155, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11547, stateTaxDue: makeFromInt 6021 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67883, qualifiedIncome: makeFromInt 42447, itemizedDeductions: makeFromInt 2087, federalTaxDue: makeFromInt 16522, stateTaxDue: makeFromInt 5402 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22230, federalTaxDue: makeFromInt 14747, stateTaxDue: makeFromInt 4080 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55251, qualifiedIncome: makeFromInt 51006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21010, stateTaxDue: makeFromInt 5058 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45607, ordinaryIncomeNonSS: makeFromInt 6866, qualifiedIncome: makeFromInt 32509, itemizedDeductions: makeFromInt 7017, federalTaxDue: makeFromInt 1759, stateTaxDue: makeFromInt 1443 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 376, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20910, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33601, itemizedDeductions: makeFromInt 27068, federalTaxDue: makeFromInt 27113, stateTaxDue: makeFromInt 8605 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7223, federalTaxDue: makeFromInt 11083, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30743, ordinaryIncomeNonSS: makeFromInt 92427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18824, federalTaxDue: makeFromInt 15464, stateTaxDue: makeFromInt 4265 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13335, ordinaryIncomeNonSS: makeFromInt 142993, qualifiedIncome: makeFromInt 48657, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37075, stateTaxDue: makeFromInt 9427 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41115, itemizedDeductions: makeFromInt 7070, federalTaxDue: makeFromInt 3600, stateTaxDue: makeFromInt 1601 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23921, ordinaryIncomeNonSS: makeFromInt 119836, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8265, federalTaxDue: makeFromInt 22422, stateTaxDue: makeFromInt 5663 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6790, ordinaryIncomeNonSS: makeFromInt 51677, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15622, federalTaxDue: makeFromInt 2304, stateTaxDue: makeFromInt 1983 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9968, ordinaryIncomeNonSS: makeFromInt 56644, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11947, federalTaxDue: makeFromInt 3870, stateTaxDue: makeFromInt 2357 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11804, ordinaryIncomeNonSS: makeFromInt 27590, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 529, stateTaxDue: makeFromInt 979 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33107, ordinaryIncomeNonSS: makeFromInt 104678, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18235, stateTaxDue: makeFromInt 4659 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4559, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82399, itemizedDeductions: makeFromInt 26205, federalTaxDue: makeFromInt 3397, stateTaxDue: makeFromInt 3745 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59771, qualifiedIncome: makeFromInt 57533, itemizedDeductions: makeFromInt 3747, federalTaxDue: makeFromInt 13615, stateTaxDue: makeFromInt 5610 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3400, ordinaryIncomeNonSS: makeFromInt 135977, qualifiedIncome: makeFromInt 95739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33889, stateTaxDue: makeFromInt 11331 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10889, ordinaryIncomeNonSS: makeFromInt 134244, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14159, federalTaxDue: makeFromInt 23582, stateTaxDue: makeFromInt 6418 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61738, qualifiedIncome: makeFromInt 96154, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29209, stateTaxDue: makeFromInt 7640 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 435, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65624, itemizedDeductions: makeFromInt 22942, federalTaxDue: makeFromInt 32762, stateTaxDue: makeFromInt 10406 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65124, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2781 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27920, itemizedDeductions: makeFromInt 27107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 921 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29106, qualifiedIncome: makeFromInt 59514, itemizedDeductions: makeFromInt 22640, federalTaxDue: makeFromInt 3850, stateTaxDue: makeFromInt 4176 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7086, qualifiedIncome: makeFromInt 38657, itemizedDeductions: makeFromInt 4386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1680 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31559, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40957, stateTaxDue: makeFromInt 8811 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36216, ordinaryIncomeNonSS: makeFromInt 133440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1041, federalTaxDue: makeFromInt 25772, stateTaxDue: makeFromInt 6297 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81966, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27676, federalTaxDue: makeFromInt 5892, stateTaxDue: makeFromInt 3423 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40758, ordinaryIncomeNonSS: makeFromInt 61555, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28017, stateTaxDue: makeFromInt 7823 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17056, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 598 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41647, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 82, stateTaxDue: makeFromInt 264 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26781, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37247, ordinaryIncomeNonSS: makeFromInt 19117, qualifiedIncome: makeFromInt 2768, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 839 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5134, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28304, stateTaxDue: makeFromInt 7483 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48114, ordinaryIncomeNonSS: makeFromInt 18515, qualifiedIncome: makeFromInt 38356, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5307, stateTaxDue: makeFromInt 2452 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53101, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2055 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100295, qualifiedIncome: makeFromInt 78001, itemizedDeductions: makeFromInt 11325, federalTaxDue: makeFromInt 34779, stateTaxDue: makeFromInt 8644 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27892, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1378, stateTaxDue: makeFromInt 1140 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87451, itemizedDeductions: makeFromInt 24792, federalTaxDue: makeFromInt 10985, stateTaxDue: makeFromInt 3918 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21996, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33143, ordinaryIncomeNonSS: makeFromInt 86468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21058, federalTaxDue: makeFromInt 11820, stateTaxDue: makeFromInt 3961 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29736, ordinaryIncomeNonSS: makeFromInt 124660, qualifiedIncome: makeFromInt 11319, itemizedDeductions: makeFromInt 27784, federalTaxDue: makeFromInt 25094, stateTaxDue: makeFromInt 6544 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40345, ordinaryIncomeNonSS: makeFromInt 55515, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6927, stateTaxDue: makeFromInt 2301 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16967, ordinaryIncomeNonSS: makeFromInt 77233, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12863, stateTaxDue: makeFromInt 3607 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42297, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56742, itemizedDeductions: makeFromInt 29891, federalTaxDue: makeFromInt 38060, stateTaxDue: makeFromInt 10095 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29225, ordinaryIncomeNonSS: makeFromInt 147337, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47569, stateTaxDue: makeFromInt 12268 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61103, itemizedDeductions: makeFromInt 28451, federalTaxDue: makeFromInt 2472, stateTaxDue: makeFromInt 2800 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3436, ordinaryIncomeNonSS: makeFromInt 112542, qualifiedIncome: makeFromInt 28866, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13793, stateTaxDue: makeFromInt 6395 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6068, ordinaryIncomeNonSS: makeFromInt 97365, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18845, stateTaxDue: makeFromInt 4741 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5736, ordinaryIncomeNonSS: makeFromInt 5803, qualifiedIncome: makeFromInt 26154, itemizedDeductions: makeFromInt 6155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1283 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19082, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6705, stateTaxDue: makeFromInt 4376 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1849, ordinaryIncomeNonSS: makeFromInt 758, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3419, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4866 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10578, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 964, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8589, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33438, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5703, federalTaxDue: makeFromInt 7481, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28683, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61329, itemizedDeductions: makeFromInt 14880, federalTaxDue: makeFromInt 41929, stateTaxDue: makeFromInt 10349 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26292, ordinaryIncomeNonSS: makeFromInt 44983, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2464, federalTaxDue: makeFromInt 7512, stateTaxDue: makeFromInt 1794 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2142, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42996, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44356, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4641, stateTaxDue: makeFromInt 1796 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19758, federalTaxDue: makeFromInt 1250, stateTaxDue: makeFromInt 1345 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18497, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 719 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45184, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44805, itemizedDeductions: makeFromInt 26526, federalTaxDue: makeFromInt 636, stateTaxDue: makeFromInt 1865 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26174, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22934, federalTaxDue: makeFromInt 27858, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43273, itemizedDeductions: makeFromInt 16429, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1589 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32316, ordinaryIncomeNonSS: makeFromInt 103786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21133, stateTaxDue: makeFromInt 4734 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11051, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14052, stateTaxDue: makeFromInt 5183 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27594, ordinaryIncomeNonSS: makeFromInt 50046, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24335, stateTaxDue: makeFromInt 7306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23262, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16062, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12377, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18936, ordinaryIncomeNonSS: makeFromInt 97306, qualifiedIncome: makeFromInt 77082, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29001, stateTaxDue: makeFromInt 8465 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7273, ordinaryIncomeNonSS: makeFromInt 41307, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20082, federalTaxDue: makeFromInt 5494, stateTaxDue: makeFromInt 6554 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34856, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57745, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 973, stateTaxDue: makeFromInt 2412 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24234, qualifiedIncome: makeFromInt 72011, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6934, stateTaxDue: makeFromInt 4557 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97465, qualifiedIncome: makeFromInt 17949, itemizedDeductions: makeFromInt 7456, federalTaxDue: makeFromInt 17330, stateTaxDue: makeFromInt 5606 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16680, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1560, stateTaxDue: makeFromInt 3133 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38122, ordinaryIncomeNonSS: makeFromInt 11879, qualifiedIncome: makeFromInt 76785, itemizedDeductions: makeFromInt 14462, federalTaxDue: makeFromInt 2615, stateTaxDue: makeFromInt 3869 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39975, ordinaryIncomeNonSS: makeFromInt 80452, qualifiedIncome: makeFromInt 84767, itemizedDeductions: makeFromInt 25697, federalTaxDue: makeFromInt 23953, stateTaxDue: makeFromInt 7697 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47184, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4195, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33070, ordinaryIncomeNonSS: makeFromInt 89773, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19229, federalTaxDue: makeFromInt 13898, stateTaxDue: makeFromInt 4028 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6177, federalTaxDue: makeFromInt 29462, stateTaxDue: makeFromInt 5393 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27206, itemizedDeductions: makeFromInt 11919, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1041 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42399, itemizedDeductions: makeFromInt 5349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1510 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3343, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4190, itemizedDeductions: makeFromInt 6510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38965, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 197, stateTaxDue: makeFromInt 1559 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16379, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43037, ordinaryIncomeNonSS: makeFromInt 71053, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15533, stateTaxDue: makeFromInt 3098 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26650, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 480, stateTaxDue: makeFromInt 1078 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42863, ordinaryIncomeNonSS: makeFromInt 34780, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23346, federalTaxDue: makeFromInt 3894, stateTaxDue: makeFromInt 1364 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31441, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11063, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2900, ordinaryIncomeNonSS: makeFromInt 116783, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26274, federalTaxDue: makeFromInt 16488, stateTaxDue: makeFromInt 5473 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56950, qualifiedIncome: makeFromInt 88464, itemizedDeductions: makeFromInt 14951, federalTaxDue: makeFromInt 14712, stateTaxDue: makeFromInt 6896 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14045, qualifiedIncome: makeFromInt 38416, itemizedDeductions: makeFromInt 2574, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2148 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45832, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11042, federalTaxDue: makeFromInt 49982, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8054, qualifiedIncome: makeFromInt 75224, itemizedDeductions: makeFromInt 22728, federalTaxDue: makeFromInt 3235, stateTaxDue: makeFromInt 3689 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21965, itemizedDeductions: makeFromInt 3280, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 671 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 198, qualifiedIncome: makeFromInt 38248, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1396 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1474, stateTaxDue: makeFromInt 944 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128466, qualifiedIncome: makeFromInt 78373, itemizedDeductions: makeFromInt 2395, federalTaxDue: makeFromInt 31166, stateTaxDue: makeFromInt 9998 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14785, ordinaryIncomeNonSS: makeFromInt 71017, qualifiedIncome: makeFromInt 89354, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20510, stateTaxDue: makeFromInt 7644 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22052, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68499, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4342, stateTaxDue: makeFromInt 3170 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6294, ordinaryIncomeNonSS: makeFromInt 67227, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22321, federalTaxDue: makeFromInt 5448, stateTaxDue: makeFromInt 2776 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14681, ordinaryIncomeNonSS: makeFromInt 73276, qualifiedIncome: makeFromInt 60991, itemizedDeductions: makeFromInt 4557, federalTaxDue: makeFromInt 21547, stateTaxDue: makeFromInt 6501 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31746, ordinaryIncomeNonSS: makeFromInt 47213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27294, federalTaxDue: makeFromInt 4388, stateTaxDue: makeFromInt 1686 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70076, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3029 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26618, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 799 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3577, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20593, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 499 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29834, stateTaxDue: makeFromInt 6864 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30370, ordinaryIncomeNonSS: makeFromInt 126390, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25431, stateTaxDue: makeFromInt 5997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81048, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5782, stateTaxDue: makeFromInt 3377 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132970, qualifiedIncome: makeFromInt 2248, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19339, stateTaxDue: makeFromInt 6672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19713, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57582, itemizedDeductions: makeFromInt 18058, federalTaxDue: makeFromInt 2990, stateTaxDue: makeFromInt 2712 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15691, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7211, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149864, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23725, federalTaxDue: makeFromInt 22065, stateTaxDue: makeFromInt 7194 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47849, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4480, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 647 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38240, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45079, itemizedDeductions: makeFromInt 14828, federalTaxDue: makeFromInt 68, stateTaxDue: makeFromInt 1799 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22440, qualifiedIncome: makeFromInt 33557, itemizedDeductions: makeFromInt 29713, federalTaxDue: makeFromInt 7631, stateTaxDue: makeFromInt 2545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31736, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6879, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43052, itemizedDeductions: makeFromInt 12212, federalTaxDue: makeFromInt 42308, stateTaxDue: makeFromInt 9499 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17724, ordinaryIncomeNonSS: makeFromInt 114493, qualifiedIncome: makeFromInt 69761, itemizedDeductions: makeFromInt 6951, federalTaxDue: makeFromInt 27916, stateTaxDue: makeFromInt 8838 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26360, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 643 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31201, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45468, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1751 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45707, ordinaryIncomeNonSS: makeFromInt 101106, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19948, stateTaxDue: makeFromInt 4680 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73332, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4760, stateTaxDue: makeFromInt 2992 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40025, ordinaryIncomeNonSS: makeFromInt 143968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32160, stateTaxDue: makeFromInt 6894 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27665, ordinaryIncomeNonSS: makeFromInt 111182, qualifiedIncome: makeFromInt 1266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21154, stateTaxDue: makeFromInt 5286 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29543, ordinaryIncomeNonSS: makeFromInt 29895, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1652, federalTaxDue: makeFromInt 14284, stateTaxDue: makeFromInt 6176 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15579, ordinaryIncomeNonSS: makeFromInt 54473, qualifiedIncome: makeFromInt 6930, itemizedDeductions: makeFromInt 5653, federalTaxDue: makeFromInt 11152, stateTaxDue: makeFromInt 2907 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62170, itemizedDeductions: makeFromInt 4292, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2518 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28115, ordinaryIncomeNonSS: makeFromInt 52880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12384, federalTaxDue: makeFromInt 5662, stateTaxDue: makeFromInt 2044 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52013, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4357, stateTaxDue: makeFromInt 2204 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146285, qualifiedIncome: makeFromInt 54863, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32181, stateTaxDue: makeFromInt 9810 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63680, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3552, stateTaxDue: makeFromInt 2729 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5957, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85357, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30933, stateTaxDue: makeFromInt 11093 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29304, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70388, qualifiedIncome: makeFromInt 9099, itemizedDeductions: makeFromInt 20869, federalTaxDue: makeFromInt 4920, stateTaxDue: makeFromInt 3299 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71823, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2861, stateTaxDue: makeFromInt 3082 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27236, federalTaxDue: makeFromInt 32171, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3171, itemizedDeductions: makeFromInt 15940, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34510, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45974, ordinaryIncomeNonSS: makeFromInt 43949, qualifiedIncome: makeFromInt 65202, itemizedDeductions: makeFromInt 7877, federalTaxDue: makeFromInt 20745, stateTaxDue: makeFromInt 5203 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18062, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 493 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27765, ordinaryIncomeNonSS: makeFromInt 42538, qualifiedIncome: makeFromInt 26279, itemizedDeductions: makeFromInt 6785, federalTaxDue: makeFromInt 10346, stateTaxDue: makeFromInt 2986 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20010, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72101, qualifiedIncome: makeFromInt 14745, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6287, stateTaxDue: makeFromInt 3767 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9289, itemizedDeductions: makeFromInt 11836, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24817, ordinaryIncomeNonSS: makeFromInt 24319, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16478, federalTaxDue: makeFromInt 1554, stateTaxDue: makeFromInt 961 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5799, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8079, federalTaxDue: makeFromInt 26815, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20283, qualifiedIncome: makeFromInt 99209, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9234, stateTaxDue: makeFromInt 5666 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22736, ordinaryIncomeNonSS: makeFromInt 108848, qualifiedIncome: makeFromInt 61983, itemizedDeductions: makeFromInt 9472, federalTaxDue: makeFromInt 29901, stateTaxDue: makeFromInt 8284 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81587, qualifiedIncome: makeFromInt 6852, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11590, stateTaxDue: makeFromInt 3967 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124530, qualifiedIncome: makeFromInt 51651, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19335, stateTaxDue: makeFromInt 8134 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9904, ordinaryIncomeNonSS: makeFromInt 72994, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4317, federalTaxDue: makeFromInt 10294, stateTaxDue: makeFromInt 3195 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48148, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99181, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41072, stateTaxDue: makeFromInt 11984 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3475, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95225, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 896, stateTaxDue: makeFromInt 4286 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10942, ordinaryIncomeNonSS: makeFromInt 41066, qualifiedIncome: makeFromInt 60177, itemizedDeductions: makeFromInt 17528, federalTaxDue: makeFromInt 3837, stateTaxDue: makeFromInt 4668 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19953, ordinaryIncomeNonSS: makeFromInt 35097, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28085, federalTaxDue: makeFromInt 2291, stateTaxDue: makeFromInt 1300 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14575, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19365, ordinaryIncomeNonSS: makeFromInt 24204, qualifiedIncome: makeFromInt 18226, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 710, stateTaxDue: makeFromInt 1447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141237, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24613, stateTaxDue: makeFromInt 6387 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22823, federalTaxDue: makeFromInt 24544, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20732, ordinaryIncomeNonSS: makeFromInt 106309, qualifiedIncome: makeFromInt 31661, itemizedDeductions: makeFromInt 8022, federalTaxDue: makeFromInt 22843, stateTaxDue: makeFromInt 6422 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37557, stateTaxDue: makeFromInt 7622 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30191, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4688, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29934, qualifiedIncome: makeFromInt 50, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4389, stateTaxDue: makeFromInt 1044 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18237, federalTaxDue: makeFromInt 27692, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28594, ordinaryIncomeNonSS: makeFromInt 13584, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 40 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34593, ordinaryIncomeNonSS: makeFromInt 52392, qualifiedIncome: makeFromInt 14938, itemizedDeductions: makeFromInt 21381, federalTaxDue: makeFromInt 5872, stateTaxDue: makeFromInt 2692 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20694, ordinaryIncomeNonSS: makeFromInt 28584, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2307, federalTaxDue: makeFromInt 6921, stateTaxDue: makeFromInt 5905 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49189, ordinaryIncomeNonSS: makeFromInt 43300, qualifiedIncome: makeFromInt 66577, itemizedDeductions: makeFromInt 26226, federalTaxDue: makeFromInt 11255, stateTaxDue: makeFromInt 5019 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44871, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7485, stateTaxDue: makeFromInt 6569 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77254, qualifiedIncome: makeFromInt 64786, itemizedDeductions: makeFromInt 20827, federalTaxDue: makeFromInt 8865, stateTaxDue: makeFromInt 6427 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57856, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2218 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130697, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9399, federalTaxDue: makeFromInt 14591, stateTaxDue: makeFromInt 6060 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15856, federalTaxDue: makeFromInt 30776, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126346, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18967, stateTaxDue: makeFromInt 5995 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8885, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73822, itemizedDeductions: makeFromInt 16652, federalTaxDue: makeFromInt 2111, stateTaxDue: makeFromInt 3116 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17015, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123131, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24648, stateTaxDue: makeFromInt 5627 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31688, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16040, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4485, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9673, federalTaxDue: makeFromInt 40270, stateTaxDue: makeFromInt 12199 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3784, ordinaryIncomeNonSS: makeFromInt 113756, qualifiedIncome: makeFromInt 29117, itemizedDeductions: makeFromInt 14918, federalTaxDue: makeFromInt 22073, stateTaxDue: makeFromInt 6889 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38263, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15612, federalTaxDue: makeFromInt 2443, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106546, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24931, federalTaxDue: makeFromInt 8842, stateTaxDue: makeFromInt 4652 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109589, qualifiedIncome: makeFromInt 20361, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25914, stateTaxDue: makeFromInt 5923 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63631, qualifiedIncome: makeFromInt 97489, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10415, stateTaxDue: makeFromInt 7666 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31369, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27095, federalTaxDue: makeFromInt 23057, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4721, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37223, ordinaryIncomeNonSS: makeFromInt 33860, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21087, federalTaxDue: makeFromInt 3455, stateTaxDue: makeFromInt 1118 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33088, ordinaryIncomeNonSS: makeFromInt 89021, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27120, federalTaxDue: makeFromInt 15442, stateTaxDue: makeFromInt 4196 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49947, ordinaryIncomeNonSS: makeFromInt 11528, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 480, stateTaxDue: makeFromInt 241 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34279, itemizedDeductions: makeFromInt 2047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1139 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27735, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40696, ordinaryIncomeNonSS: makeFromInt 58925, qualifiedIncome: makeFromInt 58893, itemizedDeductions: makeFromInt 8627, federalTaxDue: makeFromInt 12372, stateTaxDue: makeFromInt 5416 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82982, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6657, stateTaxDue: makeFromInt 3804 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38146, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52731, itemizedDeductions: makeFromInt 4386, federalTaxDue: makeFromInt 7444, stateTaxDue: makeFromInt 2465 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17259, qualifiedIncome: makeFromInt 91734, itemizedDeductions: makeFromInt 4756, federalTaxDue: makeFromInt 373, stateTaxDue: makeFromInt 4975 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26255, ordinaryIncomeNonSS: makeFromInt 64030, qualifiedIncome: makeFromInt 50088, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15952, stateTaxDue: makeFromInt 5269 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41588, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2100, stateTaxDue: makeFromInt 4175 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10229, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40853, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89804, qualifiedIncome: makeFromInt 52528, itemizedDeductions: makeFromInt 2760, federalTaxDue: makeFromInt 34994, stateTaxDue: makeFromInt 7035 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44575, ordinaryIncomeNonSS: makeFromInt 12453, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 168 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68856, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22002, stateTaxDue: makeFromInt 7988 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11220, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24647, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30502, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61933, qualifiedIncome: makeFromInt 37654, itemizedDeductions: makeFromInt 19940, federalTaxDue: makeFromInt 10635, stateTaxDue: makeFromInt 4724 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22858, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62118, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2719 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74743, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3062 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10940, federalTaxDue: makeFromInt 10268, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117126, qualifiedIncome: makeFromInt 21935, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12987, stateTaxDue: makeFromInt 6278 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48386, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12302, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45281, ordinaryIncomeNonSS: makeFromInt 84718, qualifiedIncome: makeFromInt 79840, itemizedDeductions: makeFromInt 13064, federalTaxDue: makeFromInt 31178, stateTaxDue: makeFromInt 7773 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46183, qualifiedIncome: makeFromInt 63147, itemizedDeductions: makeFromInt 5972, federalTaxDue: makeFromInt 12721, stateTaxDue: makeFromInt 5147 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16596, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52076, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3899, stateTaxDue: makeFromInt 2349 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14101, ordinaryIncomeNonSS: makeFromInt 14865, qualifiedIncome: makeFromInt 12657, itemizedDeductions: makeFromInt 15397, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 955 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52662, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3059, stateTaxDue: makeFromInt 2237 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1737, federalTaxDue: makeFromInt 10678, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124695, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18554, stateTaxDue: makeFromInt 5911 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30262, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9091, federalTaxDue: makeFromInt 25456, stateTaxDue: makeFromInt 5377 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25527, stateTaxDue: makeFromInt 6234 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41200, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22405, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3427, ordinaryIncomeNonSS: makeFromInt 12333, qualifiedIncome: makeFromInt 15769, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1030 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32082, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43903, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44906, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94250, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7218, stateTaxDue: makeFromInt 4138 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36223, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6791, federalTaxDue: makeFromInt 33697, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46024, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6486, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3496, ordinaryIncomeNonSS: makeFromInt 31785, qualifiedIncome: makeFromInt 33368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 866, stateTaxDue: makeFromInt 2583 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81035, qualifiedIncome: makeFromInt 88252, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30535, stateTaxDue: makeFromInt 7889 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37153, ordinaryIncomeNonSS: makeFromInt 144893, qualifiedIncome: makeFromInt 56118, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43433, stateTaxDue: makeFromInt 9823 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23969, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26286, federalTaxDue: makeFromInt 19412, stateTaxDue: makeFromInt 6628 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35566, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7292, itemizedDeductions: makeFromInt 9299, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25248, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47061, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49335, itemizedDeductions: makeFromInt 22670, federalTaxDue: makeFromInt 654, stateTaxDue: makeFromInt 2067 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23699, ordinaryIncomeNonSS: makeFromInt 41914, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12554, federalTaxDue: makeFromInt 3924, stateTaxDue: makeFromInt 1709 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56400, qualifiedIncome: makeFromInt 42816, itemizedDeductions: makeFromInt 11689, federalTaxDue: makeFromInt 17460, stateTaxDue: makeFromInt 4509 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22361, itemizedDeductions: makeFromInt 7452, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 590 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12901, ordinaryIncomeNonSS: makeFromInt 35815, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17016, federalTaxDue: makeFromInt 2582, stateTaxDue: makeFromInt 1416 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6207, ordinaryIncomeNonSS: makeFromInt 58273, qualifiedIncome: makeFromInt 46273, itemizedDeductions: makeFromInt 11217, federalTaxDue: makeFromInt 3928, stateTaxDue: makeFromInt 4679 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80351, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4013, stateTaxDue: makeFromInt 3443 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67075, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37664, stateTaxDue: makeFromInt 10642 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121886, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28147, stateTaxDue: makeFromInt 5665 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57837, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25792, stateTaxDue: makeFromInt 7317 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 160 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9434, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50381, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5231, federalTaxDue: makeFromInt 2519, stateTaxDue: makeFromInt 1844 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70514, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4722, stateTaxDue: makeFromInt 2943 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22712, federalTaxDue: makeFromInt 9816, stateTaxDue: makeFromInt 2104 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75455, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1330, stateTaxDue: makeFromInt 3298 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2005, ordinaryIncomeNonSS: makeFromInt 132988, qualifiedIncome: makeFromInt 4259, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16109, stateTaxDue: makeFromInt 6187 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47978, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87901, itemizedDeductions: makeFromInt 27045, federalTaxDue: makeFromInt 9980, stateTaxDue: makeFromInt 4140 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3091, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59023, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3063, stateTaxDue: makeFromInt 2786 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85331, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26472, stateTaxDue: makeFromInt 9012 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56923, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29912, federalTaxDue: makeFromInt 12137, stateTaxDue: makeFromInt 2679 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46768, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5447, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32321, ordinaryIncomeNonSS: makeFromInt 10501, qualifiedIncome: makeFromInt 72084, itemizedDeductions: makeFromInt 28566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3559 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5309, ordinaryIncomeNonSS: makeFromInt 33231, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 774, stateTaxDue: makeFromInt 1287 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44396, ordinaryIncomeNonSS: makeFromInt 147530, qualifiedIncome: makeFromInt 73463, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41181, stateTaxDue: makeFromInt 10924 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80728, qualifiedIncome: makeFromInt 32203, itemizedDeductions: makeFromInt 16695, federalTaxDue: makeFromInt 14666, stateTaxDue: makeFromInt 5392 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118152, qualifiedIncome: makeFromInt 85046, itemizedDeductions: makeFromInt 25160, federalTaxDue: makeFromInt 29250, stateTaxDue: makeFromInt 10039 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22282, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30062, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1309 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29504, ordinaryIncomeNonSS: makeFromInt 68084, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3750, federalTaxDue: makeFromInt 16474, stateTaxDue: makeFromInt 3248 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134349, qualifiedIncome: makeFromInt 23963, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24715, stateTaxDue: makeFromInt 7850 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4579, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26319, stateTaxDue: makeFromInt 7474 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11793, itemizedDeductions: makeFromInt 16897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109333, qualifiedIncome: makeFromInt 37089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19081, stateTaxDue: makeFromInt 6746 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53139, itemizedDeductions: makeFromInt 2054, federalTaxDue: makeFromInt 6500, stateTaxDue: makeFromInt 2282 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24493, federalTaxDue: makeFromInt 17139, stateTaxDue: makeFromInt 4314 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16649, ordinaryIncomeNonSS: makeFromInt 47659, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3377, stateTaxDue: makeFromInt 1908 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28201, ordinaryIncomeNonSS: makeFromInt 97633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13734, federalTaxDue: makeFromInt 15543, stateTaxDue: makeFromInt 4307 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61855, qualifiedIncome: makeFromInt 70980, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11956, stateTaxDue: makeFromInt 6067 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43790, ordinaryIncomeNonSS: makeFromInt 25024, qualifiedIncome: makeFromInt 7678, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2608, stateTaxDue: makeFromInt 1239 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74929, itemizedDeductions: makeFromInt 14277, federalTaxDue: makeFromInt 5592, stateTaxDue: makeFromInt 3597 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51728, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3754, federalTaxDue: makeFromInt 6116, stateTaxDue: makeFromInt 2414 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93791, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26308, federalTaxDue: makeFromInt 20571, stateTaxDue: makeFromInt 4514 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12141, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48940, ordinaryIncomeNonSS: makeFromInt 15565, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 293, stateTaxDue: makeFromInt 345 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8751, qualifiedIncome: makeFromInt 8523, itemizedDeductions: makeFromInt 12231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 228 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33833, ordinaryIncomeNonSS: makeFromInt 59000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11160, stateTaxDue: makeFromInt 2495 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30472, ordinaryIncomeNonSS: makeFromInt 83946, qualifiedIncome: makeFromInt 9752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19236, stateTaxDue: makeFromInt 4554 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52800, qualifiedIncome: makeFromInt 97211, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17685, stateTaxDue: makeFromInt 7246 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48836, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10816, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2224, ordinaryIncomeNonSS: makeFromInt 121173, qualifiedIncome: makeFromInt 59377, itemizedDeductions: makeFromInt 28135, federalTaxDue: makeFromInt 23169, stateTaxDue: makeFromInt 8759 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81202, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39783, stateTaxDue: makeFromInt 11363 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30535, ordinaryIncomeNonSS: makeFromInt 38527, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4351, stateTaxDue: makeFromInt 1551 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91202, itemizedDeductions: makeFromInt 6383, federalTaxDue: makeFromInt 7620, stateTaxDue: makeFromInt 4305 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9234, itemizedDeductions: makeFromInt 17932, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34062, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7894, qualifiedIncome: makeFromInt 5358, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 451 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27293, ordinaryIncomeNonSS: makeFromInt 61533, qualifiedIncome: makeFromInt 64405, itemizedDeductions: makeFromInt 1851, federalTaxDue: makeFromInt 17020, stateTaxDue: makeFromInt 5722 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5924, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11785, stateTaxDue: makeFromInt 5006 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30888, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14898, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22911, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54864, qualifiedIncome: makeFromInt 52758, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25438, stateTaxDue: makeFromInt 5264 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60572, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3438, stateTaxDue: makeFromInt 2865 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91041, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36631, stateTaxDue: makeFromInt 11950 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127120, qualifiedIncome: makeFromInt 38841, itemizedDeductions: makeFromInt 19574, federalTaxDue: makeFromInt 23178, stateTaxDue: makeFromInt 8015 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70859, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2961 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46392, ordinaryIncomeNonSS: makeFromInt 110411, qualifiedIncome: makeFromInt 98334, itemizedDeductions: makeFromInt 29672, federalTaxDue: makeFromInt 35323, stateTaxDue: makeFromInt 10197 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29158, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11165, federalTaxDue: makeFromInt 26936, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35907, ordinaryIncomeNonSS: makeFromInt 141202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 500, federalTaxDue: makeFromInt 30201, stateTaxDue: makeFromInt 6651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20805, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19060, federalTaxDue: makeFromInt 28010, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5189, itemizedDeductions: makeFromInt 4623, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 5 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1060, federalTaxDue: makeFromInt 28188, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141541, qualifiedIncome: makeFromInt 9214, itemizedDeductions: makeFromInt 12040, federalTaxDue: makeFromInt 27042, stateTaxDue: makeFromInt 7342 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47220, ordinaryIncomeNonSS: makeFromInt 37040, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3789, stateTaxDue: makeFromInt 1477 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19480, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5592, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25111, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22287, federalTaxDue: makeFromInt 24295, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133175, qualifiedIncome: makeFromInt 64726, itemizedDeductions: makeFromInt 2173, federalTaxDue: makeFromInt 31978, stateTaxDue: makeFromInt 9640 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28085, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9744, federalTaxDue: makeFromInt 37859, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5795, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13440, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44259, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86583, itemizedDeductions: makeFromInt 8794, federalTaxDue: makeFromInt 6931, stateTaxDue: makeFromInt 3967 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9060, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23565, stateTaxDue: makeFromInt 8385 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48719, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17745, federalTaxDue: makeFromInt 8662, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27200, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 938 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47483, qualifiedIncome: makeFromInt 72624, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23303, stateTaxDue: makeFromInt 5750 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19729, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 511 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31389, ordinaryIncomeNonSS: makeFromInt 50474, qualifiedIncome: makeFromInt 68651, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19971, stateTaxDue: makeFromInt 5501 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79158, itemizedDeductions: makeFromInt 14403, federalTaxDue: makeFromInt 49692, stateTaxDue: makeFromInt 11003 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21556, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16736, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24785, stateTaxDue: makeFromInt 7173 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96283, itemizedDeductions: makeFromInt 16387, federalTaxDue: makeFromInt 3147, stateTaxDue: makeFromInt 4462 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27671, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19830, federalTaxDue: makeFromInt 796, stateTaxDue: makeFromInt 983 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9043, ordinaryIncomeNonSS: makeFromInt 100051, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26219, stateTaxDue: makeFromInt 9628 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17295, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 331 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21742, ordinaryIncomeNonSS: makeFromInt 103711, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4314, federalTaxDue: makeFromInt 13481, stateTaxDue: makeFromInt 4840 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24621, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4349, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24959, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 69, ordinaryIncomeNonSS: makeFromInt 93411, qualifiedIncome: makeFromInt 83648, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23173, stateTaxDue: makeFromInt 8806 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22998, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11465, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29759, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5737, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29131, stateTaxDue: makeFromInt 7532 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16887, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30241, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17737, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35082, itemizedDeductions: makeFromInt 516, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1565 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21787, ordinaryIncomeNonSS: makeFromInt 64022, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19910, stateTaxDue: makeFromInt 7826 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35935, ordinaryIncomeNonSS: makeFromInt 93760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11668, federalTaxDue: makeFromInt 23441, stateTaxDue: makeFromInt 4557 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6253, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6804, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56603, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39842, stateTaxDue: makeFromInt 10088 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28474, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4587, federalTaxDue: makeFromInt 202, stateTaxDue: makeFromInt 949 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37064, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98774, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8067, stateTaxDue: makeFromInt 4364 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13677, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24784, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 984 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83341, qualifiedIncome: makeFromInt 26667, itemizedDeductions: makeFromInt 20536, federalTaxDue: makeFromInt 13434, stateTaxDue: makeFromInt 5045 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45794, ordinaryIncomeNonSS: makeFromInt 48680, qualifiedIncome: makeFromInt 9465, itemizedDeductions: makeFromInt 9895, federalTaxDue: makeFromInt 10575, stateTaxDue: makeFromInt 2532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50504, qualifiedIncome: makeFromInt 12278, itemizedDeductions: makeFromInt 26694, federalTaxDue: makeFromInt 2575, stateTaxDue: makeFromInt 2564 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39252, ordinaryIncomeNonSS: makeFromInt 111324, qualifiedIncome: makeFromInt 82145, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36337, stateTaxDue: makeFromInt 9643 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44521, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72482, itemizedDeductions: makeFromInt 7656, federalTaxDue: makeFromInt 5008, stateTaxDue: makeFromInt 3248 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112248, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26234, federalTaxDue: makeFromInt 9923, stateTaxDue: makeFromInt 4937 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17827, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80359, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6054, stateTaxDue: makeFromInt 3763 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78859, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14581, stateTaxDue: makeFromInt 8268 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14315, ordinaryIncomeNonSS: makeFromInt 71185, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22441, federalTaxDue: makeFromInt 6686, stateTaxDue: makeFromInt 3150 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41432, ordinaryIncomeNonSS: makeFromInt 110903, qualifiedIncome: makeFromInt 40849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30828, stateTaxDue: makeFromInt 7133 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22111, ordinaryIncomeNonSS: makeFromInt 86938, qualifiedIncome: makeFromInt 77364, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22562, stateTaxDue: makeFromInt 7640 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68952, qualifiedIncome: makeFromInt 67966, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13420, stateTaxDue: makeFromInt 6271 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28215, ordinaryIncomeNonSS: makeFromInt 70520, qualifiedIncome: makeFromInt 96783, itemizedDeductions: makeFromInt 4058, federalTaxDue: makeFromInt 18322, stateTaxDue: makeFromInt 7690 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30787, ordinaryIncomeNonSS: makeFromInt 26390, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 346, stateTaxDue: makeFromInt 1122 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42839, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2382, stateTaxDue: makeFromInt 1756 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19788, ordinaryIncomeNonSS: makeFromInt 38862, qualifiedIncome: makeFromInt 40047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5649, stateTaxDue: makeFromInt 3570 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20139, qualifiedIncome: makeFromInt 85250, itemizedDeductions: makeFromInt 21652, federalTaxDue: makeFromInt 3825, stateTaxDue: makeFromInt 4694 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78042, qualifiedIncome: makeFromInt 21781, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6104, stateTaxDue: makeFromInt 4642 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13359, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25590, itemizedDeductions: makeFromInt 2927, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 754 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19353, ordinaryIncomeNonSS: makeFromInt 71725, qualifiedIncome: makeFromInt 49499, itemizedDeductions: makeFromInt 8410, federalTaxDue: makeFromInt 18075, stateTaxDue: makeFromInt 5754 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28956, ordinaryIncomeNonSS: makeFromInt 60200, qualifiedIncome: makeFromInt 69109, itemizedDeductions: makeFromInt 14011, federalTaxDue: makeFromInt 14825, stateTaxDue: makeFromInt 5942 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7088, ordinaryIncomeNonSS: makeFromInt 35823, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2859, federalTaxDue: makeFromInt 16192, stateTaxDue: makeFromInt 6536 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31012, ordinaryIncomeNonSS: makeFromInt 120427, qualifiedIncome: makeFromInt 94991, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30557, stateTaxDue: makeFromInt 10096 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54891, qualifiedIncome: makeFromInt 19253, itemizedDeductions: makeFromInt 20294, federalTaxDue: makeFromInt 3920, stateTaxDue: makeFromInt 3435 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9884, ordinaryIncomeNonSS: makeFromInt 116995, qualifiedIncome: makeFromInt 91546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34428, stateTaxDue: makeFromInt 9972 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13963, ordinaryIncomeNonSS: makeFromInt 56537, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15028, stateTaxDue: makeFromInt 7535 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42833, ordinaryIncomeNonSS: makeFromInt 121817, qualifiedIncome: makeFromInt 62366, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30646, stateTaxDue: makeFromInt 8843 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49601, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1979 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93461, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12415, stateTaxDue: makeFromInt 4418 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36013, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7484, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47698, ordinaryIncomeNonSS: makeFromInt 146608, qualifiedIncome: makeFromInt 72279, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45568, stateTaxDue: makeFromInt 10714 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47616, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1707, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27057, stateTaxDue: makeFromInt 6910 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4269, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39725, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11784, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31938, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 922 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1024, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18509, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38970, ordinaryIncomeNonSS: makeFromInt 111946, qualifiedIncome: makeFromInt 62351, itemizedDeductions: makeFromInt 10129, federalTaxDue: makeFromInt 26496, stateTaxDue: makeFromInt 8240 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24776, ordinaryIncomeNonSS: makeFromInt 55496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5147, stateTaxDue: makeFromInt 2100 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2125, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8792, itemizedDeductions: makeFromInt 5932, federalTaxDue: makeFromInt 26180, stateTaxDue: makeFromInt 7548 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9708, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45399, ordinaryIncomeNonSS: makeFromInt 117066, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29146, federalTaxDue: makeFromInt 18435, stateTaxDue: makeFromInt 5178 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87118, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12174, federalTaxDue: makeFromInt 12427, stateTaxDue: makeFromInt 4015 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7365, qualifiedIncome: makeFromInt 56270, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2381, stateTaxDue: makeFromInt 2727 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87663, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14518, stateTaxDue: makeFromInt 4128 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104939, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21264, federalTaxDue: makeFromInt 38180, stateTaxDue: makeFromInt 10105 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120905, qualifiedIncome: makeFromInt 21986, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27290, stateTaxDue: makeFromInt 7063 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17693, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98928, itemizedDeductions: makeFromInt 1216, federalTaxDue: makeFromInt 9192, stateTaxDue: makeFromInt 4821 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95648, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16231, stateTaxDue: makeFromInt 4307 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18331, ordinaryIncomeNonSS: makeFromInt 54439, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18303, federalTaxDue: makeFromInt 7688, stateTaxDue: makeFromInt 2552 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82706, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6398, stateTaxDue: makeFromInt 3660 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45496, ordinaryIncomeNonSS: makeFromInt 15195, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 85 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37468, ordinaryIncomeNonSS: makeFromInt 5267, qualifiedIncome: makeFromInt 31179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 122, stateTaxDue: makeFromInt 1430 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43290, ordinaryIncomeNonSS: makeFromInt 19441, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27025, federalTaxDue: makeFromInt 294, stateTaxDue: makeFromInt 517 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13242, ordinaryIncomeNonSS: makeFromInt 29826, qualifiedIncome: makeFromInt 87286, itemizedDeductions: makeFromInt 26742, federalTaxDue: makeFromInt 4558, stateTaxDue: makeFromInt 5181 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6483, qualifiedIncome: makeFromInt 15350, itemizedDeductions: makeFromInt 27437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 461 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9980, ordinaryIncomeNonSS: makeFromInt 135336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15831, stateTaxDue: makeFromInt 6092 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9133, ordinaryIncomeNonSS: makeFromInt 67238, qualifiedIncome: makeFromInt 24272, itemizedDeductions: makeFromInt 9860, federalTaxDue: makeFromInt 11995, stateTaxDue: makeFromInt 4121 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20202, ordinaryIncomeNonSS: makeFromInt 139624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26579, stateTaxDue: makeFromInt 6672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79262, itemizedDeductions: makeFromInt 24056, federalTaxDue: makeFromInt 4329, stateTaxDue: makeFromInt 3696 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31647, stateTaxDue: makeFromInt 10853 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14059, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5411, itemizedDeductions: makeFromInt 27026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50028, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4991, stateTaxDue: makeFromInt 2183 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27707, ordinaryIncomeNonSS: makeFromInt 108143, qualifiedIncome: makeFromInt 29821, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25712, stateTaxDue: makeFromInt 6443 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2356, ordinaryIncomeNonSS: makeFromInt 34736, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3541, federalTaxDue: makeFromInt 1151, stateTaxDue: makeFromInt 1108 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37564, itemizedDeductions: makeFromInt 23417, federalTaxDue: makeFromInt 31304, stateTaxDue: makeFromInt 9123 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2474, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32154, stateTaxDue: makeFromInt 7225 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7157, ordinaryIncomeNonSS: makeFromInt 141167, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18073, stateTaxDue: makeFromInt 6383 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26757, qualifiedIncome: makeFromInt 74533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15945, stateTaxDue: makeFromInt 4690 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121488, qualifiedIncome: makeFromInt 39798, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25520, stateTaxDue: makeFromInt 7797 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85330, itemizedDeductions: makeFromInt 3452, federalTaxDue: makeFromInt 36060, stateTaxDue: makeFromInt 11392 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24362, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 763 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25903, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35604, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 117, stateTaxDue: makeFromInt 1525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5604, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51327, itemizedDeductions: makeFromInt 15528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1891 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6283, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16469, ordinaryIncomeNonSS: makeFromInt 53826, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6775, stateTaxDue: makeFromInt 2236 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76573, itemizedDeductions: makeFromInt 16565, federalTaxDue: makeFromInt 36910, stateTaxDue: makeFromInt 10874 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37013, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7791, stateTaxDue: makeFromInt 6476 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14102, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28998, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18207, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 826 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28343, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92405, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5158, stateTaxDue: makeFromInt 4145 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 201, ordinaryIncomeNonSS: makeFromInt 54935, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8374, federalTaxDue: makeFromInt 2669, stateTaxDue: makeFromInt 2072 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34160, qualifiedIncome: makeFromInt 51505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3981, stateTaxDue: makeFromInt 3941 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24003, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24635, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 757 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120194, qualifiedIncome: makeFromInt 39674, itemizedDeductions: makeFromInt 24402, federalTaxDue: makeFromInt 30935, stateTaxDue: makeFromInt 7618 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22898, qualifiedIncome: makeFromInt 15786, itemizedDeductions: makeFromInt 5039, federalTaxDue: makeFromInt 490, stateTaxDue: makeFromInt 1422 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38142, ordinaryIncomeNonSS: makeFromInt 145130, qualifiedIncome: makeFromInt 98159, itemizedDeductions: makeFromInt 1720, federalTaxDue: makeFromInt 46968, stateTaxDue: makeFromInt 11909 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23755, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2910, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8422, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4571 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12682, qualifiedIncome: makeFromInt 20227, itemizedDeductions: makeFromInt 7110, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 970 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109218, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23884, federalTaxDue: makeFromInt 29770, stateTaxDue: makeFromInt 10446 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19085, ordinaryIncomeNonSS: makeFromInt 141276, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6277, federalTaxDue: makeFromInt 35999, stateTaxDue: makeFromInt 11538 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104737, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14896, stateTaxDue: makeFromInt 4782 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30381, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131120, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9988, federalTaxDue: makeFromInt 37177, stateTaxDue: makeFromInt 11101 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140279, qualifiedIncome: makeFromInt 3075, itemizedDeductions: makeFromInt 3525, federalTaxDue: makeFromInt 24864, stateTaxDue: makeFromInt 6693 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2184, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85464, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30419, stateTaxDue: makeFromInt 11298 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43632, ordinaryIncomeNonSS: makeFromInt 16810, qualifiedIncome: makeFromInt 66848, itemizedDeductions: makeFromInt 10582, federalTaxDue: makeFromInt 9187, stateTaxDue: makeFromInt 3608 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80847, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35387, stateTaxDue: makeFromInt 11167 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10290, ordinaryIncomeNonSS: makeFromInt 108600, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14534, stateTaxDue: makeFromInt 5055 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70159, qualifiedIncome: makeFromInt 16312, itemizedDeductions: makeFromInt 24217, federalTaxDue: makeFromInt 6662, stateTaxDue: makeFromInt 3821 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71767, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2395, stateTaxDue: makeFromInt 3013 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32315, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1361 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41006, qualifiedIncome: makeFromInt 63927, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4673, stateTaxDue: makeFromInt 4903 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48369, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28394, stateTaxDue: makeFromInt 7131 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11843, ordinaryIncomeNonSS: makeFromInt 1895, qualifiedIncome: makeFromInt 40548, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1647 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19390, ordinaryIncomeNonSS: makeFromInt 63816, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21984, stateTaxDue: makeFromInt 7804 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48004, itemizedDeductions: makeFromInt 9521, federalTaxDue: makeFromInt 1612, stateTaxDue: makeFromInt 1897 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78752, itemizedDeductions: makeFromInt 29608, federalTaxDue: makeFromInt 1648, stateTaxDue: makeFromInt 3263 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19836, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80775, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4361, stateTaxDue: makeFromInt 3569 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87503, qualifiedIncome: makeFromInt 27583, itemizedDeductions: makeFromInt 11819, federalTaxDue: makeFromInt 26046, stateTaxDue: makeFromInt 5299 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30106, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54043, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2027 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49442, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15381, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118688, qualifiedIncome: makeFromInt 95980, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39282, stateTaxDue: makeFromInt 10478 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6744, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4050, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125519, qualifiedIncome: makeFromInt 33854, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21561, stateTaxDue: makeFromInt 7594 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42425, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26728, federalTaxDue: makeFromInt 1165, stateTaxDue: makeFromInt 1715 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31173, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22487, federalTaxDue: makeFromInt 30490, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24196, ordinaryIncomeNonSS: makeFromInt 97154, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10177, federalTaxDue: makeFromInt 21960, stateTaxDue: makeFromInt 4730 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36345, ordinaryIncomeNonSS: makeFromInt 112415, qualifiedIncome: makeFromInt 31458, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26331, stateTaxDue: makeFromInt 6991 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22200, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44590, qualifiedIncome: makeFromInt 51771, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11927, stateTaxDue: makeFromInt 4690 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56208, qualifiedIncome: makeFromInt 4618, itemizedDeductions: makeFromInt 27863, federalTaxDue: makeFromInt 11586, stateTaxDue: makeFromInt 2786 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29558, ordinaryIncomeNonSS: makeFromInt 75530, qualifiedIncome: makeFromInt 99884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33330, stateTaxDue: makeFromInt 8722 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33844, ordinaryIncomeNonSS: makeFromInt 121315, qualifiedIncome: makeFromInt 92377, itemizedDeductions: makeFromInt 22016, federalTaxDue: makeFromInt 38428, stateTaxDue: makeFromInt 10230 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1721, stateTaxDue: makeFromInt 1272 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6498, ordinaryIncomeNonSS: makeFromInt 30884, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 755, stateTaxDue: makeFromInt 913 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62745, qualifiedIncome: makeFromInt 43254, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13193, stateTaxDue: makeFromInt 4825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39363, ordinaryIncomeNonSS: makeFromInt 148890, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16459, federalTaxDue: makeFromInt 30122, stateTaxDue: makeFromInt 7070 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4639, ordinaryIncomeNonSS: makeFromInt 34436, qualifiedIncome: makeFromInt 26863, itemizedDeductions: makeFromInt 13502, federalTaxDue: makeFromInt 3966, stateTaxDue: makeFromInt 2610 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44258, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29623, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40021, qualifiedIncome: makeFromInt 65662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11435, stateTaxDue: makeFromInt 4961 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21680, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94666, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45224, stateTaxDue: makeFromInt 11978 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35517, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92075, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39802, stateTaxDue: makeFromInt 11780 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46974, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11521, federalTaxDue: makeFromInt 7293, stateTaxDue: makeFromInt 1845 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26674, ordinaryIncomeNonSS: makeFromInt 111475, qualifiedIncome: makeFromInt 47055, itemizedDeductions: makeFromInt 22897, federalTaxDue: makeFromInt 20762, stateTaxDue: makeFromInt 7252 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43010, ordinaryIncomeNonSS: makeFromInt 134997, qualifiedIncome: makeFromInt 14553, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33957, stateTaxDue: makeFromInt 7223 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15033, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11437, ordinaryIncomeNonSS: makeFromInt 25413, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 193, stateTaxDue: makeFromInt 868 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45504, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3401, stateTaxDue: makeFromInt 1872 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48285, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20532, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93834, itemizedDeductions: makeFromInt 22461, federalTaxDue: makeFromInt 2780, stateTaxDue: makeFromInt 4133 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137505, qualifiedIncome: makeFromInt 69693, itemizedDeductions: makeFromInt 4545, federalTaxDue: makeFromInt 26543, stateTaxDue: makeFromInt 9685 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18348, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31642, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22847, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10544, ordinaryIncomeNonSS: makeFromInt 73435, qualifiedIncome: makeFromInt 25961, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10729, stateTaxDue: makeFromInt 4515 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62129, itemizedDeductions: makeFromInt 15628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2631 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38860, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1268 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 538, ordinaryIncomeNonSS: makeFromInt 9747, qualifiedIncome: makeFromInt 42220, itemizedDeductions: makeFromInt 3297, federalTaxDue: makeFromInt 333, stateTaxDue: makeFromInt 2143 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22190, stateTaxDue: makeFromInt 4485 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37381, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88068, itemizedDeductions: makeFromInt 29405, federalTaxDue: makeFromInt 4840, stateTaxDue: makeFromInt 3828 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137168, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23228, stateTaxDue: makeFromInt 6603 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29196, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47158, qualifiedIncome: makeFromInt 30098, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3444, stateTaxDue: makeFromInt 3288 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54244, itemizedDeductions: makeFromInt 3199, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2037 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21822, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42273, itemizedDeductions: makeFromInt 16344, federalTaxDue: makeFromInt 29100, stateTaxDue: makeFromInt 9139 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23937, ordinaryIncomeNonSS: makeFromInt 35015, qualifiedIncome: makeFromInt 58909, itemizedDeductions: makeFromInt 27329, federalTaxDue: makeFromInt 4444, stateTaxDue: makeFromInt 4137 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81403, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3248, stateTaxDue: makeFromInt 3495 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 878, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75928, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6282, stateTaxDue: makeFromInt 3322 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108776, qualifiedIncome: makeFromInt 89329, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33926, stateTaxDue: makeFromInt 9879 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9842, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90069, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2215, stateTaxDue: makeFromInt 3941 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19724, ordinaryIncomeNonSS: makeFromInt 66732, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26544, stateTaxDue: makeFromInt 7996 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49161, itemizedDeductions: makeFromInt 14099, federalTaxDue: makeFromInt 680, stateTaxDue: makeFromInt 2003 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138079, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4584, federalTaxDue: makeFromInt 29697, stateTaxDue: makeFromInt 6329 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26237, qualifiedIncome: makeFromInt 54232, itemizedDeductions: makeFromInt 15954, federalTaxDue: makeFromInt 4652, stateTaxDue: makeFromInt 3568 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81525, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5839, stateTaxDue: makeFromInt 3401 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73333, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12838, federalTaxDue: makeFromInt 14515, stateTaxDue: makeFromInt 7992 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25493, itemizedDeductions: makeFromInt 324, federalTaxDue: makeFromInt 30131, stateTaxDue: makeFromInt 8520 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99037, itemizedDeductions: makeFromInt 25033, federalTaxDue: makeFromInt 38248, stateTaxDue: makeFromInt 12197 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49126, ordinaryIncomeNonSS: makeFromInt 7754, qualifiedIncome: makeFromInt 68758, itemizedDeductions: makeFromInt 23636, federalTaxDue: makeFromInt 10386, stateTaxDue: makeFromInt 3571 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47180, qualifiedIncome: makeFromInt 73263, itemizedDeductions: makeFromInt 553, federalTaxDue: makeFromInt 14334, stateTaxDue: makeFromInt 5658 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9872, federalTaxDue: makeFromInt 35740, stateTaxDue: makeFromInt 12097 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19359, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54241, itemizedDeductions: makeFromInt 24687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2137 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43940, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23875, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49482, ordinaryIncomeNonSS: makeFromInt 38616, qualifiedIncome: makeFromInt 14639, itemizedDeductions: makeFromInt 1909, federalTaxDue: makeFromInt 12292, stateTaxDue: makeFromInt 2408 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91065, itemizedDeductions: makeFromInt 12700, federalTaxDue: makeFromInt 36018, stateTaxDue: makeFromInt 11478 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22371, ordinaryIncomeNonSS: makeFromInt 113022, qualifiedIncome: makeFromInt 89413, itemizedDeductions: makeFromInt 5037, federalTaxDue: makeFromInt 31459, stateTaxDue: makeFromInt 9547 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21609, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16866, ordinaryIncomeNonSS: makeFromInt 147365, qualifiedIncome: makeFromInt 29125, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33148, stateTaxDue: makeFromInt 8777 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42251, ordinaryIncomeNonSS: makeFromInt 53658, qualifiedIncome: makeFromInt 72098, itemizedDeductions: makeFromInt 27656, federalTaxDue: makeFromInt 15137, stateTaxDue: makeFromInt 5613 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35905, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26216, stateTaxDue: makeFromInt 8828 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13682, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13367, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20696, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40931, stateTaxDue: makeFromInt 8846 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2626, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32957, qualifiedIncome: makeFromInt 70091, itemizedDeductions: makeFromInt 7664, federalTaxDue: makeFromInt 686, stateTaxDue: makeFromInt 4477 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18920, qualifiedIncome: makeFromInt 53905, itemizedDeductions: makeFromInt 10529, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2966 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25026, ordinaryIncomeNonSS: makeFromInt 11122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 81 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24272, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131313, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33568, stateTaxDue: makeFromInt 11450 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47447, qualifiedIncome: makeFromInt 86547, itemizedDeductions: makeFromInt 9668, federalTaxDue: makeFromInt 12649, stateTaxDue: makeFromInt 6423 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88940, itemizedDeductions: makeFromInt 26517, federalTaxDue: makeFromInt 1341, stateTaxDue: makeFromInt 3972 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39514, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90554, itemizedDeductions: makeFromInt 22006, federalTaxDue: makeFromInt 7906, stateTaxDue: makeFromInt 4271 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25014, ordinaryIncomeNonSS: makeFromInt 71894, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12348, stateTaxDue: makeFromInt 3340 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32217, ordinaryIncomeNonSS: makeFromInt 147852, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43692, stateTaxDue: makeFromInt 12138 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137417, qualifiedIncome: makeFromInt 4752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21977, stateTaxDue: makeFromInt 6700 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43417, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1796 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61439, qualifiedIncome: makeFromInt 16451, itemizedDeductions: makeFromInt 576, federalTaxDue: makeFromInt 3429, stateTaxDue: makeFromInt 3220 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5752, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26960, federalTaxDue: makeFromInt 25267, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14108, itemizedDeductions: makeFromInt 9941, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 169 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139470, qualifiedIncome: makeFromInt 80877, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32784, stateTaxDue: makeFromInt 10891 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21945, ordinaryIncomeNonSS: makeFromInt 76082, qualifiedIncome: makeFromInt 35612, itemizedDeductions: makeFromInt 7853, federalTaxDue: makeFromInt 18037, stateTaxDue: makeFromInt 5330 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10645, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 277 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102044, qualifiedIncome: makeFromInt 44391, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20962, stateTaxDue: makeFromInt 6867 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26567, ordinaryIncomeNonSS: makeFromInt 12663, qualifiedIncome: makeFromInt 61634, itemizedDeductions: makeFromInt 24788, federalTaxDue: makeFromInt 604, stateTaxDue: makeFromInt 3240 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42736, ordinaryIncomeNonSS: makeFromInt 40614, qualifiedIncome: makeFromInt 29066, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5506, stateTaxDue: makeFromInt 3105 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22112, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40535, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6609, stateTaxDue: makeFromInt 6352 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82897, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5194, federalTaxDue: makeFromInt 7634, stateTaxDue: makeFromInt 3677 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16251, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25072, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144191, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25976, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128821, qualifiedIncome: makeFromInt 22540, itemizedDeductions: makeFromInt 10582, federalTaxDue: makeFromInt 27421, stateTaxDue: makeFromInt 7199 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40276, stateTaxDue: makeFromInt 10192 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73960, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26629, stateTaxDue: makeFromInt 8648 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35202, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50222, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 727, stateTaxDue: makeFromInt 1936 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11809, ordinaryIncomeNonSS: makeFromInt 79564, qualifiedIncome: makeFromInt 28824, itemizedDeductions: makeFromInt 18893, federalTaxDue: makeFromInt 15286, stateTaxDue: makeFromInt 5181 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 612, ordinaryIncomeNonSS: makeFromInt 75145, qualifiedIncome: makeFromInt 9433, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5166, stateTaxDue: makeFromInt 3854 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28223, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3782, federalTaxDue: makeFromInt 2884, stateTaxDue: makeFromInt 991 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46190, ordinaryIncomeNonSS: makeFromInt 149919, qualifiedIncome: makeFromInt 3599, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26351, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1904, stateTaxDue: makeFromInt 1937 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11538, federalTaxDue: makeFromInt 4955, stateTaxDue: makeFromInt 1136 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 565, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9047, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71860, itemizedDeductions: makeFromInt 7507, federalTaxDue: makeFromInt 4085, stateTaxDue: makeFromInt 3138 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86022, qualifiedIncome: makeFromInt 72620, itemizedDeductions: makeFromInt 4604, federalTaxDue: makeFromInt 21487, stateTaxDue: makeFromInt 7662 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10590, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10439, ordinaryIncomeNonSS: makeFromInt 103471, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7487, federalTaxDue: makeFromInt 33989, stateTaxDue: makeFromInt 10030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26386, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2300, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101885, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19582, federalTaxDue: makeFromInt 26285, stateTaxDue: makeFromInt 9868 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22924, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73914, itemizedDeductions: makeFromInt 14018, federalTaxDue: makeFromInt 32565, stateTaxDue: makeFromInt 10521 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17681, ordinaryIncomeNonSS: makeFromInt 67310, qualifiedIncome: makeFromInt 42079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9101, stateTaxDue: makeFromInt 4794 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11102, federalTaxDue: makeFromInt 38158, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38603, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5326, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21143, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 802 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13173, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25045, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9164, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88442, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13806, federalTaxDue: makeFromInt 9368, stateTaxDue: makeFromInt 4082 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19769, federalTaxDue: makeFromInt 14865, stateTaxDue: makeFromInt 4978 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2781, ordinaryIncomeNonSS: makeFromInt 24060, qualifiedIncome: makeFromInt 75821, itemizedDeductions: makeFromInt 16043, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4519 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15277, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35706, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24662, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26406, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 522 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24706, ordinaryIncomeNonSS: makeFromInt 96509, qualifiedIncome: makeFromInt 24973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18305, stateTaxDue: makeFromInt 5819 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113953, qualifiedIncome: makeFromInt 41668, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25641, stateTaxDue: makeFromInt 7590 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48332, itemizedDeductions: makeFromInt 11810, federalTaxDue: makeFromInt 33958, stateTaxDue: makeFromInt 9662 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106706, qualifiedIncome: makeFromInt 67028, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35496, stateTaxDue: makeFromInt 8432 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15457, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17346, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77144, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4878, stateTaxDue: makeFromInt 3602 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79954, qualifiedIncome: makeFromInt 87621, itemizedDeductions: makeFromInt 4803, federalTaxDue: makeFromInt 23347, stateTaxDue: makeFromInt 7924 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36376, itemizedDeductions: makeFromInt 9349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1144 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37555, qualifiedIncome: makeFromInt 38231, itemizedDeductions: makeFromInt 28818, federalTaxDue: makeFromInt 8872, stateTaxDue: makeFromInt 3437 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 223, ordinaryIncomeNonSS: makeFromInt 2777, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15806, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4664 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70636, qualifiedIncome: makeFromInt 8232, itemizedDeductions: makeFromInt 17106, federalTaxDue: makeFromInt 17682, stateTaxDue: makeFromInt 3688 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18021, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14799, federalTaxDue: makeFromInt 26034, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5613, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71335, itemizedDeductions: makeFromInt 8756, federalTaxDue: makeFromInt 38153, stateTaxDue: makeFromInt 10812 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27136, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46673, itemizedDeductions: makeFromInt 23117, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1859 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 552, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29744, itemizedDeductions: makeFromInt 12393, federalTaxDue: makeFromInt 30358, stateTaxDue: makeFromInt 8739 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103796, qualifiedIncome: makeFromInt 82159, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25532, stateTaxDue: makeFromInt 9259 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3632, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3848, ordinaryIncomeNonSS: makeFromInt 137091, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8290, federalTaxDue: makeFromInt 26050, stateTaxDue: makeFromInt 6645 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7500, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23126, ordinaryIncomeNonSS: makeFromInt 80061, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 812, federalTaxDue: makeFromInt 8022, stateTaxDue: makeFromInt 3528 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30591, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26261, federalTaxDue: makeFromInt 433, stateTaxDue: makeFromInt 955 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75323, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35877, stateTaxDue: makeFromInt 11145 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6149, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58819, itemizedDeductions: makeFromInt 13103, federalTaxDue: makeFromInt 1068, stateTaxDue: makeFromInt 2653 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21698, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 630 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31529, itemizedDeductions: makeFromInt 6615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1159 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23272, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10256, qualifiedIncome: makeFromInt 25835, itemizedDeductions: makeFromInt 4763, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1412 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93455, qualifiedIncome: makeFromInt 22292, itemizedDeductions: makeFromInt 14662, federalTaxDue: makeFromInt 8589, stateTaxDue: makeFromInt 5250 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22450, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83658, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8668, federalTaxDue: makeFromInt 7825, stateTaxDue: makeFromInt 3716 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93607, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31232, stateTaxDue: makeFromInt 11705 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85743, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18646, stateTaxDue: makeFromInt 8820 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8693, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6142, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10435, stateTaxDue: makeFromInt 3597 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37793, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22801, federalTaxDue: makeFromInt 30462, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39247, ordinaryIncomeNonSS: makeFromInt 106094, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28245, federalTaxDue: makeFromInt 21087, stateTaxDue: makeFromInt 5064 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119209, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20172, federalTaxDue: makeFromInt 25914, stateTaxDue: makeFromInt 5631 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31282, ordinaryIncomeNonSS: makeFromInt 21427, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 194, stateTaxDue: makeFromInt 664 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10587, ordinaryIncomeNonSS: makeFromInt 53125, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3464, stateTaxDue: makeFromInt 2057 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15118, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8372, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30941, stateTaxDue: makeFromInt 7664 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47402, ordinaryIncomeNonSS: makeFromInt 34087, qualifiedIncome: makeFromInt 88547, itemizedDeductions: makeFromInt 12700, federalTaxDue: makeFromInt 22710, stateTaxDue: makeFromInt 5971 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15161, ordinaryIncomeNonSS: makeFromInt 47758, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6642, stateTaxDue: makeFromInt 2211 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111383, qualifiedIncome: makeFromInt 45910, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32267, stateTaxDue: makeFromInt 7471 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 518 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23061, federalTaxDue: makeFromInt 32191, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28725, ordinaryIncomeNonSS: makeFromInt 112496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15959, stateTaxDue: makeFromInt 5150 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13474, ordinaryIncomeNonSS: makeFromInt 118836, qualifiedIncome: makeFromInt 88854, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26007, stateTaxDue: makeFromInt 9710 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20353, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 563 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26256, federalTaxDue: makeFromInt 19103, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18100, ordinaryIncomeNonSS: makeFromInt 33693, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12636, stateTaxDue: makeFromInt 6268 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56587, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 928, stateTaxDue: makeFromInt 2335 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32556, ordinaryIncomeNonSS: makeFromInt 19166, qualifiedIncome: makeFromInt 4902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 669, stateTaxDue: makeFromInt 779 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129938, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41522, stateTaxDue: makeFromInt 11502 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29802, ordinaryIncomeNonSS: makeFromInt 136793, qualifiedIncome: makeFromInt 29561, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26700, stateTaxDue: makeFromInt 7933 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42748, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108035, qualifiedIncome: makeFromInt 74634, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22911, stateTaxDue: makeFromInt 8765 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18905, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39425, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1596 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7862, itemizedDeductions: makeFromInt 24085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7673, ordinaryIncomeNonSS: makeFromInt 113154, qualifiedIncome: makeFromInt 41849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19526, stateTaxDue: makeFromInt 7252 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109943, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27906, stateTaxDue: makeFromInt 10122 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61507, qualifiedIncome: makeFromInt 86234, itemizedDeductions: makeFromInt 18251, federalTaxDue: makeFromInt 19305, stateTaxDue: makeFromInt 6912 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14187, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95973, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6836, stateTaxDue: makeFromInt 4548 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26219, ordinaryIncomeNonSS: makeFromInt 147540, qualifiedIncome: makeFromInt 63289, itemizedDeductions: makeFromInt 5781, federalTaxDue: makeFromInt 42647, stateTaxDue: makeFromInt 10324 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23473, ordinaryIncomeNonSS: makeFromInt 30947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1019, stateTaxDue: makeFromInt 1072 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56018, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 843, stateTaxDue: makeFromInt 2306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25491, ordinaryIncomeNonSS: makeFromInt 71240, qualifiedIncome: makeFromInt 54364, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24565, stateTaxDue: makeFromInt 6181 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17969, ordinaryIncomeNonSS: makeFromInt 71563, qualifiedIncome: makeFromInt 90702, itemizedDeductions: makeFromInt 20150, federalTaxDue: makeFromInt 23584, stateTaxDue: makeFromInt 7858 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92012, qualifiedIncome: makeFromInt 82448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24463, stateTaxDue: makeFromInt 8468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23627, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16436, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20945, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8798, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94486, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 785, stateTaxDue: makeFromInt 4049 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118853, qualifiedIncome: makeFromInt 52270, itemizedDeductions: makeFromInt 20182, federalTaxDue: makeFromInt 27529, stateTaxDue: makeFromInt 8081 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37802, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30216, stateTaxDue: makeFromInt 9015 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47930, ordinaryIncomeNonSS: makeFromInt 49181, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20884, federalTaxDue: makeFromInt 7848, stateTaxDue: makeFromInt 1884 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80536, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6426, stateTaxDue: makeFromInt 3572 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50765, qualifiedIncome: makeFromInt 59858, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12449, stateTaxDue: makeFromInt 5056 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48909, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1606, stateTaxDue: makeFromInt 1842 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34970, ordinaryIncomeNonSS: makeFromInt 65127, qualifiedIncome: makeFromInt 97923, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27535, stateTaxDue: makeFromInt 7887 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19451, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 745, stateTaxDue: makeFromInt 768 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61140, qualifiedIncome: makeFromInt 80478, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18343, stateTaxDue: makeFromInt 6606 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14347, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49904, ordinaryIncomeNonSS: makeFromInt 52358, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21639, federalTaxDue: makeFromInt 9326, stateTaxDue: makeFromInt 2243 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20312, qualifiedIncome: makeFromInt 48526, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3067 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1477, ordinaryIncomeNonSS: makeFromInt 118217, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11603, stateTaxDue: makeFromInt 5478 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89289, itemizedDeductions: makeFromInt 16285, federalTaxDue: makeFromInt 14015, stateTaxDue: makeFromInt 4209 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105327, qualifiedIncome: makeFromInt 84059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24499, stateTaxDue: makeFromInt 8894 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91706, itemizedDeductions: makeFromInt 2659, federalTaxDue: makeFromInt 8108, stateTaxDue: makeFromInt 4249 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14602, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46961, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32840, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21841, qualifiedIncome: makeFromInt 67817, itemizedDeductions: makeFromInt 23427, federalTaxDue: makeFromInt 4480, stateTaxDue: makeFromInt 4348 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22388, ordinaryIncomeNonSS: makeFromInt 28173, qualifiedIncome: makeFromInt 88271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6326, stateTaxDue: makeFromInt 5347 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129142, qualifiedIncome: makeFromInt 8606, itemizedDeductions: makeFromInt 18664, federalTaxDue: makeFromInt 19619, stateTaxDue: makeFromInt 6597 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9956, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41775, ordinaryIncomeNonSS: makeFromInt 19779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5967, federalTaxDue: makeFromInt 1489, stateTaxDue: makeFromInt 534 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35226, ordinaryIncomeNonSS: makeFromInt 30713, qualifiedIncome: makeFromInt 57093, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4323, stateTaxDue: makeFromInt 4029 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80755, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6783, stateTaxDue: makeFromInt 3583 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25587, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31095, itemizedDeductions: makeFromInt 26602, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 880 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45925, qualifiedIncome: makeFromInt 54637, itemizedDeductions: makeFromInt 17491, federalTaxDue: makeFromInt 8959, stateTaxDue: makeFromInt 4773 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16470, ordinaryIncomeNonSS: makeFromInt 90398, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9442, federalTaxDue: makeFromInt 28479, stateTaxDue: makeFromInt 9261 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54576, qualifiedIncome: makeFromInt 63113, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8672, stateTaxDue: makeFromInt 5451 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74267, itemizedDeductions: makeFromInt 11582, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3339 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23401, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 770, stateTaxDue: makeFromInt 715 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58508, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10370, federalTaxDue: makeFromInt 17255, stateTaxDue: makeFromInt 7656 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24148, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15898, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 732 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22255, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67504, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1756, stateTaxDue: makeFromInt 3000 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12310, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13753, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 49 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61113, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4556, federalTaxDue: makeFromInt 16114, stateTaxDue: makeFromInt 2662 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112980, qualifiedIncome: makeFromInt 30393, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16014, stateTaxDue: makeFromInt 6863 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30410, ordinaryIncomeNonSS: makeFromInt 141215, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22871, federalTaxDue: makeFromInt 43442, stateTaxDue: makeFromInt 11606 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49387, ordinaryIncomeNonSS: makeFromInt 125612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12802, federalTaxDue: makeFromInt 28572, stateTaxDue: makeFromInt 6000 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78910, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2874, stateTaxDue: makeFromInt 3571 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7814, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21898, ordinaryIncomeNonSS: makeFromInt 7372, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30865, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 573, stateTaxDue: makeFromInt 2406 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12026, itemizedDeductions: makeFromInt 24856, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 63 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33723, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30374, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 944 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 526, ordinaryIncomeNonSS: makeFromInt 86685, qualifiedIncome: makeFromInt 22597, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11576, stateTaxDue: makeFromInt 5009 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43222, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1131, stateTaxDue: makeFromInt 1706 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7836, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1352, ordinaryIncomeNonSS: makeFromInt 16458, qualifiedIncome: makeFromInt 44892, itemizedDeductions: makeFromInt 24788, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2393 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61735, qualifiedIncome: makeFromInt 12213, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4165, stateTaxDue: makeFromInt 3221 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35135, ordinaryIncomeNonSS: makeFromInt 59146, qualifiedIncome: makeFromInt 3649, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7204, stateTaxDue: makeFromInt 2765 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18170, qualifiedIncome: makeFromInt 46269, itemizedDeductions: makeFromInt 24394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2634 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6970, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29209, ordinaryIncomeNonSS: makeFromInt 53602, qualifiedIncome: makeFromInt 20299, itemizedDeductions: makeFromInt 6716, federalTaxDue: makeFromInt 9356, stateTaxDue: makeFromInt 3320 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37062, itemizedDeductions: makeFromInt 9308, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95300, qualifiedIncome: makeFromInt 2748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13232, stateTaxDue: makeFromInt 4647 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44315, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31398, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12558, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4247, federalTaxDue: makeFromInt 29808, stateTaxDue: makeFromInt 7353 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13725, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53894, itemizedDeductions: makeFromInt 28492, federalTaxDue: makeFromInt 2437, stateTaxDue: makeFromInt 2320 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22879, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32382, ordinaryIncomeNonSS: makeFromInt 144641, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23823, federalTaxDue: makeFromInt 42396, stateTaxDue: makeFromInt 11657 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33080, ordinaryIncomeNonSS: makeFromInt 30001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 521, stateTaxDue: makeFromInt 877 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91720, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5643, stateTaxDue: makeFromInt 4211 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6335, ordinaryIncomeNonSS: makeFromInt 137673, qualifiedIncome: makeFromInt 45380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29861, stateTaxDue: makeFromInt 8887 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21956, qualifiedIncome: makeFromInt 23421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 626, stateTaxDue: makeFromInt 2014 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94590, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5226, stateTaxDue: makeFromInt 4355 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127254, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12207, federalTaxDue: makeFromInt 24116, stateTaxDue: makeFromInt 6266 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24530, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36179, itemizedDeductions: makeFromInt 12002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1192 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46861, ordinaryIncomeNonSS: makeFromInt 53733, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26172, stateTaxDue: makeFromInt 7494 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 885, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5711, stateTaxDue: makeFromInt 3532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83485, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4963, stateTaxDue: makeFromInt 3707 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11032, federalTaxDue: makeFromInt 28699, stateTaxDue: makeFromInt 7131 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99600, itemizedDeductions: makeFromInt 20424, federalTaxDue: makeFromInt 3645, stateTaxDue: makeFromInt 4427 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23453, ordinaryIncomeNonSS: makeFromInt 26313, qualifiedIncome: makeFromInt 92079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16192, stateTaxDue: makeFromInt 5665 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83519, qualifiedIncome: makeFromInt 20440, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21951, stateTaxDue: makeFromInt 4853 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73290, qualifiedIncome: makeFromInt 82901, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11939, stateTaxDue: makeFromInt 7335 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6541, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33848, stateTaxDue: makeFromInt 7555 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64498, qualifiedIncome: makeFromInt 10423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4680, stateTaxDue: makeFromInt 3291 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21097, ordinaryIncomeNonSS: makeFromInt 117653, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3496, federalTaxDue: makeFromInt 38142, stateTaxDue: makeFromInt 10628 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118354, qualifiedIncome: makeFromInt 37868, itemizedDeductions: makeFromInt 13542, federalTaxDue: makeFromInt 25259, stateTaxDue: makeFromInt 7136 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33687, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30, stateTaxDue: makeFromInt 1309 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137819, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50115, stateTaxDue: makeFromInt 11586 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18973, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32118, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4069, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38773, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43754, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 380, stateTaxDue: makeFromInt 2037 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53356, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27647, federalTaxDue: makeFromInt 546, stateTaxDue: makeFromInt 2068 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35962, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35194, stateTaxDue: makeFromInt 7151 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22014, itemizedDeductions: makeFromInt 24939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 726 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4763, ordinaryIncomeNonSS: makeFromInt 135752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8805, federalTaxDue: makeFromInt 16434, stateTaxDue: makeFromInt 6313 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 383, stateTaxDue: makeFromInt 1956 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8180, qualifiedIncome: makeFromInt 80055, itemizedDeductions: makeFromInt 18743, federalTaxDue: makeFromInt 713, stateTaxDue: makeFromInt 4051 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41341, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76059, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 386, stateTaxDue: makeFromInt 3430 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96683, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8855, stateTaxDue: makeFromInt 4706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33711, ordinaryIncomeNonSS: makeFromInt 115274, qualifiedIncome: makeFromInt 27191, itemizedDeductions: makeFromInt 27375, federalTaxDue: makeFromInt 28616, stateTaxDue: makeFromInt 7041 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14813, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 103 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12074, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52644, itemizedDeductions: makeFromInt 18179, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2057 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2066, ordinaryIncomeNonSS: makeFromInt 69461, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16203, federalTaxDue: makeFromInt 4287, stateTaxDue: makeFromInt 2890 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3512, stateTaxDue: makeFromInt 1885 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10709, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 450, ordinaryIncomeNonSS: makeFromInt 52324, qualifiedIncome: makeFromInt 78079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10306, stateTaxDue: makeFromInt 6202 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36136, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4649, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86847, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5467, stateTaxDue: makeFromInt 3878 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22313, ordinaryIncomeNonSS: makeFromInt 100328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23541, stateTaxDue: makeFromInt 4892 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18343, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1872, stateTaxDue: makeFromInt 726 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3942, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21668, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5955, qualifiedIncome: makeFromInt 71497, itemizedDeductions: makeFromInt 29510, federalTaxDue: makeFromInt 2970, stateTaxDue: makeFromInt 3603 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 524, ordinaryIncomeNonSS: makeFromInt 83265, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8678, federalTaxDue: makeFromInt 7134, stateTaxDue: makeFromInt 3588 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2045, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85351, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40823, stateTaxDue: makeFromInt 11575 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3432, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89928, qualifiedIncome: makeFromInt 46366, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20039, stateTaxDue: makeFromInt 6523 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10468, ordinaryIncomeNonSS: makeFromInt 17553, qualifiedIncome: makeFromInt 99640, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13665, stateTaxDue: makeFromInt 5752 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44440, itemizedDeductions: makeFromInt 11312, federalTaxDue: makeFromInt 666, stateTaxDue: makeFromInt 1767 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32470, ordinaryIncomeNonSS: makeFromInt 52355, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13289, federalTaxDue: makeFromInt 7054, stateTaxDue: makeFromInt 2043 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25017, ordinaryIncomeNonSS: makeFromInt 81438, qualifiedIncome: makeFromInt 66473, itemizedDeductions: makeFromInt 21894, federalTaxDue: makeFromInt 22097, stateTaxDue: makeFromInt 6821 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24351, ordinaryIncomeNonSS: makeFromInt 6155, qualifiedIncome: makeFromInt 98751, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6901, stateTaxDue: makeFromInt 4870 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36816, ordinaryIncomeNonSS: makeFromInt 124952, qualifiedIncome: makeFromInt 80361, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39251, stateTaxDue: makeFromInt 10247 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12946, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56431, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2213, stateTaxDue: makeFromInt 2367 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13031, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69863, qualifiedIncome: makeFromInt 40504, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7562, stateTaxDue: makeFromInt 4943 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49747, ordinaryIncomeNonSS: makeFromInt 133793, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34195, stateTaxDue: makeFromInt 6599 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121475, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9756, stateTaxDue: makeFromInt 5542 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44181, qualifiedIncome: makeFromInt 10371, itemizedDeductions: makeFromInt 18065, federalTaxDue: makeFromInt 12441, stateTaxDue: makeFromInt 2273 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10400, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46694, itemizedDeductions: makeFromInt 15201, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1660 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26804, ordinaryIncomeNonSS: makeFromInt 126757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25522, stateTaxDue: makeFromInt 5883 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30431, qualifiedIncome: makeFromInt 82484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 123, stateTaxDue: makeFromInt 4971 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14834, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93079, itemizedDeductions: makeFromInt 5987, federalTaxDue: makeFromInt 7268, stateTaxDue: makeFromInt 4399 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48065, ordinaryIncomeNonSS: makeFromInt 126952, qualifiedIncome: makeFromInt 12211, itemizedDeductions: makeFromInt 25069, federalTaxDue: makeFromInt 25113, stateTaxDue: makeFromInt 6649 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16843, federalTaxDue: makeFromInt 22853, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8041, ordinaryIncomeNonSS: makeFromInt 27169, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2001, stateTaxDue: makeFromInt 1161 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2187, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64967, itemizedDeductions: makeFromInt 17362, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2865 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37046, ordinaryIncomeNonSS: makeFromInt 145536, qualifiedIncome: makeFromInt 54046, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41300, stateTaxDue: makeFromInt 9524 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22138, qualifiedIncome: makeFromInt 56729, itemizedDeductions: makeFromInt 5273, federalTaxDue: makeFromInt 1789, stateTaxDue: makeFromInt 3675 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88801, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5700, stateTaxDue: makeFromInt 4182 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 840, itemizedDeductions: makeFromInt 16096, federalTaxDue: makeFromInt 23892, stateTaxDue: makeFromInt 6967 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7159, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11791, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47615, qualifiedIncome: makeFromInt 87781, itemizedDeductions: makeFromInt 28155, federalTaxDue: makeFromInt 1872, stateTaxDue: makeFromInt 6252 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22871, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1716 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147974, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31572, stateTaxDue: makeFromInt 7322 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82356, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16671, federalTaxDue: makeFromInt 19365, stateTaxDue: makeFromInt 3863 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30274, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14619, itemizedDeductions: makeFromInt 10098, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 516 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41411, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5783, stateTaxDue: makeFromInt 1696 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24625, ordinaryIncomeNonSS: makeFromInt 16476, qualifiedIncome: makeFromInt 53865, itemizedDeductions: makeFromInt 22900, federalTaxDue: makeFromInt 3675, stateTaxDue: makeFromInt 3142 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43332, ordinaryIncomeNonSS: makeFromInt 99282, qualifiedIncome: makeFromInt 53546, itemizedDeductions: makeFromInt 25335, federalTaxDue: makeFromInt 28793, stateTaxDue: makeFromInt 7294 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16957, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62795, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2465 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37412, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91000, itemizedDeductions: makeFromInt 12139, federalTaxDue: makeFromInt 8618, stateTaxDue: makeFromInt 4090 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11664, ordinaryIncomeNonSS: makeFromInt 61395, qualifiedIncome: makeFromInt 55659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16420, stateTaxDue: makeFromInt 5398 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29542, ordinaryIncomeNonSS: makeFromInt 37472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5945, stateTaxDue: makeFromInt 1687 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37949, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69668, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39344, stateTaxDue: makeFromInt 10550 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38739, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1532 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29239, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11693, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41749, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1412 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36953, ordinaryIncomeNonSS: makeFromInt 71881, qualifiedIncome: makeFromInt 40042, itemizedDeductions: makeFromInt 2803, federalTaxDue: makeFromInt 12183, stateTaxDue: makeFromInt 5121 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23162, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 5628 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13851, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74218, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3378, stateTaxDue: makeFromInt 3234 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47945, ordinaryIncomeNonSS: makeFromInt 77173, qualifiedIncome: makeFromInt 6058, itemizedDeductions: makeFromInt 1110, federalTaxDue: makeFromInt 24067, stateTaxDue: makeFromInt 4020 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35392, itemizedDeductions: makeFromInt 9867, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1095 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10422, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78592, itemizedDeductions: makeFromInt 23684, federalTaxDue: makeFromInt 494, stateTaxDue: makeFromInt 3559 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48706, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8358, ordinaryIncomeNonSS: makeFromInt 99636, qualifiedIncome: makeFromInt 93324, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28064, stateTaxDue: makeFromInt 9392 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12362, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10582, federalTaxDue: makeFromInt 25782, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49167, ordinaryIncomeNonSS: makeFromInt 31453, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4458, stateTaxDue: makeFromInt 1118 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39138, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51037, qualifiedIncome: makeFromInt 25920, itemizedDeductions: makeFromInt 4966, federalTaxDue: makeFromInt 2184, stateTaxDue: makeFromInt 3373 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32224, ordinaryIncomeNonSS: makeFromInt 4595, qualifiedIncome: makeFromInt 40570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1797, stateTaxDue: makeFromInt 1875 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17238, ordinaryIncomeNonSS: makeFromInt 12267, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 177 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 624, itemizedDeductions: makeFromInt 9240, federalTaxDue: makeFromInt 32652, stateTaxDue: makeFromInt 7156 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31194, ordinaryIncomeNonSS: makeFromInt 18513, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11421, stateTaxDue: makeFromInt 5493 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28615, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1176 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33540, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89434, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45721, stateTaxDue: makeFromInt 11762 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9163, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49972, ordinaryIncomeNonSS: makeFromInt 86173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 655, federalTaxDue: makeFromInt 20508, stateTaxDue: makeFromInt 4054 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40660, ordinaryIncomeNonSS: makeFromInt 70927, qualifiedIncome: makeFromInt 74491, itemizedDeductions: makeFromInt 6361, federalTaxDue: makeFromInt 26235, stateTaxDue: makeFromInt 7016 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15605, ordinaryIncomeNonSS: makeFromInt 149009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17122, federalTaxDue: makeFromInt 22299, stateTaxDue: makeFromInt 6947 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112524, qualifiedIncome: makeFromInt 15581, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14840, stateTaxDue: makeFromInt 5830 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 956, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16014, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6059, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111170, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16313, stateTaxDue: makeFromInt 5304 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3156, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19309, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4341, ordinaryIncomeNonSS: makeFromInt 70603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22936, federalTaxDue: makeFromInt 19590, stateTaxDue: makeFromInt 8155 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93983, itemizedDeductions: makeFromInt 28784, federalTaxDue: makeFromInt 8533, stateTaxDue: makeFromInt 4324 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49125, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79054, itemizedDeductions: makeFromInt 15190, federalTaxDue: makeFromInt 4385, stateTaxDue: makeFromInt 3548 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32329, ordinaryIncomeNonSS: makeFromInt 144445, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23312, federalTaxDue: makeFromInt 27683, stateTaxDue: makeFromInt 6918 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35505, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19083, itemizedDeductions: makeFromInt 7544, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 379 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 719, ordinaryIncomeNonSS: makeFromInt 138246, qualifiedIncome: makeFromInt 46323, itemizedDeductions: makeFromInt 7432, federalTaxDue: makeFromInt 26632, stateTaxDue: makeFromInt 8853 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24684, ordinaryIncomeNonSS: makeFromInt 119683, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21526, stateTaxDue: makeFromInt 5609 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41400, ordinaryIncomeNonSS: makeFromInt 170, qualifiedIncome: makeFromInt 19989, itemizedDeductions: makeFromInt 15400, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 553 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10472, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24935, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 619 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76538, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12047, federalTaxDue: makeFromInt 10128, stateTaxDue: makeFromInt 3475 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4468, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70145, itemizedDeductions: makeFromInt 25861, federalTaxDue: makeFromInt 8755, stateTaxDue: makeFromInt 3052 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52680, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32782, stateTaxDue: makeFromInt 9888 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91875, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35974, stateTaxDue: makeFromInt 9337 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14922, itemizedDeductions: makeFromInt 24752, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 312 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19445, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52181, qualifiedIncome: makeFromInt 76428, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12409, stateTaxDue: makeFromInt 5949 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29119, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27944, federalTaxDue: makeFromInt 118, stateTaxDue: makeFromInt 1127 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52742, qualifiedIncome: makeFromInt 97224, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31578, stateTaxDue: makeFromInt 7424 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17301, itemizedDeductions: makeFromInt 5174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 190 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2410, ordinaryIncomeNonSS: makeFromInt 130684, qualifiedIncome: makeFromInt 71700, itemizedDeductions: makeFromInt 5605, federalTaxDue: makeFromInt 34898, stateTaxDue: makeFromInt 9975 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15184, ordinaryIncomeNonSS: makeFromInt 84205, qualifiedIncome: makeFromInt 34232, itemizedDeductions: makeFromInt 28686, federalTaxDue: makeFromInt 13889, stateTaxDue: makeFromInt 5347 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126636, qualifiedIncome: makeFromInt 69402, itemizedDeductions: makeFromInt 8766, federalTaxDue: makeFromInt 42412, stateTaxDue: makeFromInt 9570 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2728, ordinaryIncomeNonSS: makeFromInt 8659, qualifiedIncome: makeFromInt 91820, itemizedDeductions: makeFromInt 25031, federalTaxDue: makeFromInt 6213, stateTaxDue: makeFromInt 4778 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49338, ordinaryIncomeNonSS: makeFromInt 84791, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18286, federalTaxDue: makeFromInt 20396, stateTaxDue: makeFromInt 3978 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55144, qualifiedIncome: makeFromInt 46876, itemizedDeductions: makeFromInt 3468, federalTaxDue: makeFromInt 7547, stateTaxDue: makeFromInt 4726 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6553, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9208, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17216, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105222, qualifiedIncome: makeFromInt 51355, itemizedDeductions: makeFromInt 11728, federalTaxDue: makeFromInt 19570, stateTaxDue: makeFromInt 7454 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29484, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60610, itemizedDeductions: makeFromInt 3823, federalTaxDue: makeFromInt 31796, stateTaxDue: makeFromInt 9856 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87760, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1584, stateTaxDue: makeFromInt 4027 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13288, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45974, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16793, federalTaxDue: makeFromInt 18603, stateTaxDue: makeFromInt 6624 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6591, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25695, stateTaxDue: makeFromInt 7030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71324, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36331, stateTaxDue: makeFromInt 10811 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125923, qualifiedIncome: makeFromInt 69033, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31177, stateTaxDue: makeFromInt 9493 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41663, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92501, itemizedDeductions: makeFromInt 17143, federalTaxDue: makeFromInt 3401, stateTaxDue: makeFromInt 4150 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26795, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7581, ordinaryIncomeNonSS: makeFromInt 147940, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18155, stateTaxDue: makeFromInt 6722 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9809, ordinaryIncomeNonSS: makeFromInt 140807, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27294, stateTaxDue: makeFromInt 6753 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35556, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29686, stateTaxDue: makeFromInt 8913 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45928, ordinaryIncomeNonSS: makeFromInt 65722, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9044, stateTaxDue: makeFromInt 2811 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8882, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4407, ordinaryIncomeNonSS: makeFromInt 147090, qualifiedIncome: makeFromInt 74112, itemizedDeductions: makeFromInt 19366, federalTaxDue: makeFromInt 35295, stateTaxDue: makeFromInt 10853 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5477, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74936, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30589, stateTaxDue: makeFromInt 10713 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26446, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11073, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9967, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47198, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5681, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37854, itemizedDeductions: makeFromInt 20368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1638 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4479, ordinaryIncomeNonSS: makeFromInt 68438, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18205, federalTaxDue: makeFromInt 6836, stateTaxDue: makeFromInt 3144 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28861, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 768 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21789, ordinaryIncomeNonSS: makeFromInt 67269, qualifiedIncome: makeFromInt 66185, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19389, stateTaxDue: makeFromInt 6459 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26940, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27050, stateTaxDue: makeFromInt 7030 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33430, ordinaryIncomeNonSS: makeFromInt 17142, qualifiedIncome: makeFromInt 20783, itemizedDeductions: makeFromInt 8607, federalTaxDue: makeFromInt 1984, stateTaxDue: makeFromInt 1321 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2796, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45005, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1096, stateTaxDue: makeFromInt 1948 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36338, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12636, federalTaxDue: makeFromInt 345, stateTaxDue: makeFromInt 1302 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9874, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16375, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94993, qualifiedIncome: makeFromInt 16382, itemizedDeductions: makeFromInt 22149, federalTaxDue: makeFromInt 8446, stateTaxDue: makeFromInt 4894 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22252, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75053, itemizedDeductions: makeFromInt 27910, federalTaxDue: makeFromInt 32610, stateTaxDue: makeFromInt 10578 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43863, ordinaryIncomeNonSS: makeFromInt 109492, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7231, federalTaxDue: makeFromInt 24074, stateTaxDue: makeFromInt 5135 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32210, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27764, federalTaxDue: makeFromInt 7742, stateTaxDue: makeFromInt 6236 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47803, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44279, itemizedDeductions: makeFromInt 4787, federalTaxDue: makeFromInt 4549, stateTaxDue: makeFromInt 1959 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34, ordinaryIncomeNonSS: makeFromInt 74203, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13788, federalTaxDue: makeFromInt 5876, stateTaxDue: makeFromInt 3335 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93758, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13992, stateTaxDue: makeFromInt 4013 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21197, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 428 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5571, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27806, ordinaryIncomeNonSS: makeFromInt 46717, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10314, federalTaxDue: makeFromInt 22331, stateTaxDue: makeFromInt 7081 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95548, qualifiedIncome: makeFromInt 87387, itemizedDeductions: makeFromInt 28469, federalTaxDue: makeFromInt 33788, stateTaxDue: makeFromInt 8983 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31071, qualifiedIncome: makeFromInt 6820, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 452, stateTaxDue: makeFromInt 1504 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119202, qualifiedIncome: makeFromInt 70979, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23624, stateTaxDue: makeFromInt 9271 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19680, qualifiedIncome: makeFromInt 58926, itemizedDeductions: makeFromInt 5537, federalTaxDue: makeFromInt 3140, stateTaxDue: makeFromInt 3475 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149916, qualifiedIncome: makeFromInt 95500, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31498, stateTaxDue: makeFromInt 11796 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45740, ordinaryIncomeNonSS: makeFromInt 140947, qualifiedIncome: makeFromInt 60138, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38284, stateTaxDue: makeFromInt 9827 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10188, ordinaryIncomeNonSS: makeFromInt 69892, qualifiedIncome: makeFromInt 39522, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8308, stateTaxDue: makeFromInt 5152 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43041, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28814, stateTaxDue: makeFromInt 9277 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36602, ordinaryIncomeNonSS: makeFromInt 72413, qualifiedIncome: makeFromInt 48960, itemizedDeductions: makeFromInt 7716, federalTaxDue: makeFromInt 20540, stateTaxDue: makeFromInt 5786 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29398, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4668, federalTaxDue: makeFromInt 500, stateTaxDue: makeFromInt 838 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44546, ordinaryIncomeNonSS: makeFromInt 135147, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 552, federalTaxDue: makeFromInt 38582, stateTaxDue: makeFromInt 6668 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36137, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24952, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1415 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16562, ordinaryIncomeNonSS: makeFromInt 100286, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15797, stateTaxDue: makeFromInt 4721 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36633, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5404, federalTaxDue: makeFromInt 10530, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42565, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12471, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 369 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55776, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 441, stateTaxDue: makeFromInt 2192 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1354, ordinaryIncomeNonSS: makeFromInt 75900, qualifiedIncome: makeFromInt 80240, itemizedDeductions: makeFromInt 16690, federalTaxDue: makeFromInt 16612, stateTaxDue: makeFromInt 7514 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30977, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98609, itemizedDeductions: makeFromInt 6687, federalTaxDue: makeFromInt 1404, stateTaxDue: makeFromInt 4455 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15426, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6103, itemizedDeductions: makeFromInt 7864, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4892, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96857, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9998, federalTaxDue: makeFromInt 23078, stateTaxDue: makeFromInt 4388 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43941, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3670, stateTaxDue: makeFromInt 1622 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28749, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 433 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52158, qualifiedIncome: makeFromInt 20631, itemizedDeductions: makeFromInt 22566, federalTaxDue: makeFromInt 15876, stateTaxDue: makeFromInt 3488 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1386, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6210, federalTaxDue: makeFromInt 26884, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132266, qualifiedIncome: makeFromInt 46349, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39204, stateTaxDue: makeFromInt 8476 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49087, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3696, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14045, ordinaryIncomeNonSS: makeFromInt 6566, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13262, qualifiedIncome: makeFromInt 18959, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1036 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26259, ordinaryIncomeNonSS: makeFromInt 130057, qualifiedIncome: makeFromInt 53979, itemizedDeductions: makeFromInt 15065, federalTaxDue: makeFromInt 28219, stateTaxDue: makeFromInt 8937 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16673, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37433, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1358 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30576, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24303, itemizedDeductions: makeFromInt 6755, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 893 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136714, qualifiedIncome: makeFromInt 4426, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28797, stateTaxDue: makeFromInt 6545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14443, ordinaryIncomeNonSS: makeFromInt 91732, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20042, federalTaxDue: makeFromInt 11522, stateTaxDue: makeFromInt 4230 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12078, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1936 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7203, qualifiedIncome: makeFromInt 57089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2840 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33103, ordinaryIncomeNonSS: makeFromInt 98732, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12834, federalTaxDue: makeFromInt 14989, stateTaxDue: makeFromInt 4383 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5004, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21225, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24467, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137906, qualifiedIncome: makeFromInt 17533, itemizedDeductions: makeFromInt 20048, federalTaxDue: makeFromInt 17160, stateTaxDue: makeFromInt 7297 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32884, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44415, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1597 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87493, qualifiedIncome: makeFromInt 92427, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26478, stateTaxDue: makeFromInt 8521 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18364, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7655, federalTaxDue: makeFromInt 41104, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8247, ordinaryIncomeNonSS: makeFromInt 37674, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1131, stateTaxDue: makeFromInt 1697 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41319, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14482, federalTaxDue: makeFromInt 3093, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43849, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1006, stateTaxDue: makeFromInt 2012 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13240, federalTaxDue: makeFromInt 14275, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49230, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1829, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26671, stateTaxDue: makeFromInt 6916 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28425, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29588, federalTaxDue: makeFromInt 22421, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137624, qualifiedIncome: makeFromInt 38521, itemizedDeductions: makeFromInt 15001, federalTaxDue: makeFromInt 27386, stateTaxDue: makeFromInt 8637 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34104, ordinaryIncomeNonSS: makeFromInt 85836, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17076, federalTaxDue: makeFromInt 14967, stateTaxDue: makeFromInt 3929 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46321, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29278, ordinaryIncomeNonSS: makeFromInt 60235, qualifiedIncome: makeFromInt 73527, itemizedDeductions: makeFromInt 19550, federalTaxDue: makeFromInt 20762, stateTaxDue: makeFromInt 6433 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144111, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16021, federalTaxDue: makeFromInt 42713, stateTaxDue: makeFromInt 12225 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33725, ordinaryIncomeNonSS: makeFromInt 37232, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3143, stateTaxDue: makeFromInt 1487 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84606, itemizedDeductions: makeFromInt 7624, federalTaxDue: makeFromInt 11279, stateTaxDue: makeFromInt 3764 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13964, ordinaryIncomeNonSS: makeFromInt 25131, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2287, stateTaxDue: makeFromInt 1057 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47126, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43430, itemizedDeductions: makeFromInt 26839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1664 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32570, ordinaryIncomeNonSS: makeFromInt 68271, qualifiedIncome: makeFromInt 25270, itemizedDeductions: makeFromInt 8461, federalTaxDue: makeFromInt 10039, stateTaxDue: makeFromInt 4002 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1591, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6206, itemizedDeductions: makeFromInt 25780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24352, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26915, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7469, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90916, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1637, stateTaxDue: makeFromInt 3871 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90291, itemizedDeductions: makeFromInt 2557, federalTaxDue: makeFromInt 6850, stateTaxDue: makeFromInt 4260 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12414, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38842, ordinaryIncomeNonSS: makeFromInt 47915, qualifiedIncome: makeFromInt 35653, itemizedDeductions: makeFromInt 12886, federalTaxDue: makeFromInt 5768, stateTaxDue: makeFromInt 3703 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78138, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5433, stateTaxDue: makeFromInt 3232 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48715, ordinaryIncomeNonSS: makeFromInt 12045, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15715, federalTaxDue: makeFromInt 7721, stateTaxDue: makeFromInt 5127 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50636, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4289, federalTaxDue: makeFromInt 4167, stateTaxDue: makeFromInt 2077 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47667, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69630, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4111, stateTaxDue: makeFromInt 3107 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16393, federalTaxDue: makeFromInt 25079, stateTaxDue: makeFromInt 4839 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31823, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65959, itemizedDeductions: makeFromInt 25860, federalTaxDue: makeFromInt 4191, stateTaxDue: makeFromInt 3043 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16952, ordinaryIncomeNonSS: makeFromInt 109204, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21863, stateTaxDue: makeFromInt 5223 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24150, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9663, federalTaxDue: makeFromInt 11415, stateTaxDue: makeFromInt 5753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32839, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1022 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123238, qualifiedIncome: makeFromInt 1489, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19432, stateTaxDue: makeFromInt 5981 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84746, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19487, federalTaxDue: makeFromInt 9600, stateTaxDue: makeFromInt 3975 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34164, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33812, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5278, ordinaryIncomeNonSS: makeFromInt 95274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22491, stateTaxDue: makeFromInt 9510 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92432, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25043, federalTaxDue: makeFromInt 8573, stateTaxDue: makeFromInt 4265 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5679, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71707, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32793, stateTaxDue: makeFromInt 10654 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22735, ordinaryIncomeNonSS: makeFromInt 14023, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22806, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 326 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1493, ordinaryIncomeNonSS: makeFromInt 35474, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21443, federalTaxDue: makeFromInt 1409, stateTaxDue: makeFromInt 1199 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3603, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40910, ordinaryIncomeNonSS: makeFromInt 90669, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7742, federalTaxDue: makeFromInt 33271, stateTaxDue: makeFromInt 9173 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22484, ordinaryIncomeNonSS: makeFromInt 24649, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2597, stateTaxDue: makeFromInt 1033 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127514, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17654, federalTaxDue: makeFromInt 19766, stateTaxDue: makeFromInt 5921 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26105, qualifiedIncome: makeFromInt 3215, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1211 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36312, ordinaryIncomeNonSS: makeFromInt 47427, qualifiedIncome: makeFromInt 97669, itemizedDeductions: makeFromInt 14628, federalTaxDue: makeFromInt 23851, stateTaxDue: makeFromInt 7053 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9483, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121798, qualifiedIncome: makeFromInt 71581, itemizedDeductions: makeFromInt 3108, federalTaxDue: makeFromInt 26327, stateTaxDue: makeFromInt 9094 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79749, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45526, stateTaxDue: makeFromInt 10912 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29351, qualifiedIncome: makeFromInt 56143, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1134, stateTaxDue: makeFromInt 3700 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8282, itemizedDeductions: makeFromInt 15458, federalTaxDue: makeFromInt 28173, stateTaxDue: makeFromInt 7726 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29467, itemizedDeductions: makeFromInt 1573, federalTaxDue: makeFromInt 36108, stateTaxDue: makeFromInt 8500 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12014, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23151, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55378, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12163, federalTaxDue: makeFromInt 11319, stateTaxDue: makeFromInt 2394 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38780, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36977, itemizedDeductions: makeFromInt 8791, federalTaxDue: makeFromInt 86, stateTaxDue: makeFromInt 1474 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92489, qualifiedIncome: makeFromInt 51452, itemizedDeductions: makeFromInt 15148, federalTaxDue: makeFromInt 26913, stateTaxDue: makeFromInt 6790 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13714, ordinaryIncomeNonSS: makeFromInt 5559, qualifiedIncome: makeFromInt 61893, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3636, stateTaxDue: makeFromInt 3012 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21873, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41225, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1320, stateTaxDue: makeFromInt 1606 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13228, ordinaryIncomeNonSS: makeFromInt 48739, qualifiedIncome: makeFromInt 50047, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 973, stateTaxDue: makeFromInt 4385 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42414, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95317, itemizedDeductions: makeFromInt 17789, federalTaxDue: makeFromInt 8686, stateTaxDue: makeFromInt 4191 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10068, qualifiedIncome: makeFromInt 41642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2131 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8680, itemizedDeductions: makeFromInt 14866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118427, qualifiedIncome: makeFromInt 35447, itemizedDeductions: makeFromInt 23639, federalTaxDue: makeFromInt 21478, stateTaxDue: makeFromInt 7239 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19312, stateTaxDue: makeFromInt 5437 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22589, federalTaxDue: makeFromInt 3574, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19875, federalTaxDue: makeFromInt 4441, stateTaxDue: makeFromInt 3019 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90293, qualifiedIncome: makeFromInt 13197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11463, stateTaxDue: makeFromInt 4727 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34595, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61728, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4689, stateTaxDue: makeFromInt 2511 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128177, qualifiedIncome: makeFromInt 16853, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25532, stateTaxDue: makeFromInt 7050 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25074, ordinaryIncomeNonSS: makeFromInt 64469, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7590, stateTaxDue: makeFromInt 2648 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9896, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45117, qualifiedIncome: makeFromInt 27521, itemizedDeductions: makeFromInt 18286, federalTaxDue: makeFromInt 10630, stateTaxDue: makeFromInt 3154 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94336, qualifiedIncome: makeFromInt 71790, itemizedDeductions: makeFromInt 21725, federalTaxDue: makeFromInt 30366, stateTaxDue: makeFromInt 8044 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4421, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1512, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8590, ordinaryIncomeNonSS: makeFromInt 145588, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28217, federalTaxDue: makeFromInt 26811, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119775, qualifiedIncome: makeFromInt 36194, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26276, stateTaxDue: makeFromInt 7608 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24300, itemizedDeductions: makeFromInt 9313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 760 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25435, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69543, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2802 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41736, qualifiedIncome: makeFromInt 18394, itemizedDeductions: makeFromInt 27800, federalTaxDue: makeFromInt 1394, stateTaxDue: makeFromInt 2532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116295, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12766, federalTaxDue: makeFromInt 27362, stateTaxDue: makeFromInt 10378 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11155, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 139 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29510, ordinaryIncomeNonSS: makeFromInt 114693, qualifiedIncome: makeFromInt 54023, itemizedDeductions: makeFromInt 10821, federalTaxDue: makeFromInt 32357, stateTaxDue: makeFromInt 7981 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9164, qualifiedIncome: makeFromInt 12540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 874 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14430, federalTaxDue: makeFromInt 37226, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42120, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94635, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39626, stateTaxDue: makeFromInt 11824 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22495, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20398, federalTaxDue: makeFromInt 22435, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86693, qualifiedIncome: makeFromInt 30318, itemizedDeductions: makeFromInt 14338, federalTaxDue: makeFromInt 15474, stateTaxDue: makeFromInt 5396 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43834, ordinaryIncomeNonSS: makeFromInt 100038, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19309, stateTaxDue: makeFromInt 4627 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9618, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15707, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10105, federalTaxDue: makeFromInt 22286, stateTaxDue: makeFromInt 6929 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36954, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 695, stateTaxDue: makeFromInt 1334 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105021, qualifiedIncome: makeFromInt 30424, itemizedDeductions: makeFromInt 19517, federalTaxDue: makeFromInt 21209, stateTaxDue: makeFromInt 6097 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10242, stateTaxDue: makeFromInt 4684 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20724, ordinaryIncomeNonSS: makeFromInt 108852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25481, stateTaxDue: makeFromInt 5327 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146637, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 529, federalTaxDue: makeFromInt 32938, stateTaxDue: makeFromInt 11857 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22027, federalTaxDue: makeFromInt 31458, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5143, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 588 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39788, qualifiedIncome: makeFromInt 87131, itemizedDeductions: makeFromInt 18633, federalTaxDue: makeFromInt 7648, stateTaxDue: makeFromInt 6044 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29109, ordinaryIncomeNonSS: makeFromInt 83966, qualifiedIncome: makeFromInt 62015, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18214, stateTaxDue: makeFromInt 6894 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97448, itemizedDeductions: makeFromInt 3128, federalTaxDue: makeFromInt 5655, stateTaxDue: makeFromInt 4297 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31436, qualifiedIncome: makeFromInt 97230, itemizedDeductions: makeFromInt 24319, federalTaxDue: makeFromInt 1756, stateTaxDue: makeFromInt 5758 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115479, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34373, stateTaxDue: makeFromInt 5665 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19815, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 516 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16309, ordinaryIncomeNonSS: makeFromInt 100455, qualifiedIncome: makeFromInt 12797, itemizedDeductions: makeFromInt 25794, federalTaxDue: makeFromInt 15734, stateTaxDue: makeFromInt 5088 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28693, ordinaryIncomeNonSS: makeFromInt 52935, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14620, federalTaxDue: makeFromInt 7871, stateTaxDue: makeFromInt 2251 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22980, ordinaryIncomeNonSS: makeFromInt 115939, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35778, stateTaxDue: makeFromInt 10462 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9797, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26604, ordinaryIncomeNonSS: makeFromInt 52586, qualifiedIncome: makeFromInt 174, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3279, stateTaxDue: makeFromInt 2262 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24137, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 680 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72509, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7451, stateTaxDue: makeFromInt 3249 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30715, ordinaryIncomeNonSS: makeFromInt 73703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12333, stateTaxDue: makeFromInt 3310 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10873, federalTaxDue: makeFromInt 12916, stateTaxDue: makeFromInt 5618 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56495, qualifiedIncome: makeFromInt 33886, itemizedDeductions: makeFromInt 16680, federalTaxDue: makeFromInt 8919, stateTaxDue: makeFromInt 4064 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51308, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2798, federalTaxDue: makeFromInt 4271, stateTaxDue: makeFromInt 2168 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20247, ordinaryIncomeNonSS: makeFromInt 96572, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26410, stateTaxDue: makeFromInt 9576 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26305, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 216 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2921, ordinaryIncomeNonSS: makeFromInt 35902, qualifiedIncome: makeFromInt 29182, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1888, stateTaxDue: makeFromInt 2879 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78210, itemizedDeductions: makeFromInt 2352, federalTaxDue: makeFromInt 39334, stateTaxDue: makeFromInt 11210 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4757, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20073, ordinaryIncomeNonSS: makeFromInt 131825, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10379, federalTaxDue: makeFromInt 16946, stateTaxDue: makeFromInt 5916 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37829, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6603, federalTaxDue: makeFromInt 33349, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74647, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7659, stateTaxDue: makeFromInt 3277 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43758, ordinaryIncomeNonSS: makeFromInt 97392, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21747, federalTaxDue: makeFromInt 20481, stateTaxDue: makeFromInt 4415 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23341, federalTaxDue: makeFromInt 17039, stateTaxDue: makeFromInt 4666 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132485, qualifiedIncome: makeFromInt 66154, itemizedDeductions: makeFromInt 21715, federalTaxDue: makeFromInt 39044, stateTaxDue: makeFromInt 9557 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34944, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63215, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38766, stateTaxDue: makeFromInt 10446 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9972, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 552 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19233, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 328 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51715, itemizedDeductions: makeFromInt 532, federalTaxDue: makeFromInt 1064, stateTaxDue: makeFromInt 2331 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95389, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14807, stateTaxDue: makeFromInt 4518 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148726, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20452, federalTaxDue: makeFromInt 38343, stateTaxDue: makeFromInt 11861 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18754, federalTaxDue: makeFromInt 25335, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8197, ordinaryIncomeNonSS: makeFromInt 101928, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18184, stateTaxDue: makeFromInt 4852 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16145, ordinaryIncomeNonSS: makeFromInt 84168, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17657, stateTaxDue: makeFromInt 4068 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104286, qualifiedIncome: makeFromInt 8080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18243, stateTaxDue: makeFromInt 5384 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76958, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23993, federalTaxDue: makeFromInt 10355, stateTaxDue: makeFromInt 3272 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66404, itemizedDeductions: makeFromInt 13018, federalTaxDue: makeFromInt 35593, stateTaxDue: makeFromInt 10565 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5189, ordinaryIncomeNonSS: makeFromInt 87503, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19585, federalTaxDue: makeFromInt 10350, stateTaxDue: makeFromInt 4076 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64124, itemizedDeductions: makeFromInt 334, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2531 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38742, qualifiedIncome: makeFromInt 15730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 589, stateTaxDue: makeFromInt 2125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21530, ordinaryIncomeNonSS: makeFromInt 73791, qualifiedIncome: makeFromInt 44346, itemizedDeductions: makeFromInt 21245, federalTaxDue: makeFromInt 15630, stateTaxDue: makeFromInt 5532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2317, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57091, itemizedDeductions: makeFromInt 7818, federalTaxDue: makeFromInt 33466, stateTaxDue: makeFromInt 10011 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8597, ordinaryIncomeNonSS: makeFromInt 31522, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27686, federalTaxDue: makeFromInt 575, stateTaxDue: makeFromInt 1159 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40172, ordinaryIncomeNonSS: makeFromInt 108526, qualifiedIncome: makeFromInt 73210, itemizedDeductions: makeFromInt 6770, federalTaxDue: makeFromInt 28047, stateTaxDue: makeFromInt 8412 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134141, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20346, federalTaxDue: makeFromInt 28702, stateTaxDue: makeFromInt 11232 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106171, qualifiedIncome: makeFromInt 32100, itemizedDeductions: makeFromInt 21025, federalTaxDue: makeFromInt 19337, stateTaxDue: makeFromInt 6659 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129695, qualifiedIncome: makeFromInt 69091, itemizedDeductions: makeFromInt 16436, federalTaxDue: makeFromInt 29256, stateTaxDue: makeFromInt 9564 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75702, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23549, federalTaxDue: makeFromInt 4322, stateTaxDue: makeFromInt 3432 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134071, qualifiedIncome: makeFromInt 18910, itemizedDeductions: makeFromInt 1760, federalTaxDue: makeFromInt 24646, stateTaxDue: makeFromInt 7394 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27382, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96146, itemizedDeductions: makeFromInt 12568, federalTaxDue: makeFromInt 51323, stateTaxDue: makeFromInt 12329 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5339, itemizedDeductions: makeFromInt 8054, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62028, qualifiedIncome: makeFromInt 63705, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10947, stateTaxDue: makeFromInt 5964 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7694, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93889, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42254, stateTaxDue: makeFromInt 11939 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8617, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14437, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18604, qualifiedIncome: makeFromInt 88122, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8913, stateTaxDue: makeFromInt 5167 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18854, ordinaryIncomeNonSS: makeFromInt 18994, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6879, federalTaxDue: makeFromInt 850, stateTaxDue: makeFromInt 535 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12716, ordinaryIncomeNonSS: makeFromInt 107161, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 160, federalTaxDue: makeFromInt 16402, stateTaxDue: makeFromInt 4914 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18370, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 544 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48364, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81413, itemizedDeductions: makeFromInt 7663, federalTaxDue: makeFromInt 2982, stateTaxDue: makeFromInt 3499 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45701, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8084, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20739, itemizedDeductions: makeFromInt 16420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 711 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41712, ordinaryIncomeNonSS: makeFromInt 138227, qualifiedIncome: makeFromInt 27196, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30357, stateTaxDue: makeFromInt 7896 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2387, stateTaxDue: makeFromInt 1856 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31397, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24075, federalTaxDue: makeFromInt 1873, stateTaxDue: makeFromInt 1095 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5681, ordinaryIncomeNonSS: makeFromInt 34300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6739, federalTaxDue: makeFromInt 2591, stateTaxDue: makeFromInt 1460 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54435, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19103, stateTaxDue: makeFromInt 7529 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56277, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10238, federalTaxDue: makeFromInt 2809, stateTaxDue: makeFromInt 2139 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113469, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26544, stateTaxDue: makeFromInt 10459 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50735, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24979, federalTaxDue: makeFromInt 2328, stateTaxDue: makeFromInt 2139 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54469, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1477, stateTaxDue: makeFromInt 2468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100963, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29065, stateTaxDue: makeFromInt 9593 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16379, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32134, itemizedDeductions: makeFromInt 20897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1352 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7340, federalTaxDue: makeFromInt 4567, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36954, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29429, stateTaxDue: makeFromInt 8730 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10179, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12270, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5648, itemizedDeductions: makeFromInt 10058, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 27 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16580, ordinaryIncomeNonSS: makeFromInt 141986, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19831, federalTaxDue: makeFromInt 40461, stateTaxDue: makeFromInt 11913 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18613, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85778, itemizedDeductions: makeFromInt 3064, federalTaxDue: makeFromInt 35185, stateTaxDue: makeFromInt 11314 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79947, itemizedDeductions: makeFromInt 9062, federalTaxDue: makeFromInt 3877, stateTaxDue: makeFromInt 3422 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28563, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39690, stateTaxDue: makeFromInt 12181 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28198, federalTaxDue: makeFromInt 39113, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97592, itemizedDeductions: makeFromInt 23345, federalTaxDue: makeFromInt 38871, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29009, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 581, stateTaxDue: makeFromInt 996 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67872, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37784, stateTaxDue: makeFromInt 10683 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32909, ordinaryIncomeNonSS: makeFromInt 104204, qualifiedIncome: makeFromInt 28965, itemizedDeductions: makeFromInt 928, federalTaxDue: makeFromInt 24769, stateTaxDue: makeFromInt 6343 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2073, stateTaxDue: makeFromInt 4056 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39680, ordinaryIncomeNonSS: makeFromInt 40552, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13101, federalTaxDue: makeFromInt 4458, stateTaxDue: makeFromInt 1517 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33108, ordinaryIncomeNonSS: makeFromInt 69634, qualifiedIncome: makeFromInt 80612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25669, stateTaxDue: makeFromInt 7234 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33724, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32464, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1227 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25409, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36766, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7649, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45415, itemizedDeductions: makeFromInt 12918, federalTaxDue: makeFromInt 752, stateTaxDue: makeFromInt 2016 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87823, qualifiedIncome: makeFromInt 95855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23508, stateTaxDue: makeFromInt 8919 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26628, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30661, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17462, ordinaryIncomeNonSS: makeFromInt 14992, qualifiedIncome: makeFromInt 21939, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 280, stateTaxDue: makeFromInt 1455 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49049, itemizedDeductions: makeFromInt 2512, federalTaxDue: makeFromInt 1106, stateTaxDue: makeFromInt 2197 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33811, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29926, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43799, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70622, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7686, stateTaxDue: makeFromInt 3173 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18567, ordinaryIncomeNonSS: makeFromInt 109759, qualifiedIncome: makeFromInt 56930, itemizedDeductions: makeFromInt 10491, federalTaxDue: makeFromInt 25027, stateTaxDue: makeFromInt 7759 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13497, qualifiedIncome: makeFromInt 89605, itemizedDeductions: makeFromInt 6996, federalTaxDue: makeFromInt 8025, stateTaxDue: makeFromInt 4830 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53902, qualifiedIncome: makeFromInt 70308, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10726, stateTaxDue: makeFromInt 5636 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9711, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69054, qualifiedIncome: makeFromInt 31989, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9084, stateTaxDue: makeFromInt 4797 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100231, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22001, stateTaxDue: makeFromInt 9763 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22713, ordinaryIncomeNonSS: makeFromInt 140412, qualifiedIncome: makeFromInt 74425, itemizedDeductions: makeFromInt 2758, federalTaxDue: makeFromInt 40097, stateTaxDue: makeFromInt 10287 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25750, ordinaryIncomeNonSS: makeFromInt 76059, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10256, stateTaxDue: makeFromInt 3548 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47701, ordinaryIncomeNonSS: makeFromInt 37982, qualifiedIncome: makeFromInt 8260, itemizedDeductions: makeFromInt 2270, federalTaxDue: makeFromInt 10489, stateTaxDue: makeFromInt 2012 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140148, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36297, stateTaxDue: makeFromInt 6719 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63625, qualifiedIncome: makeFromInt 75956, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21842, stateTaxDue: makeFromInt 6404 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66142, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2832 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42064, qualifiedIncome: makeFromInt 90685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27927, stateTaxDue: makeFromInt 6546 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11110, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12049, itemizedDeductions: makeFromInt 16802, federalTaxDue: makeFromInt 26703, stateTaxDue: makeFromInt 7714 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16993, ordinaryIncomeNonSS: makeFromInt 118513, qualifiedIncome: makeFromInt 73105, itemizedDeductions: makeFromInt 26717, federalTaxDue: makeFromInt 24407, stateTaxDue: makeFromInt 8906 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86397, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9361, federalTaxDue: makeFromInt 8794, stateTaxDue: makeFromInt 3745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12513, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8414, federalTaxDue: makeFromInt 27097, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20011, ordinaryIncomeNonSS: makeFromInt 115404, qualifiedIncome: makeFromInt 69971, itemizedDeductions: makeFromInt 28264, federalTaxDue: makeFromInt 23818, stateTaxDue: makeFromInt 8594 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53173, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1984 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32090, ordinaryIncomeNonSS: makeFromInt 144407, qualifiedIncome: makeFromInt 68814, itemizedDeductions: makeFromInt 9282, federalTaxDue: makeFromInt 32283, stateTaxDue: makeFromInt 10186 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8870, ordinaryIncomeNonSS: makeFromInt 64656, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25346, federalTaxDue: makeFromInt 5308, stateTaxDue: makeFromInt 2858 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19231, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7446, itemizedDeductions: makeFromInt 25749, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44331, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15491, federalTaxDue: makeFromInt 32860, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79648, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22924, stateTaxDue: makeFromInt 8729 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30912, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37638, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1456 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10311, ordinaryIncomeNonSS: makeFromInt 56988, qualifiedIncome: makeFromInt 14580, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3976, stateTaxDue: makeFromInt 3203 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45360, ordinaryIncomeNonSS: makeFromInt 93471, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36318, stateTaxDue: makeFromInt 9419 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39838, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1685 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8205, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23499, stateTaxDue: makeFromInt 7809 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49716, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4954, ordinaryIncomeNonSS: makeFromInt 146373, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32302, stateTaxDue: makeFromInt 7241 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42420, ordinaryIncomeNonSS: makeFromInt 16375, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5005, federalTaxDue: makeFromInt 1213, stateTaxDue: makeFromInt 605 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18588, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16994, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90983, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18160, federalTaxDue: makeFromInt 19685, stateTaxDue: makeFromInt 3974 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87058, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4096, stateTaxDue: makeFromInt 3978 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33944, ordinaryIncomeNonSS: makeFromInt 7930, qualifiedIncome: makeFromInt 13133, itemizedDeductions: makeFromInt 15803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9989, ordinaryIncomeNonSS: makeFromInt 140876, qualifiedIncome: makeFromInt 49788, itemizedDeductions: makeFromInt 2093, federalTaxDue: makeFromInt 39430, stateTaxDue: makeFromInt 9499 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17367, itemizedDeductions: makeFromInt 12952, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 335 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4389, itemizedDeductions: makeFromInt 29169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14847, itemizedDeductions: makeFromInt 13505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 267 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31901, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53224, itemizedDeductions: makeFromInt 15530, federalTaxDue: makeFromInt 34795, stateTaxDue: makeFromInt 9712 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24024, ordinaryIncomeNonSS: makeFromInt 49183, qualifiedIncome: makeFromInt 86125, itemizedDeductions: makeFromInt 16398, federalTaxDue: makeFromInt 12923, stateTaxDue: makeFromInt 6389 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6782, stateTaxDue: makeFromInt 1775 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31226, ordinaryIncomeNonSS: makeFromInt 131143, qualifiedIncome: makeFromInt 91960, itemizedDeductions: makeFromInt 25761, federalTaxDue: makeFromInt 37250, stateTaxDue: makeFromInt 10580 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13939, qualifiedIncome: makeFromInt 30447, itemizedDeductions: makeFromInt 26510, federalTaxDue: makeFromInt 176, stateTaxDue: makeFromInt 1713 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129552, qualifiedIncome: makeFromInt 93133, itemizedDeductions: makeFromInt 13877, federalTaxDue: makeFromInt 35370, stateTaxDue: makeFromInt 10679 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40259, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16636, itemizedDeductions: makeFromInt 19850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 357 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7531, ordinaryIncomeNonSS: makeFromInt 91803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8258, stateTaxDue: makeFromInt 4115 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42974, ordinaryIncomeNonSS: makeFromInt 62078, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26401, federalTaxDue: makeFromInt 6866, stateTaxDue: makeFromInt 2513 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6722, stateTaxDue: makeFromInt 4030 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 301, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5826, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9296, ordinaryIncomeNonSS: makeFromInt 13044, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25995, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4977 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21793, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 514, stateTaxDue: makeFromInt 663 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39824, ordinaryIncomeNonSS: makeFromInt 19004, qualifiedIncome: makeFromInt 94621, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14530, stateTaxDue: makeFromInt 5306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31430, ordinaryIncomeNonSS: makeFromInt 80371, qualifiedIncome: makeFromInt 85036, itemizedDeductions: makeFromInt 25853, federalTaxDue: makeFromInt 23773, stateTaxDue: makeFromInt 8007 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3524, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99034, itemizedDeductions: makeFromInt 25782, federalTaxDue: makeFromInt 3560, stateTaxDue: makeFromInt 4602 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24856, federalTaxDue: makeFromInt 11014, stateTaxDue: makeFromInt 5421 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26906, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8762, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5819 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28325, ordinaryIncomeNonSS: makeFromInt 88252, qualifiedIncome: makeFromInt 51516, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22719, stateTaxDue: makeFromInt 6577 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24093, ordinaryIncomeNonSS: makeFromInt 73356, qualifiedIncome: makeFromInt 72316, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15700, stateTaxDue: makeFromInt 6878 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37225, itemizedDeductions: makeFromInt 9683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1486 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25943, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19423, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19591, federalTaxDue: makeFromInt 24698, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133963, qualifiedIncome: makeFromInt 43664, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35101, stateTaxDue: makeFromInt 8626 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33786, ordinaryIncomeNonSS: makeFromInt 72528, qualifiedIncome: makeFromInt 13834, itemizedDeductions: makeFromInt 23455, federalTaxDue: makeFromInt 9127, stateTaxDue: makeFromInt 3843 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18435, ordinaryIncomeNonSS: makeFromInt 71521, qualifiedIncome: makeFromInt 10510, itemizedDeductions: makeFromInt 22332, federalTaxDue: makeFromInt 6519, stateTaxDue: makeFromInt 3627 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85997, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 900, stateTaxDue: makeFromInt 3825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15684, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10366, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3001 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3709, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1674, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16295, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13493, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52019, itemizedDeductions: makeFromInt 21129, federalTaxDue: makeFromInt 42332, stateTaxDue: makeFromInt 9646 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22026, ordinaryIncomeNonSS: makeFromInt 122238, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21025, stateTaxDue: makeFromInt 5887 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20535, qualifiedIncome: makeFromInt 39963, itemizedDeductions: makeFromInt 18954, federalTaxDue: makeFromInt 302, stateTaxDue: makeFromInt 2657 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129977, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25257, federalTaxDue: makeFromInt 17469, stateTaxDue: makeFromInt 5924 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42820, ordinaryIncomeNonSS: makeFromInt 65022, qualifiedIncome: makeFromInt 59352, itemizedDeductions: makeFromInt 11155, federalTaxDue: makeFromInt 23844, stateTaxDue: makeFromInt 5764 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20768, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46610, ordinaryIncomeNonSS: makeFromInt 147898, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11885, federalTaxDue: makeFromInt 48823, stateTaxDue: makeFromInt 12092 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15217, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18549, ordinaryIncomeNonSS: makeFromInt 22070, qualifiedIncome: makeFromInt 75410, itemizedDeductions: makeFromInt 26089, federalTaxDue: makeFromInt 864, stateTaxDue: makeFromInt 4199 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70040, qualifiedIncome: makeFromInt 13286, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12687, stateTaxDue: makeFromInt 4025 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34874, ordinaryIncomeNonSS: makeFromInt 95612, qualifiedIncome: makeFromInt 49134, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28032, stateTaxDue: makeFromInt 6982 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57361, qualifiedIncome: makeFromInt 74824, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1706, stateTaxDue: makeFromInt 6089 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13504, itemizedDeductions: makeFromInt 29639, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 200 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 333, ordinaryIncomeNonSS: makeFromInt 116415, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15657, stateTaxDue: makeFromInt 5246 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47082, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14819, federalTaxDue: makeFromInt 3681, stateTaxDue: makeFromInt 1973 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24517, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5877, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144295, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34404, stateTaxDue: makeFromInt 11806 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23289, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15710, itemizedDeductions: makeFromInt 4842, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 311 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36400, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35750, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43639, ordinaryIncomeNonSS: makeFromInt 578, qualifiedIncome: makeFromInt 73917, itemizedDeductions: makeFromInt 28846, federalTaxDue: makeFromInt 7294, stateTaxDue: makeFromInt 3470 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130290, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14502, stateTaxDue: makeFromInt 5840 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12187, ordinaryIncomeNonSS: makeFromInt 146064, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25021, federalTaxDue: makeFromInt 39936, stateTaxDue: makeFromInt 12048 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14910, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75472, itemizedDeductions: makeFromInt 18606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3299 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47887, ordinaryIncomeNonSS: makeFromInt 69639, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 701, federalTaxDue: makeFromInt 9297, stateTaxDue: makeFromInt 3007 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32834, itemizedDeductions: makeFromInt 6992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1246 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47038, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14416, itemizedDeductions: makeFromInt 6530, federalTaxDue: makeFromInt 35018, stateTaxDue: makeFromInt 7846 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7823, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96679, itemizedDeductions: makeFromInt 7898, federalTaxDue: makeFromInt 33156, stateTaxDue: makeFromInt 11859 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13855, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28459, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47189, itemizedDeductions: makeFromInt 12010, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2040 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122000, qualifiedIncome: makeFromInt 29946, itemizedDeductions: makeFromInt 20409, federalTaxDue: makeFromInt 19125, stateTaxDue: makeFromInt 7198 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40446, ordinaryIncomeNonSS: makeFromInt 111293, qualifiedIncome: makeFromInt 15757, itemizedDeductions: makeFromInt 27585, federalTaxDue: makeFromInt 18602, stateTaxDue: makeFromInt 5678 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39833, ordinaryIncomeNonSS: makeFromInt 15258, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 188 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12781, ordinaryIncomeNonSS: makeFromInt 38674, qualifiedIncome: makeFromInt 51558, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5717, stateTaxDue: makeFromInt 3937 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3406, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37683, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23480, stateTaxDue: makeFromInt 8909 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5279, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46085, ordinaryIncomeNonSS: makeFromInt 121540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19548, stateTaxDue: makeFromInt 5602 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14819, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12850, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23617, itemizedDeductions: makeFromInt 25630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 806 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30509, ordinaryIncomeNonSS: makeFromInt 38392, qualifiedIncome: makeFromInt 49291, itemizedDeductions: makeFromInt 17923, federalTaxDue: makeFromInt 10827, stateTaxDue: makeFromInt 3809 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45066, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30076, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13905, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11362, itemizedDeductions: makeFromInt 1164, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 113 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6262, ordinaryIncomeNonSS: makeFromInt 89552, qualifiedIncome: makeFromInt 35367, itemizedDeductions: makeFromInt 6515, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 5771 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43725, ordinaryIncomeNonSS: makeFromInt 131592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19029, federalTaxDue: makeFromInt 21318, stateTaxDue: makeFromInt 6105 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42529, ordinaryIncomeNonSS: makeFromInt 36889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20787, federalTaxDue: makeFromInt 4716, stateTaxDue: makeFromInt 1389 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1740, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 189, ordinaryIncomeNonSS: makeFromInt 132861, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29493, stateTaxDue: makeFromInt 10968 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138094, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24389, stateTaxDue: makeFromInt 6550 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93323, itemizedDeductions: makeFromInt 25385, federalTaxDue: makeFromInt 9343, stateTaxDue: makeFromInt 4291 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19954, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8642, federalTaxDue: makeFromInt 4531, stateTaxDue: makeFromInt 5669 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111129, qualifiedIncome: makeFromInt 53490, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35602, stateTaxDue: makeFromInt 7776 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26660, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 205, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 658 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149138, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7471, federalTaxDue: makeFromInt 24665, stateTaxDue: makeFromInt 7157 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5245, ordinaryIncomeNonSS: makeFromInt 125215, qualifiedIncome: makeFromInt 73515, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25393, stateTaxDue: makeFromInt 9462 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40752, ordinaryIncomeNonSS: makeFromInt 13817, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 316 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17335, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38753, itemizedDeductions: makeFromInt 26495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1513 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137662, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12886, federalTaxDue: makeFromInt 23827, stateTaxDue: makeFromInt 6208 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141984, qualifiedIncome: makeFromInt 25693, itemizedDeductions: makeFromInt 21276, federalTaxDue: makeFromInt 21689, stateTaxDue: makeFromInt 8103 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18243, ordinaryIncomeNonSS: makeFromInt 128002, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9623, federalTaxDue: makeFromInt 25150, stateTaxDue: makeFromInt 5945 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13216, itemizedDeductions: makeFromInt 4221, federalTaxDue: makeFromInt 19174, stateTaxDue: makeFromInt 7686 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85825, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23405, stateTaxDue: makeFromInt 9028 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79026, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1591, stateTaxDue: makeFromInt 3276 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41071, itemizedDeductions: makeFromInt 22040, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1544 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28179, ordinaryIncomeNonSS: makeFromInt 27623, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13912, stateTaxDue: makeFromInt 6126 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90037, qualifiedIncome: makeFromInt 98244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19545, stateTaxDue: makeFromInt 8950 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89601, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2145, stateTaxDue: makeFromInt 4121 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116585, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17762, federalTaxDue: makeFromInt 26937, stateTaxDue: makeFromInt 5517 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 460, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39295, qualifiedIncome: makeFromInt 89948, itemizedDeductions: makeFromInt 15003, federalTaxDue: makeFromInt 17136, stateTaxDue: makeFromInt 6143 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14627, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 256 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7590, ordinaryIncomeNonSS: makeFromInt 77485, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7180, federalTaxDue: makeFromInt 9165, stateTaxDue: makeFromInt 3503 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76211, qualifiedIncome: makeFromInt 94758, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24521, stateTaxDue: makeFromInt 7873 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32077, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21226, ordinaryIncomeNonSS: makeFromInt 44154, qualifiedIncome: makeFromInt 75006, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6116, stateTaxDue: makeFromInt 5283 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54971, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14322, federalTaxDue: makeFromInt 4733, stateTaxDue: makeFromInt 2494 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69762, qualifiedIncome: makeFromInt 29654, itemizedDeductions: makeFromInt 2505, federalTaxDue: makeFromInt 5055, stateTaxDue: makeFromInt 4576 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31852, itemizedDeductions: makeFromInt 5973, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1063 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3888, itemizedDeductions: makeFromInt 12064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37648, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67030, itemizedDeductions: makeFromInt 14022, federalTaxDue: makeFromInt 7542, stateTaxDue: makeFromInt 3097 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91333, qualifiedIncome: makeFromInt 84261, itemizedDeductions: makeFromInt 2359, federalTaxDue: makeFromInt 22196, stateTaxDue: makeFromInt 8405 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7785, qualifiedIncome: makeFromInt 81332, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6552, stateTaxDue: makeFromInt 4117 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39525, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23554, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 650 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34506, ordinaryIncomeNonSS: makeFromInt 56981, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11372, stateTaxDue: makeFromInt 2594 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127686, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27203, stateTaxDue: makeFromInt 6009 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27419, ordinaryIncomeNonSS: makeFromInt 12879, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8867, federalTaxDue: makeFromInt 27, stateTaxDue: makeFromInt 310 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40477, ordinaryIncomeNonSS: makeFromInt 39411, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13003, stateTaxDue: makeFromInt 6296 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27795, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97913, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2687, stateTaxDue: makeFromInt 4421 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34217, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91767, itemizedDeductions: makeFromInt 2560, federalTaxDue: makeFromInt 39763, stateTaxDue: makeFromInt 11881 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43355, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105270, qualifiedIncome: makeFromInt 60959, itemizedDeductions: makeFromInt 2724, federalTaxDue: makeFromInt 22841, stateTaxDue: makeFromInt 8029 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27683, ordinaryIncomeNonSS: makeFromInt 6290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23327, ordinaryIncomeNonSS: makeFromInt 31500, qualifiedIncome: makeFromInt 50622, itemizedDeductions: makeFromInt 10405, federalTaxDue: makeFromInt 12544, stateTaxDue: makeFromInt 3964 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25871, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1997, federalTaxDue: makeFromInt 30481, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34523, ordinaryIncomeNonSS: makeFromInt 30233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17826, federalTaxDue: makeFromInt 813, stateTaxDue: makeFromInt 991 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29227, ordinaryIncomeNonSS: makeFromInt 92482, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14529, stateTaxDue: makeFromInt 4049 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39954, ordinaryIncomeNonSS: makeFromInt 23287, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9839, stateTaxDue: makeFromInt 5689 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19376, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 494 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43456, qualifiedIncome: makeFromInt 51309, itemizedDeductions: makeFromInt 1275, federalTaxDue: makeFromInt 1736, stateTaxDue: makeFromInt 4063 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100078, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10735, stateTaxDue: makeFromInt 4629 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130080, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37025, stateTaxDue: makeFromInt 11306 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38256, ordinaryIncomeNonSS: makeFromInt 70924, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13208, federalTaxDue: makeFromInt 11475, stateTaxDue: makeFromInt 2971 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32395, ordinaryIncomeNonSS: makeFromInt 2949, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7164, stateTaxDue: makeFromInt 4802 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58158, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2517 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38473, ordinaryIncomeNonSS: makeFromInt 110258, qualifiedIncome: makeFromInt 95936, itemizedDeductions: makeFromInt 15992, federalTaxDue: makeFromInt 30033, stateTaxDue: makeFromInt 9635 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21343, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79770, itemizedDeductions: makeFromInt 23119, federalTaxDue: makeFromInt 6318, stateTaxDue: makeFromInt 3640 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48741, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2062 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35461, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1329 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9703, ordinaryIncomeNonSS: makeFromInt 10022, qualifiedIncome: makeFromInt 31345, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 487, stateTaxDue: makeFromInt 1763 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14562, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49646, ordinaryIncomeNonSS: makeFromInt 106336, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18824, stateTaxDue: makeFromInt 4872 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23438, itemizedDeductions: makeFromInt 9778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 697 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6539, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84631, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4495, stateTaxDue: makeFromInt 3765 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58097, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29774, federalTaxDue: makeFromInt 14458, stateTaxDue: makeFromInt 7640 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99903, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3690, stateTaxDue: makeFromInt 4442 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31446, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19779, federalTaxDue: makeFromInt 31068, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21165, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40791, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28335, federalTaxDue: makeFromInt 25564, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32015, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11461, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69739, itemizedDeductions: makeFromInt 9941, federalTaxDue: makeFromInt 2091, stateTaxDue: makeFromInt 3112 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33590, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32484, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121441, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9469, federalTaxDue: makeFromInt 15504, stateTaxDue: makeFromInt 5697 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14826, ordinaryIncomeNonSS: makeFromInt 3908, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16791, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58111, itemizedDeductions: makeFromInt 23734, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2231 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57564, qualifiedIncome: makeFromInt 14656, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14441, stateTaxDue: makeFromInt 3459 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78126, qualifiedIncome: makeFromInt 30798, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10322, stateTaxDue: makeFromInt 4871 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50585, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28, stateTaxDue: makeFromInt 2029 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19915, ordinaryIncomeNonSS: makeFromInt 122450, qualifiedIncome: makeFromInt 991, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19957, stateTaxDue: makeFromInt 5597 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4990, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2399, itemizedDeductions: makeFromInt 10894, federalTaxDue: makeFromInt 31918, stateTaxDue: makeFromInt 7120 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142545, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19347, stateTaxDue: makeFromInt 6552 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113497, qualifiedIncome: makeFromInt 48216, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25179, stateTaxDue: makeFromInt 7631 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58350, itemizedDeductions: makeFromInt 27007, federalTaxDue: makeFromInt 839, stateTaxDue: makeFromInt 2527 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16753, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 406 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132374, qualifiedIncome: makeFromInt 62894, itemizedDeductions: makeFromInt 7060, federalTaxDue: makeFromInt 31889, stateTaxDue: makeFromInt 9530 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27085, ordinaryIncomeNonSS: makeFromInt 95570, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6301, federalTaxDue: makeFromInt 23344, stateTaxDue: makeFromInt 4650 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108652, qualifiedIncome: makeFromInt 43719, itemizedDeductions: makeFromInt 24527, federalTaxDue: makeFromInt 18766, stateTaxDue: makeFromInt 7044 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146735, qualifiedIncome: makeFromInt 52319, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39072, stateTaxDue: makeFromInt 9927 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26084, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62355, itemizedDeductions: makeFromInt 3971, federalTaxDue: makeFromInt 40306, stateTaxDue: makeFromInt 10363 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34795, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15652, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39988, ordinaryIncomeNonSS: makeFromInt 95361, qualifiedIncome: makeFromInt 86889, itemizedDeductions: makeFromInt 17996, federalTaxDue: makeFromInt 25682, stateTaxDue: makeFromInt 8438 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4357, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93124, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8321, stateTaxDue: makeFromInt 4321 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19714, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56223, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2136 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135315, qualifiedIncome: makeFromInt 40588, itemizedDeductions: makeFromInt 1159, federalTaxDue: makeFromInt 28871, stateTaxDue: makeFromInt 8540 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39960, ordinaryIncomeNonSS: makeFromInt 129709, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24249, stateTaxDue: makeFromInt 5962 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69270, qualifiedIncome: makeFromInt 44332, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18340, stateTaxDue: makeFromInt 5105 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20923, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45839, itemizedDeductions: makeFromInt 24615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1817 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6163, ordinaryIncomeNonSS: makeFromInt 107242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10273, federalTaxDue: makeFromInt 9554, stateTaxDue: makeFromInt 4687 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76090, qualifiedIncome: makeFromInt 13546, itemizedDeductions: makeFromInt 12193, federalTaxDue: makeFromInt 5558, stateTaxDue: makeFromInt 3919 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52039, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7904, stateTaxDue: makeFromInt 2307 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16199, ordinaryIncomeNonSS: makeFromInt 101438, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34762, stateTaxDue: makeFromInt 9927 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42546, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26794, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86229, qualifiedIncome: makeFromInt 70631, itemizedDeductions: makeFromInt 26174, federalTaxDue: makeFromInt 27002, stateTaxDue: makeFromInt 7468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2137, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24383, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110778, qualifiedIncome: makeFromInt 63932, itemizedDeductions: makeFromInt 12114, federalTaxDue: makeFromInt 24965, stateTaxDue: makeFromInt 8482 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7463, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9940, federalTaxDue: makeFromInt 25172, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47443, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7048, stateTaxDue: makeFromInt 2117 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121211, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25860, federalTaxDue: makeFromInt 25858, stateTaxDue: makeFromInt 10386 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17729, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3173, federalTaxDue: makeFromInt 8273, stateTaxDue: makeFromInt 3869 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10173, ordinaryIncomeNonSS: makeFromInt 16404, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9802, federalTaxDue: makeFromInt 12543, stateTaxDue: makeFromInt 5508 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36466, ordinaryIncomeNonSS: makeFromInt 141923, qualifiedIncome: makeFromInt 18736, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33943, stateTaxDue: makeFromInt 7578 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67218, qualifiedIncome: makeFromInt 49342, itemizedDeductions: makeFromInt 3983, federalTaxDue: makeFromInt 4122, stateTaxDue: makeFromInt 5153 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11902, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1323, qualifiedIncome: makeFromInt 36158, itemizedDeductions: makeFromInt 9578, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1483 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7549, ordinaryIncomeNonSS: makeFromInt 94242, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24011, federalTaxDue: makeFromInt 12170, stateTaxDue: makeFromInt 4457 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22086, ordinaryIncomeNonSS: makeFromInt 60978, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17411, federalTaxDue: makeFromInt 10311, stateTaxDue: makeFromInt 2885 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11098, ordinaryIncomeNonSS: makeFromInt 32456, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14080, federalTaxDue: makeFromInt 15157, stateTaxDue: makeFromInt 6168 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46153, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113264, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31815, stateTaxDue: makeFromInt 10208 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47464, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35031, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40703, stateTaxDue: makeFromInt 8886 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54071, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2537, stateTaxDue: makeFromInt 2533 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53864, itemizedDeductions: makeFromInt 13805, federalTaxDue: makeFromInt 39329, stateTaxDue: makeFromInt 9744 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45749, ordinaryIncomeNonSS: makeFromInt 66654, qualifiedIncome: makeFromInt 90829, itemizedDeductions: makeFromInt 12384, federalTaxDue: makeFromInt 25561, stateTaxDue: makeFromInt 7299 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76707, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3946, stateTaxDue: makeFromInt 3361 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45570, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28921, federalTaxDue: makeFromInt 11453, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31789, qualifiedIncome: makeFromInt 91893, itemizedDeductions: makeFromInt 23577, federalTaxDue: makeFromInt 8136, stateTaxDue: makeFromInt 5879 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39800, ordinaryIncomeNonSS: makeFromInt 87462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21283, stateTaxDue: makeFromInt 4114 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12313, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 141 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27748, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7312, stateTaxDue: makeFromInt 5812 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6679, ordinaryIncomeNonSS: makeFromInt 87123, qualifiedIncome: makeFromInt 63857, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23681, stateTaxDue: makeFromInt 7353 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62639, qualifiedIncome: makeFromInt 88167, itemizedDeductions: makeFromInt 22174, federalTaxDue: makeFromInt 17237, stateTaxDue: makeFromInt 7285 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65985, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27089, stateTaxDue: makeFromInt 10124 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18909, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25958, stateTaxDue: makeFromInt 6880 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73339, qualifiedIncome: makeFromInt 80262, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24029, stateTaxDue: makeFromInt 7385 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2051, ordinaryIncomeNonSS: makeFromInt 81740, qualifiedIncome: makeFromInt 12576, itemizedDeductions: makeFromInt 14744, federalTaxDue: makeFromInt 8971, stateTaxDue: makeFromInt 4141 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18861, ordinaryIncomeNonSS: makeFromInt 84603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22512, stateTaxDue: makeFromInt 8555 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33629, itemizedDeductions: makeFromInt 19425, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1476 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11577, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15251, itemizedDeductions: makeFromInt 22252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 308 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119841, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30371, stateTaxDue: makeFromInt 5683 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38460, itemizedDeductions: makeFromInt 16004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1448 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38099, ordinaryIncomeNonSS: makeFromInt 108451, qualifiedIncome: makeFromInt 73690, itemizedDeductions: makeFromInt 18028, federalTaxDue: makeFromInt 34702, stateTaxDue: makeFromInt 8976 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 454, ordinaryIncomeNonSS: makeFromInt 48001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4592, federalTaxDue: makeFromInt 2812, stateTaxDue: makeFromInt 2020 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7074, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75900, qualifiedIncome: makeFromInt 20559, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5530, stateTaxDue: makeFromInt 4267 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1949, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24164, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5064, itemizedDeductions: makeFromInt 24226, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12316, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 241 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32715, qualifiedIncome: makeFromInt 60258, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3024, stateTaxDue: makeFromInt 4394 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46923, ordinaryIncomeNonSS: makeFromInt 111488, qualifiedIncome: makeFromInt 47405, itemizedDeductions: makeFromInt 16971, federalTaxDue: makeFromInt 29798, stateTaxDue: makeFromInt 7570 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2115, ordinaryIncomeNonSS: makeFromInt 13001, qualifiedIncome: makeFromInt 677, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 109 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42031, qualifiedIncome: makeFromInt 42477, itemizedDeductions: makeFromInt 8220, federalTaxDue: makeFromInt 18268, stateTaxDue: makeFromInt 3882 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2242, federalTaxDue: makeFromInt 28754, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104434, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5253, federalTaxDue: makeFromInt 39896, stateTaxDue: makeFromInt 9767 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86864, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 841, federalTaxDue: makeFromInt 10850, stateTaxDue: makeFromInt 4002 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12689, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 521, federalTaxDue: makeFromInt 30623, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31927, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10482, stateTaxDue: makeFromInt 6117 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21723, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20918, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44678, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18095, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114230, qualifiedIncome: makeFromInt 9840, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23599, stateTaxDue: makeFromInt 6103 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89040, qualifiedIncome: makeFromInt 81419, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24185, stateTaxDue: makeFromInt 8268 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80294, qualifiedIncome: makeFromInt 65763, itemizedDeductions: makeFromInt 18854, federalTaxDue: makeFromInt 15933, stateTaxDue: makeFromInt 7021 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24173, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48630, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28508, federalTaxDue: makeFromInt 5545, stateTaxDue: makeFromInt 3412 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5926, itemizedDeductions: makeFromInt 10274, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24799, stateTaxDue: makeFromInt 9584 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 960, ordinaryIncomeNonSS: makeFromInt 44540, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1623, stateTaxDue: makeFromInt 1772 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18173, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64085, itemizedDeductions: makeFromInt 20903, federalTaxDue: makeFromInt 41988, stateTaxDue: makeFromInt 10694 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44566, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1653 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16142, itemizedDeductions: makeFromInt 27168, federalTaxDue: makeFromInt 26414, stateTaxDue: makeFromInt 8126 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30481, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60162, itemizedDeductions: makeFromInt 28296, federalTaxDue: makeFromInt 26215, stateTaxDue: makeFromInt 9833 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16440, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44759, ordinaryIncomeNonSS: makeFromInt 88941, qualifiedIncome: makeFromInt 65434, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22869, stateTaxDue: makeFromInt 7352 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28309, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25489, federalTaxDue: makeFromInt 26334, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5035, itemizedDeductions: makeFromInt 14702, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20419, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83676, itemizedDeductions: makeFromInt 18605, federalTaxDue: makeFromInt 6761, stateTaxDue: makeFromInt 4043 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18061, federalTaxDue: makeFromInt 23450, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49703, ordinaryIncomeNonSS: makeFromInt 106417, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12766, federalTaxDue: makeFromInt 39505, stateTaxDue: makeFromInt 10078 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82808, itemizedDeductions: makeFromInt 27041, federalTaxDue: makeFromInt 2359, stateTaxDue: makeFromInt 3465 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12304, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28844, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51269, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19697, federalTaxDue: makeFromInt 11148, stateTaxDue: makeFromInt 2108 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20580, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5202, federalTaxDue: makeFromInt 11251, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98830, qualifiedIncome: makeFromInt 21391, itemizedDeductions: makeFromInt 1571, federalTaxDue: makeFromInt 15296, stateTaxDue: makeFromInt 5682 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13668, ordinaryIncomeNonSS: makeFromInt 93690, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12926, federalTaxDue: makeFromInt 11886, stateTaxDue: makeFromInt 4310 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90516, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24481, stateTaxDue: makeFromInt 9166 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47742, qualifiedIncome: makeFromInt 41411, itemizedDeductions: makeFromInt 25029, federalTaxDue: makeFromInt 3068, stateTaxDue: makeFromInt 4083 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91248, qualifiedIncome: makeFromInt 53798, itemizedDeductions: makeFromInt 17309, federalTaxDue: makeFromInt 21313, stateTaxDue: makeFromInt 7173 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48658, ordinaryIncomeNonSS: makeFromInt 11213, qualifiedIncome: makeFromInt 22730, itemizedDeductions: makeFromInt 24094, federalTaxDue: makeFromInt 120, stateTaxDue: makeFromInt 1282 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130279, qualifiedIncome: makeFromInt 65262, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27414, stateTaxDue: makeFromInt 9202 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12258, ordinaryIncomeNonSS: makeFromInt 140805, qualifiedIncome: makeFromInt 10442, itemizedDeductions: makeFromInt 10273, federalTaxDue: makeFromInt 21185, stateTaxDue: makeFromInt 6992 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11970, ordinaryIncomeNonSS: makeFromInt 127675, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16165, stateTaxDue: makeFromInt 5709 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40606, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80972, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22074, stateTaxDue: makeFromInt 8781 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30909, itemizedDeductions: makeFromInt 20963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1352 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45023, ordinaryIncomeNonSS: makeFromInt 56670, qualifiedIncome: makeFromInt 63016, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20567, stateTaxDue: makeFromInt 5655 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17960, federalTaxDue: makeFromInt 26295, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36393, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111392, qualifiedIncome: makeFromInt 97075, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25618, stateTaxDue: makeFromInt 10203 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47323, ordinaryIncomeNonSS: makeFromInt 87492, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20284, stateTaxDue: makeFromInt 4120 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 639, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8821, ordinaryIncomeNonSS: makeFromInt 31236, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 306, stateTaxDue: makeFromInt 887 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32064, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80171, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5966, stateTaxDue: makeFromInt 3754 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25924, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 894 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16857, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22592, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25742, federalTaxDue: makeFromInt 29428, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8377, ordinaryIncomeNonSS: makeFromInt 69473, qualifiedIncome: makeFromInt 72827, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16685, stateTaxDue: makeFromInt 6809 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16363, ordinaryIncomeNonSS: makeFromInt 128265, qualifiedIncome: makeFromInt 19245, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28298, stateTaxDue: makeFromInt 7095 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9381, ordinaryIncomeNonSS: makeFromInt 76648, qualifiedIncome: makeFromInt 41450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13552, stateTaxDue: makeFromInt 5530 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8555, ordinaryIncomeNonSS: makeFromInt 133015, qualifiedIncome: makeFromInt 72318, itemizedDeductions: makeFromInt 2899, federalTaxDue: makeFromInt 35763, stateTaxDue: makeFromInt 10147 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29260, ordinaryIncomeNonSS: makeFromInt 106363, qualifiedIncome: makeFromInt 40129, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24151, stateTaxDue: makeFromInt 6870 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42945, ordinaryIncomeNonSS: makeFromInt 5741, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31032, ordinaryIncomeNonSS: makeFromInt 23443, qualifiedIncome: makeFromInt 17505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4509, stateTaxDue: makeFromInt 1742 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21623, itemizedDeductions: makeFromInt 11057, federalTaxDue: makeFromInt 22645, stateTaxDue: makeFromInt 8106 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5663, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22516, federalTaxDue: makeFromInt 7689, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142673, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7322, federalTaxDue: makeFromInt 17226, stateTaxDue: makeFromInt 6459 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6370, federalTaxDue: makeFromInt 6791, stateTaxDue: makeFromInt 3998 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19593, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 646 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7327, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 111 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31650, ordinaryIncomeNonSS: makeFromInt 134731, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25150, stateTaxDue: makeFromInt 6162 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17986, ordinaryIncomeNonSS: makeFromInt 60310, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19865, federalTaxDue: makeFromInt 6514, stateTaxDue: makeFromInt 2441 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13495, itemizedDeductions: makeFromInt 9597, federalTaxDue: makeFromInt 19215, stateTaxDue: makeFromInt 7700 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41316, qualifiedIncome: makeFromInt 21707, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3259, stateTaxDue: makeFromInt 2896 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47381, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1460, stateTaxDue: makeFromInt 1988 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18777, ordinaryIncomeNonSS: makeFromInt 89765, qualifiedIncome: makeFromInt 36019, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17380, stateTaxDue: makeFromInt 5714 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129507, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15914, federalTaxDue: makeFromInt 20663, stateTaxDue: makeFromInt 6020 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13325, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46327, itemizedDeductions: makeFromInt 24124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1641 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12046, ordinaryIncomeNonSS: makeFromInt 74009, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18371, federalTaxDue: makeFromInt 6794, stateTaxDue: makeFromInt 3293 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21647, ordinaryIncomeNonSS: makeFromInt 123619, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38213, stateTaxDue: makeFromInt 11180 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77027, qualifiedIncome: makeFromInt 60372, itemizedDeductions: makeFromInt 15679, federalTaxDue: makeFromInt 24100, stateTaxDue: makeFromInt 6295 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34017, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40632, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90020, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7608, federalTaxDue: makeFromInt 17594, stateTaxDue: makeFromInt 9026 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44230, ordinaryIncomeNonSS: makeFromInt 69804, qualifiedIncome: makeFromInt 44659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15412, stateTaxDue: makeFromInt 5248 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43406, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66922, itemizedDeductions: makeFromInt 14986, federalTaxDue: makeFromInt 9756, stateTaxDue: makeFromInt 3091 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37792, ordinaryIncomeNonSS: makeFromInt 120992, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40659, stateTaxDue: makeFromInt 10822 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22675, ordinaryIncomeNonSS: makeFromInt 54738, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16941, federalTaxDue: makeFromInt 5194, stateTaxDue: makeFromInt 2062 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 10 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3332, qualifiedIncome: makeFromInt 23495, itemizedDeductions: makeFromInt 12707, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 866 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93269, qualifiedIncome: makeFromInt 59700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21328, stateTaxDue: makeFromInt 7393 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10651, ordinaryIncomeNonSS: makeFromInt 31959, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2606, stateTaxDue: makeFromInt 1343 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15755, ordinaryIncomeNonSS: makeFromInt 147934, qualifiedIncome: makeFromInt 79778, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36050, stateTaxDue: makeFromInt 11185 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5377, ordinaryIncomeNonSS: makeFromInt 98066, qualifiedIncome: makeFromInt 29161, itemizedDeductions: makeFromInt 72, federalTaxDue: makeFromInt 15672, stateTaxDue: makeFromInt 5986 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2999, ordinaryIncomeNonSS: makeFromInt 4605, qualifiedIncome: makeFromInt 42270, itemizedDeductions: makeFromInt 6065, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1669 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5819, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45105, qualifiedIncome: makeFromInt 95898, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16327, stateTaxDue: makeFromInt 6575 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17675, itemizedDeductions: makeFromInt 15733, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 473 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67495, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7226, stateTaxDue: makeFromInt 3000 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64475, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2635 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11802, ordinaryIncomeNonSS: makeFromInt 96223, qualifiedIncome: makeFromInt 51511, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23424, stateTaxDue: makeFromInt 7106 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60919, qualifiedIncome: makeFromInt 15198, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3270, stateTaxDue: makeFromInt 3331 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148169, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26970, stateTaxDue: makeFromInt 7128 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11219, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1480, itemizedDeductions: makeFromInt 18794, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42322, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36924, stateTaxDue: makeFromInt 7353 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27149, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35570, itemizedDeductions: makeFromInt 26346, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1590 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27809, ordinaryIncomeNonSS: makeFromInt 1640, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16688, ordinaryIncomeNonSS: makeFromInt 48870, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20726, stateTaxDue: makeFromInt 6989 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5184, ordinaryIncomeNonSS: makeFromInt 113017, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18490, stateTaxDue: makeFromInt 5335 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30168, qualifiedIncome: makeFromInt 36510, itemizedDeductions: makeFromInt 20635, federalTaxDue: makeFromInt 97, stateTaxDue: makeFromInt 2859 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5250, stateTaxDue: makeFromInt 3726 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26383, ordinaryIncomeNonSS: makeFromInt 47063, qualifiedIncome: makeFromInt 49335, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5862, stateTaxDue: makeFromInt 4222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118566, qualifiedIncome: makeFromInt 88285, itemizedDeductions: makeFromInt 18531, federalTaxDue: makeFromInt 31537, stateTaxDue: makeFromInt 10203 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16678, ordinaryIncomeNonSS: makeFromInt 97824, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10478, stateTaxDue: makeFromInt 4216 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6037, stateTaxDue: makeFromInt 2612 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32630, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62252, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5431, stateTaxDue: makeFromInt 2828 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14313, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18473, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11803, stateTaxDue: makeFromInt 5449 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128957, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11590, federalTaxDue: makeFromInt 37359, stateTaxDue: makeFromInt 11248 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37958, ordinaryIncomeNonSS: makeFromInt 51506, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9771, federalTaxDue: makeFromInt 5915, stateTaxDue: makeFromInt 2100 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47269, ordinaryIncomeNonSS: makeFromInt 52435, qualifiedIncome: makeFromInt 41965, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11239, stateTaxDue: makeFromInt 4366 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39802, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1735 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35409, ordinaryIncomeNonSS: makeFromInt 63611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7976, federalTaxDue: makeFromInt 9334, stateTaxDue: makeFromInt 2606 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43679, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8825, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76815, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5522, stateTaxDue: makeFromInt 3586 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75809, itemizedDeductions: makeFromInt 27847, federalTaxDue: makeFromInt 32482, stateTaxDue: makeFromInt 10915 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100432, qualifiedIncome: makeFromInt 73667, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27774, stateTaxDue: makeFromInt 8430 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89736, qualifiedIncome: makeFromInt 12000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10249, stateTaxDue: makeFromInt 4832 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19736, ordinaryIncomeNonSS: makeFromInt 41587, qualifiedIncome: makeFromInt 66375, itemizedDeductions: makeFromInt 3607, federalTaxDue: makeFromInt 10298, stateTaxDue: makeFromInt 4955 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5654, qualifiedIncome: makeFromInt 84761, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11782, stateTaxDue: makeFromInt 3946 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17692, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 310 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 546, ordinaryIncomeNonSS: makeFromInt 135118, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12279, federalTaxDue: makeFromInt 33898, stateTaxDue: makeFromInt 11181 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21867, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52308, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30163, stateTaxDue: makeFromInt 9440 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6562, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24019, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1033 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20089, federalTaxDue: makeFromInt 32191, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45812, ordinaryIncomeNonSS: makeFromInt 136695, qualifiedIncome: makeFromInt 30061, itemizedDeductions: makeFromInt 6747, federalTaxDue: makeFromInt 33020, stateTaxDue: makeFromInt 7963 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38770, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 877, stateTaxDue: makeFromInt 1529 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40834, ordinaryIncomeNonSS: makeFromInt 87805, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20867, federalTaxDue: makeFromInt 18570, stateTaxDue: makeFromInt 4010 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58485, qualifiedIncome: makeFromInt 93251, itemizedDeductions: makeFromInt 22400, federalTaxDue: makeFromInt 14387, stateTaxDue: makeFromInt 7212 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40041, ordinaryIncomeNonSS: makeFromInt 83076, qualifiedIncome: makeFromInt 84216, itemizedDeductions: makeFromInt 7418, federalTaxDue: makeFromInt 29290, stateTaxDue: makeFromInt 8083 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64730, qualifiedIncome: makeFromInt 97099, itemizedDeductions: makeFromInt 13130, federalTaxDue: makeFromInt 13601, stateTaxDue: makeFromInt 7600 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9871, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30929, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31617, stateTaxDue: makeFromInt 8779 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40912, ordinaryIncomeNonSS: makeFromInt 149419, qualifiedIncome: makeFromInt 8235, itemizedDeductions: makeFromInt 6986, federalTaxDue: makeFromInt 34715, stateTaxDue: makeFromInt 7694 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23498, ordinaryIncomeNonSS: makeFromInt 145651, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24371, stateTaxDue: makeFromInt 6979 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129852, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24179, federalTaxDue: makeFromInt 17931, stateTaxDue: makeFromInt 6118 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41356, ordinaryIncomeNonSS: makeFromInt 83944, qualifiedIncome: makeFromInt 5024, itemizedDeductions: makeFromInt 14412, federalTaxDue: makeFromInt 12183, stateTaxDue: makeFromInt 3973 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41586, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65473, qualifiedIncome: makeFromInt 43127, itemizedDeductions: makeFromInt 23783, federalTaxDue: makeFromInt 10812, stateTaxDue: makeFromInt 4975 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31923, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15078, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90898, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2340, stateTaxDue: makeFromInt 3983 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27318, ordinaryIncomeNonSS: makeFromInt 72067, qualifiedIncome: makeFromInt 91279, itemizedDeductions: makeFromInt 27911, federalTaxDue: makeFromInt 23063, stateTaxDue: makeFromInt 7984 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14952, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1304 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23365, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74052, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5460, stateTaxDue: makeFromInt 3348 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49485, ordinaryIncomeNonSS: makeFromInt 122720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21945, federalTaxDue: makeFromInt 25906, stateTaxDue: makeFromInt 5561 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43848, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36054, itemizedDeductions: makeFromInt 18353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1328 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9944, ordinaryIncomeNonSS: makeFromInt 86936, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28670, federalTaxDue: makeFromInt 7625, stateTaxDue: makeFromInt 3781 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8343, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6847, federalTaxDue: makeFromInt 24962, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3058, qualifiedIncome: makeFromInt 91, itemizedDeductions: makeFromInt 18147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2957, ordinaryIncomeNonSS: makeFromInt 54239, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15652, stateTaxDue: makeFromInt 7642 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10044, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42383, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80303, itemizedDeductions: makeFromInt 3097, federalTaxDue: makeFromInt 1544, stateTaxDue: makeFromInt 3443 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31605, ordinaryIncomeNonSS: makeFromInt 101454, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19460, stateTaxDue: makeFromInt 4725 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24183, ordinaryIncomeNonSS: makeFromInt 77081, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14018, federalTaxDue: makeFromInt 30663, stateTaxDue: makeFromInt 8807 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21541, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19530, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92806, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2341, stateTaxDue: makeFromInt 4080 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11080, stateTaxDue: makeFromInt 6455 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20607, qualifiedIncome: makeFromInt 50622, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4559, stateTaxDue: makeFromInt 3408 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39462, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28549, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 905 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144114, qualifiedIncome: makeFromInt 28362, itemizedDeductions: makeFromInt 6729, federalTaxDue: makeFromInt 38830, stateTaxDue: makeFromInt 8347 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75966, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5395, stateTaxDue: makeFromInt 3343 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20866, itemizedDeductions: makeFromInt 15923, federalTaxDue: makeFromInt 44474, stateTaxDue: makeFromInt 8490 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105516, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25457, federalTaxDue: makeFromInt 22814, stateTaxDue: makeFromInt 5021 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131595, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34809, stateTaxDue: makeFromInt 11261 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27387, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115001, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30660, stateTaxDue: makeFromInt 10414 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17807, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40205, stateTaxDue: makeFromInt 12322 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11391, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18902, federalTaxDue: makeFromInt 21583, stateTaxDue: makeFromInt 6390 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2732, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105180, qualifiedIncome: makeFromInt 50380, itemizedDeductions: makeFromInt 14947, federalTaxDue: makeFromInt 19415, stateTaxDue: makeFromInt 7403 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23078, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46997, ordinaryIncomeNonSS: makeFromInt 136243, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25840, federalTaxDue: makeFromInt 39003, stateTaxDue: makeFromInt 11396 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21432, ordinaryIncomeNonSS: makeFromInt 8868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9486, stateTaxDue: makeFromInt 5124 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113157, qualifiedIncome: makeFromInt 98922, itemizedDeductions: makeFromInt 2321, federalTaxDue: makeFromInt 34088, stateTaxDue: makeFromInt 10469 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38523, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14457, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25112, ordinaryIncomeNonSS: makeFromInt 111589, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27360, stateTaxDue: makeFromInt 5467 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126333, qualifiedIncome: makeFromInt 66718, itemizedDeductions: makeFromInt 9019, federalTaxDue: makeFromInt 30223, stateTaxDue: makeFromInt 9417 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38476, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79632, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37978, stateTaxDue: makeFromInt 11007 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39544, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12840, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13808, ordinaryIncomeNonSS: makeFromInt 64221, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10540, federalTaxDue: makeFromInt 23564, stateTaxDue: makeFromInt 7756 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3355, ordinaryIncomeNonSS: makeFromInt 93133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1968, federalTaxDue: makeFromInt 7574, stateTaxDue: makeFromInt 4182 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 72 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24341, ordinaryIncomeNonSS: makeFromInt 51633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15723, federalTaxDue: makeFromInt 4790, stateTaxDue: makeFromInt 2082 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25418, ordinaryIncomeNonSS: makeFromInt 30601, qualifiedIncome: makeFromInt 77784, itemizedDeductions: makeFromInt 16259, federalTaxDue: makeFromInt 6104, stateTaxDue: makeFromInt 4744 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21728, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49345, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29968, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18473, ordinaryIncomeNonSS: makeFromInt 66955, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15390, stateTaxDue: makeFromInt 7873 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49393, ordinaryIncomeNonSS: makeFromInt 109229, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10576, federalTaxDue: makeFromInt 27538, stateTaxDue: makeFromInt 5294 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90589, qualifiedIncome: makeFromInt 92877, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29763, stateTaxDue: makeFromInt 9132 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86596, qualifiedIncome: makeFromInt 97973, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16365, stateTaxDue: makeFromInt 8753 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38848, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1088, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120096, qualifiedIncome: makeFromInt 79078, itemizedDeductions: makeFromInt 7897, federalTaxDue: makeFromInt 22474, stateTaxDue: makeFromInt 9284 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78347, qualifiedIncome: makeFromInt 7623, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7528, stateTaxDue: makeFromInt 4044 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48490, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59178, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38740, stateTaxDue: makeFromInt 10117 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15077, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7587, itemizedDeductions: makeFromInt 256, federalTaxDue: makeFromInt 26572, stateTaxDue: makeFromInt 7304 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42579, stateTaxDue: makeFromInt 12068 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8791, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108111, qualifiedIncome: makeFromInt 22936, itemizedDeductions: makeFromInt 17569, federalTaxDue: makeFromInt 17036, stateTaxDue: makeFromInt 5977 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74313, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3241 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34997, ordinaryIncomeNonSS: makeFromInt 97656, qualifiedIncome: makeFromInt 14117, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22326, stateTaxDue: makeFromInt 5334 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10136, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85139, itemizedDeductions: makeFromInt 25160, federalTaxDue: makeFromInt 5016, stateTaxDue: makeFromInt 3791 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31280, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21574, federalTaxDue: makeFromInt 37358, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28435, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47917, ordinaryIncomeNonSS: makeFromInt 115880, qualifiedIncome: makeFromInt 94435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41384, stateTaxDue: makeFromInt 10261 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40716, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11184, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 162, qualifiedIncome: makeFromInt 54464, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 610, stateTaxDue: makeFromInt 2439 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16484, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68809, qualifiedIncome: makeFromInt 56335, itemizedDeductions: makeFromInt 9249, federalTaxDue: makeFromInt 18099, stateTaxDue: makeFromInt 6158 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8130, ordinaryIncomeNonSS: makeFromInt 149887, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3275, federalTaxDue: makeFromInt 26579, stateTaxDue: makeFromInt 7195 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5004, stateTaxDue: makeFromInt 1150 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8399, federalTaxDue: makeFromInt 10678, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49340, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34750, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86176, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41569, stateTaxDue: makeFromInt 11381 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35999, itemizedDeductions: makeFromInt 2186, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1285 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24655, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128383, qualifiedIncome: makeFromInt 54243, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25307, stateTaxDue: makeFromInt 8756 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94611, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8544, stateTaxDue: makeFromInt 4397 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52415, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 302, stateTaxDue: makeFromInt 2326 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10085, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61962, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1382, stateTaxDue: makeFromInt 2786 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21517, qualifiedIncome: makeFromInt 128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 407 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97342, qualifiedIncome: makeFromInt 62099, itemizedDeductions: makeFromInt 7757, federalTaxDue: makeFromInt 32509, stateTaxDue: makeFromInt 7717 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21161, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 583 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23054, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37435, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80333, itemizedDeductions: makeFromInt 24523, federalTaxDue: makeFromInt 40740, stateTaxDue: makeFromInt 11196 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25219, federalTaxDue: makeFromInt 11055, stateTaxDue: makeFromInt 4828 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16488, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7852, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 138 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25820, ordinaryIncomeNonSS: makeFromInt 121356, qualifiedIncome: makeFromInt 9256, itemizedDeductions: makeFromInt 7855, federalTaxDue: makeFromInt 22139, stateTaxDue: makeFromInt 5956 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98674, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9154, stateTaxDue: makeFromInt 4808 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39230, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8657, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42762, ordinaryIncomeNonSS: makeFromInt 29046, qualifiedIncome: makeFromInt 91773, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9711, stateTaxDue: makeFromInt 5566 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94936, qualifiedIncome: makeFromInt 1536, itemizedDeductions: makeFromInt 10598, federalTaxDue: makeFromInt 7448, stateTaxDue: makeFromInt 4349 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32410, ordinaryIncomeNonSS: makeFromInt 90903, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4196, federalTaxDue: makeFromInt 14786, stateTaxDue: makeFromInt 4170 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48696, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63586, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1219, stateTaxDue: makeFromInt 2504 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11614, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44655, ordinaryIncomeNonSS: makeFromInt 7948, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4112, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30399, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73964, itemizedDeductions: makeFromInt 23844, federalTaxDue: makeFromInt 35573, stateTaxDue: makeFromInt 10769 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2198, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40832, itemizedDeductions: makeFromInt 9457, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1587 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81064, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4405, stateTaxDue: makeFromInt 3787 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1516, qualifiedIncome: makeFromInt 81422, itemizedDeductions: makeFromInt 18497, federalTaxDue: makeFromInt 6566, stateTaxDue: makeFromInt 4005 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71138, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6042, federalTaxDue: makeFromInt 10228, stateTaxDue: makeFromInt 3082 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10753, itemizedDeductions: makeFromInt 21934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32358, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9534, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20203, qualifiedIncome: makeFromInt 39423, itemizedDeductions: makeFromInt 23534, federalTaxDue: makeFromInt 266, stateTaxDue: makeFromInt 2817 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18017, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93848, itemizedDeductions: makeFromInt 1765, federalTaxDue: makeFromInt 690, stateTaxDue: makeFromInt 4217 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29216, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19054, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 435, stateTaxDue: makeFromInt 498 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9864, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17689, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10582, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47092, itemizedDeductions: makeFromInt 10490, federalTaxDue: makeFromInt 1416, stateTaxDue: makeFromInt 1973 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130957, qualifiedIncome: makeFromInt 39037, itemizedDeductions: makeFromInt 24691, federalTaxDue: makeFromInt 18902, stateTaxDue: makeFromInt 8017 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2837, ordinaryIncomeNonSS: makeFromInt 48590, qualifiedIncome: makeFromInt 16297, itemizedDeductions: makeFromInt 3963, federalTaxDue: makeFromInt 2804, stateTaxDue: makeFromInt 2630 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31037, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40419, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1511 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12529, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29302, federalTaxDue: makeFromInt 20131, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30165, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28831, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 967 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32908, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46970, itemizedDeductions: makeFromInt 24403, federalTaxDue: makeFromInt 357, stateTaxDue: makeFromInt 2049 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36168, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76972, itemizedDeductions: makeFromInt 24680, federalTaxDue: makeFromInt 344, stateTaxDue: makeFromInt 3374 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47314, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56573, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10124, stateTaxDue: makeFromInt 2457 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137911, qualifiedIncome: makeFromInt 55362, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32186, stateTaxDue: makeFromInt 9189 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35072, qualifiedIncome: makeFromInt 49142, itemizedDeductions: makeFromInt 28858, federalTaxDue: makeFromInt 1724, stateTaxDue: makeFromInt 3867 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41761, ordinaryIncomeNonSS: makeFromInt 21378, qualifiedIncome: makeFromInt 88418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11242, stateTaxDue: makeFromInt 4915 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116528, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29554, federalTaxDue: makeFromInt 25631, stateTaxDue: makeFromInt 10151 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55231, itemizedDeductions: makeFromInt 7378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2287 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24653, ordinaryIncomeNonSS: makeFromInt 26842, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13013, stateTaxDue: makeFromInt 6245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43420, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16126, federalTaxDue: makeFromInt 704, stateTaxDue: makeFromInt 1562 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19190, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15765, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82541, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4821, stateTaxDue: makeFromInt 3659 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30601, qualifiedIncome: makeFromInt 61325, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 140, stateTaxDue: makeFromInt 3921 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9531, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29287, itemizedDeductions: makeFromInt 22670, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 989 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46053, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11123, federalTaxDue: makeFromInt 5459, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29919, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129971, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25498, federalTaxDue: makeFromInt 40978, stateTaxDue: makeFromInt 11178 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31578, ordinaryIncomeNonSS: makeFromInt 102799, qualifiedIncome: makeFromInt 31810, itemizedDeductions: makeFromInt 29195, federalTaxDue: makeFromInt 16363, stateTaxDue: makeFromInt 6212 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70515, itemizedDeductions: makeFromInt 12940, federalTaxDue: makeFromInt 2104, stateTaxDue: makeFromInt 3147 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36459, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74562, itemizedDeductions: makeFromInt 6203, federalTaxDue: makeFromInt 8465, stateTaxDue: makeFromInt 3273 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32047, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7779, itemizedDeductions: makeFromInt 3294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 172 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9780, itemizedDeductions: makeFromInt 10663, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11548, itemizedDeductions: makeFromInt 14115, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 38 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13708, ordinaryIncomeNonSS: makeFromInt 64431, qualifiedIncome: makeFromInt 43865, itemizedDeductions: makeFromInt 3058, federalTaxDue: makeFromInt 7463, stateTaxDue: makeFromInt 4740 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48575, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32918, itemizedDeductions: makeFromInt 20343, federalTaxDue: makeFromInt 40169, stateTaxDue: makeFromInt 8900 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21096, ordinaryIncomeNonSS: makeFromInt 106260, qualifiedIncome: makeFromInt 8792, itemizedDeductions: makeFromInt 13278, federalTaxDue: makeFromInt 15462, stateTaxDue: makeFromInt 5215 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15650, stateTaxDue: makeFromInt 4723 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24521, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94587, itemizedDeductions: makeFromInt 19654, federalTaxDue: makeFromInt 1411, stateTaxDue: makeFromInt 4254 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24275, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81517, itemizedDeductions: makeFromInt 8730, federalTaxDue: makeFromInt 228, stateTaxDue: makeFromInt 3401 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14284, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8426, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29485, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75149, itemizedDeductions: makeFromInt 1603, federalTaxDue: makeFromInt 46854, stateTaxDue: makeFromInt 11136 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24361, stateTaxDue: makeFromInt 7095 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22414, ordinaryIncomeNonSS: makeFromInt 58160, qualifiedIncome: makeFromInt 29513, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11296, stateTaxDue: makeFromInt 3809 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25812, itemizedDeductions: makeFromInt 10019, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1036 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4573, stateTaxDue: makeFromInt 2270 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29867, ordinaryIncomeNonSS: makeFromInt 126671, qualifiedIncome: makeFromInt 11530, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22774, stateTaxDue: makeFromInt 6599 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62707, itemizedDeductions: makeFromInt 24601, federalTaxDue: makeFromInt 4962, stateTaxDue: makeFromInt 2560 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38626, ordinaryIncomeNonSS: makeFromInt 148705, qualifiedIncome: makeFromInt 58059, itemizedDeductions: makeFromInt 2105, federalTaxDue: makeFromInt 38636, stateTaxDue: makeFromInt 9963 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117221, qualifiedIncome: makeFromInt 19461, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20684, stateTaxDue: makeFromInt 6579 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17677, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33369, itemizedDeductions: makeFromInt 27362, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1049 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39951, ordinaryIncomeNonSS: makeFromInt 129260, qualifiedIncome: makeFromInt 46216, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38236, stateTaxDue: makeFromInt 8521 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125282, qualifiedIncome: makeFromInt 41145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38753, stateTaxDue: makeFromInt 8059 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146604, qualifiedIncome: makeFromInt 41148, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27715, stateTaxDue: makeFromInt 8813 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1357, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80859, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6481, stateTaxDue: makeFromInt 3695 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45086, ordinaryIncomeNonSS: makeFromInt 46429, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5765, stateTaxDue: makeFromInt 1746 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141903, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16498, stateTaxDue: makeFromInt 6584 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68789, qualifiedIncome: makeFromInt 45868, itemizedDeductions: makeFromInt 4700, federalTaxDue: makeFromInt 10061, stateTaxDue: makeFromInt 5358 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72002, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7135, stateTaxDue: makeFromInt 3244 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20818, ordinaryIncomeNonSS: makeFromInt 85119, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8327, stateTaxDue: makeFromInt 3581 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51694, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28584, stateTaxDue: makeFromInt 9634 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76663, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10499, federalTaxDue: makeFromInt 20307, stateTaxDue: makeFromInt 8458 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5674, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3533, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18228, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45026, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12325, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4128, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5570, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19595, ordinaryIncomeNonSS: makeFromInt 12400, qualifiedIncome: makeFromInt 54796, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4912, stateTaxDue: makeFromInt 3105 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25691, qualifiedIncome: makeFromInt 82312, itemizedDeductions: makeFromInt 8414, federalTaxDue: makeFromInt 10156, stateTaxDue: makeFromInt 5284 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13716, ordinaryIncomeNonSS: makeFromInt 81313, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27377, stateTaxDue: makeFromInt 8819 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36596, ordinaryIncomeNonSS: makeFromInt 97555, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34545, stateTaxDue: makeFromInt 9627 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53788, qualifiedIncome: makeFromInt 24342, itemizedDeductions: makeFromInt 28187, federalTaxDue: makeFromInt 2305, stateTaxDue: makeFromInt 3536 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73392, itemizedDeductions: makeFromInt 24412, federalTaxDue: makeFromInt 6111, stateTaxDue: makeFromInt 3415 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23942, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 150, stateTaxDue: makeFromInt 942 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21492, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45016, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16800, ordinaryIncomeNonSS: makeFromInt 85534, qualifiedIncome: makeFromInt 86019, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20193, stateTaxDue: makeFromInt 7903 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21856, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87946, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8214, stateTaxDue: makeFromInt 3942 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11503, stateTaxDue: makeFromInt 5572 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10064, federalTaxDue: makeFromInt 11484, stateTaxDue: makeFromInt 5728 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6085, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16919, ordinaryIncomeNonSS: makeFromInt 27949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2036, stateTaxDue: makeFromInt 1143 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89642, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2151, stateTaxDue: makeFromInt 3919 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6786, ordinaryIncomeNonSS: makeFromInt 38942, qualifiedIncome: makeFromInt 12716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1612, stateTaxDue: makeFromInt 2084 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105068, qualifiedIncome: makeFromInt 51685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20750, stateTaxDue: makeFromInt 7463 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25085, itemizedDeductions: makeFromInt 3980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 729 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39493, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1596, stateTaxDue: makeFromInt 1886 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1475, ordinaryIncomeNonSS: makeFromInt 79200, qualifiedIncome: makeFromInt 35419, itemizedDeductions: makeFromInt 11625, federalTaxDue: makeFromInt 7376, stateTaxDue: makeFromInt 5256 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27937, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12908, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2569, qualifiedIncome: makeFromInt 61582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10980, stateTaxDue: makeFromInt 2753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48089, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49709, itemizedDeductions: makeFromInt 301, federalTaxDue: makeFromInt 2081, stateTaxDue: makeFromInt 1984 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47376, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28342, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 648, stateTaxDue: makeFromInt 1099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11115, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54290, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15652, federalTaxDue: makeFromInt 18506, stateTaxDue: makeFromInt 7260 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149688, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35932, stateTaxDue: makeFromInt 7083 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5297, federalTaxDue: makeFromInt 38119, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89965, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19808, federalTaxDue: makeFromInt 10824, stateTaxDue: makeFromInt 4241 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76437, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20246, stateTaxDue: makeFromInt 8247 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28758, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18251, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2540, itemizedDeductions: makeFromInt 26441, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40258, ordinaryIncomeNonSS: makeFromInt 15569, qualifiedIncome: makeFromInt 40584, itemizedDeductions: makeFromInt 600, federalTaxDue: makeFromInt 2194, stateTaxDue: makeFromInt 2133 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45302, ordinaryIncomeNonSS: makeFromInt 24986, qualifiedIncome: makeFromInt 59498, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4140, stateTaxDue: makeFromInt 3749 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1129, ordinaryIncomeNonSS: makeFromInt 65130, qualifiedIncome: makeFromInt 22469, itemizedDeductions: makeFromInt 4731, federalTaxDue: makeFromInt 11085, stateTaxDue: makeFromInt 4202 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100850, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22754, stateTaxDue: makeFromInt 4548 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38059, ordinaryIncomeNonSS: makeFromInt 129619, qualifiedIncome: makeFromInt 76827, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40029, stateTaxDue: makeFromInt 9867 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33149, itemizedDeductions: makeFromInt 29037, federalTaxDue: makeFromInt 38109, stateTaxDue: makeFromInt 8912 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6200, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47015, ordinaryIncomeNonSS: makeFromInt 118560, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37596, stateTaxDue: makeFromInt 10698 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6982, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29790, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36156, stateTaxDue: makeFromInt 8516 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73085, itemizedDeductions: makeFromInt 10630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2979 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95883, itemizedDeductions: makeFromInt 23138, federalTaxDue: makeFromInt 7689, stateTaxDue: makeFromInt 4339 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12081, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71056, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21221, stateTaxDue: makeFromInt 8173 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101694, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25910, federalTaxDue: makeFromInt 30914, stateTaxDue: makeFromInt 9610 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42946, ordinaryIncomeNonSS: makeFromInt 80874, qualifiedIncome: makeFromInt 10293, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20316, stateTaxDue: makeFromInt 4303 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29365, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1093 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42896, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11297, federalTaxDue: makeFromInt 40213, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36720, ordinaryIncomeNonSS: makeFromInt 13328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 231 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142046, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18851, federalTaxDue: makeFromInt 36861, stateTaxDue: makeFromInt 11916 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18667, ordinaryIncomeNonSS: makeFromInt 21993, qualifiedIncome: makeFromInt 12790, itemizedDeductions: makeFromInt 6067, federalTaxDue: makeFromInt 1244, stateTaxDue: makeFromInt 1164 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148269, qualifiedIncome: makeFromInt 12377, itemizedDeductions: makeFromInt 26671, federalTaxDue: makeFromInt 35171, stateTaxDue: makeFromInt 7765 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41296, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76298, itemizedDeductions: makeFromInt 5020, federalTaxDue: makeFromInt 7935, stateTaxDue: makeFromInt 3463 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22630, ordinaryIncomeNonSS: makeFromInt 136921, qualifiedIncome: makeFromInt 9739, itemizedDeductions: makeFromInt 6342, federalTaxDue: makeFromInt 30776, stateTaxDue: makeFromInt 7051 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3739, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53604, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2005 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15224, ordinaryIncomeNonSS: makeFromInt 101008, qualifiedIncome: makeFromInt 57871, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15568, stateTaxDue: makeFromInt 7450 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35092, qualifiedIncome: makeFromInt 63993, itemizedDeductions: makeFromInt 4679, federalTaxDue: makeFromInt 3747, stateTaxDue: makeFromInt 4579 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67562, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45966, stateTaxDue: makeFromInt 10623 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69110, qualifiedIncome: makeFromInt 57102, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5298, stateTaxDue: makeFromInt 5836 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48180, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44998, itemizedDeductions: makeFromInt 361, federalTaxDue: makeFromInt 42336, stateTaxDue: makeFromInt 9394 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22125, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4568, ordinaryIncomeNonSS: makeFromInt 146917, qualifiedIncome: makeFromInt 49144, itemizedDeductions: makeFromInt 728, federalTaxDue: makeFromInt 26897, stateTaxDue: makeFromInt 9255 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47539, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27253, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21046, ordinaryIncomeNonSS: makeFromInt 92676, qualifiedIncome: makeFromInt 77479, itemizedDeductions: makeFromInt 26125, federalTaxDue: makeFromInt 19763, stateTaxDue: makeFromInt 8033 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8367, ordinaryIncomeNonSS: makeFromInt 90892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12149, stateTaxDue: makeFromInt 4085 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24448, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94771, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9898, stateTaxDue: makeFromInt 4484 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45708, ordinaryIncomeNonSS: makeFromInt 25153, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18546, federalTaxDue: makeFromInt 2269, stateTaxDue: makeFromInt 683 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8891, ordinaryIncomeNonSS: makeFromInt 40133, qualifiedIncome: makeFromInt 60520, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4583 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8211, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64464, itemizedDeductions: makeFromInt 24065, federalTaxDue: makeFromInt 3418, stateTaxDue: makeFromInt 2768 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32125, ordinaryIncomeNonSS: makeFromInt 6833, qualifiedIncome: makeFromInt 45563, itemizedDeductions: makeFromInt 14659, federalTaxDue: makeFromInt 4899, stateTaxDue: makeFromInt 2165 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1419 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35705, itemizedDeductions: makeFromInt 3828, federalTaxDue: makeFromInt 27714, stateTaxDue: makeFromInt 8910 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59605, qualifiedIncome: makeFromInt 40787, itemizedDeductions: makeFromInt 16104, federalTaxDue: makeFromInt 11752, stateTaxDue: makeFromInt 4896 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11741, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44323, ordinaryIncomeNonSS: makeFromInt 14328, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13116, federalTaxDue: makeFromInt 14480, stateTaxDue: makeFromInt 5402 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20740, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27378, federalTaxDue: makeFromInt 23941, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34981, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3848, stateTaxDue: makeFromInt 6435 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28474, federalTaxDue: makeFromInt 24452, stateTaxDue: makeFromInt 7156 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117161, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22944, stateTaxDue: makeFromInt 5751 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46264, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25845, federalTaxDue: makeFromInt 24150, stateTaxDue: makeFromInt 7058 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14618, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15281, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5581, ordinaryIncomeNonSS: makeFromInt 21477, qualifiedIncome: makeFromInt 30529, itemizedDeductions: makeFromInt 9795, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2102 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7649, ordinaryIncomeNonSS: makeFromInt 134790, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38542, stateTaxDue: makeFromInt 11285 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108191, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18344, federalTaxDue: makeFromInt 28615, stateTaxDue: makeFromInt 10035 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17201, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29141, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76613, itemizedDeductions: makeFromInt 27568, federalTaxDue: makeFromInt 9265, stateTaxDue: makeFromInt 3376 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26313, ordinaryIncomeNonSS: makeFromInt 144509, qualifiedIncome: makeFromInt 79113, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36916, stateTaxDue: makeFromInt 10752 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19295, stateTaxDue: makeFromInt 4759 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5966, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28661, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23410, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4851, itemizedDeductions: makeFromInt 24797, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1917, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6610, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43118, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41636, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76490, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40561, stateTaxDue: makeFromInt 10950 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47709, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4067, stateTaxDue: makeFromInt 2187 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43828, ordinaryIncomeNonSS: makeFromInt 31265, qualifiedIncome: makeFromInt 88117, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6490, stateTaxDue: makeFromInt 5436 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32927, ordinaryIncomeNonSS: makeFromInt 30564, qualifiedIncome: makeFromInt 75148, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11750, stateTaxDue: makeFromInt 4841 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81588, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9803, stateTaxDue: makeFromInt 3824 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8539, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69566, qualifiedIncome: makeFromInt 75008, itemizedDeductions: makeFromInt 13854, federalTaxDue: makeFromInt 22505, stateTaxDue: makeFromInt 6720 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28956, ordinaryIncomeNonSS: makeFromInt 39994, qualifiedIncome: makeFromInt 54552, itemizedDeductions: makeFromInt 20254, federalTaxDue: makeFromInt 3915, stateTaxDue: makeFromInt 4252 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30754, ordinaryIncomeNonSS: makeFromInt 15856, qualifiedIncome: makeFromInt 38597, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3048, stateTaxDue: makeFromInt 2349 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18507, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91484, qualifiedIncome: makeFromInt 15614, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14322, stateTaxDue: makeFromInt 4900 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25165, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19561, federalTaxDue: makeFromInt 43394, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13889, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 239 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20619, ordinaryIncomeNonSS: makeFromInt 100278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10165, federalTaxDue: makeFromInt 19682, stateTaxDue: makeFromInt 4686 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35833, ordinaryIncomeNonSS: makeFromInt 135746, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20880, federalTaxDue: makeFromInt 28058, stateTaxDue: makeFromInt 6495 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3812, ordinaryIncomeNonSS: makeFromInt 72641, qualifiedIncome: makeFromInt 82878, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13260, stateTaxDue: makeFromInt 7301 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83837, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25711, federalTaxDue: makeFromInt 11637, stateTaxDue: makeFromInt 3623 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42052, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41702, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32090, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57467, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2278 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1001, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19664, federalTaxDue: makeFromInt 5188, stateTaxDue: makeFromInt 4375 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59861, itemizedDeductions: makeFromInt 27538, federalTaxDue: makeFromInt 4147, stateTaxDue: makeFromInt 2706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26573, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14722, federalTaxDue: makeFromInt 30054, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11930, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88127, itemizedDeductions: makeFromInt 16806, federalTaxDue: makeFromInt 10321, stateTaxDue: makeFromInt 4031 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96093, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15898, stateTaxDue: makeFromInt 4550 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39142, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6583, federalTaxDue: makeFromInt 15577, stateTaxDue: makeFromInt 6702 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76376, itemizedDeductions: makeFromInt 20236, federalTaxDue: makeFromInt 4077, stateTaxDue: makeFromInt 3244 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11485, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 800 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28304, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15632, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5697, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26658, federalTaxDue: makeFromInt 22558, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73890, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5228, stateTaxDue: makeFromInt 3116 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74348, qualifiedIncome: makeFromInt 5590, itemizedDeductions: makeFromInt 3549, federalTaxDue: makeFromInt 5890, stateTaxDue: makeFromInt 3422 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57994, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23476, federalTaxDue: makeFromInt 1478, stateTaxDue: makeFromInt 2407 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61697, itemizedDeductions: makeFromInt 25514, federalTaxDue: makeFromInt 2561, stateTaxDue: makeFromInt 2630 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69067, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4454, stateTaxDue: makeFromInt 3266 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6700, itemizedDeductions: makeFromInt 11693, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21404, ordinaryIncomeNonSS: makeFromInt 6130, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27418, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11312, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77527, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40244, stateTaxDue: makeFromInt 11121 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10600, ordinaryIncomeNonSS: makeFromInt 81731, qualifiedIncome: makeFromInt 76049, itemizedDeductions: makeFromInt 24697, federalTaxDue: makeFromInt 12923, stateTaxDue: makeFromInt 7394 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35832, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8411, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3681, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117357, qualifiedIncome: makeFromInt 51632, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26511, stateTaxDue: makeFromInt 8194 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29476, federalTaxDue: makeFromInt 32526, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44199, ordinaryIncomeNonSS: makeFromInt 120230, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18907, stateTaxDue: makeFromInt 5337 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24100, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78313, itemizedDeductions: makeFromInt 7251, federalTaxDue: makeFromInt 7830, stateTaxDue: makeFromInt 3341 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12683, qualifiedIncome: makeFromInt 3563, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 278 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25919, ordinaryIncomeNonSS: makeFromInt 71350, qualifiedIncome: makeFromInt 76846, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15028, stateTaxDue: makeFromInt 6735 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105019, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18615, stateTaxDue: makeFromInt 4805 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133176, qualifiedIncome: makeFromInt 62532, itemizedDeductions: makeFromInt 15306, federalTaxDue: makeFromInt 31748, stateTaxDue: makeFromInt 9530 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48115, ordinaryIncomeNonSS: makeFromInt 11197, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49045, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23576, federalTaxDue: makeFromInt 10614, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5772, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19, federalTaxDue: makeFromInt 26017, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149391, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32412, stateTaxDue: makeFromInt 7095 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15787, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9593, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85558, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4719, stateTaxDue: makeFromInt 3703 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39780, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10751, stateTaxDue: makeFromInt 6534 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19170, ordinaryIncomeNonSS: makeFromInt 107419, qualifiedIncome: makeFromInt 11347, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15518, stateTaxDue: makeFromInt 5608 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100364, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10876, stateTaxDue: makeFromInt 4772 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22990, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41061, itemizedDeductions: makeFromInt 13279, federalTaxDue: makeFromInt 41064, stateTaxDue: makeFromInt 9193 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57722, qualifiedIncome: makeFromInt 60461, itemizedDeductions: makeFromInt 16461, federalTaxDue: makeFromInt 9261, stateTaxDue: makeFromInt 5599 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44603, ordinaryIncomeNonSS: makeFromInt 15173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 427 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41594, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16391, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24280, itemizedDeductions: makeFromInt 7581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 639 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90483, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15805, stateTaxDue: makeFromInt 4390 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26314, ordinaryIncomeNonSS: makeFromInt 137778, qualifiedIncome: makeFromInt 95341, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36072, stateTaxDue: makeFromInt 11338 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108244, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20447, stateTaxDue: makeFromInt 5296 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13251, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46204, qualifiedIncome: makeFromInt 86907, itemizedDeductions: makeFromInt 16512, federalTaxDue: makeFromInt 7837, stateTaxDue: makeFromInt 6238 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23988, ordinaryIncomeNonSS: makeFromInt 57361, qualifiedIncome: makeFromInt 21659, itemizedDeductions: makeFromInt 9767, federalTaxDue: makeFromInt 5808, stateTaxDue: makeFromInt 3377 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58979, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2474 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40882, qualifiedIncome: makeFromInt 60924, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7327, stateTaxDue: makeFromInt 4764 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65862, qualifiedIncome: makeFromInt 3303, itemizedDeductions: makeFromInt 28984, federalTaxDue: makeFromInt 13898, stateTaxDue: makeFromInt 3303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12818, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39175, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51749, itemizedDeductions: makeFromInt 7238, federalTaxDue: makeFromInt 2847, stateTaxDue: makeFromInt 2013 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12116, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16283, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46782, itemizedDeductions: makeFromInt 1208, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1764 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2754, ordinaryIncomeNonSS: makeFromInt 40669, qualifiedIncome: makeFromInt 66175, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6147, stateTaxDue: makeFromInt 4967 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6639, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91873, qualifiedIncome: makeFromInt 94168, itemizedDeductions: makeFromInt 16086, federalTaxDue: makeFromInt 36982, stateTaxDue: makeFromInt 9141 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18276, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33865, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7601, itemizedDeductions: makeFromInt 27129, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 5 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8897, federalTaxDue: makeFromInt 38649, stateTaxDue: makeFromInt 12125 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27081, ordinaryIncomeNonSS: makeFromInt 27653, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1848, stateTaxDue: makeFromInt 1008 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140455, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18845, stateTaxDue: makeFromInt 6648 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24787, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35526, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27861, stateTaxDue: makeFromInt 8801 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23197, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 63 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27072, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23203, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 950 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2599, qualifiedIncome: makeFromInt 55237, itemizedDeductions: makeFromInt 16137, federalTaxDue: makeFromInt 1592, stateTaxDue: makeFromInt 2637 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19027, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 696 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35751, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67376, itemizedDeductions: makeFromInt 7176, federalTaxDue: makeFromInt 5199, stateTaxDue: makeFromInt 3008 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145176, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21478, stateTaxDue: makeFromInt 7004 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4864, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19984, itemizedDeductions: makeFromInt 29249, federalTaxDue: makeFromInt 27145, stateTaxDue: makeFromInt 8160 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42733, qualifiedIncome: makeFromInt 62976, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12939, stateTaxDue: makeFromInt 4738 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125927, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17739, federalTaxDue: makeFromInt 29565, stateTaxDue: makeFromInt 6041 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29615, qualifiedIncome: makeFromInt 40112, itemizedDeductions: makeFromInt 29038, federalTaxDue: makeFromInt 42, stateTaxDue: makeFromInt 2811 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33590, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29909, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59836, qualifiedIncome: makeFromInt 32309, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4239, stateTaxDue: makeFromInt 4232 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17086, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1069, stateTaxDue: makeFromInt 1800 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37273, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 962, federalTaxDue: makeFromInt 3593, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46696, qualifiedIncome: makeFromInt 30968, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4578, stateTaxDue: makeFromInt 3532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45610, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16344, federalTaxDue: makeFromInt 7984, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16819, ordinaryIncomeNonSS: makeFromInt 113187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15190, stateTaxDue: makeFromInt 5084 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15733, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 118 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37664, itemizedDeductions: makeFromInt 4112, federalTaxDue: makeFromInt 22841, stateTaxDue: makeFromInt 8908 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100981, qualifiedIncome: makeFromInt 82468, itemizedDeductions: makeFromInt 23560, federalTaxDue: makeFromInt 19351, stateTaxDue: makeFromInt 8497 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28885, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61228, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3537, stateTaxDue: makeFromInt 2694 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4066, itemizedDeductions: makeFromInt 11841, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73125, qualifiedIncome: makeFromInt 84976, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15114, stateTaxDue: makeFromInt 7530 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9795, ordinaryIncomeNonSS: makeFromInt 34312, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16368, federalTaxDue: makeFromInt 2932, stateTaxDue: makeFromInt 1461 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53492, qualifiedIncome: makeFromInt 54024, itemizedDeductions: makeFromInt 14128, federalTaxDue: makeFromInt 7154, stateTaxDue: makeFromInt 4801 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45826, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1226, stateTaxDue: makeFromInt 1909 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45263, ordinaryIncomeNonSS: makeFromInt 146258, qualifiedIncome: makeFromInt 20959, itemizedDeductions: makeFromInt 70, federalTaxDue: makeFromInt 37192, stateTaxDue: makeFromInt 8079 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8927, ordinaryIncomeNonSS: makeFromInt 50691, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3049, stateTaxDue: makeFromInt 1860 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14656, ordinaryIncomeNonSS: makeFromInt 132806, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26110, stateTaxDue: makeFromInt 6485 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48981, ordinaryIncomeNonSS: makeFromInt 61001, qualifiedIncome: makeFromInt 93943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26660, stateTaxDue: makeFromInt 7351 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133017, qualifiedIncome: makeFromInt 29178, itemizedDeductions: makeFromInt 22189, federalTaxDue: makeFromInt 25055, stateTaxDue: makeFromInt 7655 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94789, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8571, stateTaxDue: makeFromInt 4406 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102463, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14396, stateTaxDue: makeFromInt 4668 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26409, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68339, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1288, stateTaxDue: makeFromInt 2842 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35090, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47881, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39653, stateTaxDue: makeFromInt 9541 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144524, qualifiedIncome: makeFromInt 36789, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31561, stateTaxDue: makeFromInt 8391 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126286, qualifiedIncome: makeFromInt 5887, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16561, stateTaxDue: makeFromInt 6034 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4631, federalTaxDue: makeFromInt 40555, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11231, ordinaryIncomeNonSS: makeFromInt 39861, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3825, stateTaxDue: makeFromInt 1538 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10188, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6341, ordinaryIncomeNonSS: makeFromInt 3888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34068, ordinaryIncomeNonSS: makeFromInt 11367, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44111, ordinaryIncomeNonSS: makeFromInt 26942, qualifiedIncome: makeFromInt 20672, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8542, stateTaxDue: makeFromInt 1926 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27811, ordinaryIncomeNonSS: makeFromInt 32005, qualifiedIncome: makeFromInt 18843, itemizedDeductions: makeFromInt 15455, federalTaxDue: makeFromInt 6698, stateTaxDue: makeFromInt 2287 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11359, qualifiedIncome: makeFromInt 29787, itemizedDeductions: makeFromInt 7972, federalTaxDue: makeFromInt 1178, stateTaxDue: makeFromInt 1431 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70585, itemizedDeductions: makeFromInt 9869, federalTaxDue: makeFromInt 7799, stateTaxDue: makeFromInt 3171 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66671, itemizedDeductions: makeFromInt 17459, federalTaxDue: makeFromInt 8075, stateTaxDue: makeFromInt 3053 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1685 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72306, itemizedDeductions: makeFromInt 21131, federalTaxDue: makeFromInt 3286, stateTaxDue: makeFromInt 3137 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18010, ordinaryIncomeNonSS: makeFromInt 76098, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22210, stateTaxDue: makeFromInt 8230 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17082, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5295, ordinaryIncomeNonSS: makeFromInt 148710, qualifiedIncome: makeFromInt 99509, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36559, stateTaxDue: makeFromInt 12006 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12860, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96240, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7742, stateTaxDue: makeFromInt 4557 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17598, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5192, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7108, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7876, itemizedDeductions: makeFromInt 22881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32504, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12050, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40536, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18338, federalTaxDue: makeFromInt 2259, stateTaxDue: makeFromInt 1843 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3513, ordinaryIncomeNonSS: makeFromInt 67354, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2550, stateTaxDue: makeFromInt 3007 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73765, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5901, federalTaxDue: makeFromInt 5820, stateTaxDue: makeFromInt 3313 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24110, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69368, itemizedDeductions: makeFromInt 16183, federalTaxDue: makeFromInt 5483, stateTaxDue: makeFromInt 3013 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69022, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4353, stateTaxDue: makeFromInt 2996 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10089, federalTaxDue: makeFromInt 5833, stateTaxDue: makeFromInt 3406 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97242, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7982, stateTaxDue: makeFromInt 4387 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7276, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146608, qualifiedIncome: makeFromInt 1303, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21582, stateTaxDue: makeFromInt 7141 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24468, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4234, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114675, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7927, federalTaxDue: makeFromInt 15171, stateTaxDue: makeFromInt 5359 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18398, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26364, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78085, qualifiedIncome: makeFromInt 2075, itemizedDeductions: makeFromInt 6658, federalTaxDue: makeFromInt 5426, stateTaxDue: makeFromInt 3533 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8987, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25040, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37948, ordinaryIncomeNonSS: makeFromInt 51579, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22162, stateTaxDue: makeFromInt 7004 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2250, stateTaxDue: makeFromInt 2272 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98122, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22739, stateTaxDue: makeFromInt 9676 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18289, ordinaryIncomeNonSS: makeFromInt 106087, qualifiedIncome: makeFromInt 66811, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23760, stateTaxDue: makeFromInt 8165 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39938, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24659, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26421, qualifiedIncome: makeFromInt 76197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7137, stateTaxDue: makeFromInt 4887 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90743, itemizedDeductions: makeFromInt 17145, federalTaxDue: makeFromInt 7821, stateTaxDue: makeFromInt 4199 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2592, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39124, itemizedDeductions: makeFromInt 28784, federalTaxDue: makeFromInt 221, stateTaxDue: makeFromInt 1771 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140344, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38315, stateTaxDue: makeFromInt 11562 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22827, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1301, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18815, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1241, federalTaxDue: makeFromInt 22196, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11698, ordinaryIncomeNonSS: makeFromInt 68232, qualifiedIncome: makeFromInt 27575, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6403, stateTaxDue: makeFromInt 4458 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78551, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24135, stateTaxDue: makeFromInt 8673 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7747, ordinaryIncomeNonSS: makeFromInt 135385, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18623, federalTaxDue: makeFromInt 15424, stateTaxDue: makeFromInt 6294 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41742, qualifiedIncome: makeFromInt 42906, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14755, stateTaxDue: makeFromInt 3657 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26240, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140139, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16774, federalTaxDue: makeFromInt 23687, stateTaxDue: makeFromInt 6752 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33134, ordinaryIncomeNonSS: makeFromInt 47343, qualifiedIncome: makeFromInt 28316, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16308, stateTaxDue: makeFromInt 3634 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148352, qualifiedIncome: makeFromInt 38141, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45815, stateTaxDue: makeFromInt 9164 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16748, ordinaryIncomeNonSS: makeFromInt 142948, qualifiedIncome: makeFromInt 96411, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41138, stateTaxDue: makeFromInt 11759 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35534, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10295, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78570, qualifiedIncome: makeFromInt 33010, itemizedDeductions: makeFromInt 11320, federalTaxDue: makeFromInt 12440, stateTaxDue: makeFromInt 5262 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37455, stateTaxDue: makeFromInt 11644 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 170, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48138, itemizedDeductions: makeFromInt 5543, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2108 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15512, federalTaxDue: makeFromInt 8607, stateTaxDue: makeFromInt 3830 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4607, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 11 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28519, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23353, federalTaxDue: makeFromInt 517, stateTaxDue: makeFromInt 851 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40281, ordinaryIncomeNonSS: makeFromInt 25461, qualifiedIncome: makeFromInt 73395, itemizedDeductions: makeFromInt 918, federalTaxDue: makeFromInt 8687, stateTaxDue: makeFromInt 4389 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5282, stateTaxDue: makeFromInt 4020 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40169, ordinaryIncomeNonSS: makeFromInt 95544, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3468, federalTaxDue: makeFromInt 20757, stateTaxDue: makeFromInt 4322 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21454, ordinaryIncomeNonSS: makeFromInt 51909, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6670, stateTaxDue: makeFromInt 2219 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13230, ordinaryIncomeNonSS: makeFromInt 52383, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2989, federalTaxDue: makeFromInt 12011, stateTaxDue: makeFromInt 7119 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28681, ordinaryIncomeNonSS: makeFromInt 82210, qualifiedIncome: makeFromInt 43131, itemizedDeductions: makeFromInt 21107, federalTaxDue: makeFromInt 18305, stateTaxDue: makeFromInt 5944 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20939, qualifiedIncome: makeFromInt 16784, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1511 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25761, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37655, ordinaryIncomeNonSS: makeFromInt 24488, qualifiedIncome: makeFromInt 55978, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 3768 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6446, ordinaryIncomeNonSS: makeFromInt 36184, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13217, federalTaxDue: makeFromInt 3223, stateTaxDue: makeFromInt 1621 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19255, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 7125 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 117, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11116, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 343 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46043, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53333, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43077, stateTaxDue: makeFromInt 9819 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9168, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33072, qualifiedIncome: makeFromInt 34642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 387, stateTaxDue: makeFromInt 2911 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40990, ordinaryIncomeNonSS: makeFromInt 100704, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24121, federalTaxDue: makeFromInt 20142, stateTaxDue: makeFromInt 4580 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16425, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18536, itemizedDeductions: makeFromInt 26071, federalTaxDue: makeFromInt 23043, stateTaxDue: makeFromInt 7752 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4846, ordinaryIncomeNonSS: makeFromInt 135059, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4581, federalTaxDue: makeFromInt 14810, stateTaxDue: makeFromInt 6078 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7485, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 683, ordinaryIncomeNonSS: makeFromInt 59434, qualifiedIncome: makeFromInt 96248, itemizedDeductions: makeFromInt 11681, federalTaxDue: makeFromInt 16751, stateTaxDue: makeFromInt 7511 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50132, itemizedDeductions: makeFromInt 23590, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 2052 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33531, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47472, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46259, ordinaryIncomeNonSS: makeFromInt 68953, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3901, federalTaxDue: makeFromInt 13635, stateTaxDue: makeFromInt 3073 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80429, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 769, stateTaxDue: makeFromInt 3449 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5183, ordinaryIncomeNonSS: makeFromInt 17689, qualifiedIncome: makeFromInt 18789, itemizedDeductions: makeFromInt 24294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1297 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7712, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15104, ordinaryIncomeNonSS: makeFromInt 16422, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8956, federalTaxDue: makeFromInt 342, stateTaxDue: makeFromInt 613 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14263, ordinaryIncomeNonSS: makeFromInt 133126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23222, stateTaxDue: makeFromInt 6239 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27643, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12555, qualifiedIncome: makeFromInt 24133, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 56, stateTaxDue: makeFromInt 1647 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119751, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13086, federalTaxDue: makeFromInt 10536, stateTaxDue: makeFromInt 5313 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42514, ordinaryIncomeNonSS: makeFromInt 138916, qualifiedIncome: makeFromInt 84619, itemizedDeductions: makeFromInt 16819, federalTaxDue: makeFromInt 42850, stateTaxDue: makeFromInt 10951 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24454, stateTaxDue: makeFromInt 7000 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14948, ordinaryIncomeNonSS: makeFromInt 30975, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20845, federalTaxDue: makeFromInt 11402, stateTaxDue: makeFromInt 6174 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13242, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46497, qualifiedIncome: makeFromInt 82728, itemizedDeductions: makeFromInt 28317, federalTaxDue: makeFromInt 8042, stateTaxDue: makeFromInt 6086 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11968, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59029, qualifiedIncome: makeFromInt 50787, itemizedDeductions: makeFromInt 21852, federalTaxDue: makeFromInt 5115, stateTaxDue: makeFromInt 5152 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25774, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14968, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15445, ordinaryIncomeNonSS: makeFromInt 30235, qualifiedIncome: makeFromInt 45292, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1691, stateTaxDue: makeFromInt 3101 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131973, qualifiedIncome: makeFromInt 403, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19383, stateTaxDue: makeFromInt 6244 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13250, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16658, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5288 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20154, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23251, itemizedDeductions: makeFromInt 5394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 533 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45383, ordinaryIncomeNonSS: makeFromInt 147982, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45212, stateTaxDue: makeFromInt 11824 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38201, qualifiedIncome: makeFromInt 32721, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5231, stateTaxDue: makeFromInt 3291 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32190, ordinaryIncomeNonSS: makeFromInt 106378, qualifiedIncome: makeFromInt 14546, itemizedDeductions: makeFromInt 1166, federalTaxDue: makeFromInt 20637, stateTaxDue: makeFromInt 5671 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21909, ordinaryIncomeNonSS: makeFromInt 111384, qualifiedIncome: makeFromInt 29536, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17223, stateTaxDue: makeFromInt 6371 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40658, ordinaryIncomeNonSS: makeFromInt 23093, qualifiedIncome: makeFromInt 79435, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19512, stateTaxDue: makeFromInt 5005 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14356, federalTaxDue: makeFromInt 10006, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12156, ordinaryIncomeNonSS: makeFromInt 47727, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20190, stateTaxDue: makeFromInt 7187 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18710, ordinaryIncomeNonSS: makeFromInt 15734, qualifiedIncome: makeFromInt 18829, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 601, stateTaxDue: makeFromInt 1353 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108962, qualifiedIncome: makeFromInt 43245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23345, stateTaxDue: makeFromInt 7155 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39726, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41225, itemizedDeductions: makeFromInt 24151, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1552 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84116, itemizedDeductions: makeFromInt 24028, federalTaxDue: makeFromInt 1998, stateTaxDue: makeFromInt 3841 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18656, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6005, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 299 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12551, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19362, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107858, qualifiedIncome: makeFromInt 31920, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25707, stateTaxDue: makeFromInt 6476 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28522, ordinaryIncomeNonSS: makeFromInt 91689, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10006, federalTaxDue: makeFromInt 24590, stateTaxDue: makeFromInt 9109 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3232, federalTaxDue: makeFromInt 42534, stateTaxDue: makeFromInt 12322 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68929, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3366, stateTaxDue: makeFromInt 2871 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9126, ordinaryIncomeNonSS: makeFromInt 81994, qualifiedIncome: makeFromInt 50594, itemizedDeductions: makeFromInt 26795, federalTaxDue: makeFromInt 16747, stateTaxDue: makeFromInt 6174 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11604, ordinaryIncomeNonSS: makeFromInt 10113, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 31 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23460, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71228, itemizedDeductions: makeFromInt 6615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2980 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41007, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91936, itemizedDeductions: makeFromInt 9446, federalTaxDue: makeFromInt 11976, stateTaxDue: makeFromInt 4342 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68652, itemizedDeductions: makeFromInt 17066, federalTaxDue: makeFromInt 2183, stateTaxDue: makeFromInt 3058 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7495, ordinaryIncomeNonSS: makeFromInt 138732, qualifiedIncome: makeFromInt 64770, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29909, stateTaxDue: makeFromInt 9600 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75161, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25057, stateTaxDue: makeFromInt 8083 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17920, itemizedDeductions: makeFromInt 7443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 261 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48640, ordinaryIncomeNonSS: makeFromInt 61058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26044, federalTaxDue: makeFromInt 12374, stateTaxDue: makeFromInt 2767 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11109, ordinaryIncomeNonSS: makeFromInt 98608, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15625, stateTaxDue: makeFromInt 4675 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23730, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 712 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25897, ordinaryIncomeNonSS: makeFromInt 23891, qualifiedIncome: makeFromInt 21507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4770, stateTaxDue: makeFromInt 1968 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39932, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11930, federalTaxDue: makeFromInt 3978, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46048, ordinaryIncomeNonSS: makeFromInt 143133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33360, stateTaxDue: makeFromInt 6851 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33558, ordinaryIncomeNonSS: makeFromInt 140439, qualifiedIncome: makeFromInt 97731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40230, stateTaxDue: makeFromInt 11494 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47637, qualifiedIncome: makeFromInt 32140, itemizedDeductions: makeFromInt 19037, federalTaxDue: makeFromInt 6075, stateTaxDue: makeFromInt 3844 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102026, qualifiedIncome: makeFromInt 79494, itemizedDeductions: makeFromInt 20014, federalTaxDue: makeFromInt 27911, stateTaxDue: makeFromInt 8601 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42598, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4725, stateTaxDue: makeFromInt 4525 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136180, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21425, stateTaxDue: makeFromInt 6496 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45769, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27852, federalTaxDue: makeFromInt 1836, stateTaxDue: makeFromInt 1713 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59669, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1390, stateTaxDue: makeFromInt 2696 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1516, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8503, ordinaryIncomeNonSS: makeFromInt 38058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1311, stateTaxDue: makeFromInt 1428 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27025, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19288, ordinaryIncomeNonSS: makeFromInt 34073, qualifiedIncome: makeFromInt 26001, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2513, stateTaxDue: makeFromInt 2749 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19386, ordinaryIncomeNonSS: makeFromInt 68734, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15665, federalTaxDue: makeFromInt 6281, stateTaxDue: makeFromInt 2962 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5389, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29847, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9864, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10659, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39350, stateTaxDue: makeFromInt 12282 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10026, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 284 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7444, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45445, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73771, itemizedDeductions: makeFromInt 26114, federalTaxDue: makeFromInt 8464, stateTaxDue: makeFromInt 3538 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124733, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12418, federalTaxDue: makeFromInt 43071, stateTaxDue: makeFromInt 10911 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10960, ordinaryIncomeNonSS: makeFromInt 64099, qualifiedIncome: makeFromInt 56927, itemizedDeductions: makeFromInt 15004, federalTaxDue: makeFromInt 11765, stateTaxDue: makeFromInt 5622 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13379, ordinaryIncomeNonSS: makeFromInt 130572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23699, stateTaxDue: makeFromInt 6274 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15851, ordinaryIncomeNonSS: makeFromInt 58053, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7589, stateTaxDue: makeFromInt 2448 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45263, ordinaryIncomeNonSS: makeFromInt 86787, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14725, federalTaxDue: makeFromInt 14114, stateTaxDue: makeFromInt 3773 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8749, ordinaryIncomeNonSS: makeFromInt 14057, qualifiedIncome: makeFromInt 81548, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4117, stateTaxDue: makeFromInt 4405 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 229, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 734, stateTaxDue: makeFromInt 2021 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18616, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45005, itemizedDeductions: makeFromInt 29758, federalTaxDue: makeFromInt 31297, stateTaxDue: makeFromInt 9496 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14502, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8620, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23304, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4835, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31717, itemizedDeductions: makeFromInt 11756, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 911 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93404, qualifiedIncome: makeFromInt 96073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20230, stateTaxDue: makeFromInt 9011 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36059, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28042, federalTaxDue: makeFromInt 34633, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28128, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17999, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29890, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115561, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17367, stateTaxDue: makeFromInt 5523 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35920, itemizedDeductions: makeFromInt 19711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1608 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22711, ordinaryIncomeNonSS: makeFromInt 147552, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33284, stateTaxDue: makeFromInt 7178 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9465, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8894, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5134 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146022, qualifiedIncome: makeFromInt 68870, itemizedDeductions: makeFromInt 3685, federalTaxDue: makeFromInt 33746, stateTaxDue: makeFromInt 10409 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136946, qualifiedIncome: makeFromInt 8341, itemizedDeductions: makeFromInt 16470, federalTaxDue: makeFromInt 22296, stateTaxDue: makeFromInt 6981 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37591, ordinaryIncomeNonSS: makeFromInt 28316, qualifiedIncome: makeFromInt 8852, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5954, stateTaxDue: makeFromInt 1671 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6841, ordinaryIncomeNonSS: makeFromInt 136008, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44849, stateTaxDue: makeFromInt 11812 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44491, qualifiedIncome: makeFromInt 81812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11140, stateTaxDue: makeFromInt 5833 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49147, ordinaryIncomeNonSS: makeFromInt 101688, qualifiedIncome: makeFromInt 17816, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19351, stateTaxDue: makeFromInt 5389 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8154, ordinaryIncomeNonSS: makeFromInt 79583, qualifiedIncome: makeFromInt 90018, itemizedDeductions: makeFromInt 20746, federalTaxDue: makeFromInt 23230, stateTaxDue: makeFromInt 8303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13849, ordinaryIncomeNonSS: makeFromInt 110845, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7381, federalTaxDue: makeFromInt 13984, stateTaxDue: makeFromInt 5000 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34041, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40564, itemizedDeductions: makeFromInt 27566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1653 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96888, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5571, stateTaxDue: makeFromInt 4269 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28795, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34124, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23692, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 6188 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39288, ordinaryIncomeNonSS: makeFromInt 131484, qualifiedIncome: makeFromInt 86053, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33043, stateTaxDue: makeFromInt 10442 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20880, federalTaxDue: makeFromInt 25010, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44406, qualifiedIncome: makeFromInt 33903, itemizedDeductions: makeFromInt 20245, federalTaxDue: makeFromInt 2702, stateTaxDue: makeFromInt 3340 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19190, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1647, ordinaryIncomeNonSS: makeFromInt 99188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3835, federalTaxDue: makeFromInt 18331, stateTaxDue: makeFromInt 4834 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101252, qualifiedIncome: makeFromInt 19120, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13862, stateTaxDue: makeFromInt 5444 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37437, ordinaryIncomeNonSS: makeFromInt 147484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5177, federalTaxDue: makeFromInt 32529, stateTaxDue: makeFromInt 7073 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56474, itemizedDeductions: makeFromInt 3461, federalTaxDue: makeFromInt 2471, stateTaxDue: makeFromInt 2369 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18371, ordinaryIncomeNonSS: makeFromInt 63227, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5584, stateTaxDue: makeFromInt 2850 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86827, qualifiedIncome: makeFromInt 17678, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6379, stateTaxDue: makeFromInt 4750 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21205, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 268, stateTaxDue: makeFromInt 849 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25636, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80644, itemizedDeductions: makeFromInt 12179, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3357 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5284, ordinaryIncomeNonSS: makeFromInt 112752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18445, stateTaxDue: makeFromInt 5322 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31943, ordinaryIncomeNonSS: makeFromInt 120662, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35069, stateTaxDue: makeFromInt 10458 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4942, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28605, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12121, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3617, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15499, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35089, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141339, qualifiedIncome: makeFromInt 1181, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23731, stateTaxDue: makeFromInt 6671 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71813, itemizedDeductions: makeFromInt 14826, federalTaxDue: makeFromInt 1809, stateTaxDue: makeFromInt 3216 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24710, ordinaryIncomeNonSS: makeFromInt 92244, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3227, federalTaxDue: makeFromInt 15222, stateTaxDue: makeFromInt 4154 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18133, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6245, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18996, ordinaryIncomeNonSS: makeFromInt 74281, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20262, federalTaxDue: makeFromInt 17752, stateTaxDue: makeFromInt 8236 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42265, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10327, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43797, itemizedDeductions: makeFromInt 13724, federalTaxDue: makeFromInt 570, stateTaxDue: makeFromInt 1935 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110034, qualifiedIncome: makeFromInt 1100, itemizedDeductions: makeFromInt 19563, federalTaxDue: makeFromInt 10210, stateTaxDue: makeFromInt 5082 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9751, ordinaryIncomeNonSS: makeFromInt 146041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25962, stateTaxDue: makeFromInt 6999 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36562, ordinaryIncomeNonSS: makeFromInt 68274, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7978, stateTaxDue: makeFromInt 2939 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16765, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14505, itemizedDeductions: makeFromInt 5149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 189 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48619, qualifiedIncome: makeFromInt 98099, itemizedDeductions: makeFromInt 25261, federalTaxDue: makeFromInt 20175, stateTaxDue: makeFromInt 6932 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49125, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15708, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 110 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 222, ordinaryIncomeNonSS: makeFromInt 99455, qualifiedIncome: makeFromInt 76408, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22101, stateTaxDue: makeFromInt 8418 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135173, qualifiedIncome: makeFromInt 72290, itemizedDeductions: makeFromInt 15508, federalTaxDue: makeFromInt 37865, stateTaxDue: makeFromInt 9928 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 429, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6931, federalTaxDue: makeFromInt 24501, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80965, qualifiedIncome: makeFromInt 3657, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5772, stateTaxDue: makeFromInt 3556 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8127, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18806, itemizedDeductions: makeFromInt 18674, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 510 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110187, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20281, federalTaxDue: makeFromInt 32235, stateTaxDue: makeFromInt 10495 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1473, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97557, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10174, stateTaxDue: makeFromInt 4629 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9410, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40632, stateTaxDue: makeFromInt 12045 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10391, qualifiedIncome: makeFromInt 82661, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 279, stateTaxDue: makeFromInt 3978 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118846, qualifiedIncome: makeFromInt 83033, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29076, stateTaxDue: makeFromInt 9745 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28552, ordinaryIncomeNonSS: makeFromInt 121030, qualifiedIncome: makeFromInt 39317, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22497, stateTaxDue: makeFromInt 7342 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38572, ordinaryIncomeNonSS: makeFromInt 45527, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4266, stateTaxDue: makeFromInt 1801 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19173, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17385, ordinaryIncomeNonSS: makeFromInt 5797, qualifiedIncome: makeFromInt 32288, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1514 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40407, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109313, qualifiedIncome: makeFromInt 6735, itemizedDeductions: makeFromInt 23509, federalTaxDue: makeFromInt 10240, stateTaxDue: makeFromInt 5327 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2598, ordinaryIncomeNonSS: makeFromInt 76548, qualifiedIncome: makeFromInt 72457, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20048, stateTaxDue: makeFromInt 7195 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22050, ordinaryIncomeNonSS: makeFromInt 31128, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1768, federalTaxDue: makeFromInt 3003, stateTaxDue: makeFromInt 1101 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81275, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3042, federalTaxDue: makeFromInt 24734, stateTaxDue: makeFromInt 8809 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71817, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7661, federalTaxDue: makeFromInt 5586, stateTaxDue: makeFromInt 3016 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89111, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8471, federalTaxDue: makeFromInt 11988, stateTaxDue: makeFromInt 4001 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5868, ordinaryIncomeNonSS: makeFromInt 41116, qualifiedIncome: makeFromInt 58051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1610, stateTaxDue: makeFromInt 4483 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18487, federalTaxDue: makeFromInt 21924, stateTaxDue: makeFromInt 4641 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131562, qualifiedIncome: makeFromInt 88715, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33460, stateTaxDue: makeFromInt 10887 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136130, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2478, federalTaxDue: makeFromInt 29140, stateTaxDue: makeFromInt 11132 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47991, ordinaryIncomeNonSS: makeFromInt 41572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19159, federalTaxDue: makeFromInt 4362, stateTaxDue: makeFromInt 1569 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29670, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9130, federalTaxDue: makeFromInt 31385, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20213, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50994, stateTaxDue: makeFromInt 12201 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40647, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42665, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1523 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30166, ordinaryIncomeNonSS: makeFromInt 104173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13539, stateTaxDue: makeFromInt 4534 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8479, ordinaryIncomeNonSS: makeFromInt 24536, qualifiedIncome: makeFromInt 28003, itemizedDeductions: makeFromInt 22523, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 2252 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48775, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66166, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1146, stateTaxDue: makeFromInt 2833 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41152, qualifiedIncome: makeFromInt 68275, itemizedDeductions: makeFromInt 29575, federalTaxDue: makeFromInt 1556, stateTaxDue: makeFromInt 4928 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82444, qualifiedIncome: makeFromInt 53709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8605, stateTaxDue: makeFromInt 6133 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27931, qualifiedIncome: makeFromInt 98513, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21518, stateTaxDue: makeFromInt 6020 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45967, ordinaryIncomeNonSS: makeFromInt 28542, qualifiedIncome: makeFromInt 74071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9317, stateTaxDue: makeFromInt 4580 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7013, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42567, ordinaryIncomeNonSS: makeFromInt 25363, qualifiedIncome: makeFromInt 85485, itemizedDeductions: makeFromInt 20982, federalTaxDue: makeFromInt 14048, stateTaxDue: makeFromInt 5167 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27057, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17858, ordinaryIncomeNonSS: makeFromInt 50757, qualifiedIncome: makeFromInt 3955, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4040, stateTaxDue: makeFromInt 2240 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49679, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36051, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10563, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115521, qualifiedIncome: makeFromInt 68235, itemizedDeductions: makeFromInt 9203, federalTaxDue: makeFromInt 31907, stateTaxDue: makeFromInt 9147 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31368, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1462, stateTaxDue: makeFromInt 1151 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5267, ordinaryIncomeNonSS: makeFromInt 149026, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14340, federalTaxDue: makeFromInt 42689, stateTaxDue: makeFromInt 12476 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14952, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4878, qualifiedIncome: makeFromInt 67637, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2951 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26092, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 902 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29306, ordinaryIncomeNonSS: makeFromInt 2473, qualifiedIncome: makeFromInt 57284, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6766, stateTaxDue: makeFromInt 2823 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26065, ordinaryIncomeNonSS: makeFromInt 104155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11979, stateTaxDue: makeFromInt 4533 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23614, ordinaryIncomeNonSS: makeFromInt 70382, qualifiedIncome: makeFromInt 81812, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14983, stateTaxDue: makeFromInt 7135 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25544, ordinaryIncomeNonSS: makeFromInt 104282, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14187, federalTaxDue: makeFromInt 11910, stateTaxDue: makeFromInt 4739 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21894, ordinaryIncomeNonSS: makeFromInt 88803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24725, federalTaxDue: makeFromInt 13808, stateTaxDue: makeFromInt 4185 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47168, qualifiedIncome: makeFromInt 88263, itemizedDeductions: makeFromInt 1775, federalTaxDue: makeFromInt 15869, stateTaxDue: makeFromInt 6517 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39688, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84023, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39624, stateTaxDue: makeFromInt 11282 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138346, qualifiedIncome: makeFromInt 63551, itemizedDeductions: makeFromInt 27117, federalTaxDue: makeFromInt 24160, stateTaxDue: makeFromInt 9420 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90069, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23533, stateTaxDue: makeFromInt 9128 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8938, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38946, itemizedDeductions: makeFromInt 121, federalTaxDue: makeFromInt 31314, stateTaxDue: makeFromInt 8872 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11863, itemizedDeductions: makeFromInt 25481, federalTaxDue: makeFromInt 22144, stateTaxDue: makeFromInt 7704 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7154, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1649, stateTaxDue: makeFromInt 3162 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14166, ordinaryIncomeNonSS: makeFromInt 41579, qualifiedIncome: makeFromInt 95104, itemizedDeductions: makeFromInt 15368, federalTaxDue: makeFromInt 14370, stateTaxDue: makeFromInt 6459 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32439, ordinaryIncomeNonSS: makeFromInt 118870, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16375, federalTaxDue: makeFromInt 22982, stateTaxDue: makeFromInt 5614 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12847, ordinaryIncomeNonSS: makeFromInt 100356, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23333, stateTaxDue: makeFromInt 9543 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31561, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 792, federalTaxDue: makeFromInt 1126, stateTaxDue: makeFromInt 1203 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23798, ordinaryIncomeNonSS: makeFromInt 36970, qualifiedIncome: makeFromInt 20098, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 695, stateTaxDue: makeFromInt 2482 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25364, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19426, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9616, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15479, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12913, federalTaxDue: makeFromInt 1315, stateTaxDue: makeFromInt 357 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9340, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64827, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39039, stateTaxDue: makeFromInt 10732 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9370, itemizedDeductions: makeFromInt 536, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 131 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139897, qualifiedIncome: makeFromInt 16842, itemizedDeductions: makeFromInt 4590, federalTaxDue: makeFromInt 28461, stateTaxDue: makeFromInt 7647 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24897, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9393, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4955, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 28 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4475, ordinaryIncomeNonSS: makeFromInt 115038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6747, federalTaxDue: makeFromInt 33830, stateTaxDue: makeFromInt 10297 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17409, itemizedDeductions: makeFromInt 12021, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 541 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13093, ordinaryIncomeNonSS: makeFromInt 125853, qualifiedIncome: makeFromInt 45219, itemizedDeductions: makeFromInt 9887, federalTaxDue: makeFromInt 21110, stateTaxDue: makeFromInt 7879 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13053, ordinaryIncomeNonSS: makeFromInt 44261, qualifiedIncome: makeFromInt 636, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2823, stateTaxDue: makeFromInt 1790 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7501, qualifiedIncome: makeFromInt 98625, itemizedDeductions: makeFromInt 14989, federalTaxDue: makeFromInt 2291, stateTaxDue: makeFromInt 4831 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94724, qualifiedIncome: makeFromInt 13783, itemizedDeductions: makeFromInt 14620, federalTaxDue: makeFromInt 21359, stateTaxDue: makeFromInt 5050 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3143 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23043, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9356, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 13 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83080, qualifiedIncome: makeFromInt 14058, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13839, stateTaxDue: makeFromInt 4607 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37324, ordinaryIncomeNonSS: makeFromInt 54921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5649, federalTaxDue: makeFromInt 9485, stateTaxDue: makeFromInt 2352 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136235, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23749, stateTaxDue: makeFromInt 6520 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30760, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82537, itemizedDeductions: makeFromInt 10072, federalTaxDue: makeFromInt 6733, stateTaxDue: makeFromInt 3781 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18590, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 686, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22464, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 635, federalTaxDue: makeFromInt 411, stateTaxDue: makeFromInt 791 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5085, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77962, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38364, stateTaxDue: makeFromInt 10943 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48670, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7013, federalTaxDue: makeFromInt 54088, stateTaxDue: makeFromInt 12526 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44244, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1737 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41888, ordinaryIncomeNonSS: makeFromInt 138358, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26345, stateTaxDue: makeFromInt 6343 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58524, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20091, federalTaxDue: makeFromInt 3079, stateTaxDue: makeFromInt 2251 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25808, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21841, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23769, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 661 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6755, ordinaryIncomeNonSS: makeFromInt 133518, qualifiedIncome: makeFromInt 1191, itemizedDeductions: makeFromInt 5334, federalTaxDue: makeFromInt 15007, stateTaxDue: makeFromInt 6060 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127403, qualifiedIncome: makeFromInt 27507, itemizedDeductions: makeFromInt 11831, federalTaxDue: makeFromInt 22352, stateTaxDue: makeFromInt 7371 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23847, itemizedDeductions: makeFromInt 3411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 517 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76835, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3367 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35298, qualifiedIncome: makeFromInt 70180, itemizedDeductions: makeFromInt 6528, federalTaxDue: makeFromInt 3899, stateTaxDue: makeFromInt 4931 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 339, ordinaryIncomeNonSS: makeFromInt 39288, qualifiedIncome: makeFromInt 34105, itemizedDeductions: makeFromInt 5209, federalTaxDue: makeFromInt 5695, stateTaxDue: makeFromInt 3415 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147196, qualifiedIncome: makeFromInt 42688, itemizedDeductions: makeFromInt 3213, federalTaxDue: makeFromInt 34273, stateTaxDue: makeFromInt 9337 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35170, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17666, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47437, ordinaryIncomeNonSS: makeFromInt 39131, qualifiedIncome: makeFromInt 26139, itemizedDeductions: makeFromInt 10361, federalTaxDue: makeFromInt 10351, stateTaxDue: makeFromInt 2778 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16936, federalTaxDue: makeFromInt 5034, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1107, ordinaryIncomeNonSS: makeFromInt 125146, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14149, federalTaxDue: makeFromInt 18514, stateTaxDue: makeFromInt 5934 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9013, itemizedDeductions: makeFromInt 1962, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 235 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66543, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37391, stateTaxDue: makeFromInt 10819 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28586, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33309, itemizedDeductions: makeFromInt 7325, federalTaxDue: makeFromInt 406, stateTaxDue: makeFromInt 1474 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48590, ordinaryIncomeNonSS: makeFromInt 74652, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4846, federalTaxDue: makeFromInt 9970, stateTaxDue: makeFromInt 3258 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29754, itemizedDeductions: makeFromInt 10521, federalTaxDue: makeFromInt 36151, stateTaxDue: makeFromInt 8515 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37622, ordinaryIncomeNonSS: makeFromInt 88500, qualifiedIncome: makeFromInt 56318, itemizedDeductions: makeFromInt 10100, federalTaxDue: makeFromInt 23721, stateTaxDue: makeFromInt 6866 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83679, itemizedDeductions: makeFromInt 20303, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3709 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1465, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2879, federalTaxDue: makeFromInt 26606, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13082, ordinaryIncomeNonSS: makeFromInt 83216, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27607, stateTaxDue: makeFromInt 8706 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60644, qualifiedIncome: makeFromInt 90207, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26576, stateTaxDue: makeFromInt 7469 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57002, itemizedDeductions: makeFromInt 18589, federalTaxDue: makeFromInt 30908, stateTaxDue: makeFromInt 9775 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7272, qualifiedIncome: makeFromInt 76688, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3594 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51714, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2011 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104656, qualifiedIncome: makeFromInt 37843, itemizedDeductions: makeFromInt 4915, federalTaxDue: makeFromInt 22041, stateTaxDue: makeFromInt 6772 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8773, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 184 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45436, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10919, federalTaxDue: makeFromInt 28096, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34996, itemizedDeductions: makeFromInt 16028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1336 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12947, ordinaryIncomeNonSS: makeFromInt 6552, qualifiedIncome: makeFromInt 13596, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 632 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8819, ordinaryIncomeNonSS: makeFromInt 37683, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18897, federalTaxDue: makeFromInt 603, stateTaxDue: makeFromInt 1371 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35571, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1404 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4145, ordinaryIncomeNonSS: makeFromInt 134471, qualifiedIncome: makeFromInt 83817, itemizedDeductions: makeFromInt 8457, federalTaxDue: makeFromInt 32951, stateTaxDue: makeFromInt 10339 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6109, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13598, federalTaxDue: makeFromInt 25824, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60343, itemizedDeductions: makeFromInt 21407, federalTaxDue: makeFromInt 681, stateTaxDue: makeFromInt 2642 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2124, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10774, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13422, ordinaryIncomeNonSS: makeFromInt 104990, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8366, federalTaxDue: makeFromInt 10024, stateTaxDue: makeFromInt 4775 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72558, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16159, federalTaxDue: makeFromInt 19734, stateTaxDue: makeFromInt 8372 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 135261, qualifiedIncome: makeFromInt 54470, itemizedDeductions: makeFromInt 8068, federalTaxDue: makeFromInt 31152, stateTaxDue: makeFromInt 9248 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80255, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3338 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139174, qualifiedIncome: makeFromInt 41035, itemizedDeductions: makeFromInt 10834, federalTaxDue: makeFromInt 28239, stateTaxDue: makeFromInt 8742 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31261, ordinaryIncomeNonSS: makeFromInt 10872, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53057, itemizedDeductions: makeFromInt 16075, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2078 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5753, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73298, itemizedDeductions: makeFromInt 19828, federalTaxDue: makeFromInt 1973, stateTaxDue: makeFromInt 3289 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51282, itemizedDeductions: makeFromInt 24176, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1989 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107391, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15054, federalTaxDue: makeFromInt 25225, stateTaxDue: makeFromInt 9924 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90666, itemizedDeductions: makeFromInt 13571, federalTaxDue: makeFromInt 1600, stateTaxDue: makeFromInt 4058 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14250, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2296, ordinaryIncomeNonSS: makeFromInt 89348, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12312, federalTaxDue: makeFromInt 7269, stateTaxDue: makeFromInt 3992 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29650, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6277, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23313, ordinaryIncomeNonSS: makeFromInt 106314, qualifiedIncome: makeFromInt 72386, itemizedDeductions: makeFromInt 29584, federalTaxDue: makeFromInt 22713, stateTaxDue: makeFromInt 8260 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40224, stateTaxDue: makeFromInt 9653 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74530, itemizedDeductions: makeFromInt 20075, federalTaxDue: makeFromInt 428, stateTaxDue: makeFromInt 3148 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33065, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1398 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120342, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32466, stateTaxDue: makeFromInt 10789 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31749, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2050, stateTaxDue: makeFromInt 5912 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41831, ordinaryIncomeNonSS: makeFromInt 8859, qualifiedIncome: makeFromInt 65569, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4477, stateTaxDue: makeFromInt 3346 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16549, ordinaryIncomeNonSS: makeFromInt 18749, qualifiedIncome: makeFromInt 49293, itemizedDeductions: makeFromInt 19219, federalTaxDue: makeFromInt 2221, stateTaxDue: makeFromInt 3123 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3597, federalTaxDue: makeFromInt 40632, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49360, ordinaryIncomeNonSS: makeFromInt 132170, qualifiedIncome: makeFromInt 24192, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31619, stateTaxDue: makeFromInt 7563 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41578, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14332, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 507 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36334, ordinaryIncomeNonSS: makeFromInt 18740, qualifiedIncome: makeFromInt 5620, itemizedDeductions: makeFromInt 18415, federalTaxDue: makeFromInt 784, stateTaxDue: makeFromInt 643 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36326, ordinaryIncomeNonSS: makeFromInt 39099, qualifiedIncome: makeFromInt 22603, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7051, stateTaxDue: makeFromInt 2698 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78731, qualifiedIncome: makeFromInt 63699, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22422, stateTaxDue: makeFromInt 7040 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50178, qualifiedIncome: makeFromInt 67544, itemizedDeductions: makeFromInt 26944, federalTaxDue: makeFromInt 13443, stateTaxDue: makeFromInt 5211 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59436, itemizedDeductions: makeFromInt 183, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2378 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37128, ordinaryIncomeNonSS: makeFromInt 60391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14788, federalTaxDue: makeFromInt 12082, stateTaxDue: makeFromInt 2765 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10421, ordinaryIncomeNonSS: makeFromInt 1709, qualifiedIncome: makeFromInt 52769, itemizedDeductions: makeFromInt 462, federalTaxDue: makeFromInt 1222, stateTaxDue: makeFromInt 2269 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20978, ordinaryIncomeNonSS: makeFromInt 114685, qualifiedIncome: makeFromInt 64067, itemizedDeductions: makeFromInt 17646, federalTaxDue: makeFromInt 27772, stateTaxDue: makeFromInt 8563 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7279, federalTaxDue: makeFromInt 18240, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12674, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 422 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12698, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27461, ordinaryIncomeNonSS: makeFromInt 25227, qualifiedIncome: makeFromInt 96467, itemizedDeductions: makeFromInt 22796, federalTaxDue: makeFromInt 12764, stateTaxDue: makeFromInt 5860 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21113, ordinaryIncomeNonSS: makeFromInt 35630, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2182, stateTaxDue: makeFromInt 1456 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20857, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 508 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22600, ordinaryIncomeNonSS: makeFromInt 54473, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8064, stateTaxDue: makeFromInt 2469 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117090, qualifiedIncome: makeFromInt 30722, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26317, stateTaxDue: makeFromInt 6886 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22847, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20444, itemizedDeductions: makeFromInt 1676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 614 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1951, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35496, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32772, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7937, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1476, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 22 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19064, ordinaryIncomeNonSS: makeFromInt 135290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27605, stateTaxDue: makeFromInt 6408 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17248, ordinaryIncomeNonSS: makeFromInt 62930, qualifiedIncome: makeFromInt 28451, itemizedDeductions: makeFromInt 18197, federalTaxDue: makeFromInt 4944, stateTaxDue: makeFromInt 4008 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111484, qualifiedIncome: makeFromInt 72039, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27194, stateTaxDue: makeFromInt 8721 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21168, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 733 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25987, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23638, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143700, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34857, stateTaxDue: makeFromInt 11610 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11379, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24782, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28860, stateTaxDue: makeFromInt 8284 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5575, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96797, itemizedDeductions: makeFromInt 1723, federalTaxDue: makeFromInt 44501, stateTaxDue: makeFromInt 12240 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48645, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45306, itemizedDeductions: makeFromInt 7841, federalTaxDue: makeFromInt 50081, stateTaxDue: makeFromInt 9736 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13047, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85873, itemizedDeductions: makeFromInt 19767, federalTaxDue: makeFromInt 6187, stateTaxDue: makeFromInt 3839 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25560, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49304, itemizedDeductions: makeFromInt 26848, federalTaxDue: makeFromInt 702, stateTaxDue: makeFromInt 2010 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95116, qualifiedIncome: makeFromInt 80442, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21710, stateTaxDue: makeFromInt 8203 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28526, ordinaryIncomeNonSS: makeFromInt 149484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29129, federalTaxDue: makeFromInt 29748, stateTaxDue: makeFromInt 7277 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2114, ordinaryIncomeNonSS: makeFromInt 63886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15984, federalTaxDue: makeFromInt 4566, stateTaxDue: makeFromInt 2580 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17093, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29119, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13149, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48707, ordinaryIncomeNonSS: makeFromInt 90147, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35267, stateTaxDue: makeFromInt 9249 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48438, ordinaryIncomeNonSS: makeFromInt 114977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26490, federalTaxDue: makeFromInt 40139, stateTaxDue: makeFromInt 10494 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31278, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1371 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30789, ordinaryIncomeNonSS: makeFromInt 41814, qualifiedIncome: makeFromInt 28513, itemizedDeductions: makeFromInt 8965, federalTaxDue: makeFromInt 7455, stateTaxDue: makeFromInt 3138 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25321, ordinaryIncomeNonSS: makeFromInt 76892, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25841, stateTaxDue: makeFromInt 8590 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16050, stateTaxDue: makeFromInt 4545 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11429, ordinaryIncomeNonSS: makeFromInt 122597, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16611, federalTaxDue: makeFromInt 36943, stateTaxDue: makeFromInt 10817 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9014, ordinaryIncomeNonSS: makeFromInt 106254, qualifiedIncome: makeFromInt 30047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23946, stateTaxDue: makeFromInt 6605 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27578, ordinaryIncomeNonSS: makeFromInt 6316, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30677, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 859 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22701, ordinaryIncomeNonSS: makeFromInt 128052, qualifiedIncome: makeFromInt 62773, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36276, stateTaxDue: makeFromInt 9304 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90860, itemizedDeductions: makeFromInt 28378, federalTaxDue: makeFromInt 242, stateTaxDue: makeFromInt 3868 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15234, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23285, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22052, federalTaxDue: makeFromInt 34117, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2586, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44017, itemizedDeductions: makeFromInt 9630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1826 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8709, ordinaryIncomeNonSS: makeFromInt 73134, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5720, stateTaxDue: makeFromInt 2982 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9003, ordinaryIncomeNonSS: makeFromInt 38373, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20636, federalTaxDue: makeFromInt 2491, stateTaxDue: makeFromInt 1544 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30538, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22678, federalTaxDue: makeFromInt 28850, stateTaxDue: makeFromInt 7201 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81453, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 833, stateTaxDue: makeFromInt 3501 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59411, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3264, stateTaxDue: makeFromInt 2806 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139400, qualifiedIncome: makeFromInt 73231, itemizedDeductions: makeFromInt 18667, federalTaxDue: makeFromInt 43117, stateTaxDue: makeFromInt 10192 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2696 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30336, ordinaryIncomeNonSS: makeFromInt 59544, qualifiedIncome: makeFromInt 72039, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19364, stateTaxDue: makeFromInt 6486 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71364, qualifiedIncome: makeFromInt 80696, itemizedDeductions: makeFromInt 6607, federalTaxDue: makeFromInt 9661, stateTaxDue: makeFromInt 7128 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147473, qualifiedIncome: makeFromInt 62125, itemizedDeductions: makeFromInt 7572, federalTaxDue: makeFromInt 33062, stateTaxDue: makeFromInt 10241 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4041, stateTaxDue: makeFromInt 3762 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8283, ordinaryIncomeNonSS: makeFromInt 27203, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1008, stateTaxDue: makeFromInt 785 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45649, stateTaxDue: makeFromInt 7997 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80015, qualifiedIncome: makeFromInt 73149, itemizedDeductions: makeFromInt 23475, federalTaxDue: makeFromInt 18348, stateTaxDue: makeFromInt 7465 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20442, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52421, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34233, stateTaxDue: makeFromInt 9666 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31704, ordinaryIncomeNonSS: makeFromInt 104867, qualifiedIncome: makeFromInt 59674, itemizedDeductions: makeFromInt 21310, federalTaxDue: makeFromInt 23057, stateTaxDue: makeFromInt 7739 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26744, ordinaryIncomeNonSS: makeFromInt 133756, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18063, federalTaxDue: makeFromInt 26622, stateTaxDue: makeFromInt 6233 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20035, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 427 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39350, stateTaxDue: makeFromInt 12282 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4484, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23538, federalTaxDue: makeFromInt 17664, stateTaxDue: makeFromInt 5886 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7198, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28323, itemizedDeductions: makeFromInt 29566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 841 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16194, ordinaryIncomeNonSS: makeFromInt 133341, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6847, federalTaxDue: makeFromInt 39156, stateTaxDue: makeFromInt 11452 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34772, ordinaryIncomeNonSS: makeFromInt 9172, qualifiedIncome: makeFromInt 9472, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 557 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11717, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83745, itemizedDeductions: makeFromInt 4951, federalTaxDue: makeFromInt 6914, stateTaxDue: makeFromInt 4047 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23265, ordinaryIncomeNonSS: makeFromInt 124369, qualifiedIncome: makeFromInt 10710, itemizedDeductions: makeFromInt 28241, federalTaxDue: makeFromInt 17509, stateTaxDue: makeFromInt 6279 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9655, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42358, ordinaryIncomeNonSS: makeFromInt 96556, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20520, stateTaxDue: makeFromInt 4476 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 519, qualifiedIncome: makeFromInt 74298, itemizedDeductions: makeFromInt 13619, federalTaxDue: makeFromInt 5497, stateTaxDue: makeFromInt 3591 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62248, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36623, stateTaxDue: makeFromInt 10357 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22890, ordinaryIncomeNonSS: makeFromInt 87754, qualifiedIncome: makeFromInt 37163, itemizedDeductions: makeFromInt 11177, federalTaxDue: makeFromInt 17879, stateTaxDue: makeFromInt 5671 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11870, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13828, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5481 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11821, ordinaryIncomeNonSS: makeFromInt 145255, qualifiedIncome: makeFromInt 8075, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30299, stateTaxDue: makeFromInt 7391 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17936, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136399, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15846, stateTaxDue: makeFromInt 6345 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17478, qualifiedIncome: makeFromInt 57032, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 935, stateTaxDue: makeFromInt 3249 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13690, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27650, federalTaxDue: makeFromInt 16606, stateTaxDue: makeFromInt 5317 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130185, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26312, federalTaxDue: makeFromInt 31677, stateTaxDue: makeFromInt 11311 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34634, ordinaryIncomeNonSS: makeFromInt 47348, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20601, stateTaxDue: makeFromInt 6912 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19958, ordinaryIncomeNonSS: makeFromInt 43602, qualifiedIncome: makeFromInt 54399, itemizedDeductions: makeFromInt 21344, federalTaxDue: makeFromInt 9121, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19097, stateTaxDue: makeFromInt 6644 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26541, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9419, ordinaryIncomeNonSS: makeFromInt 35300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1331, stateTaxDue: makeFromInt 1190 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32176, ordinaryIncomeNonSS: makeFromInt 17334, qualifiedIncome: makeFromInt 86469, itemizedDeductions: makeFromInt 22175, federalTaxDue: makeFromInt 5616, stateTaxDue: makeFromInt 4515 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87066, qualifiedIncome: makeFromInt 13853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20940, stateTaxDue: makeFromInt 4671 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27234, ordinaryIncomeNonSS: makeFromInt 111911, qualifiedIncome: makeFromInt 40769, itemizedDeductions: makeFromInt 26427, federalTaxDue: makeFromInt 20020, stateTaxDue: makeFromInt 6959 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17047, ordinaryIncomeNonSS: makeFromInt 79382, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22991, federalTaxDue: makeFromInt 12479, stateTaxDue: makeFromInt 3824 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76788, itemizedDeductions: makeFromInt 10489, federalTaxDue: makeFromInt 5871, stateTaxDue: makeFromInt 3488 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51358, itemizedDeductions: makeFromInt 9311, federalTaxDue: makeFromInt 27053, stateTaxDue: makeFromInt 9724 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26962, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13984, federalTaxDue: makeFromInt 37867, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19013, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90272, itemizedDeductions: makeFromInt 803, federalTaxDue: makeFromInt 153, stateTaxDue: makeFromInt 3839 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14059, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7416, qualifiedIncome: makeFromInt 11247, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 299 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33510, ordinaryIncomeNonSS: makeFromInt 61537, qualifiedIncome: makeFromInt 57607, itemizedDeductions: makeFromInt 1348, federalTaxDue: makeFromInt 18847, stateTaxDue: makeFromInt 5471 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7925, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72360, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5207, stateTaxDue: makeFromInt 3466 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12269, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58498, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20040, federalTaxDue: makeFromInt 20558, stateTaxDue: makeFromInt 7450 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48929, qualifiedIncome: makeFromInt 66154, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1973, stateTaxDue: makeFromInt 5079 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75431, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3097 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14097, ordinaryIncomeNonSS: makeFromInt 46794, qualifiedIncome: makeFromInt 6364, itemizedDeductions: makeFromInt 18854, federalTaxDue: makeFromInt 4820, stateTaxDue: makeFromInt 2203 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70173, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2926 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35338, qualifiedIncome: makeFromInt 46849, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3425, stateTaxDue: makeFromInt 3605 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32067, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36693, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1260 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30857, ordinaryIncomeNonSS: makeFromInt 146343, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33854, stateTaxDue: makeFromInt 7035 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20490, stateTaxDue: makeFromInt 7193 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12518, ordinaryIncomeNonSS: makeFromInt 76425, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6504, stateTaxDue: makeFromInt 3146 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34338, ordinaryIncomeNonSS: makeFromInt 62493, qualifiedIncome: makeFromInt 38268, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10433, stateTaxDue: makeFromInt 4690 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131955, qualifiedIncome: makeFromInt 35043, itemizedDeductions: makeFromInt 5151, federalTaxDue: makeFromInt 18478, stateTaxDue: makeFromInt 7675 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19066, qualifiedIncome: makeFromInt 97715, itemizedDeductions: makeFromInt 14486, federalTaxDue: makeFromInt 11621, stateTaxDue: makeFromInt 5164 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35752, itemizedDeductions: makeFromInt 10401, federalTaxDue: makeFromInt 48198, stateTaxDue: makeFromInt 9249 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45402, ordinaryIncomeNonSS: makeFromInt 73015, qualifiedIncome: makeFromInt 95265, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30707, stateTaxDue: makeFromInt 7959 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20897, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60745, itemizedDeductions: makeFromInt 22105, federalTaxDue: makeFromInt 34761, stateTaxDue: makeFromInt 10197 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86547, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9328, stateTaxDue: makeFromInt 4072 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3506, ordinaryIncomeNonSS: makeFromInt 30874, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16634, federalTaxDue: makeFromInt 199, stateTaxDue: makeFromInt 869 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146061, qualifiedIncome: makeFromInt 2822, itemizedDeductions: makeFromInt 13869, federalTaxDue: makeFromInt 32036, stateTaxDue: makeFromInt 7069 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38469, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1296 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37376, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31476, itemizedDeductions: makeFromInt 11876, federalTaxDue: makeFromInt 399, stateTaxDue: makeFromInt 1119 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142214, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7959, federalTaxDue: makeFromInt 23764, stateTaxDue: makeFromInt 6656 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128800, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29462, stateTaxDue: makeFromInt 5959 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8197, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35139, ordinaryIncomeNonSS: makeFromInt 140344, qualifiedIncome: makeFromInt 89100, itemizedDeductions: makeFromInt 29769, federalTaxDue: makeFromInt 40907, stateTaxDue: makeFromInt 11217 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63849, itemizedDeductions: makeFromInt 2844, federalTaxDue: makeFromInt 965, stateTaxDue: makeFromInt 2603 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66220, qualifiedIncome: makeFromInt 12641, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4838, stateTaxDue: makeFromInt 3471 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42281, ordinaryIncomeNonSS: makeFromInt 98165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19995, federalTaxDue: makeFromInt 21676, stateTaxDue: makeFromInt 4578 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3414, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12333, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54853, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2373, stateTaxDue: makeFromInt 2145 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32013, stateTaxDue: makeFromInt 10516 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17110, federalTaxDue: makeFromInt 47558, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24120, itemizedDeductions: makeFromInt 24178, federalTaxDue: makeFromInt 37415, stateTaxDue: makeFromInt 8451 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22316, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89552, itemizedDeductions: makeFromInt 22996, federalTaxDue: makeFromInt 6739, stateTaxDue: makeFromInt 4023 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121838, qualifiedIncome: makeFromInt 41626, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17063, stateTaxDue: makeFromInt 7498 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48639, qualifiedIncome: makeFromInt 15150, itemizedDeductions: makeFromInt 16372, federalTaxDue: makeFromInt 14029, stateTaxDue: makeFromInt 2734 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64512, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4425, stateTaxDue: makeFromInt 2814 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6309, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2078, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36239, itemizedDeductions: makeFromInt 14097, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1557 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131, qualifiedIncome: makeFromInt 13104, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 124 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66400, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15582, federalTaxDue: makeFromInt 5250, stateTaxDue: makeFromInt 2945 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2441, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98247, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3442, stateTaxDue: makeFromInt 4358 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22419, stateTaxDue: makeFromInt 8019 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7771, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29554, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22718, stateTaxDue: makeFromInt 7025 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9159, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19605, federalTaxDue: makeFromInt 26999, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75447, itemizedDeductions: makeFromInt 5863, federalTaxDue: makeFromInt 3757, stateTaxDue: makeFromInt 3501 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40797, qualifiedIncome: makeFromInt 78000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7323, stateTaxDue: makeFromInt 5365 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11600, ordinaryIncomeNonSS: makeFromInt 102508, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24949, stateTaxDue: makeFromInt 9450 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7968, ordinaryIncomeNonSS: makeFromInt 110703, qualifiedIncome: makeFromInt 46894, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17041, stateTaxDue: makeFromInt 7405 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37960, ordinaryIncomeNonSS: makeFromInt 26581, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8591, federalTaxDue: makeFromInt 951, stateTaxDue: makeFromInt 898 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36008, ordinaryIncomeNonSS: makeFromInt 94055, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18545, stateTaxDue: makeFromInt 4348 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 134, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12671, itemizedDeductions: makeFromInt 13716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 218 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3243, qualifiedIncome: makeFromInt 62315, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2603 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37819, ordinaryIncomeNonSS: makeFromInt 92964, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20114, federalTaxDue: makeFromInt 12752, stateTaxDue: makeFromInt 3973 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24285, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42892, qualifiedIncome: makeFromInt 59799, itemizedDeductions: makeFromInt 6143, federalTaxDue: makeFromInt 11330, stateTaxDue: makeFromInt 4809 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35242, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26488, itemizedDeductions: makeFromInt 19495, federalTaxDue: makeFromInt 34754, stateTaxDue: makeFromInt 8552 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52465, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2819, stateTaxDue: makeFromInt 2306 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40085, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16373, itemizedDeductions: makeFromInt 4082, federalTaxDue: makeFromInt 31804, stateTaxDue: makeFromInt 7832 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21547, federalTaxDue: makeFromInt 23583, stateTaxDue: makeFromInt 7232 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1037, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38861, stateTaxDue: makeFromInt 11925 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26686, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4224, itemizedDeductions: makeFromInt 5048, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26589, ordinaryIncomeNonSS: makeFromInt 53060, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24352, federalTaxDue: makeFromInt 7146, stateTaxDue: makeFromInt 2255 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63909, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13467, stateTaxDue: makeFromInt 7631 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26196, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57596, itemizedDeductions: makeFromInt 13105, federalTaxDue: makeFromInt 30729, stateTaxDue: makeFromInt 9705 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35216, ordinaryIncomeNonSS: makeFromInt 68521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1191, federalTaxDue: makeFromInt 11542, stateTaxDue: makeFromInt 3051 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17951, ordinaryIncomeNonSS: makeFromInt 104901, qualifiedIncome: makeFromInt 59747, itemizedDeductions: makeFromInt 20736, federalTaxDue: makeFromInt 19588, stateTaxDue: makeFromInt 7557 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14190, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28503, federalTaxDue: makeFromInt 25454, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5630, ordinaryIncomeNonSS: makeFromInt 135129, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27746, federalTaxDue: makeFromInt 38310, stateTaxDue: makeFromInt 11767 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11985, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23039, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57277, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23999, federalTaxDue: makeFromInt 3346, stateTaxDue: makeFromInt 2189 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36566, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12107, federalTaxDue: makeFromInt 9113, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19781, ordinaryIncomeNonSS: makeFromInt 3232, qualifiedIncome: makeFromInt 2656, itemizedDeductions: makeFromInt 2018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 61 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91654, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7054, stateTaxDue: makeFromInt 4128 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18464, ordinaryIncomeNonSS: makeFromInt 104752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13599, stateTaxDue: makeFromInt 4663 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12796, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48444, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2124 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 789, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 785, ordinaryIncomeNonSS: makeFromInt 39499, qualifiedIncome: makeFromInt 37116, itemizedDeductions: makeFromInt 4375, federalTaxDue: makeFromInt 1617, stateTaxDue: makeFromInt 3255 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32984, ordinaryIncomeNonSS: makeFromInt 67985, qualifiedIncome: makeFromInt 57722, itemizedDeductions: makeFromInt 23334, federalTaxDue: makeFromInt 18351, stateTaxDue: makeFromInt 5710 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44558, ordinaryIncomeNonSS: makeFromInt 92251, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30227, stateTaxDue: makeFromInt 9356 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1347, qualifiedIncome: makeFromInt 29508, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1114 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59433, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26615, stateTaxDue: makeFromInt 7517 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4698, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56592, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2634, stateTaxDue: makeFromInt 2233 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72691, itemizedDeductions: makeFromInt 2529, federalTaxDue: makeFromInt 5256, stateTaxDue: makeFromInt 3483 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96386, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17235, stateTaxDue: makeFromInt 4691 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42442, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83049, itemizedDeductions: makeFromInt 17323, federalTaxDue: makeFromInt 6851, stateTaxDue: makeFromInt 3777 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90981, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26064, federalTaxDue: makeFromInt 7346, stateTaxDue: makeFromInt 3874 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23737, ordinaryIncomeNonSS: makeFromInt 19555, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 247, stateTaxDue: makeFromInt 403 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95833, qualifiedIncome: makeFromInt 61565, itemizedDeductions: makeFromInt 11493, federalTaxDue: makeFromInt 16669, stateTaxDue: makeFromInt 7578 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43861, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82498, itemizedDeductions: makeFromInt 12950, federalTaxDue: makeFromInt 2010, stateTaxDue: makeFromInt 3555 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4176, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42169, itemizedDeductions: makeFromInt 3756, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1434 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4237, federalTaxDue: makeFromInt 41541, stateTaxDue: makeFromInt 12025 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38171, ordinaryIncomeNonSS: makeFromInt 16177, qualifiedIncome: makeFromInt 56162, itemizedDeductions: makeFromInt 10985, federalTaxDue: makeFromInt 11446, stateTaxDue: makeFromInt 3162 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47979, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125376, qualifiedIncome: makeFromInt 36263, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24163, stateTaxDue: makeFromInt 7795 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37437, itemizedDeductions: makeFromInt 4124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1685 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15175, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 154, federalTaxDue: makeFromInt 27731, stateTaxDue: makeFromInt 7099 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9920, ordinaryIncomeNonSS: makeFromInt 130842, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26102, federalTaxDue: makeFromInt 19730, stateTaxDue: makeFromInt 5967 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37002, ordinaryIncomeNonSS: makeFromInt 6064, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 48 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40963, ordinaryIncomeNonSS: makeFromInt 89622, qualifiedIncome: makeFromInt 31378, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23197, stateTaxDue: makeFromInt 5722 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41101, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10061, ordinaryIncomeNonSS: makeFromInt 105934, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20920, federalTaxDue: makeFromInt 13905, stateTaxDue: makeFromInt 4722 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15897, stateTaxDue: makeFromInt 4446 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29819, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20938, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38501, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33486, stateTaxDue: makeFromInt 7045 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35368, stateTaxDue: makeFromInt 11462 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133268, qualifiedIncome: makeFromInt 70381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39377, stateTaxDue: makeFromInt 9727 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11766, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91369, itemizedDeductions: makeFromInt 7916, federalTaxDue: makeFromInt 8058, stateTaxDue: makeFromInt 4231 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24483, ordinaryIncomeNonSS: makeFromInt 7718, qualifiedIncome: makeFromInt 71437, itemizedDeductions: makeFromInt 6485, federalTaxDue: makeFromInt 5516, stateTaxDue: makeFromInt 3609 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59369, qualifiedIncome: makeFromInt 7745, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9838, stateTaxDue: makeFromInt 2994 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2481, ordinaryIncomeNonSS: makeFromInt 115771, qualifiedIncome: makeFromInt 41178, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24775, stateTaxDue: makeFromInt 7592 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32088, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54856, itemizedDeductions: makeFromInt 4881, federalTaxDue: makeFromInt 5486, stateTaxDue: makeFromInt 2288 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11633, ordinaryIncomeNonSS: makeFromInt 144798, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18745, federalTaxDue: makeFromInt 27246, stateTaxDue: makeFromInt 7038 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 880, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25740, itemizedDeductions: makeFromInt 985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 812 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31805, itemizedDeductions: makeFromInt 23377, federalTaxDue: makeFromInt 25662, stateTaxDue: makeFromInt 8721 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143241, qualifiedIncome: makeFromInt 92947, itemizedDeductions: makeFromInt 8096, federalTaxDue: makeFromInt 40712, stateTaxDue: makeFromInt 11699 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110841, qualifiedIncome: makeFromInt 82926, itemizedDeductions: makeFromInt 27738, federalTaxDue: makeFromInt 35482, stateTaxDue: makeFromInt 9331 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1264, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10816, qualifiedIncome: makeFromInt 714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89996, itemizedDeductions: makeFromInt 12672, federalTaxDue: makeFromInt 4537, stateTaxDue: makeFromInt 3925 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26702, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4429, stateTaxDue: makeFromInt 3396 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34430, ordinaryIncomeNonSS: makeFromInt 143969, qualifiedIncome: makeFromInt 27272, itemizedDeductions: makeFromInt 21894, federalTaxDue: makeFromInt 32025, stateTaxDue: makeFromInt 8187 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45961, ordinaryIncomeNonSS: makeFromInt 52167, qualifiedIncome: makeFromInt 34602, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7896, stateTaxDue: makeFromInt 3663 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11330, ordinaryIncomeNonSS: makeFromInt 132208, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23673, stateTaxDue: makeFromInt 6355 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83530, qualifiedIncome: makeFromInt 93818, itemizedDeductions: makeFromInt 14071, federalTaxDue: makeFromInt 25212, stateTaxDue: makeFromInt 8532 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46754, ordinaryIncomeNonSS: makeFromInt 71619, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25209, federalTaxDue: makeFromInt 27246, stateTaxDue: makeFromInt 8324 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9818, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49508, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5713, stateTaxDue: makeFromInt 4651 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12531, ordinaryIncomeNonSS: makeFromInt 91624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17733, federalTaxDue: makeFromInt 14376, stateTaxDue: makeFromInt 4326 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10324, federalTaxDue: makeFromInt 26707, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17740, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45147, ordinaryIncomeNonSS: makeFromInt 43481, qualifiedIncome: makeFromInt 98356, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21910, stateTaxDue: makeFromInt 6837 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32745, ordinaryIncomeNonSS: makeFromInt 133006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24959, stateTaxDue: makeFromInt 6075 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83864, qualifiedIncome: makeFromInt 36662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15803, stateTaxDue: makeFromInt 5771 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95933, qualifiedIncome: makeFromInt 46738, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12628, stateTaxDue: makeFromInt 6459 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72032, qualifiedIncome: makeFromInt 673, itemizedDeductions: makeFromInt 25677, federalTaxDue: makeFromInt 5413, stateTaxDue: makeFromInt 3259 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12149, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5341, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11275, itemizedDeductions: makeFromInt 12041, federalTaxDue: makeFromInt 25340, stateTaxDue: makeFromInt 7489 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43393, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20752, federalTaxDue: makeFromInt 7710, stateTaxDue: makeFromInt 1915 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6860, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15440, stateTaxDue: makeFromInt 4899 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44822, ordinaryIncomeNonSS: makeFromInt 43511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5549, stateTaxDue: makeFromInt 1921 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33911, qualifiedIncome: makeFromInt 93362, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17259, stateTaxDue: makeFromInt 5989 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19514, federalTaxDue: makeFromInt 23903, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30671, qualifiedIncome: makeFromInt 82014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1007, stateTaxDue: makeFromInt 5094 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108040, qualifiedIncome: makeFromInt 80415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39816, stateTaxDue: makeFromInt 9183 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38065, itemizedDeductions: makeFromInt 5740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1528 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5412, ordinaryIncomeNonSS: makeFromInt 131246, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39013, stateTaxDue: makeFromInt 11569 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23437, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14645, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1111, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4606 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3214, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8314, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2619, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19281, ordinaryIncomeNonSS: makeFromInt 113157, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17206, federalTaxDue: makeFromInt 18822, stateTaxDue: makeFromInt 5343 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45535, ordinaryIncomeNonSS: makeFromInt 134702, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34157, stateTaxDue: makeFromInt 6441 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19039, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1175 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21474, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13060, federalTaxDue: makeFromInt 577, stateTaxDue: makeFromInt 619 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73542, qualifiedIncome: makeFromInt 51764, itemizedDeductions: makeFromInt 18972, federalTaxDue: makeFromInt 13687, stateTaxDue: makeFromInt 5690 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8841, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54793, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2159, stateTaxDue: makeFromInt 2285 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102876, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9734, stateTaxDue: makeFromInt 4769 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44674, itemizedDeductions: makeFromInt 26699, federalTaxDue: makeFromInt 1054, stateTaxDue: makeFromInt 1850 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92359, qualifiedIncome: makeFromInt 41300, itemizedDeductions: makeFromInt 15109, federalTaxDue: makeFromInt 10847, stateTaxDue: makeFromInt 6208 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45039, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1219, stateTaxDue: makeFromInt 1644 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41804, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10504, stateTaxDue: makeFromInt 6681 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142634, qualifiedIncome: makeFromInt 81136, itemizedDeductions: makeFromInt 10033, federalTaxDue: makeFromInt 28778, stateTaxDue: makeFromInt 10514 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1014, federalTaxDue: makeFromInt 3075, stateTaxDue: makeFromInt 1903 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46474, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2525, stateTaxDue: makeFromInt 1942 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27215, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 960 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4352, stateTaxDue: makeFromInt 2435 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20576, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71057, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1696, stateTaxDue: makeFromInt 2978 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3148, ordinaryIncomeNonSS: makeFromInt 11256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95711, itemizedDeductions: makeFromInt 21228, federalTaxDue: makeFromInt 8105, stateTaxDue: makeFromInt 4531 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78716, qualifiedIncome: makeFromInt 3264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5952, stateTaxDue: makeFromInt 3528 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34037, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91171, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26265, federalTaxDue: makeFromInt 24511, stateTaxDue: makeFromInt 9403 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31676, ordinaryIncomeNonSS: makeFromInt 10364, qualifiedIncome: makeFromInt 58241, itemizedDeductions: makeFromInt 268, federalTaxDue: makeFromInt 8813, stateTaxDue: makeFromInt 2975 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30982, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23433, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 717 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50522, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18, stateTaxDue: makeFromInt 2230 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39305, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1290 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45869, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5182, itemizedDeductions: makeFromInt 18314, federalTaxDue: makeFromInt 32493, stateTaxDue: makeFromInt 7384 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30915, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65270, itemizedDeductions: makeFromInt 8820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2589 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21925, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29459, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29870, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38375, itemizedDeductions: makeFromInt 15138, federalTaxDue: makeFromInt 109, stateTaxDue: makeFromInt 1529 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44897, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2833, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48532, ordinaryIncomeNonSS: makeFromInt 103548, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24537, federalTaxDue: makeFromInt 19301, stateTaxDue: makeFromInt 4730 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138342, qualifiedIncome: makeFromInt 77625, itemizedDeductions: makeFromInt 25808, federalTaxDue: makeFromInt 32673, stateTaxDue: makeFromInt 10343 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16193, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32771, ordinaryIncomeNonSS: makeFromInt 91669, qualifiedIncome: makeFromInt 93350, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37608, stateTaxDue: makeFromInt 9212 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36697, ordinaryIncomeNonSS: makeFromInt 132091, qualifiedIncome: makeFromInt 22031, itemizedDeductions: makeFromInt 21446, federalTaxDue: makeFromInt 29915, stateTaxDue: makeFromInt 7331 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85246, itemizedDeductions: makeFromInt 5654, federalTaxDue: makeFromInt 5227, stateTaxDue: makeFromInt 3797 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20853, qualifiedIncome: makeFromInt 60764, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 745, stateTaxDue: makeFromInt 3706 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 432, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29078, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6600, ordinaryIncomeNonSS: makeFromInt 137965, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9303, federalTaxDue: makeFromInt 35816, stateTaxDue: makeFromInt 11523 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37032, ordinaryIncomeNonSS: makeFromInt 98126, qualifiedIncome: makeFromInt 43042, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24441, stateTaxDue: makeFromInt 6603 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11206, ordinaryIncomeNonSS: makeFromInt 79901, qualifiedIncome: makeFromInt 22034, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6955, stateTaxDue: makeFromInt 4422 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49571, itemizedDeductions: makeFromInt 25845, federalTaxDue: makeFromInt 4070, stateTaxDue: makeFromInt 2024 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23913, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37458, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 786, stateTaxDue: makeFromInt 1360 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22806, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 465 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6533, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19099, itemizedDeductions: makeFromInt 22137, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 520 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15574, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9937, stateTaxDue: makeFromInt 5614 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27321, ordinaryIncomeNonSS: makeFromInt 110859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28761, federalTaxDue: makeFromInt 18677, stateTaxDue: makeFromInt 5088 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44765, itemizedDeductions: makeFromInt 12180, federalTaxDue: makeFromInt 715, stateTaxDue: makeFromInt 1783 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42459, ordinaryIncomeNonSS: makeFromInt 143655, qualifiedIncome: makeFromInt 94605, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43965, stateTaxDue: makeFromInt 11658 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4417, ordinaryIncomeNonSS: makeFromInt 69377, qualifiedIncome: makeFromInt 69698, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15186, stateTaxDue: makeFromInt 6499 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25955, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12139, ordinaryIncomeNonSS: makeFromInt 55841, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29775, federalTaxDue: makeFromInt 18565, stateTaxDue: makeFromInt 7337 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16961, ordinaryIncomeNonSS: makeFromInt 96010, qualifiedIncome: makeFromInt 68089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26361, stateTaxDue: makeFromInt 7750 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28659, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84767, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7068, stateTaxDue: makeFromInt 3895 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29, itemizedDeductions: makeFromInt 23274, federalTaxDue: makeFromInt 17195, stateTaxDue: makeFromInt 7026 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11220, ordinaryIncomeNonSS: makeFromInt 141358, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5858, federalTaxDue: makeFromInt 23864, stateTaxDue: makeFromInt 6493 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44116, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56049, itemizedDeductions: makeFromInt 6058, federalTaxDue: makeFromInt 579, stateTaxDue: makeFromInt 2127 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9422, ordinaryIncomeNonSS: makeFromInt 75941, qualifiedIncome: makeFromInt 97558, itemizedDeductions: makeFromInt 3344, federalTaxDue: makeFromInt 17741, stateTaxDue: makeFromInt 8196 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5766, ordinaryIncomeNonSS: makeFromInt 69459, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14195, federalTaxDue: makeFromInt 5750, stateTaxDue: makeFromInt 3114 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38153, ordinaryIncomeNonSS: makeFromInt 21764, qualifiedIncome: makeFromInt 75110, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8522, stateTaxDue: makeFromInt 4269 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5139, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19883, ordinaryIncomeNonSS: makeFromInt 38883, qualifiedIncome: makeFromInt 49746, itemizedDeductions: makeFromInt 27808, federalTaxDue: makeFromInt 8915, stateTaxDue: makeFromInt 4052 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37429, ordinaryIncomeNonSS: makeFromInt 104227, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15173, federalTaxDue: makeFromInt 36210, stateTaxDue: makeFromInt 9987 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19046, ordinaryIncomeNonSS: makeFromInt 145682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14237, federalTaxDue: makeFromInt 29450, stateTaxDue: makeFromInt 6829 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41968, ordinaryIncomeNonSS: makeFromInt 48555, qualifiedIncome: makeFromInt 23637, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12477, stateTaxDue: makeFromInt 3302 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102179, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7754, federalTaxDue: makeFromInt 17508, stateTaxDue: makeFromInt 4634 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77007, qualifiedIncome: makeFromInt 40485, itemizedDeductions: makeFromInt 8184, federalTaxDue: makeFromInt 11473, stateTaxDue: makeFromInt 5500 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17853, ordinaryIncomeNonSS: makeFromInt 39470, qualifiedIncome: makeFromInt 36987, itemizedDeductions: makeFromInt 26200, federalTaxDue: makeFromInt 2613, stateTaxDue: makeFromInt 3148 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38780, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55061, itemizedDeductions: makeFromInt 15653, federalTaxDue: makeFromInt 6833, stateTaxDue: makeFromInt 2558 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25894, ordinaryIncomeNonSS: makeFromInt 103032, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19642, stateTaxDue: makeFromInt 4697 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93473, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7327, stateTaxDue: makeFromInt 4419 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138448, qualifiedIncome: makeFromInt 41258, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22491, stateTaxDue: makeFromInt 8614 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67942, qualifiedIncome: makeFromInt 63906, itemizedDeductions: makeFromInt 1569, federalTaxDue: makeFromInt 12538, stateTaxDue: makeFromInt 6017 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10914, federalTaxDue: makeFromInt 38211, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86510, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1086, federalTaxDue: makeFromInt 23496, stateTaxDue: makeFromInt 8751 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32230, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81754, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3413 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109696, qualifiedIncome: makeFromInt 3234, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14762, stateTaxDue: makeFromInt 5209 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29312, ordinaryIncomeNonSS: makeFromInt 72820, qualifiedIncome: makeFromInt 66873, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23386, stateTaxDue: makeFromInt 6730 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15225, ordinaryIncomeNonSS: makeFromInt 55056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5128, stateTaxDue: makeFromInt 2178 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25245, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1399, stateTaxDue: makeFromInt 1063 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44339, qualifiedIncome: makeFromInt 72659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12634, stateTaxDue: makeFromInt 5175 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134139, qualifiedIncome: makeFromInt 84908, itemizedDeductions: makeFromInt 17897, federalTaxDue: makeFromInt 31288, stateTaxDue: makeFromInt 10377 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21554, stateTaxDue: makeFromInt 7232 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31843, ordinaryIncomeNonSS: makeFromInt 102676, qualifiedIncome: makeFromInt 13187, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16359, stateTaxDue: makeFromInt 5318 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80571, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3554 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22914, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36646, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1216 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5626, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26787, stateTaxDue: makeFromInt 7426 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13206, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13119, ordinaryIncomeNonSS: makeFromInt 61407, qualifiedIncome: makeFromInt 99830, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26298, stateTaxDue: makeFromInt 7999 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18274, ordinaryIncomeNonSS: makeFromInt 86088, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29210, stateTaxDue: makeFromInt 8849 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15418, ordinaryIncomeNonSS: makeFromInt 78608, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7902, stateTaxDue: makeFromInt 3356 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138565, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21022, stateTaxDue: makeFromInt 6553 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9731, ordinaryIncomeNonSS: makeFromInt 119631, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29036, federalTaxDue: makeFromInt 33002, stateTaxDue: makeFromInt 10854 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26560, ordinaryIncomeNonSS: makeFromInt 2136, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24038, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33754, ordinaryIncomeNonSS: makeFromInt 20971, qualifiedIncome: makeFromInt 99295, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6622, stateTaxDue: makeFromInt 5338 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84553, qualifiedIncome: makeFromInt 87437, itemizedDeductions: makeFromInt 3799, federalTaxDue: makeFromInt 21181, stateTaxDue: makeFromInt 8025 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22095, federalTaxDue: makeFromInt 3834, stateTaxDue: makeFromInt 1288 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35019, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93640, itemizedDeductions: makeFromInt 23836, federalTaxDue: makeFromInt 43263, stateTaxDue: makeFromInt 11607 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50832, stateTaxDue: makeFromInt 12245 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90363, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37905, stateTaxDue: makeFromInt 11593 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6182, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41428, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10835, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 999, itemizedDeductions: makeFromInt 13008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25143, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74790, itemizedDeductions: makeFromInt 28531, federalTaxDue: makeFromInt 5571, stateTaxDue: makeFromInt 3590 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31385, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6336, federalTaxDue: makeFromInt 32035, stateTaxDue: makeFromInt 7245 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6842, ordinaryIncomeNonSS: makeFromInt 119980, qualifiedIncome: makeFromInt 36897, itemizedDeductions: makeFromInt 10559, federalTaxDue: makeFromInt 22084, stateTaxDue: makeFromInt 7469 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124669, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45428, stateTaxDue: makeFromInt 10978 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6136, ordinaryIncomeNonSS: makeFromInt 109111, qualifiedIncome: makeFromInt 65424, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23683, stateTaxDue: makeFromInt 8352 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16617, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 195 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16707, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49492, ordinaryIncomeNonSS: makeFromInt 112256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28253, federalTaxDue: makeFromInt 22048, stateTaxDue: makeFromInt 5276 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18644, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5074, itemizedDeductions: makeFromInt 557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5839, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40249, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1689 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36156, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75778, qualifiedIncome: makeFromInt 9800, itemizedDeductions: makeFromInt 454, federalTaxDue: makeFromInt 9995, stateTaxDue: makeFromInt 3824 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47591, ordinaryIncomeNonSS: makeFromInt 83040, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14203, stateTaxDue: makeFromInt 3582 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4352, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4771 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9377, ordinaryIncomeNonSS: makeFromInt 88840, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 844, federalTaxDue: makeFromInt 13912, stateTaxDue: makeFromInt 3987 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19433, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26322, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21305, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17113, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12872, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 228 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17324, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41217, itemizedDeductions: makeFromInt 18731, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1536 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27036, qualifiedIncome: makeFromInt 28467, itemizedDeductions: makeFromInt 20924, federalTaxDue: makeFromInt 206, stateTaxDue: makeFromInt 2484 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27806, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13770, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33334, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11206, federalTaxDue: makeFromInt 4809, stateTaxDue: makeFromInt 6192 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32104, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 6085 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1235, qualifiedIncome: makeFromInt 81366, itemizedDeductions: makeFromInt 24691, federalTaxDue: makeFromInt 3242, stateTaxDue: makeFromInt 3555 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17499, ordinaryIncomeNonSS: makeFromInt 27062, qualifiedIncome: makeFromInt 69010, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7301, stateTaxDue: makeFromInt 4429 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31638, stateTaxDue: makeFromInt 6925 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13805, ordinaryIncomeNonSS: makeFromInt 60907, qualifiedIncome: makeFromInt 88297, itemizedDeductions: makeFromInt 10551, federalTaxDue: makeFromInt 21839, stateTaxDue: makeFromInt 7205 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32035, ordinaryIncomeNonSS: makeFromInt 57474, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22353, stateTaxDue: makeFromInt 7299 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14977, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 494 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4381, ordinaryIncomeNonSS: makeFromInt 115835, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10175, federalTaxDue: makeFromInt 19002, stateTaxDue: makeFromInt 5337 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42438, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98786, itemizedDeductions: makeFromInt 14379, federalTaxDue: makeFromInt 6256, stateTaxDue: makeFromInt 4589 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43393, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29886, itemizedDeductions: makeFromInt 9396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1019 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60310, qualifiedIncome: makeFromInt 86969, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14956, stateTaxDue: makeFromInt 6989 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36473, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15876, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28558, qualifiedIncome: makeFromInt 53899, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1191, stateTaxDue: makeFromInt 3757 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7538, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37430, itemizedDeductions: makeFromInt 26069, federalTaxDue: makeFromInt 30731, stateTaxDue: makeFromInt 8917 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44497, qualifiedIncome: makeFromInt 69163, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12282, stateTaxDue: makeFromInt 5428 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6102, stateTaxDue: makeFromInt 3042 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1075, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71243, qualifiedIncome: makeFromInt 47245, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5162, stateTaxDue: makeFromInt 5492 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2798, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19848, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24294, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128028, qualifiedIncome: makeFromInt 12236, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18920, stateTaxDue: makeFromInt 6638 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64923, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2571 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115023, qualifiedIncome: makeFromInt 19047, itemizedDeductions: makeFromInt 11337, federalTaxDue: makeFromInt 18112, stateTaxDue: makeFromInt 6329 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33937, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29347, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41134, stateTaxDue: makeFromInt 8800 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9007, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1620, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19448, ordinaryIncomeNonSS: makeFromInt 124278, qualifiedIncome: makeFromInt 50445, itemizedDeductions: makeFromInt 11458, federalTaxDue: makeFromInt 35688, stateTaxDue: makeFromInt 8686 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103902, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15109, stateTaxDue: makeFromInt 4871 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18774, ordinaryIncomeNonSS: makeFromInt 20133, qualifiedIncome: makeFromInt 44810, itemizedDeductions: makeFromInt 11245, federalTaxDue: makeFromInt 1344, stateTaxDue: makeFromInt 2672 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67564, qualifiedIncome: makeFromInt 53887, itemizedDeductions: makeFromInt 11958, federalTaxDue: makeFromInt 4614, stateTaxDue: makeFromInt 5598 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42380, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19508, federalTaxDue: makeFromInt 2161, stateTaxDue: makeFromInt 1815 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135931, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15673, stateTaxDue: makeFromInt 6382 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21029, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 522 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41167, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78036, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39308, stateTaxDue: makeFromInt 11201 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32707, ordinaryIncomeNonSS: makeFromInt 18981, qualifiedIncome: makeFromInt 88449, itemizedDeductions: makeFromInt 2028, federalTaxDue: makeFromInt 10506, stateTaxDue: makeFromInt 4797 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 348, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44022, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 997, stateTaxDue: makeFromInt 1898 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22770, federalTaxDue: makeFromInt 28847, stateTaxDue: makeFromInt 6997 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36212, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1622 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20272, ordinaryIncomeNonSS: makeFromInt 127163, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17746, federalTaxDue: makeFromInt 37192, stateTaxDue: makeFromInt 11137 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38388, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88208, itemizedDeductions: makeFromInt 23287, federalTaxDue: makeFromInt 7584, stateTaxDue: makeFromInt 4274 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91359, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35845, stateTaxDue: makeFromInt 9311 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14697, qualifiedIncome: makeFromInt 51159, itemizedDeductions: makeFromInt 9462, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2718 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73730, itemizedDeductions: makeFromInt 6899, federalTaxDue: makeFromInt 35409, stateTaxDue: makeFromInt 10753 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51545, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1038, stateTaxDue: makeFromInt 2122 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7361, ordinaryIncomeNonSS: makeFromInt 48140, qualifiedIncome: makeFromInt 59810, itemizedDeductions: makeFromInt 12128, federalTaxDue: makeFromInt 12215, stateTaxDue: makeFromInt 5159 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38745, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24718, stateTaxDue: makeFromInt 7119 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27164, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5384, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 683 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45191, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83912, itemizedDeductions: makeFromInt 1682, federalTaxDue: makeFromInt 10034, stateTaxDue: makeFromInt 3851 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4088, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9477, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132469, qualifiedIncome: makeFromInt 76319, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27834, stateTaxDue: makeFromInt 10064 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146724, qualifiedIncome: makeFromInt 87577, itemizedDeductions: makeFromInt 6054, federalTaxDue: makeFromInt 29607, stateTaxDue: makeFromInt 11040 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79299, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3290 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142604, qualifiedIncome: makeFromInt 48151, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38019, stateTaxDue: makeFromInt 9300 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50828, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4373, federalTaxDue: makeFromInt 20891, stateTaxDue: makeFromInt 7468 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44986, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3294, stateTaxDue: makeFromInt 1994 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5986, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7186, ordinaryIncomeNonSS: makeFromInt 70263, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9501, stateTaxDue: makeFromInt 3258 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39183, ordinaryIncomeNonSS: makeFromInt 66388, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8647, stateTaxDue: makeFromInt 2908 }
  , TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5475, ordinaryIncomeNonSS: makeFromInt 58175, qualifiedIncome: makeFromInt 73280, itemizedDeductions: makeFromInt 14546, federalTaxDue: makeFromInt 17363, stateTaxDue: makeFromInt 6118 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21688, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96674, itemizedDeductions: makeFromInt 28768, federalTaxDue: makeFromInt 5539, stateTaxDue: makeFromInt 4259 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32803, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1020 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29677, itemizedDeductions: makeFromInt 18672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1085 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23111, ordinaryIncomeNonSS: makeFromInt 117813, qualifiedIncome: makeFromInt 92700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31599, stateTaxDue: makeFromInt 10083 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116685, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10058, stateTaxDue: makeFromInt 5359 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10347, ordinaryIncomeNonSS: makeFromInt 116187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20598, stateTaxDue: makeFromInt 5497 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5039, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39512, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95670, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2059, stateTaxDue: makeFromInt 4109 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21790, federalTaxDue: makeFromInt 23211, stateTaxDue: makeFromInt 7222 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19508, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12448, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4816, ordinaryIncomeNonSS: makeFromInt 29042, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 977 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28456, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1327 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2423, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4265, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70658, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2229, stateTaxDue: makeFromInt 3158 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16353, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23057, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82796, qualifiedIncome: makeFromInt 35242, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27570, stateTaxDue: makeFromInt 5673 }
  , TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29357, ordinaryIncomeNonSS: makeFromInt 20308, qualifiedIncome: makeFromInt 16952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2932, stateTaxDue: makeFromInt 1408 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34261, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48636, itemizedDeductions: makeFromInt 21440, federalTaxDue: makeFromInt 2522, stateTaxDue: makeFromInt 2177 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21285, ordinaryIncomeNonSS: makeFromInt 52630, qualifiedIncome: makeFromInt 53460, itemizedDeductions: makeFromInt 10800, federalTaxDue: makeFromInt 14166, stateTaxDue: makeFromInt 4860 }
  , TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16069, qualifiedIncome: makeFromInt 65464, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3218, stateTaxDue: makeFromInt 3822 }
  , TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  , TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4836, qualifiedIncome: makeFromInt 68791, itemizedDeductions: makeFromInt 22900, federalTaxDue: makeFromInt 419, stateTaxDue: makeFromInt 3102 }
  , TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10803, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90903, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1823, stateTaxDue: makeFromInt 3944 }
  , TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46943, itemizedDeductions: makeFromInt 25604, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1843 }

  ]