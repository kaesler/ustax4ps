module KnownYearsGoldenTestCasesFromScala
  ( TestCase(..)
  , cases
  ) where

import CommonTypes (FilingStatus(..))
import Data.Date (Date, Year)
import Moneys (Deduction, Income, TaxPayable, makeFromInt)
import Prelude (class Show, show)
import UnsafeDates (unsafeMakeDate, unsafeMakeYear)

newtype TestCase = TestCase
  { year :: Year
  , birthDate :: Date
  , personalExemptions :: Int
  , filingStatus :: FilingStatus
  , socSec :: Income
  , ordinaryIncomeNonSS :: Income
  , qualifiedIncome :: Income
  , itemizedDeductions :: Deduction
  , federalTaxDue :: TaxPayable
  , stateTaxDue :: TaxPayable
  }

instance showTestCase :: Show TestCase where
  show (TestCase tc) = show tc

cases :: Array TestCase
cases =
  [
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21695, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44471, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1649 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39464, ordinaryIncomeNonSS: makeFromInt 84210, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14359, stateTaxDue: makeFromInt 3956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27763, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1402, federalTaxDue: makeFromInt 10002, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87310, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12787, stateTaxDue: makeFromInt 4106 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15986, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39676, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25282, stateTaxDue: makeFromInt 8809 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5094, stateTaxDue: makeFromInt 3091 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65351, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10486, stateTaxDue: makeFromInt 2893 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16581, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18720, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26940, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82741, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10065, stateTaxDue: makeFromInt 3995 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6178, ordinaryIncomeNonSS: makeFromInt 26403, qualifiedIncome: makeFromInt 95002, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 369, stateTaxDue: makeFromInt 5395 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5165, ordinaryIncomeNonSS: makeFromInt 144915, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23582, federalTaxDue: makeFromInt 19446, stateTaxDue: makeFromInt 6942 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10186, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24166, itemizedDeductions: makeFromInt 18033, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16960, ordinaryIncomeNonSS: makeFromInt 137916, qualifiedIncome: makeFromInt 24142, itemizedDeductions: makeFromInt 14666, federalTaxDue: makeFromInt 27273, stateTaxDue: makeFromInt 7714 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10933, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96612, itemizedDeductions: makeFromInt 18397, federalTaxDue: makeFromInt 38951, stateTaxDue: makeFromInt 12026 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28421, ordinaryIncomeNonSS: makeFromInt 20592, qualifiedIncome: makeFromInt 84318, itemizedDeductions: makeFromInt 16383, federalTaxDue: makeFromInt 7625, stateTaxDue: makeFromInt 4902 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40917, ordinaryIncomeNonSS: makeFromInt 13515, qualifiedIncome: makeFromInt 21135, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1211, stateTaxDue: makeFromInt 1158 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37613, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4590, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56697, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2505, stateTaxDue: makeFromInt 2380 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8364, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 697, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24155, federalTaxDue: makeFromInt 46866, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 884, ordinaryIncomeNonSS: makeFromInt 106734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35235, stateTaxDue: makeFromInt 10319 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90412, itemizedDeductions: makeFromInt 13679, federalTaxDue: makeFromInt 52891, stateTaxDue: makeFromInt 11914 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8786, ordinaryIncomeNonSS: makeFromInt 135072, qualifiedIncome: makeFromInt 86132, itemizedDeductions: makeFromInt 17233, federalTaxDue: makeFromInt 27620, stateTaxDue: makeFromInt 10585 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81670, itemizedDeductions: makeFromInt 16980, federalTaxDue: makeFromInt 2801, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63462, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29245, federalTaxDue: makeFromInt 11828, stateTaxDue: makeFromInt 7888 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18385, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20894, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49298, itemizedDeductions: makeFromInt 28014, federalTaxDue: makeFromInt 27643, stateTaxDue: makeFromInt 9290 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111687, qualifiedIncome: makeFromInt 54623, itemizedDeductions: makeFromInt 24631, federalTaxDue: makeFromInt 20423, stateTaxDue: makeFromInt 8033 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53132, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1523, stateTaxDue: makeFromInt 2082 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27822, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44639, itemizedDeductions: makeFromInt 19128, federalTaxDue: makeFromInt 772, stateTaxDue: makeFromInt 1777 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12237, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91210, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22906, federalTaxDue: makeFromInt 17715, stateTaxDue: makeFromInt 3986 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20264, qualifiedIncome: makeFromInt 65771, itemizedDeductions: makeFromInt 24346, federalTaxDue: makeFromInt 14065, stateTaxDue: makeFromInt 4163 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9362, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15132, ordinaryIncomeNonSS: makeFromInt 30705, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11201, federalTaxDue: makeFromInt 8322, stateTaxDue: makeFromInt 6013 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12758, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77796, itemizedDeductions: makeFromInt 12060, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3415 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74736, qualifiedIncome: makeFromInt 5777, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17556, stateTaxDue: makeFromInt 3657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132630, qualifiedIncome: makeFromInt 11929, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20732, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3488, ordinaryIncomeNonSS: makeFromInt 75623, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13210, federalTaxDue: makeFromInt 26103, stateTaxDue: makeFromInt 8732 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49581, qualifiedIncome: makeFromInt 94795, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10656, stateTaxDue: makeFromInt 7016 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93561, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 46077, stateTaxDue: makeFromInt 11923 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39617, ordinaryIncomeNonSS: makeFromInt 132949, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19998, stateTaxDue: makeFromInt 5972 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46194, ordinaryIncomeNonSS: makeFromInt 46880, qualifiedIncome: makeFromInt 71647, itemizedDeductions: makeFromInt 4967, federalTaxDue: makeFromInt 11132, stateTaxDue: makeFromInt 5251 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4430, ordinaryIncomeNonSS: makeFromInt 56985, qualifiedIncome: makeFromInt 84226, itemizedDeductions: makeFromInt 24640, federalTaxDue: makeFromInt 15098, stateTaxDue: makeFromInt 6806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40531, ordinaryIncomeNonSS: makeFromInt 117962, qualifiedIncome: makeFromInt 9207, itemizedDeductions: makeFromInt 25388, federalTaxDue: makeFromInt 26422, stateTaxDue: makeFromInt 6139 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144986, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25253, federalTaxDue: makeFromInt 21778, stateTaxDue: makeFromInt 6794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35205, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38845, stateTaxDue: makeFromInt 8885 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53745, qualifiedIncome: makeFromInt 61885, itemizedDeductions: makeFromInt 16313, federalTaxDue: makeFromInt 18569, stateTaxDue: makeFromInt 5207 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1274, ordinaryIncomeNonSS: makeFromInt 54867, qualifiedIncome: makeFromInt 39667, itemizedDeductions: makeFromInt 28822, federalTaxDue: makeFromInt 4651, stateTaxDue: makeFromInt 4474 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21282, ordinaryIncomeNonSS: makeFromInt 23025, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 676 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16645, itemizedDeductions: makeFromInt 28509, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 196 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30489, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10581, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 678, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13715, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11359, stateTaxDue: makeFromInt 2981 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9291, ordinaryIncomeNonSS: makeFromInt 40401, qualifiedIncome: makeFromInt 89855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14765, stateTaxDue: makeFromInt 6258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49710, itemizedDeductions: makeFromInt 15963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1984 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33724, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46101, qualifiedIncome: makeFromInt 88363, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21200, stateTaxDue: makeFromInt 6468 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148331, qualifiedIncome: makeFromInt 37652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21622, stateTaxDue: makeFromInt 8624 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95869, itemizedDeductions: makeFromInt 16104, federalTaxDue: makeFromInt 4930, stateTaxDue: makeFromInt 4218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29585, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1060 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15948, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9779, federalTaxDue: makeFromInt 19323, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15238, qualifiedIncome: makeFromInt 39244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2269 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18192, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20593, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40711, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82140, itemizedDeductions: makeFromInt 2129, federalTaxDue: makeFromInt 47914, stateTaxDue: makeFromInt 11352 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2091, qualifiedIncome: makeFromInt 61608, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1126, stateTaxDue: makeFromInt 2610 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4235, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 993 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27488, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41526, stateTaxDue: makeFromInt 8827 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78515, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36657, stateTaxDue: makeFromInt 11205 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37996, ordinaryIncomeNonSS: makeFromInt 96739, qualifiedIncome: makeFromInt 66916, itemizedDeductions: makeFromInt 7817, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7808 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5411, ordinaryIncomeNonSS: makeFromInt 145719, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12639, federalTaxDue: makeFromInt 31411, stateTaxDue: makeFromInt 11811 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35728, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5628, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13027, itemizedDeductions: makeFromInt 12382, federalTaxDue: makeFromInt 29703, stateTaxDue: makeFromInt 7896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84648, qualifiedIncome: makeFromInt 54254, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18434, stateTaxDue: makeFromInt 6656 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41366, ordinaryIncomeNonSS: makeFromInt 25928, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18350, stateTaxDue: makeFromInt 5814 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4114, qualifiedIncome: makeFromInt 38959, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1544 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4811, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4666 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2584 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11906, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 220 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10203, ordinaryIncomeNonSS: makeFromInt 110701, qualifiedIncome: makeFromInt 36692, itemizedDeductions: makeFromInt 24951, federalTaxDue: makeFromInt 19636, stateTaxDue: makeFromInt 6795 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36667, ordinaryIncomeNonSS: makeFromInt 108616, qualifiedIncome: makeFromInt 71566, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32861, stateTaxDue: makeFromInt 8638 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12127, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48637, ordinaryIncomeNonSS: makeFromInt 55550, qualifiedIncome: makeFromInt 66624, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21596, stateTaxDue: makeFromInt 5782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27858, ordinaryIncomeNonSS: makeFromInt 95819, qualifiedIncome: makeFromInt 96820, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32273, stateTaxDue: makeFromInt 9377 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38796, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4340, ordinaryIncomeNonSS: makeFromInt 71606, qualifiedIncome: makeFromInt 61347, itemizedDeductions: makeFromInt 8564, federalTaxDue: makeFromInt 6658, stateTaxDue: makeFromInt 5973 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91676, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4301, stateTaxDue: makeFromInt 4009 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14267, ordinaryIncomeNonSS: makeFromInt 111111, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20824, stateTaxDue: makeFromInt 5389 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65415, itemizedDeductions: makeFromInt 17719, federalTaxDue: makeFromInt 2759, stateTaxDue: makeFromInt 2816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14281, ordinaryIncomeNonSS: makeFromInt 118354, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38583, stateTaxDue: makeFromInt 10789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17021, ordinaryIncomeNonSS: makeFromInt 116309, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23994, federalTaxDue: makeFromInt 17404, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8683, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12445, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14846, stateTaxDue: makeFromInt 5071 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9559, ordinaryIncomeNonSS: makeFromInt 43172, qualifiedIncome: makeFromInt 54429, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2055, stateTaxDue: makeFromInt 4205 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43305, ordinaryIncomeNonSS: makeFromInt 47976, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22871, federalTaxDue: makeFromInt 23059, stateTaxDue: makeFromInt 7129 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23893, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48796, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38501, stateTaxDue: makeFromInt 9485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97283, itemizedDeductions: makeFromInt 15807, federalTaxDue: makeFromInt 8945, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5391, qualifiedIncome: makeFromInt 71213, itemizedDeductions: makeFromInt 19430, federalTaxDue: makeFromInt 1967, stateTaxDue: makeFromInt 3155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8440, itemizedDeductions: makeFromInt 3546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 84 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42351, ordinaryIncomeNonSS: makeFromInt 106321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19971, federalTaxDue: makeFromInt 26160, stateTaxDue: makeFromInt 5198 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33560, ordinaryIncomeNonSS: makeFromInt 22854, qualifiedIncome: makeFromInt 60543, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6191, stateTaxDue: makeFromInt 3595 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5581, ordinaryIncomeNonSS: makeFromInt 36305, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19361, federalTaxDue: makeFromInt 1983, stateTaxDue: makeFromInt 1505 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24323, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20889, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24868, ordinaryIncomeNonSS: makeFromInt 3951, qualifiedIncome: makeFromInt 96078, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1024, stateTaxDue: makeFromInt 4526 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28680, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71427, itemizedDeductions: makeFromInt 25051, federalTaxDue: makeFromInt 34915, stateTaxDue: makeFromInt 10396 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35101, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9346, federalTaxDue: makeFromInt 32460, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34927, ordinaryIncomeNonSS: makeFromInt 146018, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5176, federalTaxDue: makeFromInt 42794, stateTaxDue: makeFromInt 11926 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40503, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72129, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3969, stateTaxDue: makeFromInt 3230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130629, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35037, stateTaxDue: makeFromInt 11313 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120646, qualifiedIncome: makeFromInt 6975, itemizedDeductions: makeFromInt 11754, federalTaxDue: makeFromInt 19072, stateTaxDue: makeFromInt 5926 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30643, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 924, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20682, itemizedDeductions: makeFromInt 16289, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 779 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15612, ordinaryIncomeNonSS: makeFromInt 139335, qualifiedIncome: makeFromInt 82758, itemizedDeductions: makeFromInt 25225, federalTaxDue: makeFromInt 36027, stateTaxDue: makeFromInt 10650 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12633, ordinaryIncomeNonSS: makeFromInt 42557, qualifiedIncome: makeFromInt 94652, itemizedDeductions: makeFromInt 25026, federalTaxDue: makeFromInt 15352, stateTaxDue: makeFromInt 6773 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97969, qualifiedIncome: makeFromInt 19313, itemizedDeductions: makeFromInt 25154, federalTaxDue: makeFromInt 12275, stateTaxDue: makeFromInt 5289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6620, itemizedDeductions: makeFromInt 20810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18242, ordinaryIncomeNonSS: makeFromInt 39973, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12098, stateTaxDue: makeFromInt 6424 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16363, qualifiedIncome: makeFromInt 27371, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1680 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11922, ordinaryIncomeNonSS: makeFromInt 117098, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14750, stateTaxDue: makeFromInt 5280 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39898, ordinaryIncomeNonSS: makeFromInt 136968, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26637, stateTaxDue: makeFromInt 6473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20530, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113819, qualifiedIncome: makeFromInt 38085, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18727, stateTaxDue: makeFromInt 7400 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34917, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35209, itemizedDeductions: makeFromInt 6242, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1367 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2818, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13967, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55718, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2369 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7915, ordinaryIncomeNonSS: makeFromInt 669, qualifiedIncome: makeFromInt 69429, itemizedDeductions: makeFromInt 117, federalTaxDue: makeFromInt 2044, stateTaxDue: makeFromInt 3130 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11890, ordinaryIncomeNonSS: makeFromInt 17398, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8761, stateTaxDue: makeFromInt 5495 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77158, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14006, ordinaryIncomeNonSS: makeFromInt 120256, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22102, federalTaxDue: makeFromInt 37719, stateTaxDue: makeFromInt 11009 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2572, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6938, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113520, qualifiedIncome: makeFromInt 7089, itemizedDeductions: makeFromInt 22616, federalTaxDue: makeFromInt 17030, stateTaxDue: makeFromInt 5804 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12672, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10714, ordinaryIncomeNonSS: makeFromInt 116692, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16643, federalTaxDue: makeFromInt 15817, stateTaxDue: makeFromInt 5460 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117597, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12220, stateTaxDue: makeFromInt 5494 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39054, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22304, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31269, ordinaryIncomeNonSS: makeFromInt 100144, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14890, stateTaxDue: makeFromInt 4679 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7787, ordinaryIncomeNonSS: makeFromInt 57066, qualifiedIncome: makeFromInt 16427, itemizedDeductions: makeFromInt 24110, federalTaxDue: makeFromInt 2236, stateTaxDue: makeFromInt 3197 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12685, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25467, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22752, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37168, ordinaryIncomeNonSS: makeFromInt 106246, qualifiedIncome: makeFromInt 25554, itemizedDeductions: makeFromInt 7778, federalTaxDue: makeFromInt 20507, stateTaxDue: makeFromInt 6212 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1622, ordinaryIncomeNonSS: makeFromInt 140424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 660, federalTaxDue: makeFromInt 20391, stateTaxDue: makeFromInt 6646 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36806, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40627, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1347, stateTaxDue: makeFromInt 1776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9283, itemizedDeductions: makeFromInt 410, federalTaxDue: makeFromInt 30047, stateTaxDue: makeFromInt 7777 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8510, ordinaryIncomeNonSS: makeFromInt 81254, qualifiedIncome: makeFromInt 56774, itemizedDeductions: makeFromInt 411, federalTaxDue: makeFromInt 20682, stateTaxDue: makeFromInt 6446 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6726, ordinaryIncomeNonSS: makeFromInt 113670, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28252, federalTaxDue: makeFromInt 30893, stateTaxDue: makeFromInt 10229 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29324, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55084, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2156 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41505, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1700 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40591, ordinaryIncomeNonSS: makeFromInt 131855, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19940, stateTaxDue: makeFromInt 5918 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1672, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33965, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1123 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94376, qualifiedIncome: makeFromInt 70884, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21796, stateTaxDue: makeFromInt 8002 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131486, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1804, federalTaxDue: makeFromInt 21618, stateTaxDue: makeFromInt 6099 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106056, qualifiedIncome: makeFromInt 44358, itemizedDeductions: makeFromInt 26075, federalTaxDue: makeFromInt 29449, stateTaxDue: makeFromInt 7066 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9842, ordinaryIncomeNonSS: makeFromInt 53994, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5265, stateTaxDue: makeFromInt 2445 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29094, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73564, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3203 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15492, ordinaryIncomeNonSS: makeFromInt 57676, qualifiedIncome: makeFromInt 35419, itemizedDeductions: makeFromInt 25471, federalTaxDue: makeFromInt 2836, stateTaxDue: makeFromInt 4095 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4213, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71703, itemizedDeductions: makeFromInt 12873, federalTaxDue: makeFromInt 10476, stateTaxDue: makeFromInt 3330 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32467, ordinaryIncomeNonSS: makeFromInt 64960, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17841, federalTaxDue: makeFromInt 8475, stateTaxDue: makeFromInt 2873 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16448, ordinaryIncomeNonSS: makeFromInt 139246, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20059, stateTaxDue: makeFromInt 6588 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40851, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8224, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147595, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34693, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39630, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69508, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3435, stateTaxDue: makeFromInt 2900 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16248, ordinaryIncomeNonSS: makeFromInt 44361, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19554, stateTaxDue: makeFromInt 6963 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40241, ordinaryIncomeNonSS: makeFromInt 119797, qualifiedIncome: makeFromInt 51936, itemizedDeductions: makeFromInt 6669, federalTaxDue: makeFromInt 25012, stateTaxDue: makeFromInt 7912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18201, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43451, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120937, qualifiedIncome: makeFromInt 46958, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20608, stateTaxDue: makeFromInt 7910 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46818, qualifiedIncome: makeFromInt 53405, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5638, stateTaxDue: makeFromInt 4556 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58092, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28699, federalTaxDue: makeFromInt 3139, stateTaxDue: makeFromInt 2489 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15233, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33145, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3892, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5751, ordinaryIncomeNonSS: makeFromInt 80602, qualifiedIncome: makeFromInt 27988, itemizedDeductions: makeFromInt 20863, federalTaxDue: makeFromInt 11724, stateTaxDue: makeFromInt 4855 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40369, ordinaryIncomeNonSS: makeFromInt 89199, qualifiedIncome: makeFromInt 85197, itemizedDeductions: makeFromInt 2041, federalTaxDue: makeFromInt 34560, stateTaxDue: makeFromInt 8547 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39315, ordinaryIncomeNonSS: makeFromInt 97923, qualifiedIncome: makeFromInt 18744, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20176, stateTaxDue: makeFromInt 5378 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48335, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30528, itemizedDeductions: makeFromInt 2406, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1006 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16322, itemizedDeductions: makeFromInt 834, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 180 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130960, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27767, federalTaxDue: makeFromInt 12153, stateTaxDue: makeFromInt 5873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27211, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51954, itemizedDeductions: makeFromInt 15463, federalTaxDue: makeFromInt 33690, stateTaxDue: makeFromInt 9647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20917, ordinaryIncomeNonSS: makeFromInt 131483, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4280, federalTaxDue: makeFromInt 24696, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42795, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44973, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99421, itemizedDeductions: makeFromInt 29726, federalTaxDue: makeFromInt 9266, stateTaxDue: makeFromInt 4846 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17629, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7461, federalTaxDue: makeFromInt 338, stateTaxDue: makeFromInt 427 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18998, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3685, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50689, itemizedDeductions: makeFromInt 1985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69039, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53089, qualifiedIncome: makeFromInt 78614, itemizedDeductions: makeFromInt 4918, federalTaxDue: makeFromInt 5641, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33619, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27974, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15527, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24322, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8304, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146590, qualifiedIncome: makeFromInt 39355, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30155, stateTaxDue: makeFromInt 8842 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14819, ordinaryIncomeNonSS: makeFromInt 70809, qualifiedIncome: makeFromInt 4510, itemizedDeductions: makeFromInt 26121, federalTaxDue: makeFromInt 5855, stateTaxDue: makeFromInt 3291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42366, ordinaryIncomeNonSS: makeFromInt 91698, qualifiedIncome: makeFromInt 12225, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16791, stateTaxDue: makeFromInt 4851 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22188, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21798, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76265, itemizedDeductions: makeFromInt 13607, federalTaxDue: makeFromInt 6764, stateTaxDue: makeFromInt 3427 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21550, itemizedDeductions: makeFromInt 505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 644 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101846, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26555, stateTaxDue: makeFromInt 9637 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65651, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5856, stateTaxDue: makeFromInt 2828 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20395, itemizedDeductions: makeFromInt 9102, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 591 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63914, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28651, federalTaxDue: makeFromInt 11456, stateTaxDue: makeFromInt 2621 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18115, federalTaxDue: makeFromInt 31341, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49397, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54503, itemizedDeductions: makeFromInt 24567, federalTaxDue: makeFromInt 615, stateTaxDue: makeFromInt 2229 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11795, ordinaryIncomeNonSS: makeFromInt 144913, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26115, stateTaxDue: makeFromInt 6942 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37755, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19021, federalTaxDue: makeFromInt 2054, stateTaxDue: makeFromInt 1684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36533, ordinaryIncomeNonSS: makeFromInt 83841, qualifiedIncome: makeFromInt 38659, itemizedDeductions: makeFromInt 515, federalTaxDue: makeFromInt 23656, stateTaxDue: makeFromInt 5819 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22581, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90964, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38908, stateTaxDue: makeFromInt 11840 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79498, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6135, stateTaxDue: makeFromInt 3626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4240, ordinaryIncomeNonSS: makeFromInt 68999, qualifiedIncome: makeFromInt 73083, itemizedDeductions: makeFromInt 9425, federalTaxDue: makeFromInt 20042, stateTaxDue: makeFromInt 6899 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42714, ordinaryIncomeNonSS: makeFromInt 96409, qualifiedIncome: makeFromInt 25629, itemizedDeductions: makeFromInt 10744, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 5847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2670, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1859, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16520, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 292 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104430, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8588, stateTaxDue: makeFromInt 4747 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46426, ordinaryIncomeNonSS: makeFromInt 56505, qualifiedIncome: makeFromInt 57791, itemizedDeductions: makeFromInt 28327, federalTaxDue: makeFromInt 18602, stateTaxDue: makeFromInt 5460 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35167, ordinaryIncomeNonSS: makeFromInt 119427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26544, stateTaxDue: makeFromInt 5516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13019, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29266, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50975, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6093, federalTaxDue: makeFromInt 13748, stateTaxDue: makeFromInt 2253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1426, ordinaryIncomeNonSS: makeFromInt 27940, qualifiedIncome: makeFromInt 49655, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12519, itemizedDeductions: makeFromInt 22081, federalTaxDue: makeFromInt 30963, stateTaxDue: makeFromInt 7636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31529, ordinaryIncomeNonSS: makeFromInt 22866, qualifiedIncome: makeFromInt 3712, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 805 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20226, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 678 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43497, ordinaryIncomeNonSS: makeFromInt 101513, qualifiedIncome: makeFromInt 42902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29304, stateTaxDue: makeFromInt 6966 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16423, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18366, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 543 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4774, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6144, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18525, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17119, itemizedDeductions: makeFromInt 19269, federalTaxDue: makeFromInt 30948, stateTaxDue: makeFromInt 8095 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36401, ordinaryIncomeNonSS: makeFromInt 36880, qualifiedIncome: makeFromInt 89359, itemizedDeductions: makeFromInt 7912, federalTaxDue: makeFromInt 8841, stateTaxDue: makeFromInt 5837 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3276, ordinaryIncomeNonSS: makeFromInt 879, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25933, ordinaryIncomeNonSS: makeFromInt 102674, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3246, federalTaxDue: makeFromInt 13787, stateTaxDue: makeFromInt 4539 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21666, ordinaryIncomeNonSS: makeFromInt 61946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3849, stateTaxDue: makeFromInt 2608 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99126, itemizedDeductions: makeFromInt 22609, federalTaxDue: makeFromInt 5419, stateTaxDue: makeFromInt 4581 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142791, qualifiedIncome: makeFromInt 89659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47280, stateTaxDue: makeFromInt 11508 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30683, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 683, stateTaxDue: makeFromInt 959 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12394, ordinaryIncomeNonSS: makeFromInt 100874, qualifiedIncome: makeFromInt 28379, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18255, stateTaxDue: makeFromInt 6088 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28383, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80402, itemizedDeductions: makeFromInt 24750, federalTaxDue: makeFromInt 4020, stateTaxDue: makeFromInt 3445 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21828, ordinaryIncomeNonSS: makeFromInt 85093, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13441, federalTaxDue: makeFromInt 20111, stateTaxDue: makeFromInt 8780 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31673, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9452, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25473, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15360, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25862, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 93 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30176, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 886 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22648, ordinaryIncomeNonSS: makeFromInt 73280, qualifiedIncome: makeFromInt 13129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10438, stateTaxDue: makeFromInt 3745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31012, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25773, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29554, federalTaxDue: makeFromInt 42226, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5265, itemizedDeductions: makeFromInt 989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 44 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10480, ordinaryIncomeNonSS: makeFromInt 45209, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14018, stateTaxDue: makeFromInt 6957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32960, ordinaryIncomeNonSS: makeFromInt 7181, qualifiedIncome: makeFromInt 17145, itemizedDeductions: makeFromInt 24871, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 894 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13949, ordinaryIncomeNonSS: makeFromInt 16000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 380, stateTaxDue: makeFromInt 586 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31694, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27214, federalTaxDue: makeFromInt 448, stateTaxDue: makeFromInt 1130 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71542, itemizedDeductions: makeFromInt 23287, federalTaxDue: makeFromInt 4825, stateTaxDue: makeFromInt 3391 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5529, itemizedDeductions: makeFromInt 6872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27142, qualifiedIncome: makeFromInt 21224, itemizedDeductions: makeFromInt 786, federalTaxDue: makeFromInt 2860, stateTaxDue: makeFromInt 1814 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15024, ordinaryIncomeNonSS: makeFromInt 74398, qualifiedIncome: makeFromInt 50060, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11602, stateTaxDue: makeFromInt 5548 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49157, ordinaryIncomeNonSS: makeFromInt 126233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37183, stateTaxDue: makeFromInt 6213 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135978, qualifiedIncome: makeFromInt 19749, itemizedDeductions: makeFromInt 10430, federalTaxDue: makeFromInt 25483, stateTaxDue: makeFromInt 7514 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122152, qualifiedIncome: makeFromInt 78519, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31514, stateTaxDue: makeFromInt 9806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25344, ordinaryIncomeNonSS: makeFromInt 96812, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24437, federalTaxDue: makeFromInt 12714, stateTaxDue: makeFromInt 4387 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17540, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98676, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 694, stateTaxDue: makeFromInt 4459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97152, itemizedDeductions: makeFromInt 8469, federalTaxDue: makeFromInt 3278, stateTaxDue: makeFromInt 4302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31091, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23284, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59691, qualifiedIncome: makeFromInt 21354, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3009, stateTaxDue: makeFromInt 3377 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21890, ordinaryIncomeNonSS: makeFromInt 132693, qualifiedIncome: makeFromInt 89780, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41434, stateTaxDue: makeFromInt 10918 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26626, ordinaryIncomeNonSS: makeFromInt 14363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 43 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46227, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1287, stateTaxDue: makeFromInt 1929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32633, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6920, ordinaryIncomeNonSS: makeFromInt 20713, qualifiedIncome: makeFromInt 44480, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4632, stateTaxDue: makeFromInt 3100 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126768, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14410, federalTaxDue: makeFromInt 29695, stateTaxDue: makeFromInt 6083 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117830, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16684, stateTaxDue: makeFromInt 5785 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27902, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 1076 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7904, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10728, stateTaxDue: makeFromInt 4820 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44967, qualifiedIncome: makeFromInt 71303, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3135, stateTaxDue: makeFromInt 5379 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55678, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3606, stateTaxDue: makeFromInt 2409 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17247, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32952, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 56, stateTaxDue: makeFromInt 1028 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9008, ordinaryIncomeNonSS: makeFromInt 103535, qualifiedIncome: makeFromInt 80088, itemizedDeductions: makeFromInt 4863, federalTaxDue: makeFromInt 19161, stateTaxDue: makeFromInt 8706 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70001, qualifiedIncome: makeFromInt 72493, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15971, stateTaxDue: makeFromInt 6550 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17003, ordinaryIncomeNonSS: makeFromInt 94228, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9002, stateTaxDue: makeFromInt 4036 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16170, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14935, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10518, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20350, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28535, ordinaryIncomeNonSS: makeFromInt 134180, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34501, stateTaxDue: makeFromInt 6619 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2120, ordinaryIncomeNonSS: makeFromInt 83806, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18094, federalTaxDue: makeFromInt 24906, stateTaxDue: makeFromInt 8935 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48622, qualifiedIncome: makeFromInt 67817, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11901, stateTaxDue: makeFromInt 5347 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41466, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 527, stateTaxDue: makeFromInt 1686 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10777, ordinaryIncomeNonSS: makeFromInt 5972, qualifiedIncome: makeFromInt 73758, itemizedDeductions: makeFromInt 10765, federalTaxDue: makeFromInt 5891, stateTaxDue: makeFromInt 3804 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32504, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29891, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110983, qualifiedIncome: makeFromInt 41357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18732, stateTaxDue: makeFromInt 7242 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116744, qualifiedIncome: makeFromInt 47824, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35993, stateTaxDue: makeFromInt 7773 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75092, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7862, stateTaxDue: makeFromInt 3401 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75022, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32083, stateTaxDue: makeFromInt 10823 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28062, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7887, federalTaxDue: makeFromInt 421, stateTaxDue: makeFromInt 1028 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115918, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27904, federalTaxDue: makeFromInt 12533, stateTaxDue: makeFromInt 5463 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35891, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30692, ordinaryIncomeNonSS: makeFromInt 62643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7633, stateTaxDue: makeFromInt 2757 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22352, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 648, ordinaryIncomeNonSS: makeFromInt 4722, qualifiedIncome: makeFromInt 14199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 691 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39840, ordinaryIncomeNonSS: makeFromInt 25720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1837, federalTaxDue: makeFromInt 2596, stateTaxDue: makeFromInt 1031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29362, itemizedDeductions: makeFromInt 6079, federalTaxDue: makeFromInt 577, stateTaxDue: makeFromInt 1273 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3929, ordinaryIncomeNonSS: makeFromInt 95146, qualifiedIncome: makeFromInt 84316, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20116, stateTaxDue: makeFromInt 8500 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12199, ordinaryIncomeNonSS: makeFromInt 25963, qualifiedIncome: makeFromInt 40314, itemizedDeductions: makeFromInt 4506, federalTaxDue: makeFromInt 558, stateTaxDue: makeFromInt 2639 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55281, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46687, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142026, qualifiedIncome: makeFromInt 50842, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27555, stateTaxDue: makeFromInt 9388 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34345, qualifiedIncome: makeFromInt 98762, itemizedDeductions: makeFromInt 10304, federalTaxDue: makeFromInt 4876, stateTaxDue: makeFromInt 6180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64609, qualifiedIncome: makeFromInt 96816, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28210, stateTaxDue: makeFromInt 7682 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9015, stateTaxDue: makeFromInt 4557 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8997, ordinaryIncomeNonSS: makeFromInt 116809, qualifiedIncome: makeFromInt 82, itemizedDeductions: makeFromInt 12941, federalTaxDue: makeFromInt 19514, stateTaxDue: makeFromInt 5390 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15342, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25253, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29349, federalTaxDue: makeFromInt 7992, stateTaxDue: makeFromInt 3953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1212, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93666, itemizedDeductions: makeFromInt 8444, federalTaxDue: makeFromInt 2755, stateTaxDue: makeFromInt 4328 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52230, itemizedDeductions: makeFromInt 2942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2037 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42475, ordinaryIncomeNonSS: makeFromInt 67490, qualifiedIncome: makeFromInt 9712, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12700, stateTaxDue: makeFromInt 3605 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54070, qualifiedIncome: makeFromInt 51140, itemizedDeductions: makeFromInt 20101, federalTaxDue: makeFromInt 9557, stateTaxDue: makeFromInt 4806 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122076, qualifiedIncome: makeFromInt 78465, itemizedDeductions: makeFromInt 14864, federalTaxDue: makeFromInt 29646, stateTaxDue: makeFromInt 9881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 215 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48301, ordinaryIncomeNonSS: makeFromInt 32631, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8695, federalTaxDue: makeFromInt 24382, stateTaxDue: makeFromInt 6417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132492, qualifiedIncome: makeFromInt 3809, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20604, stateTaxDue: makeFromInt 6401 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23632, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15555, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20778, ordinaryIncomeNonSS: makeFromInt 147352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31806, stateTaxDue: makeFromInt 7087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57923, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44707, stateTaxDue: makeFromInt 10053 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10957, qualifiedIncome: makeFromInt 72520, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18821, ordinaryIncomeNonSS: makeFromInt 42701, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7859, stateTaxDue: makeFromInt 1953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6330, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4768, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12886, ordinaryIncomeNonSS: makeFromInt 123608, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11443, federalTaxDue: makeFromInt 30441, stateTaxDue: makeFromInt 10505 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5142, stateTaxDue: makeFromInt 2956 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33184, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65291, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2590 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27694, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56382, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 897, stateTaxDue: makeFromInt 2325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32861, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15642, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85039, qualifiedIncome: makeFromInt 27508, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15526, stateTaxDue: makeFromInt 5152 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28188, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33379, ordinaryIncomeNonSS: makeFromInt 59241, qualifiedIncome: makeFromInt 50757, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18300, stateTaxDue: makeFromInt 5245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133098, qualifiedIncome: makeFromInt 87062, itemizedDeductions: makeFromInt 4665, federalTaxDue: makeFromInt 35604, stateTaxDue: makeFromInt 10753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26742, ordinaryIncomeNonSS: makeFromInt 119623, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7589, federalTaxDue: makeFromInt 23236, stateTaxDue: makeFromInt 5726 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36828, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58572, itemizedDeductions: makeFromInt 2601, federalTaxDue: makeFromInt 8119, stateTaxDue: makeFromInt 2674 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24070, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63475, itemizedDeductions: makeFromInt 24568, federalTaxDue: makeFromInt 36524, stateTaxDue: makeFromInt 10438 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36044, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3967, federalTaxDue: makeFromInt 2840, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11461, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47853, ordinaryIncomeNonSS: makeFromInt 136645, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12881, federalTaxDue: makeFromInt 33355, stateTaxDue: makeFromInt 6541 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28469, ordinaryIncomeNonSS: makeFromInt 23319, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22180, federalTaxDue: makeFromInt 10579, stateTaxDue: makeFromInt 5861 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23277, qualifiedIncome: makeFromInt 55966, itemizedDeductions: makeFromInt 4895, federalTaxDue: makeFromInt 10910, stateTaxDue: makeFromInt 3593 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51339, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28107, federalTaxDue: makeFromInt 2059, stateTaxDue: makeFromInt 2092 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25701, itemizedDeductions: makeFromInt 21339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 610 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6401, federalTaxDue: makeFromInt 20256, stateTaxDue: makeFromInt 5276 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1037, ordinaryIncomeNonSS: makeFromInt 18172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10251, stateTaxDue: makeFromInt 5454 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15504, federalTaxDue: makeFromInt 11213, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136005, qualifiedIncome: makeFromInt 11454, itemizedDeductions: makeFromInt 29339, federalTaxDue: makeFromInt 21608, stateTaxDue: makeFromInt 7092 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26734, ordinaryIncomeNonSS: makeFromInt 3225, qualifiedIncome: makeFromInt 82539, itemizedDeductions: makeFromInt 85, federalTaxDue: makeFromInt 1086, stateTaxDue: makeFromInt 3721 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37938, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36105, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23785, stateTaxDue: makeFromInt 6513 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88345, itemizedDeductions: makeFromInt 22025, federalTaxDue: makeFromInt 1439, stateTaxDue: makeFromInt 4017 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14993, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12568, itemizedDeductions: makeFromInt 28121, federalTaxDue: makeFromInt 27237, stateTaxDue: makeFromInt 7873 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136149, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15541, federalTaxDue: makeFromInt 48884, stateTaxDue: makeFromInt 11819 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78375, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6109, stateTaxDue: makeFromInt 3569 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39320, ordinaryIncomeNonSS: makeFromInt 28997, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18434, federalTaxDue: makeFromInt 15633, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7474, stateTaxDue: makeFromInt 2892 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3129, qualifiedIncome: makeFromInt 50541, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 527, stateTaxDue: makeFromInt 2429 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7073, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84931, itemizedDeductions: makeFromInt 23287, federalTaxDue: makeFromInt 32336, stateTaxDue: makeFromInt 11329 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92021, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23938, federalTaxDue: makeFromInt 25031, stateTaxDue: makeFromInt 9346 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17316, qualifiedIncome: makeFromInt 19165, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1349 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14913, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31014, ordinaryIncomeNonSS: makeFromInt 75395, qualifiedIncome: makeFromInt 62825, itemizedDeductions: makeFromInt 7008, federalTaxDue: makeFromInt 18110, stateTaxDue: makeFromInt 6334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61180, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12830, stateTaxDue: makeFromInt 2569 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39303, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1010, stateTaxDue: makeFromInt 1490 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10159, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 699, stateTaxDue: makeFromInt 2491 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23121, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49750, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35149, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27186, qualifiedIncome: makeFromInt 67751, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9102, stateTaxDue: makeFromInt 4617 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1377, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15684, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16039, ordinaryIncomeNonSS: makeFromInt 19324, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 591 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3151, ordinaryIncomeNonSS: makeFromInt 5082, qualifiedIncome: makeFromInt 95291, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4844, stateTaxDue: makeFromInt 4644 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7828, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26453, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11621, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 6 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11632, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40865, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87083, itemizedDeductions: makeFromInt 20059, federalTaxDue: makeFromInt 45627, stateTaxDue: makeFromInt 11599 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18806, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26603, ordinaryIncomeNonSS: makeFromInt 144243, qualifiedIncome: makeFromInt 15743, itemizedDeductions: makeFromInt 12311, federalTaxDue: makeFromInt 31477, stateTaxDue: makeFromInt 7744 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28487, ordinaryIncomeNonSS: makeFromInt 97796, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27025, federalTaxDue: makeFromInt 17031, stateTaxDue: makeFromInt 4641 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14319, itemizedDeductions: makeFromInt 28630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 241 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25242, ordinaryIncomeNonSS: makeFromInt 16731, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43266, qualifiedIncome: makeFromInt 67699, itemizedDeductions: makeFromInt 13330, federalTaxDue: makeFromInt 18448, stateTaxDue: makeFromInt 5210 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118975, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20172, federalTaxDue: makeFromInt 31320, stateTaxDue: makeFromInt 10574 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48356, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5519, stateTaxDue: makeFromInt 1743 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31288, qualifiedIncome: makeFromInt 96857, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7797, stateTaxDue: makeFromInt 5952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47952, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26744, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109231, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9582, federalTaxDue: makeFromInt 9869, stateTaxDue: makeFromInt 4987 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12101, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1353, ordinaryIncomeNonSS: makeFromInt 45810, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8006, federalTaxDue: makeFromInt 4945, stateTaxDue: makeFromInt 6816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87863, qualifiedIncome: makeFromInt 56593, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 6714 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45451, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47217, itemizedDeductions: makeFromInt 9383, federalTaxDue: makeFromInt 30919, stateTaxDue: makeFromInt 9313 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 896, qualifiedIncome: makeFromInt 84671, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3803 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120055, qualifiedIncome: makeFromInt 28663, itemizedDeductions: makeFromInt 20238, federalTaxDue: makeFromInt 19471, stateTaxDue: makeFromInt 7061 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75806, qualifiedIncome: makeFromInt 84771, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20805, stateTaxDue: makeFromInt 7574 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14169, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41095, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2930, stateTaxDue: makeFromInt 1667 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12001, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2343, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71774, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3114 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22316, ordinaryIncomeNonSS: makeFromInt 16922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 271 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30455, ordinaryIncomeNonSS: makeFromInt 12143, qualifiedIncome: makeFromInt 3327, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 99 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23648, qualifiedIncome: makeFromInt 99854, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 871, stateTaxDue: makeFromInt 5500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39910, qualifiedIncome: makeFromInt 35886, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 706, stateTaxDue: makeFromInt 3213 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6050, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16187, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28594, stateTaxDue: makeFromInt 8027 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21833, ordinaryIncomeNonSS: makeFromInt 61334, qualifiedIncome: makeFromInt 21926, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5433, stateTaxDue: makeFromInt 3488 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1212, ordinaryIncomeNonSS: makeFromInt 75466, qualifiedIncome: makeFromInt 56893, itemizedDeductions: makeFromInt 3961, federalTaxDue: makeFromInt 16792, stateTaxDue: makeFromInt 6322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16495, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36364, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21461, itemizedDeductions: makeFromInt 589, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 748 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18958, itemizedDeductions: makeFromInt 17732, federalTaxDue: makeFromInt 28535, stateTaxDue: makeFromInt 7773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37138, ordinaryIncomeNonSS: makeFromInt 104915, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17451, stateTaxDue: makeFromInt 4698 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96657, qualifiedIncome: makeFromInt 15297, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11671, stateTaxDue: makeFromInt 5223 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32129, ordinaryIncomeNonSS: makeFromInt 11853, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3937, federalTaxDue: makeFromInt 13820, stateTaxDue: makeFromInt 5338 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26515, ordinaryIncomeNonSS: makeFromInt 101636, qualifiedIncome: makeFromInt 95753, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28440, stateTaxDue: makeFromInt 9494 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92881, qualifiedIncome: makeFromInt 3516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12373, stateTaxDue: makeFromInt 4365 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69718, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3404, stateTaxDue: makeFromInt 3031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32526, itemizedDeductions: makeFromInt 15981, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1434 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117158, qualifiedIncome: makeFromInt 94482, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28059, stateTaxDue: makeFromInt 10007 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51070, itemizedDeductions: makeFromInt 16908, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1879 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1652, federalTaxDue: makeFromInt 21883, stateTaxDue: makeFromInt 5428 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25552, ordinaryIncomeNonSS: makeFromInt 134078, qualifiedIncome: makeFromInt 41630, itemizedDeductions: makeFromInt 20530, federalTaxDue: makeFromInt 27119, stateTaxDue: makeFromInt 8512 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10179, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37109, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1400 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26153, ordinaryIncomeNonSS: makeFromInt 103488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12321, federalTaxDue: makeFromInt 20480, stateTaxDue: makeFromInt 4919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29795, federalTaxDue: makeFromInt 20581, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18905, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19345, stateTaxDue: makeFromInt 5636 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1169, ordinaryIncomeNonSS: makeFromInt 109983, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17778, federalTaxDue: makeFromInt 12527, stateTaxDue: makeFromInt 5124 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31959, ordinaryIncomeNonSS: makeFromInt 6549, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12952, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22889, ordinaryIncomeNonSS: makeFromInt 93000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19307, federalTaxDue: makeFromInt 18014, stateTaxDue: makeFromInt 4519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32361, ordinaryIncomeNonSS: makeFromInt 12524, qualifiedIncome: makeFromInt 76870, itemizedDeductions: makeFromInt 15467, federalTaxDue: makeFromInt 6961, stateTaxDue: makeFromInt 4131 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18497, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15792, itemizedDeductions: makeFromInt 6293, federalTaxDue: makeFromInt 22169, stateTaxDue: makeFromInt 7615 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4522, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39170, ordinaryIncomeNonSS: makeFromInt 74424, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25915, federalTaxDue: makeFromInt 26160, stateTaxDue: makeFromInt 8467 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49300, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13769, itemizedDeductions: makeFromInt 338, federalTaxDue: makeFromInt 33748, stateTaxDue: makeFromInt 7613 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91277, itemizedDeductions: makeFromInt 16381, federalTaxDue: makeFromInt 6132, stateTaxDue: makeFromInt 4104 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44786, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66761, itemizedDeductions: makeFromInt 16774, federalTaxDue: makeFromInt 45343, stateTaxDue: makeFromInt 10626 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14285, stateTaxDue: makeFromInt 4321 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7036, ordinaryIncomeNonSS: makeFromInt 93577, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12304, stateTaxDue: makeFromInt 4180 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149316, qualifiedIncome: makeFromInt 48422, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46057, stateTaxDue: makeFromInt 9764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13380, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22080, ordinaryIncomeNonSS: makeFromInt 45418, qualifiedIncome: makeFromInt 9229, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4871, stateTaxDue: makeFromInt 2157 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31844, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93651, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6190, stateTaxDue: makeFromInt 4308 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9267, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16655, itemizedDeductions: makeFromInt 84, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111136, qualifiedIncome: makeFromInt 19503, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8969, stateTaxDue: makeFromInt 6010 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12414, ordinaryIncomeNonSS: makeFromInt 139653, qualifiedIncome: makeFromInt 48205, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32350, stateTaxDue: makeFromInt 8938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36978, qualifiedIncome: makeFromInt 51419, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 968, stateTaxDue: makeFromInt 3945 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23200, federalTaxDue: makeFromInt 22230, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23058, ordinaryIncomeNonSS: makeFromInt 100889, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19625, stateTaxDue: makeFromInt 4590 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48457, ordinaryIncomeNonSS: makeFromInt 100179, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13541, federalTaxDue: makeFromInt 38560, stateTaxDue: makeFromInt 9754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7611, ordinaryIncomeNonSS: makeFromInt 123165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19319, stateTaxDue: makeFromInt 5731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20674, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83718, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23640, federalTaxDue: makeFromInt 5892, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39446, ordinaryIncomeNonSS: makeFromInt 137054, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35869, stateTaxDue: makeFromInt 11178 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46595, ordinaryIncomeNonSS: makeFromInt 64872, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15782, stateTaxDue: makeFromInt 2789 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43413, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29884, itemizedDeductions: makeFromInt 11964, federalTaxDue: makeFromInt 145, stateTaxDue: makeFromInt 973 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7285, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12245, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124860, qualifiedIncome: makeFromInt 87098, itemizedDeductions: makeFromInt 13229, federalTaxDue: makeFromInt 34257, stateTaxDue: makeFromInt 10463 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120243, qualifiedIncome: makeFromInt 54579, itemizedDeductions: makeFromInt 27986, federalTaxDue: makeFromInt 19717, stateTaxDue: makeFromInt 8266 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98492, qualifiedIncome: makeFromInt 98602, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34986, stateTaxDue: makeFromInt 9280 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21040, qualifiedIncome: makeFromInt 32446, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7772, stateTaxDue: makeFromInt 2479 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24352, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1645, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29149, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23429, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3181, ordinaryIncomeNonSS: makeFromInt 18577, qualifiedIncome: makeFromInt 6135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 812 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19753, ordinaryIncomeNonSS: makeFromInt 90993, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2028, federalTaxDue: makeFromInt 21227, stateTaxDue: makeFromInt 8875 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46337, ordinaryIncomeNonSS: makeFromInt 140203, qualifiedIncome: makeFromInt 35834, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28226, stateTaxDue: makeFromInt 8127 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1678, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 921, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65764, itemizedDeductions: makeFromInt 2210, federalTaxDue: makeFromInt 37687, stateTaxDue: makeFromInt 10576 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29197, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7676, federalTaxDue: makeFromInt 29722, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32495, ordinaryIncomeNonSS: makeFromInt 49422, qualifiedIncome: makeFromInt 67776, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16686, stateTaxDue: makeFromInt 5753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18573, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6905, ordinaryIncomeNonSS: makeFromInt 20295, qualifiedIncome: makeFromInt 66685, itemizedDeductions: makeFromInt 23318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3987 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142516, qualifiedIncome: makeFromInt 13035, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23134, stateTaxDue: makeFromInt 7633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44039, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62592, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2335, stateTaxDue: makeFromInt 2875 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44570, ordinaryIncomeNonSS: makeFromInt 116323, qualifiedIncome: makeFromInt 51353, itemizedDeductions: makeFromInt 6536, federalTaxDue: makeFromInt 33165, stateTaxDue: makeFromInt 8001 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96478, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14794, stateTaxDue: makeFromInt 4369 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78228, qualifiedIncome: makeFromInt 22126, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10930, stateTaxDue: makeFromInt 4522 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58855, itemizedDeductions: makeFromInt 8230, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2468 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46450, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4536, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92103, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37464, stateTaxDue: makeFromInt 11730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19997, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51554, qualifiedIncome: makeFromInt 63850, itemizedDeductions: makeFromInt 9002, federalTaxDue: makeFromInt 14974, stateTaxDue: makeFromInt 5661 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119551, qualifiedIncome: makeFromInt 50829, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19604, stateTaxDue: makeFromInt 7844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48228, ordinaryIncomeNonSS: makeFromInt 43479, qualifiedIncome: makeFromInt 20276, itemizedDeductions: makeFromInt 18414, federalTaxDue: makeFromInt 11507, stateTaxDue: makeFromInt 2613 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44039, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13407, ordinaryIncomeNonSS: makeFromInt 78456, qualifiedIncome: makeFromInt 91853, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21657, stateTaxDue: makeFromInt 7940 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31205, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15247, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30278, stateTaxDue: makeFromInt 7887 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48494, ordinaryIncomeNonSS: makeFromInt 148020, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32646, stateTaxDue: makeFromInt 7325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16962, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49085, ordinaryIncomeNonSS: makeFromInt 138754, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 112, federalTaxDue: makeFromInt 55603, stateTaxDue: makeFromInt 11952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84434, qualifiedIncome: makeFromInt 40713, itemizedDeductions: makeFromInt 25887, federalTaxDue: makeFromInt 22077, stateTaxDue: makeFromInt 5954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86661, qualifiedIncome: makeFromInt 66505, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14788, stateTaxDue: makeFromInt 7383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26199, qualifiedIncome: makeFromInt 10199, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1305 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18366, ordinaryIncomeNonSS: makeFromInt 3831, qualifiedIncome: makeFromInt 22743, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 654 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24512, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91788, qualifiedIncome: makeFromInt 34331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26449, stateTaxDue: makeFromInt 6051 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22361, qualifiedIncome: makeFromInt 52830, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9216, stateTaxDue: makeFromInt 3385 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14637, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7364, qualifiedIncome: makeFromInt 72028, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3295 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8186, ordinaryIncomeNonSS: makeFromInt 84242, qualifiedIncome: makeFromInt 17438, itemizedDeductions: makeFromInt 2332, federalTaxDue: makeFromInt 12633, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4507, stateTaxDue: makeFromInt 2766 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15104, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28713, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17337, ordinaryIncomeNonSS: makeFromInt 109722, qualifiedIncome: makeFromInt 83216, itemizedDeductions: makeFromInt 9589, federalTaxDue: makeFromInt 32660, stateTaxDue: makeFromInt 9392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77581, itemizedDeductions: makeFromInt 22888, federalTaxDue: makeFromInt 29895, stateTaxDue: makeFromInt 10954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44039, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13745, ordinaryIncomeNonSS: makeFromInt 66152, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 109, federalTaxDue: makeFromInt 9823, stateTaxDue: makeFromInt 3053 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89823, itemizedDeductions: makeFromInt 15024, federalTaxDue: makeFromInt 29815, stateTaxDue: makeFromInt 11516 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38090, ordinaryIncomeNonSS: makeFromInt 90076, qualifiedIncome: makeFromInt 16722, itemizedDeductions: makeFromInt 22690, federalTaxDue: makeFromInt 17560, stateTaxDue: makeFromInt 4965 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4058, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18797, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27264, ordinaryIncomeNonSS: makeFromInt 122475, qualifiedIncome: makeFromInt 1734, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24052, stateTaxDue: makeFromInt 5886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87684, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17894, federalTaxDue: makeFromInt 23344, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39562, ordinaryIncomeNonSS: makeFromInt 61733, qualifiedIncome: makeFromInt 59285, itemizedDeductions: makeFromInt 15262, federalTaxDue: makeFromInt 17984, stateTaxDue: makeFromInt 5476 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27487, ordinaryIncomeNonSS: makeFromInt 70935, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17587, stateTaxDue: makeFromInt 8072 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84318, itemizedDeductions: makeFromInt 2176, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3741 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24194, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32201, qualifiedIncome: makeFromInt 88567, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18069, stateTaxDue: makeFromInt 5583 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43198, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32246, itemizedDeductions: makeFromInt 8928, federalTaxDue: makeFromInt 29256, stateTaxDue: makeFromInt 8637 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7862, itemizedDeductions: makeFromInt 6009, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 54 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28061, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 785, itemizedDeductions: makeFromInt 21288, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12658, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27562, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31614, stateTaxDue: makeFromInt 8607 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19400, ordinaryIncomeNonSS: makeFromInt 9944, qualifiedIncome: makeFromInt 22186, itemizedDeductions: makeFromInt 9116, federalTaxDue: makeFromInt 775, stateTaxDue: makeFromInt 1292 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22500, ordinaryIncomeNonSS: makeFromInt 103900, qualifiedIncome: makeFromInt 90746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35271, stateTaxDue: makeFromInt 9580 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46694, itemizedDeductions: makeFromInt 3399, federalTaxDue: makeFromInt 101, stateTaxDue: makeFromInt 1914 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32520, ordinaryIncomeNonSS: makeFromInt 78173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26360, federalTaxDue: makeFromInt 7948, stateTaxDue: makeFromInt 3334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77095, qualifiedIncome: makeFromInt 40191, itemizedDeductions: makeFromInt 2545, federalTaxDue: makeFromInt 19257, stateTaxDue: makeFromInt 5329 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21089, federalTaxDue: makeFromInt 5560, stateTaxDue: makeFromInt 1600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30501, stateTaxDue: makeFromInt 6791 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34956, ordinaryIncomeNonSS: makeFromInt 115849, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18226, federalTaxDue: makeFromInt 23021, stateTaxDue: makeFromInt 5480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21369, qualifiedIncome: makeFromInt 23322, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1626 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11147, ordinaryIncomeNonSS: makeFromInt 130234, qualifiedIncome: makeFromInt 9983, itemizedDeductions: makeFromInt 18417, federalTaxDue: makeFromInt 15574, stateTaxDue: makeFromInt 6536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39622, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1451, stateTaxDue: makeFromInt 1796 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13612, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123481, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44467, stateTaxDue: makeFromInt 10719 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64100, itemizedDeductions: makeFromInt 7189, federalTaxDue: makeFromInt 9336, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120238, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11361, federalTaxDue: makeFromInt 49233, stateTaxDue: makeFromInt 11008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72096, qualifiedIncome: makeFromInt 83080, itemizedDeductions: makeFromInt 19484, federalTaxDue: makeFromInt 14808, stateTaxDue: makeFromInt 7465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87635, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11741, federalTaxDue: makeFromInt 28732, stateTaxDue: makeFromInt 9345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48678, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3877, stateTaxDue: makeFromInt 2034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93482, qualifiedIncome: makeFromInt 96235, itemizedDeductions: makeFromInt 27797, federalTaxDue: makeFromInt 20703, stateTaxDue: makeFromInt 9227 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16034, ordinaryIncomeNonSS: makeFromInt 23843, qualifiedIncome: makeFromInt 62435, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 672, stateTaxDue: makeFromInt 3839 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79513, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5388, stateTaxDue: makeFromInt 3301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48290, ordinaryIncomeNonSS: makeFromInt 71907, qualifiedIncome: makeFromInt 19050, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12604, stateTaxDue: makeFromInt 3873 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43781, ordinaryIncomeNonSS: makeFromInt 23087, qualifiedIncome: makeFromInt 12670, itemizedDeductions: makeFromInt 19422, federalTaxDue: makeFromInt 1149, stateTaxDue: makeFromInt 1113 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13712, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80897, qualifiedIncome: makeFromInt 36143, itemizedDeductions: makeFromInt 15878, federalTaxDue: makeFromInt 15865, stateTaxDue: makeFromInt 5377 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6181, ordinaryIncomeNonSS: makeFromInt 11085, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9243, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4879 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19288, ordinaryIncomeNonSS: makeFromInt 42081, qualifiedIncome: makeFromInt 97923, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11035, stateTaxDue: makeFromInt 6325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7262, ordinaryIncomeNonSS: makeFromInt 145823, qualifiedIncome: makeFromInt 19800, itemizedDeductions: makeFromInt 14421, federalTaxDue: makeFromInt 30673, stateTaxDue: makeFromInt 8100 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2379, ordinaryIncomeNonSS: makeFromInt 11234, qualifiedIncome: makeFromInt 59232, itemizedDeductions: makeFromInt 23118, federalTaxDue: makeFromInt 3095, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112103, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12411, stateTaxDue: makeFromInt 5230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98015, itemizedDeductions: makeFromInt 16268, federalTaxDue: makeFromInt 41420, stateTaxDue: makeFromInt 12302 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11934, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64456, itemizedDeductions: makeFromInt 8361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2748 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16802, itemizedDeductions: makeFromInt 4051, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38692, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64632, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2460, stateTaxDue: makeFromInt 2847 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81335, itemizedDeductions: makeFromInt 15221, federalTaxDue: makeFromInt 10871, stateTaxDue: makeFromInt 3612 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70635, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46614, stateTaxDue: makeFromInt 10702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50113, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2209 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11963, ordinaryIncomeNonSS: makeFromInt 63830, qualifiedIncome: makeFromInt 94602, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19487, stateTaxDue: makeFromInt 7467 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13656, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 43 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136276, qualifiedIncome: makeFromInt 22880, itemizedDeductions: makeFromInt 15176, federalTaxDue: makeFromInt 26331, stateTaxDue: makeFromInt 7503 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2799, ordinaryIncomeNonSS: makeFromInt 44530, qualifiedIncome: makeFromInt 14973, itemizedDeductions: makeFromInt 9397, federalTaxDue: makeFromInt 2885, stateTaxDue: makeFromInt 2600 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14885, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20213, stateTaxDue: makeFromInt 7569 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18829, ordinaryIncomeNonSS: makeFromInt 56299, qualifiedIncome: makeFromInt 27568, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4522, stateTaxDue: makeFromInt 3518 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7071, ordinaryIncomeNonSS: makeFromInt 110480, qualifiedIncome: makeFromInt 88807, itemizedDeductions: makeFromInt 21172, federalTaxDue: makeFromInt 23619, stateTaxDue: makeFromInt 9511 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47857, ordinaryIncomeNonSS: makeFromInt 16086, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 429 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12624, federalTaxDue: makeFromInt 12320, stateTaxDue: makeFromInt 4224 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19320, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27780, federalTaxDue: makeFromInt 19954, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29029, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 976 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18003, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29086, federalTaxDue: makeFromInt 19708, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35586, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 1162 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38995, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41120, stateTaxDue: makeFromInt 9195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14418, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91692, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8106, stateTaxDue: makeFromInt 4452 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43395, ordinaryIncomeNonSS: makeFromInt 139944, qualifiedIncome: makeFromInt 76898, itemizedDeductions: makeFromInt 17206, federalTaxDue: makeFromInt 37921, stateTaxDue: makeFromInt 10406 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 947, ordinaryIncomeNonSS: makeFromInt 124116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11498, stateTaxDue: makeFromInt 5731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47380, itemizedDeductions: makeFromInt 3608, federalTaxDue: makeFromInt 6017, stateTaxDue: makeFromInt 2070 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147162, qualifiedIncome: makeFromInt 40412, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29762, stateTaxDue: makeFromInt 9015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96663, qualifiedIncome: makeFromInt 53196, itemizedDeductions: makeFromInt 9332, federalTaxDue: makeFromInt 31686, stateTaxDue: makeFromInt 7238 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77210, itemizedDeductions: makeFromInt 11540, federalTaxDue: makeFromInt 4528, stateTaxDue: makeFromInt 3406 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63425, qualifiedIncome: makeFromInt 8523, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1318, stateTaxDue: makeFromInt 3119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80698, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13033, stateTaxDue: makeFromInt 3891 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7484, ordinaryIncomeNonSS: makeFromInt 143195, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10690, federalTaxDue: makeFromInt 32093, stateTaxDue: makeFromInt 11685 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25402, ordinaryIncomeNonSS: makeFromInt 4258, qualifiedIncome: makeFromInt 34881, itemizedDeductions: makeFromInt 4862, federalTaxDue: makeFromInt 1700, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5608, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27179, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35515, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90105, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41593, stateTaxDue: makeFromInt 11797 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87787, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7831, stateTaxDue: makeFromInt 3934 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110909, qualifiedIncome: makeFromInt 92179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29023, stateTaxDue: makeFromInt 9807 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116405, qualifiedIncome: makeFromInt 15009, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19273, stateTaxDue: makeFromInt 6316 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91855, itemizedDeductions: makeFromInt 9033, federalTaxDue: makeFromInt 6725, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4709, ordinaryIncomeNonSS: makeFromInt 145404, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23564, federalTaxDue: makeFromInt 21483, stateTaxDue: makeFromInt 6695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5450, ordinaryIncomeNonSS: makeFromInt 142896, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23792, stateTaxDue: makeFromInt 6737 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15323, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12687, itemizedDeductions: makeFromInt 8581, federalTaxDue: makeFromInt 26783, stateTaxDue: makeFromInt 7848 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47104, itemizedDeductions: makeFromInt 18660, federalTaxDue: makeFromInt 31630, stateTaxDue: makeFromInt 9400 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82130, itemizedDeductions: makeFromInt 4731, federalTaxDue: makeFromInt 3800, stateTaxDue: makeFromInt 3632 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10181, ordinaryIncomeNonSS: makeFromInt 138438, qualifiedIncome: makeFromInt 9820, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20924, stateTaxDue: makeFromInt 7038 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93713, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11598, stateTaxDue: makeFromInt 4111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7645, ordinaryIncomeNonSS: makeFromInt 16438, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8950, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3234, ordinaryIncomeNonSS: makeFromInt 135723, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20515, federalTaxDue: makeFromInt 24931, stateTaxDue: makeFromInt 6697 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41630, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7892, stateTaxDue: makeFromInt 3424 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8771, ordinaryIncomeNonSS: makeFromInt 86424, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21679, stateTaxDue: makeFromInt 9079 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28715, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19188, federalTaxDue: makeFromInt 30007, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44590, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123098, qualifiedIncome: makeFromInt 42264, itemizedDeductions: makeFromInt 2144, federalTaxDue: makeFromInt 21533, stateTaxDue: makeFromInt 7893 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65863, itemizedDeductions: makeFromInt 28960, federalTaxDue: makeFromInt 429, stateTaxDue: makeFromInt 2718 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14196, ordinaryIncomeNonSS: makeFromInt 132490, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13842, federalTaxDue: makeFromInt 38764, stateTaxDue: makeFromInt 11170 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30753, qualifiedIncome: makeFromInt 43635, itemizedDeductions: makeFromInt 2904, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3141 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114916, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17863, stateTaxDue: makeFromInt 5432 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10583, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29414, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 274 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1823, federalTaxDue: makeFromInt 15443, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109724, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2995, federalTaxDue: makeFromInt 9223, stateTaxDue: makeFromInt 4811 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61523, itemizedDeductions: makeFromInt 28130, federalTaxDue: makeFromInt 3581, stateTaxDue: makeFromInt 2709 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104918, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14494, stateTaxDue: makeFromInt 4991 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140130, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13836, federalTaxDue: makeFromInt 23263, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48571, ordinaryIncomeNonSS: makeFromInt 56585, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29297, federalTaxDue: makeFromInt 5729, stateTaxDue: makeFromInt 2233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23858, ordinaryIncomeNonSS: makeFromInt 108746, qualifiedIncome: makeFromInt 49861, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28753, stateTaxDue: makeFromInt 7675 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17884, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13750, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32597, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34296, stateTaxDue: makeFromInt 8875 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42970, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1641 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12759, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58255, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3091, stateTaxDue: makeFromInt 2543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43009, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13413, federalTaxDue: makeFromInt 40328, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2844, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15392, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 561 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40038, ordinaryIncomeNonSS: makeFromInt 113304, qualifiedIncome: makeFromInt 15953, itemizedDeductions: makeFromInt 22593, federalTaxDue: makeFromInt 23379, stateTaxDue: makeFromInt 6088 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22600, ordinaryIncomeNonSS: makeFromInt 55220, qualifiedIncome: makeFromInt 51997, itemizedDeductions: makeFromInt 7267, federalTaxDue: makeFromInt 9107, stateTaxDue: makeFromInt 4970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23909, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6809, federalTaxDue: makeFromInt 37687, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110074, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26733, stateTaxDue: makeFromInt 9929 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86519, qualifiedIncome: makeFromInt 1373, itemizedDeductions: makeFromInt 21958, federalTaxDue: makeFromInt 11931, stateTaxDue: makeFromInt 3720 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139185, qualifiedIncome: makeFromInt 72727, itemizedDeductions: makeFromInt 13318, federalTaxDue: makeFromInt 47311, stateTaxDue: makeFromInt 10461 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 25 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33346, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25604, federalTaxDue: makeFromInt 3732, stateTaxDue: makeFromInt 1212 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98224, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25327, stateTaxDue: makeFromInt 9536 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21196, ordinaryIncomeNonSS: makeFromInt 149495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4017, federalTaxDue: makeFromInt 26561, stateTaxDue: makeFromInt 6900 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38690, ordinaryIncomeNonSS: makeFromInt 81294, qualifiedIncome: makeFromInt 32800, itemizedDeductions: makeFromInt 8386, federalTaxDue: makeFromInt 16705, stateTaxDue: makeFromInt 5166 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97385, qualifiedIncome: makeFromInt 3430, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8425, stateTaxDue: makeFromInt 4489 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43807, ordinaryIncomeNonSS: makeFromInt 76064, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16338, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62433, itemizedDeductions: makeFromInt 24914, federalTaxDue: makeFromInt 27116, stateTaxDue: makeFromInt 10181 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35400, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2351, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29417, stateTaxDue: makeFromInt 7163 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21271, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9410, ordinaryIncomeNonSS: makeFromInt 55604, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17972, stateTaxDue: makeFromInt 7636 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35853, ordinaryIncomeNonSS: makeFromInt 26590, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19532, federalTaxDue: makeFromInt 10748, stateTaxDue: makeFromInt 5655 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19627, ordinaryIncomeNonSS: makeFromInt 70118, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7223, stateTaxDue: makeFromInt 2931 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21723, ordinaryIncomeNonSS: makeFromInt 115366, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24360, stateTaxDue: makeFromInt 5537 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93161, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11907, stateTaxDue: makeFromInt 4403 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14089, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65936, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2622 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32830, ordinaryIncomeNonSS: makeFromInt 64731, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25408, federalTaxDue: makeFromInt 10730, stateTaxDue: makeFromInt 2873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46023, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27455, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35516, itemizedDeductions: makeFromInt 4551, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1261 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121219, qualifiedIncome: makeFromInt 29471, itemizedDeductions: makeFromInt 27646, federalTaxDue: makeFromInt 19632, stateTaxDue: makeFromInt 7064 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27218, qualifiedIncome: makeFromInt 87937, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15794, stateTaxDue: makeFromInt 5183 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68254, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18468, federalTaxDue: makeFromInt 17208, stateTaxDue: makeFromInt 7838 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24447, ordinaryIncomeNonSS: makeFromInt 54746, qualifiedIncome: makeFromInt 52383, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16856, stateTaxDue: makeFromInt 5101 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104268, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35778, stateTaxDue: makeFromInt 9770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19676, ordinaryIncomeNonSS: makeFromInt 35067, qualifiedIncome: makeFromInt 70999, itemizedDeductions: makeFromInt 25876, federalTaxDue: makeFromInt 6419, stateTaxDue: makeFromInt 4981 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84011, itemizedDeductions: makeFromInt 29374, federalTaxDue: makeFromInt 4254, stateTaxDue: makeFromInt 3826 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29759, stateTaxDue: makeFromInt 11298 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 533, itemizedDeductions: makeFromInt 6961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20097, stateTaxDue: makeFromInt 6209 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32727, ordinaryIncomeNonSS: makeFromInt 132787, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12217, federalTaxDue: makeFromInt 21682, stateTaxDue: makeFromInt 6261 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73507, itemizedDeductions: makeFromInt 26674, federalTaxDue: makeFromInt 3972, stateTaxDue: makeFromInt 3220 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4405, ordinaryIncomeNonSS: makeFromInt 11794, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28272, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 335 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23618, ordinaryIncomeNonSS: makeFromInt 9398, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33796, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62578, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42878, stateTaxDue: makeFromInt 10617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53116, qualifiedIncome: makeFromInt 36516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4325, stateTaxDue: makeFromInt 4020 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38350, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24921, ordinaryIncomeNonSS: makeFromInt 33398, qualifiedIncome: makeFromInt 6286, itemizedDeductions: makeFromInt 23693, federalTaxDue: makeFromInt 938, stateTaxDue: makeFromInt 1473 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135871, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28652, stateTaxDue: makeFromInt 6539 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74128, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20366, federalTaxDue: makeFromInt 21266, stateTaxDue: makeFromInt 8248 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27294, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10164, ordinaryIncomeNonSS: makeFromInt 83023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5544, stateTaxDue: makeFromInt 3683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22693, ordinaryIncomeNonSS: makeFromInt 141019, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27005, stateTaxDue: makeFromInt 6641 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6681, ordinaryIncomeNonSS: makeFromInt 60695, qualifiedIncome: makeFromInt 7839, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8672, stateTaxDue: makeFromInt 3148 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84719, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6850, stateTaxDue: makeFromInt 3632 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29224, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12272, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 139 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134737, qualifiedIncome: makeFromInt 78594, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25622, stateTaxDue: makeFromInt 9992 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49687, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32524, stateTaxDue: makeFromInt 9729 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141567, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41609, stateTaxDue: makeFromInt 6996 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30539, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61479, itemizedDeductions: makeFromInt 14339, federalTaxDue: makeFromInt 39218, stateTaxDue: makeFromInt 9999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130486, qualifiedIncome: makeFromInt 18588, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22320, stateTaxDue: makeFromInt 7052 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36727, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50370, itemizedDeductions: makeFromInt 19135, federalTaxDue: makeFromInt 40250, stateTaxDue: makeFromInt 9790 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5842, stateTaxDue: makeFromInt 3677 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108710, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14557, stateTaxDue: makeFromInt 5095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7514, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35676, ordinaryIncomeNonSS: makeFromInt 61928, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5490, federalTaxDue: makeFromInt 16247, stateTaxDue: makeFromInt 2934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104748, qualifiedIncome: makeFromInt 85948, itemizedDeductions: makeFromInt 9122, federalTaxDue: makeFromInt 31570, stateTaxDue: makeFromInt 9501 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32843, ordinaryIncomeNonSS: makeFromInt 67475, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8131, stateTaxDue: makeFromInt 2963 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59081, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2564 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25777, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24677, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 614 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47647, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34146, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 222, stateTaxDue: makeFromInt 1332 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29063, stateTaxDue: makeFromInt 11066 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128624, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13941, federalTaxDue: makeFromInt 20988, stateTaxDue: makeFromInt 5956 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 49417, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16382, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136133, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3934, federalTaxDue: makeFromInt 55156, stateTaxDue: makeFromInt 11818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38320, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13663, federalTaxDue: makeFromInt 7420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14664, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4595, itemizedDeductions: makeFromInt 7854, federalTaxDue: makeFromInt 31347, stateTaxDue: makeFromInt 7456 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26061, itemizedDeductions: makeFromInt 23283, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 928 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19504, ordinaryIncomeNonSS: makeFromInt 85467, qualifiedIncome: makeFromInt 27172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12487, stateTaxDue: makeFromInt 5092 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24356, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19045, ordinaryIncomeNonSS: makeFromInt 133901, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7951, federalTaxDue: makeFromInt 33698, stateTaxDue: makeFromInt 11220 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56321, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33519, stateTaxDue: makeFromInt 10061 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48680, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1655, stateTaxDue: makeFromInt 2054 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20112, ordinaryIncomeNonSS: makeFromInt 71499, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22603, stateTaxDue: makeFromInt 8000 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129113, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36883, stateTaxDue: makeFromInt 11032 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39831, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91286, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2650, stateTaxDue: makeFromInt 4003 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2127, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45157, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19695, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102007, qualifiedIncome: makeFromInt 40870, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15331, stateTaxDue: makeFromInt 6769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82233, qualifiedIncome: makeFromInt 65208, itemizedDeductions: makeFromInt 19253, federalTaxDue: makeFromInt 17336, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34216, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27129, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25013, ordinaryIncomeNonSS: makeFromInt 18308, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 383 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55010, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27558, federalTaxDue: makeFromInt 3012, stateTaxDue: makeFromInt 2176 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136993, qualifiedIncome: makeFromInt 9542, itemizedDeductions: makeFromInt 14286, federalTaxDue: makeFromInt 16798, stateTaxDue: makeFromInt 6652 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2922, federalTaxDue: makeFromInt 32070, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36468, ordinaryIncomeNonSS: makeFromInt 122443, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25896, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35142, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52120, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31766, stateTaxDue: makeFromInt 9655 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87212, qualifiedIncome: makeFromInt 48572, itemizedDeductions: makeFromInt 8104, federalTaxDue: makeFromInt 17885, stateTaxDue: makeFromInt 6534 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8674, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123019, qualifiedIncome: makeFromInt 65199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25297, stateTaxDue: makeFromInt 9156 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112375, qualifiedIncome: makeFromInt 90927, itemizedDeductions: makeFromInt 979, federalTaxDue: makeFromInt 30917, stateTaxDue: makeFromInt 9910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16219, ordinaryIncomeNonSS: makeFromInt 59449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10727, federalTaxDue: makeFromInt 10386, stateTaxDue: makeFromInt 2807 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82743, itemizedDeductions: makeFromInt 8776, federalTaxDue: makeFromInt 599, stateTaxDue: makeFromInt 3532 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106556, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24844, stateTaxDue: makeFromInt 4873 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4043, ordinaryIncomeNonSS: makeFromInt 18465, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14428, federalTaxDue: makeFromInt 47, stateTaxDue: makeFromInt 595 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37085, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31254, stateTaxDue: makeFromInt 8679 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10127, federalTaxDue: makeFromInt 857, stateTaxDue: makeFromInt 813 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24817, qualifiedIncome: makeFromInt 57455, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16350, stateTaxDue: makeFromInt 3849 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1747, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85246, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26494, federalTaxDue: makeFromInt 21082, stateTaxDue: makeFromInt 8687 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1491, ordinaryIncomeNonSS: makeFromInt 11139, qualifiedIncome: makeFromInt 67308, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4449, stateTaxDue: makeFromInt 3572 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38650, ordinaryIncomeNonSS: makeFromInt 116661, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10424, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 5258 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69807, qualifiedIncome: makeFromInt 92376, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17631, stateTaxDue: makeFromInt 7721 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33635, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64690, itemizedDeductions: makeFromInt 18472, federalTaxDue: makeFromInt 3660, stateTaxDue: makeFromInt 2952 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7167, stateTaxDue: makeFromInt 4042 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23815, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4105, itemizedDeductions: makeFromInt 15650, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132481, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30495, stateTaxDue: makeFromInt 11296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5032, ordinaryIncomeNonSS: makeFromInt 111862, qualifiedIncome: makeFromInt 75115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29436, stateTaxDue: makeFromInt 9107 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22611, ordinaryIncomeNonSS: makeFromInt 130730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11790, federalTaxDue: makeFromInt 26695, stateTaxDue: makeFromInt 6082 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40307, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2607, ordinaryIncomeNonSS: makeFromInt 109404, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29593, federalTaxDue: makeFromInt 13099, stateTaxDue: makeFromInt 5015 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19875, ordinaryIncomeNonSS: makeFromInt 69624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7487, stateTaxDue: makeFromInt 3026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4401, ordinaryIncomeNonSS: makeFromInt 131576, qualifiedIncome: makeFromInt 97435, itemizedDeductions: makeFromInt 4852, federalTaxDue: makeFromInt 31774, stateTaxDue: makeFromInt 11027 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9767, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26409, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45458, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16551, stateTaxDue: makeFromInt 6124 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22817, itemizedDeductions: makeFromInt 2059, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13695, ordinaryIncomeNonSS: makeFromInt 141833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4470, federalTaxDue: makeFromInt 28575, stateTaxDue: makeFromInt 6805 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36305, stateTaxDue: makeFromInt 7229 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7577, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 162 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7853, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93620, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43515, stateTaxDue: makeFromInt 11996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134070, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39478, stateTaxDue: makeFromInt 11591 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7383, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20942, ordinaryIncomeNonSS: makeFromInt 71054, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8794, federalTaxDue: makeFromInt 13174, stateTaxDue: makeFromInt 3277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81555, itemizedDeductions: makeFromInt 13709, federalTaxDue: makeFromInt 13283, stateTaxDue: makeFromInt 3623 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50480, qualifiedIncome: makeFromInt 14848, itemizedDeductions: makeFromInt 11522, federalTaxDue: makeFromInt 2865, stateTaxDue: makeFromInt 2891 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8432, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22682, ordinaryIncomeNonSS: makeFromInt 66312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3561, federalTaxDue: makeFromInt 12005, stateTaxDue: makeFromInt 3127 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42654, ordinaryIncomeNonSS: makeFromInt 124199, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14442, federalTaxDue: makeFromInt 35978, stateTaxDue: makeFromInt 10535 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15656, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28003, ordinaryIncomeNonSS: makeFromInt 147055, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2907, federalTaxDue: makeFromInt 45076, stateTaxDue: makeFromInt 11898 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4008, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11643, qualifiedIncome: makeFromInt 25580, itemizedDeductions: makeFromInt 7647, federalTaxDue: makeFromInt 28, stateTaxDue: makeFromInt 1246 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107997, qualifiedIncome: makeFromInt 76371, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24554, stateTaxDue: makeFromInt 9178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37401, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92954, itemizedDeductions: makeFromInt 16228, federalTaxDue: makeFromInt 9261, stateTaxDue: makeFromInt 4394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23578, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14216, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41445, itemizedDeductions: makeFromInt 15566, federalTaxDue: makeFromInt 36501, stateTaxDue: makeFromInt 9417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18881, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18882, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20471, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51534, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24556, federalTaxDue: makeFromInt 2657, stateTaxDue: makeFromInt 1902 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23442, federalTaxDue: makeFromInt 5601, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18305, qualifiedIncome: makeFromInt 27209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2530, stateTaxDue: makeFromInt 1901 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13844, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11558, ordinaryIncomeNonSS: makeFromInt 47443, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26182, federalTaxDue: makeFromInt 3592, stateTaxDue: makeFromInt 2195 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33199, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82308, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3989, stateTaxDue: makeFromInt 3540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1044, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12962, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50335, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1942 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47280, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29496, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36765, itemizedDeductions: makeFromInt 17207, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18437, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61838, itemizedDeductions: makeFromInt 26131, federalTaxDue: makeFromInt 30641, stateTaxDue: makeFromInt 10151 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6377, stateTaxDue: makeFromInt 4222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13271, qualifiedIncome: makeFromInt 28111, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1614 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 288 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33457, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30710, stateTaxDue: makeFromInt 8698 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62393, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3589, stateTaxDue: makeFromInt 2835 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21284, ordinaryIncomeNonSS: makeFromInt 112056, qualifiedIncome: makeFromInt 65017, itemizedDeductions: makeFromInt 10055, federalTaxDue: makeFromInt 33061, stateTaxDue: makeFromInt 8684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24331, itemizedDeductions: makeFromInt 9813, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 962 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25326, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12662, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48637, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31363, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25742, ordinaryIncomeNonSS: makeFromInt 118213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23930, stateTaxDue: makeFromInt 5656 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28379, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35826, stateTaxDue: makeFromInt 8344 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24219, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73832, itemizedDeductions: makeFromInt 14100, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3017 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 54503, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19026, ordinaryIncomeNonSS: makeFromInt 51972, qualifiedIncome: makeFromInt 59609, itemizedDeductions: makeFromInt 22213, federalTaxDue: makeFromInt 14057, stateTaxDue: makeFromInt 5124 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44239, ordinaryIncomeNonSS: makeFromInt 112214, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6435, federalTaxDue: makeFromInt 28604, stateTaxDue: makeFromInt 5376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32372, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14573, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 396 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13708, ordinaryIncomeNonSS: makeFromInt 71044, qualifiedIncome: makeFromInt 82052, itemizedDeductions: makeFromInt 24226, federalTaxDue: makeFromInt 18314, stateTaxDue: makeFromInt 7080 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3056, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60535, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1040, stateTaxDue: makeFromInt 2452 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43739, ordinaryIncomeNonSS: makeFromInt 103155, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24808, federalTaxDue: makeFromInt 14214, stateTaxDue: makeFromInt 4683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43179, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68034, itemizedDeductions: makeFromInt 3227, federalTaxDue: makeFromInt 385, stateTaxDue: makeFromInt 2817 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31122, ordinaryIncomeNonSS: makeFromInt 89244, qualifiedIncome: makeFromInt 53326, itemizedDeductions: makeFromInt 1114, federalTaxDue: makeFromInt 26074, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91019, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2483, stateTaxDue: makeFromInt 4076 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92265, qualifiedIncome: makeFromInt 46325, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19938, stateTaxDue: makeFromInt 6455 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145355, qualifiedIncome: makeFromInt 23377, itemizedDeductions: makeFromInt 28837, federalTaxDue: makeFromInt 20721, stateTaxDue: makeFromInt 7762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4506, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48723, ordinaryIncomeNonSS: makeFromInt 134500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34859, stateTaxDue: makeFromInt 6431 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133830, qualifiedIncome: makeFromInt 53948, itemizedDeductions: makeFromInt 21607, federalTaxDue: makeFromInt 23884, stateTaxDue: makeFromInt 9038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41025, ordinaryIncomeNonSS: makeFromInt 21453, qualifiedIncome: makeFromInt 92304, itemizedDeductions: makeFromInt 17077, federalTaxDue: makeFromInt 12182, stateTaxDue: makeFromInt 5353 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40691, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11354, itemizedDeductions: makeFromInt 2668, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30818, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91485, itemizedDeductions: makeFromInt 19783, federalTaxDue: makeFromInt 9266, stateTaxDue: makeFromInt 4119 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19023, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92435, itemizedDeductions: makeFromInt 1900, federalTaxDue: makeFromInt 6938, stateTaxDue: makeFromInt 4367 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7119, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22791, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 714 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21032, itemizedDeductions: makeFromInt 24181, federalTaxDue: makeFromInt 23845, stateTaxDue: makeFromInt 8172 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121477, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12007, federalTaxDue: makeFromInt 10423, stateTaxDue: makeFromInt 5599 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31688, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7549, ordinaryIncomeNonSS: makeFromInt 144082, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10808, federalTaxDue: makeFromInt 25190, stateTaxDue: makeFromInt 6749 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61086, itemizedDeductions: makeFromInt 12397, federalTaxDue: makeFromInt 1123, stateTaxDue: makeFromInt 2679 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38868, ordinaryIncomeNonSS: makeFromInt 86421, qualifiedIncome: makeFromInt 49430, itemizedDeductions: makeFromInt 20310, federalTaxDue: makeFromInt 24280, stateTaxDue: makeFromInt 6538 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27404, ordinaryIncomeNonSS: makeFromInt 69427, qualifiedIncome: makeFromInt 52363, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20952, stateTaxDue: makeFromInt 5635 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17458, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 868, federalTaxDue: makeFromInt 71, stateTaxDue: makeFromInt 442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40160, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12808, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 204 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3817, ordinaryIncomeNonSS: makeFromInt 72137, qualifiedIncome: makeFromInt 66270, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17875, stateTaxDue: makeFromInt 6630 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2205, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 169, ordinaryIncomeNonSS: makeFromInt 111669, qualifiedIncome: makeFromInt 32123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17529, stateTaxDue: makeFromInt 6615 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17995, federalTaxDue: makeFromInt 25517, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72983, qualifiedIncome: makeFromInt 70346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7383, stateTaxDue: makeFromInt 6491 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47814, ordinaryIncomeNonSS: makeFromInt 145598, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1198, federalTaxDue: makeFromInt 30323, stateTaxDue: makeFromInt 6905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1441, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64182, itemizedDeductions: makeFromInt 25214, federalTaxDue: makeFromInt 3567, stateTaxDue: makeFromInt 2754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28107, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62134, itemizedDeductions: makeFromInt 29338, federalTaxDue: makeFromInt 3673, stateTaxDue: makeFromInt 2740 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41805, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80688, itemizedDeductions: makeFromInt 20949, federalTaxDue: makeFromInt 36262, stateTaxDue: makeFromInt 10859 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98924, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28531, federalTaxDue: makeFromInt 9783, stateTaxDue: makeFromInt 4371 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90113, itemizedDeductions: makeFromInt 17778, federalTaxDue: makeFromInt 7869, stateTaxDue: makeFromInt 4371 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34198, ordinaryIncomeNonSS: makeFromInt 96362, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10936, stateTaxDue: makeFromInt 4343 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25426, itemizedDeductions: makeFromInt 13391, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 816 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79239, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 159, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39766, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24627, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29284, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14112, federalTaxDue: makeFromInt 41675, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7188, federalTaxDue: makeFromInt 16962, stateTaxDue: makeFromInt 4969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63701, qualifiedIncome: makeFromInt 61235, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6218, stateTaxDue: makeFromInt 5719 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43526, itemizedDeductions: makeFromInt 11712, federalTaxDue: makeFromInt 3732, stateTaxDue: makeFromInt 1873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11092, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96555, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3098, stateTaxDue: makeFromInt 4476 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4193, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18596, federalTaxDue: makeFromInt 26413, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29727, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20509, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15321, ordinaryIncomeNonSS: makeFromInt 91921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12970, stateTaxDue: makeFromInt 4021 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59946, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49547, stateTaxDue: makeFromInt 10360 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91068, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6040, stateTaxDue: makeFromInt 4094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64308, qualifiedIncome: makeFromInt 42535, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1406, stateTaxDue: makeFromInt 4796 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23863, ordinaryIncomeNonSS: makeFromInt 39559, qualifiedIncome: makeFromInt 44446, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3433, stateTaxDue: makeFromInt 3856 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40408, ordinaryIncomeNonSS: makeFromInt 139939, qualifiedIncome: makeFromInt 49521, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31449, stateTaxDue: makeFromInt 8998 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4417, itemizedDeductions: makeFromInt 5564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15570, qualifiedIncome: makeFromInt 83394, itemizedDeductions: makeFromInt 28433, federalTaxDue: makeFromInt 697, stateTaxDue: makeFromInt 4553 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87598, itemizedDeductions: makeFromInt 16726, federalTaxDue: makeFromInt 5100, stateTaxDue: makeFromInt 3805 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11261, ordinaryIncomeNonSS: makeFromInt 96342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13087, stateTaxDue: makeFromInt 4242 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36094, ordinaryIncomeNonSS: makeFromInt 9539, qualifiedIncome: makeFromInt 54712, itemizedDeductions: makeFromInt 25170, federalTaxDue: makeFromInt 947, stateTaxDue: makeFromInt 2538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36740, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2630, stateTaxDue: makeFromInt 3046 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23206, ordinaryIncomeNonSS: makeFromInt 2354, qualifiedIncome: makeFromInt 58534, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2569 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42717, ordinaryIncomeNonSS: makeFromInt 93775, qualifiedIncome: makeFromInt 87337, itemizedDeductions: makeFromInt 5040, federalTaxDue: makeFromInt 32671, stateTaxDue: makeFromInt 8803 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6289, ordinaryIncomeNonSS: makeFromInt 116361, qualifiedIncome: makeFromInt 51029, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24124, stateTaxDue: makeFromInt 7995 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79719, itemizedDeductions: makeFromInt 10498, federalTaxDue: makeFromInt 4045, stateTaxDue: makeFromInt 3480 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138943, qualifiedIncome: makeFromInt 82710, itemizedDeductions: makeFromInt 12320, federalTaxDue: makeFromInt 37086, stateTaxDue: makeFromInt 10876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6140, ordinaryIncomeNonSS: makeFromInt 5323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 47 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96377, qualifiedIncome: makeFromInt 17089, itemizedDeductions: makeFromInt 22341, federalTaxDue: makeFromInt 13147, stateTaxDue: makeFromInt 5298 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27126, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68215, itemizedDeductions: makeFromInt 25262, federalTaxDue: makeFromInt 4232, stateTaxDue: makeFromInt 3156 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15152, qualifiedIncome: makeFromInt 36431, itemizedDeductions: makeFromInt 9162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2124 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16824, ordinaryIncomeNonSS: makeFromInt 83662, qualifiedIncome: makeFromInt 96931, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27945, stateTaxDue: makeFromInt 8575 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113142, qualifiedIncome: makeFromInt 71262, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18364, stateTaxDue: makeFromInt 8745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55305, qualifiedIncome: makeFromInt 74274, itemizedDeductions: makeFromInt 17043, federalTaxDue: makeFromInt 26090, stateTaxDue: makeFromInt 6384 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17199, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65372, itemizedDeductions: makeFromInt 16737, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2794 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127380, qualifiedIncome: makeFromInt 13159, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14012, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47694, ordinaryIncomeNonSS: makeFromInt 137484, qualifiedIncome: makeFromInt 82592, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41202, stateTaxDue: makeFromInt 10795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38275, ordinaryIncomeNonSS: makeFromInt 22300, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109856, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8975, federalTaxDue: makeFromInt 14374, stateTaxDue: makeFromInt 5052 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30306, ordinaryIncomeNonSS: makeFromInt 29881, qualifiedIncome: makeFromInt 94473, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19711, stateTaxDue: makeFromInt 5914 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11125, ordinaryIncomeNonSS: makeFromInt 128052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13195, federalTaxDue: makeFromInt 21352, stateTaxDue: makeFromInt 5921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134365, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20501, stateTaxDue: makeFromInt 6302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23994, ordinaryIncomeNonSS: makeFromInt 76526, qualifiedIncome: makeFromInt 28411, itemizedDeductions: makeFromInt 6613, federalTaxDue: makeFromInt 15402, stateTaxDue: makeFromInt 4801 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3219, qualifiedIncome: makeFromInt 78221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3540, stateTaxDue: makeFromInt 3501 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80570, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 791, stateTaxDue: makeFromInt 3660 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26857, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14536, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 395 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43581, itemizedDeductions: makeFromInt 12275, federalTaxDue: makeFromInt 29606, stateTaxDue: makeFromInt 9004 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32572, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5078, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44809, qualifiedIncome: makeFromInt 29861, itemizedDeductions: makeFromInt 24695, federalTaxDue: makeFromInt 9424, stateTaxDue: makeFromInt 3155 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36544, ordinaryIncomeNonSS: makeFromInt 109809, qualifiedIncome: makeFromInt 17914, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27204, stateTaxDue: makeFromInt 5931 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11864, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145925, qualifiedIncome: makeFromInt 40698, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24321, stateTaxDue: makeFromInt 8967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35753, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4319, stateTaxDue: makeFromInt 1599 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33797, qualifiedIncome: makeFromInt 15869, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3906, stateTaxDue: makeFromInt 2008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6981, ordinaryIncomeNonSS: makeFromInt 2650, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36164, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99951, itemizedDeductions: makeFromInt 10122, federalTaxDue: makeFromInt 9563, stateTaxDue: makeFromInt 4623 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14602, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12466, itemizedDeductions: makeFromInt 29965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 411 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41664, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11834, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47433, ordinaryIncomeNonSS: makeFromInt 114796, qualifiedIncome: makeFromInt 9418, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30378, stateTaxDue: makeFromInt 5907 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 348, ordinaryIncomeNonSS: makeFromInt 98908, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7750, stateTaxDue: makeFromInt 4470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3765, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19364, ordinaryIncomeNonSS: makeFromInt 30945, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22327, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 925 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3660, itemizedDeductions: makeFromInt 6116, federalTaxDue: makeFromInt 22174, stateTaxDue: makeFromInt 7108 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10203, ordinaryIncomeNonSS: makeFromInt 47624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3337, stateTaxDue: makeFromInt 1878 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91273, itemizedDeductions: makeFromInt 11922, federalTaxDue: makeFromInt 7998, stateTaxDue: makeFromInt 4431 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28078, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74370, itemizedDeductions: makeFromInt 4579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3244 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5382, stateTaxDue: makeFromInt 2886 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91917, itemizedDeductions: makeFromInt 2623, federalTaxDue: makeFromInt 4338, stateTaxDue: makeFromInt 4221 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38850, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97443, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4140, stateTaxDue: makeFromInt 4397 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10254, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18762, ordinaryIncomeNonSS: makeFromInt 17357, qualifiedIncome: makeFromInt 46088, itemizedDeductions: makeFromInt 4718, federalTaxDue: makeFromInt 45, stateTaxDue: makeFromInt 2583 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51818, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19580, federalTaxDue: makeFromInt 3025, stateTaxDue: makeFromInt 2216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40972, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57283, qualifiedIncome: makeFromInt 76172, itemizedDeductions: makeFromInt 6717, federalTaxDue: makeFromInt 7233, stateTaxDue: makeFromInt 6198 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5734, itemizedDeductions: makeFromInt 25751, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32783, stateTaxDue: makeFromInt 11061 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10714, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46887, itemizedDeductions: makeFromInt 25912, federalTaxDue: makeFromInt 28053, stateTaxDue: makeFromInt 9296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1681, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 961 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133306, qualifiedIncome: makeFromInt 10108, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14185, stateTaxDue: makeFromInt 6696 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48822, qualifiedIncome: makeFromInt 44566, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10646, stateTaxDue: makeFromInt 4334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44934, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13982, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74974, itemizedDeductions: makeFromInt 15197, federalTaxDue: makeFromInt 33210, stateTaxDue: makeFromInt 10715 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43781, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 567, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1391, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6713, stateTaxDue: makeFromInt 2842 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22041, ordinaryIncomeNonSS: makeFromInt 33223, qualifiedIncome: makeFromInt 96556, itemizedDeductions: makeFromInt 24823, federalTaxDue: makeFromInt 8853, stateTaxDue: makeFromInt 5814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5111, ordinaryIncomeNonSS: makeFromInt 43377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3509, stateTaxDue: makeFromInt 1714 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47431, ordinaryIncomeNonSS: makeFromInt 140850, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22324, federalTaxDue: makeFromInt 45691, stateTaxDue: makeFromInt 11668 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13017, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7284, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 24 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45059, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9672, federalTaxDue: makeFromInt 2214, stateTaxDue: makeFromInt 1878 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37514, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1561, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91777, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8119, stateTaxDue: makeFromInt 4456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45838, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5774, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9966, ordinaryIncomeNonSS: makeFromInt 72056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11092, stateTaxDue: makeFromInt 3328 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7323, stateTaxDue: makeFromInt 3161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24764, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27209, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4289, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9195, ordinaryIncomeNonSS: makeFromInt 139318, qualifiedIncome: makeFromInt 13768, itemizedDeductions: makeFromInt 9634, federalTaxDue: makeFromInt 26448, stateTaxDue: makeFromInt 7399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14940, ordinaryIncomeNonSS: makeFromInt 67229, qualifiedIncome: makeFromInt 83667, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13231, stateTaxDue: makeFromInt 7145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18482, ordinaryIncomeNonSS: makeFromInt 41775, qualifiedIncome: makeFromInt 32047, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3211, stateTaxDue: makeFromInt 3016 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3183, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5896, itemizedDeductions: makeFromInt 20719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3989, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14771, qualifiedIncome: makeFromInt 9966, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36409, ordinaryIncomeNonSS: makeFromInt 70893, qualifiedIncome: makeFromInt 6516, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13818, stateTaxDue: makeFromInt 3499 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74782, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22334, federalTaxDue: makeFromInt 5658, stateTaxDue: makeFromInt 3130 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6085, ordinaryIncomeNonSS: makeFromInt 135057, qualifiedIncome: makeFromInt 15307, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21576, stateTaxDue: makeFromInt 7143 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4655, federalTaxDue: makeFromInt 3830, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14721, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99803, qualifiedIncome: makeFromInt 21119, itemizedDeductions: makeFromInt 3916, federalTaxDue: makeFromInt 21303, stateTaxDue: makeFromInt 5943 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19031, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147271, qualifiedIncome: makeFromInt 59264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40264, stateTaxDue: makeFromInt 10309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80306, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26036, stateTaxDue: makeFromInt 8849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24167, qualifiedIncome: makeFromInt 17743, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1609, stateTaxDue: makeFromInt 1913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3713, ordinaryIncomeNonSS: makeFromInt 146423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24305, stateTaxDue: makeFromInt 6917 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28733, qualifiedIncome: makeFromInt 31869, itemizedDeductions: makeFromInt 21580, federalTaxDue: makeFromInt 310, stateTaxDue: makeFromInt 2866 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43477, ordinaryIncomeNonSS: makeFromInt 112595, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9958, federalTaxDue: makeFromInt 33739, stateTaxDue: makeFromInt 10155 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9117, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34695, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41530, itemizedDeductions: makeFromInt 13927, federalTaxDue: makeFromInt 730, stateTaxDue: makeFromInt 1754 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94870, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9362, federalTaxDue: makeFromInt 22039, stateTaxDue: makeFromInt 4289 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103194, qualifiedIncome: makeFromInt 98884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22410, stateTaxDue: makeFromInt 9429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29048, ordinaryIncomeNonSS: makeFromInt 36346, qualifiedIncome: makeFromInt 72370, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15581, stateTaxDue: makeFromInt 4981 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90455, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2273, stateTaxDue: makeFromInt 4164 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99046, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5849, federalTaxDue: makeFromInt 8314, stateTaxDue: makeFromInt 4277 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33470, ordinaryIncomeNonSS: makeFromInt 104080, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3748, federalTaxDue: makeFromInt 32432, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34665, ordinaryIncomeNonSS: makeFromInt 61515, qualifiedIncome: makeFromInt 36111, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11370, stateTaxDue: makeFromInt 4551 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32336, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23727, federalTaxDue: makeFromInt 38060, stateTaxDue: makeFromInt 12080 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25326, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27892, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32734, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74640, itemizedDeductions: makeFromInt 23892, federalTaxDue: makeFromInt 6439, stateTaxDue: makeFromInt 3357 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27582, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5224, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42101, itemizedDeductions: makeFromInt 16946, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1630 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23914, ordinaryIncomeNonSS: makeFromInt 59952, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13801, stateTaxDue: makeFromInt 7523 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7332, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23444, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30709, stateTaxDue: makeFromInt 8621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 250, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66683, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2748 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25045, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77772, qualifiedIncome: makeFromInt 61029, itemizedDeductions: makeFromInt 5289, federalTaxDue: makeFromInt 15399, stateTaxDue: makeFromInt 6528 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47727, ordinaryIncomeNonSS: makeFromInt 100478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9014, federalTaxDue: makeFromInt 22429, stateTaxDue: makeFromInt 4778 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39803, ordinaryIncomeNonSS: makeFromInt 128388, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2257, federalTaxDue: makeFromInt 27511, stateTaxDue: makeFromInt 6201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71799, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39425, stateTaxDue: makeFromInt 10965 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36777, qualifiedIncome: makeFromInt 56512, itemizedDeductions: makeFromInt 19526, federalTaxDue: makeFromInt 4033, stateTaxDue: makeFromInt 4289 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16148, federalTaxDue: makeFromInt 31825, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69278, itemizedDeductions: makeFromInt 27164, federalTaxDue: makeFromInt 1689, stateTaxDue: makeFromInt 2989 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58064, itemizedDeductions: makeFromInt 20506, federalTaxDue: makeFromInt 8389, stateTaxDue: makeFromInt 2648 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19986, ordinaryIncomeNonSS: makeFromInt 100386, qualifiedIncome: makeFromInt 34549, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24060, stateTaxDue: makeFromInt 6492 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60990, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4397, federalTaxDue: makeFromInt 14180, stateTaxDue: makeFromInt 2595 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17293, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 658 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48310, ordinaryIncomeNonSS: makeFromInt 141401, qualifiedIncome: makeFromInt 60691, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39716, stateTaxDue: makeFromInt 9850 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120901, qualifiedIncome: makeFromInt 17457, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12388, stateTaxDue: makeFromInt 6443 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25823, qualifiedIncome: makeFromInt 95955, itemizedDeductions: makeFromInt 4328, federalTaxDue: makeFromInt 3269, stateTaxDue: makeFromInt 5558 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48964, ordinaryIncomeNonSS: makeFromInt 40346, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20910, stateTaxDue: makeFromInt 6442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10587, ordinaryIncomeNonSS: makeFromInt 65409, qualifiedIncome: makeFromInt 44016, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11707, stateTaxDue: makeFromInt 5132 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49933, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23504, federalTaxDue: makeFromInt 12087, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95660, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11814, federalTaxDue: makeFromInt 9157, stateTaxDue: makeFromInt 4208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37578, qualifiedIncome: makeFromInt 33755, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7120, stateTaxDue: makeFromInt 3414 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24426, qualifiedIncome: makeFromInt 54296, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3461 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21257, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1063, federalTaxDue: makeFromInt 25962, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68107, qualifiedIncome: makeFromInt 70401, itemizedDeductions: makeFromInt 22433, federalTaxDue: makeFromInt 12729, stateTaxDue: makeFromInt 6550 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59286, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4635, stateTaxDue: makeFromInt 2651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3488, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85170, itemizedDeductions: makeFromInt 3784, federalTaxDue: makeFromInt 3326, stateTaxDue: makeFromInt 3884 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83707, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17817, federalTaxDue: makeFromInt 19160, stateTaxDue: makeFromInt 8716 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7863, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1467, ordinaryIncomeNonSS: makeFromInt 21700, qualifiedIncome: makeFromInt 90691, itemizedDeductions: makeFromInt 15934, federalTaxDue: makeFromInt 4154, stateTaxDue: makeFromInt 5045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4858, ordinaryIncomeNonSS: makeFromInt 66433, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6666, federalTaxDue: makeFromInt 8601, stateTaxDue: makeFromInt 3041 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44859, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49068, itemizedDeductions: makeFromInt 11529, federalTaxDue: makeFromInt 32090, stateTaxDue: makeFromInt 9478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 5969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54000, qualifiedIncome: makeFromInt 86921, itemizedDeductions: makeFromInt 18144, federalTaxDue: makeFromInt 18247, stateTaxDue: makeFromInt 6534 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44541, ordinaryIncomeNonSS: makeFromInt 23776, qualifiedIncome: makeFromInt 84806, itemizedDeductions: makeFromInt 14202, federalTaxDue: makeFromInt 17514, stateTaxDue: makeFromInt 5191 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31622, ordinaryIncomeNonSS: makeFromInt 16246, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 137 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15890, federalTaxDue: makeFromInt 16085, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13577, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17128, itemizedDeductions: makeFromInt 3027, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 481 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6238, qualifiedIncome: makeFromInt 92382, itemizedDeductions: makeFromInt 2048, federalTaxDue: makeFromInt 6237, stateTaxDue: makeFromInt 4683 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21321, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12487, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30039, qualifiedIncome: makeFromInt 8267, itemizedDeductions: makeFromInt 11894, federalTaxDue: makeFromInt 1501, stateTaxDue: makeFromInt 1460 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7028, ordinaryIncomeNonSS: makeFromInt 95379, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1820, federalTaxDue: makeFromInt 14151, stateTaxDue: makeFromInt 4514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5758, ordinaryIncomeNonSS: makeFromInt 146225, qualifiedIncome: makeFromInt 26060, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28599, stateTaxDue: makeFromInt 8236 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3321, qualifiedIncome: makeFromInt 19378, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 709 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19721, itemizedDeductions: makeFromInt 4801, federalTaxDue: makeFromInt 28029, stateTaxDue: makeFromInt 8231 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32567, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4634, stateTaxDue: makeFromInt 1173 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20149, ordinaryIncomeNonSS: makeFromInt 10871, qualifiedIncome: makeFromInt 12569, itemizedDeductions: makeFromInt 8155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 917 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40907, ordinaryIncomeNonSS: makeFromInt 129189, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41230, stateTaxDue: makeFromInt 11004 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13701, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32898, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15130, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34628, ordinaryIncomeNonSS: makeFromInt 79545, qualifiedIncome: makeFromInt 72284, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31495, stateTaxDue: makeFromInt 7519 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3517, itemizedDeductions: makeFromInt 8462, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35703, itemizedDeductions: makeFromInt 9641, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1210 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18938, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13934, federalTaxDue: makeFromInt 28213, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59305, qualifiedIncome: makeFromInt 75125, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11889, stateTaxDue: makeFromInt 6347 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34107, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 336, stateTaxDue: makeFromInt 1230 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98958, itemizedDeductions: makeFromInt 17126, federalTaxDue: makeFromInt 7224, stateTaxDue: makeFromInt 4496 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19709, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40603, itemizedDeductions: makeFromInt 29247, federalTaxDue: makeFromInt 31959, stateTaxDue: makeFromInt 9292 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95016, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2440, stateTaxDue: makeFromInt 4152 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3024, ordinaryIncomeNonSS: makeFromInt 33537, qualifiedIncome: makeFromInt 69615, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3929, stateTaxDue: makeFromInt 4583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99976, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 910, federalTaxDue: makeFromInt 19120, stateTaxDue: makeFromInt 9324 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23998, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16373, ordinaryIncomeNonSS: makeFromInt 148656, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19107, stateTaxDue: makeFromInt 6958 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1163, ordinaryIncomeNonSS: makeFromInt 94235, qualifiedIncome: makeFromInt 32532, itemizedDeductions: makeFromInt 28599, federalTaxDue: makeFromInt 12896, stateTaxDue: makeFromInt 5963 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24623, ordinaryIncomeNonSS: makeFromInt 94591, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16827, stateTaxDue: makeFromInt 4475 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55944, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4069, stateTaxDue: makeFromInt 2302 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80193, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12472, stateTaxDue: makeFromInt 3743 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27600, stateTaxDue: makeFromInt 8964 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17224, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30766, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26280, federalTaxDue: makeFromInt 14798, stateTaxDue: makeFromInt 6118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42152, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37635, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42249, ordinaryIncomeNonSS: makeFromInt 48313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8128, stateTaxDue: makeFromInt 1841 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6844, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26909, itemizedDeductions: makeFromInt 16833, federalTaxDue: makeFromInt 34855, stateTaxDue: makeFromInt 8798 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22117, qualifiedIncome: makeFromInt 36284, itemizedDeductions: makeFromInt 8887, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2550 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13356, qualifiedIncome: makeFromInt 48950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21358, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20335, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30769, ordinaryIncomeNonSS: makeFromInt 84804, qualifiedIncome: makeFromInt 68483, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22795, stateTaxDue: makeFromInt 7089 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40847, ordinaryIncomeNonSS: makeFromInt 139765, qualifiedIncome: makeFromInt 31393, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34234, stateTaxDue: makeFromInt 7983 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45522, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8373, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1415, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66559, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31347, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8025, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41692, ordinaryIncomeNonSS: makeFromInt 19047, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6837, stateTaxDue: makeFromInt 5477 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41491, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21096, federalTaxDue: makeFromInt 37871, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48567, qualifiedIncome: makeFromInt 75595, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15309, stateTaxDue: makeFromInt 5733 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44174, ordinaryIncomeNonSS: makeFromInt 45696, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6634, federalTaxDue: makeFromInt 6825, stateTaxDue: makeFromInt 1910 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39645, ordinaryIncomeNonSS: makeFromInt 134516, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41069, stateTaxDue: makeFromInt 11410 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13954, itemizedDeductions: makeFromInt 2051, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 263 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23922, itemizedDeductions: makeFromInt 15953, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 741 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16432, stateTaxDue: makeFromInt 6082 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10666, ordinaryIncomeNonSS: makeFromInt 108508, qualifiedIncome: makeFromInt 70539, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26059, stateTaxDue: makeFromInt 8577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88216, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8765, stateTaxDue: makeFromInt 4050 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87820, qualifiedIncome: makeFromInt 62892, itemizedDeductions: makeFromInt 14659, federalTaxDue: makeFromInt 26336, stateTaxDue: makeFromInt 6961 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19516, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18623, federalTaxDue: makeFromInt 28554, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35891, ordinaryIncomeNonSS: makeFromInt 125202, qualifiedIncome: makeFromInt 66872, itemizedDeductions: makeFromInt 24174, federalTaxDue: makeFromInt 34642, stateTaxDue: makeFromInt 9149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46964, ordinaryIncomeNonSS: makeFromInt 148249, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24287, federalTaxDue: makeFromInt 50146, stateTaxDue: makeFromInt 12314 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17153, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85576, qualifiedIncome: makeFromInt 38907, itemizedDeductions: makeFromInt 23892, federalTaxDue: makeFromInt 12710, stateTaxDue: makeFromInt 5849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44920, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25573, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50790, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28742, stateTaxDue: makeFromInt 9565 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43215, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1322, stateTaxDue: makeFromInt 1586 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92707, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6151, stateTaxDue: makeFromInt 4177 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40486, ordinaryIncomeNonSS: makeFromInt 59968, qualifiedIncome: makeFromInt 80158, itemizedDeductions: makeFromInt 6117, federalTaxDue: makeFromInt 22252, stateTaxDue: makeFromInt 6431 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5551, ordinaryIncomeNonSS: makeFromInt 12656, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 58 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39602, ordinaryIncomeNonSS: makeFromInt 101219, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19505, stateTaxDue: makeFromInt 4815 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7221, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93294, itemizedDeductions: makeFromInt 23710, federalTaxDue: makeFromInt 38113, stateTaxDue: makeFromInt 11790 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7707, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22096, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 130 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99138, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26803, federalTaxDue: makeFromInt 7319, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130902, qualifiedIncome: makeFromInt 99802, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34036, stateTaxDue: makeFromInt 10960 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18321, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10790, stateTaxDue: makeFromInt 5810 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22006, ordinaryIncomeNonSS: makeFromInt 27315, qualifiedIncome: makeFromInt 37189, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7077, stateTaxDue: makeFromInt 2943 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49099, itemizedDeductions: makeFromInt 11891, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19556, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24734, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15490, itemizedDeductions: makeFromInt 3042, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 341 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31045, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9571, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94317, itemizedDeductions: makeFromInt 10027, federalTaxDue: makeFromInt 5557, stateTaxDue: makeFromInt 4341 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23697, ordinaryIncomeNonSS: makeFromInt 114178, qualifiedIncome: makeFromInt 50130, itemizedDeductions: makeFromInt 21168, federalTaxDue: makeFromInt 25381, stateTaxDue: makeFromInt 7640 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70567, itemizedDeductions: makeFromInt 16321, federalTaxDue: makeFromInt 1135, stateTaxDue: makeFromInt 3153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43197, itemizedDeductions: makeFromInt 11213, federalTaxDue: makeFromInt 832, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49683, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20739, federalTaxDue: makeFromInt 8065, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120309, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16134, stateTaxDue: makeFromInt 5640 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45411, ordinaryIncomeNonSS: makeFromInt 54526, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1761, federalTaxDue: makeFromInt 12370, stateTaxDue: makeFromInt 2352 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138096, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7521, federalTaxDue: makeFromInt 13722, stateTaxDue: makeFromInt 6430 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5121, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33222, ordinaryIncomeNonSS: makeFromInt 100477, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21059, federalTaxDue: makeFromInt 26658, stateTaxDue: makeFromInt 9549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39669, ordinaryIncomeNonSS: makeFromInt 9744, qualifiedIncome: makeFromInt 29499, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1835, stateTaxDue: makeFromInt 1655 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78514, qualifiedIncome: makeFromInt 27131, itemizedDeductions: makeFromInt 20940, federalTaxDue: makeFromInt 11789, stateTaxDue: makeFromInt 5027 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14500, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8348, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26040, federalTaxDue: makeFromInt 21100, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47942, ordinaryIncomeNonSS: makeFromInt 94272, qualifiedIncome: makeFromInt 60110, itemizedDeductions: makeFromInt 19744, federalTaxDue: makeFromInt 27047, stateTaxDue: makeFromInt 7344 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12250, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48694, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27776, federalTaxDue: makeFromInt 5878, stateTaxDue: makeFromInt 1831 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19941, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30423, ordinaryIncomeNonSS: makeFromInt 30113, qualifiedIncome: makeFromInt 97389, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15074, stateTaxDue: makeFromInt 6278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3983, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93063, itemizedDeductions: makeFromInt 4219, federalTaxDue: makeFromInt 6906, stateTaxDue: makeFromInt 4198 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144684, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20349, stateTaxDue: makeFromInt 6659 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 444, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2886, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28141, stateTaxDue: makeFromInt 7369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76075, qualifiedIncome: makeFromInt 35731, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22383, stateTaxDue: makeFromInt 5253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45194, ordinaryIncomeNonSS: makeFromInt 133916, qualifiedIncome: makeFromInt 82780, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42993, stateTaxDue: makeFromInt 10603 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25146, ordinaryIncomeNonSS: makeFromInt 23380, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3986, federalTaxDue: makeFromInt 136, stateTaxDue: makeFromInt 744 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15307, ordinaryIncomeNonSS: makeFromInt 139557, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38437, stateTaxDue: makeFromInt 11523 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17313, ordinaryIncomeNonSS: makeFromInt 11351, qualifiedIncome: makeFromInt 85634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 725, stateTaxDue: makeFromInt 4174 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96696, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3209, stateTaxDue: makeFromInt 4279 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77585, itemizedDeductions: makeFromInt 16250, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38590, itemizedDeductions: makeFromInt 9943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1315 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6547, qualifiedIncome: makeFromInt 5054, itemizedDeductions: makeFromInt 8064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 105 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39173, ordinaryIncomeNonSS: makeFromInt 102986, qualifiedIncome: makeFromInt 84868, itemizedDeductions: makeFromInt 11682, federalTaxDue: makeFromInt 34509, stateTaxDue: makeFromInt 8938 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58523, qualifiedIncome: makeFromInt 44264, itemizedDeductions: makeFromInt 8859, federalTaxDue: makeFromInt 7109, stateTaxDue: makeFromInt 4691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9892, ordinaryIncomeNonSS: makeFromInt 6867, qualifiedIncome: makeFromInt 91371, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9289, stateTaxDue: makeFromInt 4786 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35723, ordinaryIncomeNonSS: makeFromInt 49883, qualifiedIncome: makeFromInt 74824, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16670, stateTaxDue: makeFromInt 5660 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4215, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52689, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33834, stateTaxDue: makeFromInt 9679 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11690, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17330, ordinaryIncomeNonSS: makeFromInt 65875, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9285, stateTaxDue: makeFromInt 2931 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30777, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69525, qualifiedIncome: makeFromInt 63786, itemizedDeductions: makeFromInt 18411, federalTaxDue: makeFromInt 15465, stateTaxDue: makeFromInt 6452 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95660, qualifiedIncome: makeFromInt 21531, itemizedDeductions: makeFromInt 5018, federalTaxDue: makeFromInt 26020, stateTaxDue: makeFromInt 5405 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45072, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61657, itemizedDeductions: makeFromInt 26331, federalTaxDue: makeFromInt 2794, stateTaxDue: makeFromInt 2708 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42074, qualifiedIncome: makeFromInt 55172, itemizedDeductions: makeFromInt 27353, federalTaxDue: makeFromInt 1067, stateTaxDue: makeFromInt 4511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16180, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 412, stateTaxDue: makeFromInt 376 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14162, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26378, federalTaxDue: makeFromInt 25352, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7191, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127004, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12382, federalTaxDue: makeFromInt 12132, stateTaxDue: makeFromInt 5675 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6962, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28273, federalTaxDue: makeFromInt 39470, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30482, ordinaryIncomeNonSS: makeFromInt 148575, qualifiedIncome: makeFromInt 70710, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37468, stateTaxDue: makeFromInt 10531 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110923, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3585, federalTaxDue: makeFromInt 18031, stateTaxDue: makeFromInt 5433 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69798, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4218, stateTaxDue: makeFromInt 3235 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12609, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21522, federalTaxDue: makeFromInt 24197, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33112, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72629, qualifiedIncome: makeFromInt 10298, itemizedDeductions: makeFromInt 2137, federalTaxDue: makeFromInt 8935, stateTaxDue: makeFromInt 3891 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39469, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23843, federalTaxDue: makeFromInt 10767, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13505, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3617, stateTaxDue: makeFromInt 3781 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40966, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39002, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62133, itemizedDeductions: makeFromInt 485, federalTaxDue: makeFromInt 1280, stateTaxDue: makeFromInt 2732 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70363, itemizedDeductions: makeFromInt 12561, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2843 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121202, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21203, stateTaxDue: makeFromInt 5835 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5929, ordinaryIncomeNonSS: makeFromInt 10095, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 65 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84641, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21923, stateTaxDue: makeFromInt 4092 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11928, ordinaryIncomeNonSS: makeFromInt 139912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26627, federalTaxDue: makeFromInt 21925, stateTaxDue: makeFromInt 6707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17650, qualifiedIncome: makeFromInt 50930, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13457, stateTaxDue: makeFromInt 3151 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88880, itemizedDeductions: makeFromInt 19601, federalTaxDue: makeFromInt 32010, stateTaxDue: makeFromInt 11269 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141903, qualifiedIncome: makeFromInt 28570, itemizedDeductions: makeFromInt 13635, federalTaxDue: makeFromInt 29050, stateTaxDue: makeFromInt 8069 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50901, itemizedDeductions: makeFromInt 9638, federalTaxDue: makeFromInt 8360, stateTaxDue: makeFromInt 2090 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46104, qualifiedIncome: makeFromInt 47623, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14748, stateTaxDue: makeFromInt 4311 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39188, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20749, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2553, ordinaryIncomeNonSS: makeFromInt 57261, qualifiedIncome: makeFromInt 18087, itemizedDeductions: makeFromInt 20120, federalTaxDue: makeFromInt 5069, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2622, itemizedDeductions: makeFromInt 24742, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32062, ordinaryIncomeNonSS: makeFromInt 884, qualifiedIncome: makeFromInt 31516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1204 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42903, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38233, ordinaryIncomeNonSS: makeFromInt 123358, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32944, stateTaxDue: makeFromInt 10738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28916, qualifiedIncome: makeFromInt 90934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8584, stateTaxDue: makeFromInt 5684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89420, qualifiedIncome: makeFromInt 98725, itemizedDeductions: makeFromInt 8334, federalTaxDue: makeFromInt 16078, stateTaxDue: makeFromInt 8932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74213, qualifiedIncome: makeFromInt 39012, itemizedDeductions: makeFromInt 5230, federalTaxDue: makeFromInt 15365, stateTaxDue: makeFromInt 5428 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12804, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28763, federalTaxDue: makeFromInt 18735, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 135726, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14051, stateTaxDue: makeFromInt 6111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25142, ordinaryIncomeNonSS: makeFromInt 16226, qualifiedIncome: makeFromInt 19205, itemizedDeductions: makeFromInt 987, federalTaxDue: makeFromInt 2229, stateTaxDue: makeFromInt 1460 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30836, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27515, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5209, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8042, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33874, itemizedDeductions: makeFromInt 5277, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1439 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 337, ordinaryIncomeNonSS: makeFromInt 82231, qualifiedIncome: makeFromInt 82103, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23847, stateTaxDue: makeFromInt 8034 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18566, ordinaryIncomeNonSS: makeFromInt 22138, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 735, stateTaxDue: makeFromInt 578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42363, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1294 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15827, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1785, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3770, ordinaryIncomeNonSS: makeFromInt 62937, qualifiedIncome: makeFromInt 73729, itemizedDeductions: makeFromInt 9540, federalTaxDue: makeFromInt 12697, stateTaxDue: makeFromInt 6258 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110242, qualifiedIncome: makeFromInt 86852, itemizedDeductions: makeFromInt 13498, federalTaxDue: makeFromInt 38756, stateTaxDue: makeFromInt 9600 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33974, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9069, federalTaxDue: makeFromInt 957, stateTaxDue: makeFromInt 1069 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46240, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29260, itemizedDeductions: makeFromInt 1519, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 788 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13591, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23761, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32183, itemizedDeductions: makeFromInt 19989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1193 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51579, qualifiedIncome: makeFromInt 25528, itemizedDeductions: makeFromInt 26863, federalTaxDue: makeFromInt 4305, stateTaxDue: makeFromInt 3400 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36538, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16352, federalTaxDue: makeFromInt 47524, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6528, ordinaryIncomeNonSS: makeFromInt 14399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40519, ordinaryIncomeNonSS: makeFromInt 97355, qualifiedIncome: makeFromInt 29998, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24359, stateTaxDue: makeFromInt 5944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24845, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 400, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14215, ordinaryIncomeNonSS: makeFromInt 124982, qualifiedIncome: makeFromInt 84722, itemizedDeductions: makeFromInt 21435, federalTaxDue: makeFromInt 29462, stateTaxDue: makeFromInt 10246 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23545, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12030, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42676, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41658, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127982, qualifiedIncome: makeFromInt 92331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30923, stateTaxDue: makeFromInt 10441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27589, ordinaryIncomeNonSS: makeFromInt 101337, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14831, federalTaxDue: makeFromInt 37691, stateTaxDue: makeFromInt 10044 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29596, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141097, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33526, stateTaxDue: makeFromInt 6645 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1022, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26785, federalTaxDue: makeFromInt 20039, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32831, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1722, stateTaxDue: makeFromInt 1187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106540, qualifiedIncome: makeFromInt 3438, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14531, stateTaxDue: makeFromInt 5160 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23747, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26469, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6429, ordinaryIncomeNonSS: makeFromInt 146005, qualifiedIncome: makeFromInt 40870, itemizedDeductions: makeFromInt 19435, federalTaxDue: makeFromInt 29669, stateTaxDue: makeFromInt 9082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 136 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34363, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11535, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117371, qualifiedIncome: makeFromInt 52419, itemizedDeductions: makeFromInt 8685, federalTaxDue: makeFromInt 35211, stateTaxDue: makeFromInt 8210 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5369, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15863, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93923, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21812, stateTaxDue: makeFromInt 4241 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17705, ordinaryIncomeNonSS: makeFromInt 15121, qualifiedIncome: makeFromInt 36915, itemizedDeductions: makeFromInt 13590, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1927 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38065, ordinaryIncomeNonSS: makeFromInt 17860, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1320, stateTaxDue: makeFromInt 478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35658, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21043, federalTaxDue: makeFromInt 24120, stateTaxDue: makeFromInt 5309 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19036, ordinaryIncomeNonSS: makeFromInt 92465, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8883, stateTaxDue: makeFromInt 3948 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38350, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31127, ordinaryIncomeNonSS: makeFromInt 141845, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29366, stateTaxDue: makeFromInt 6785 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1313, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2877, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134513, qualifiedIncome: makeFromInt 43452, itemizedDeductions: makeFromInt 10084, federalTaxDue: makeFromInt 23476, stateTaxDue: makeFromInt 8423 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98274, qualifiedIncome: makeFromInt 98212, itemizedDeductions: makeFromInt 12866, federalTaxDue: makeFromInt 21606, stateTaxDue: makeFromInt 9149 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33296, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53340, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 381, stateTaxDue: makeFromInt 2170 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5304, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10610, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12497, federalTaxDue: makeFromInt 25071, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3253, ordinaryIncomeNonSS: makeFromInt 127840, qualifiedIncome: makeFromInt 1818, itemizedDeductions: makeFromInt 2910, federalTaxDue: makeFromInt 22864, stateTaxDue: makeFromInt 6124 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27670, federalTaxDue: makeFromInt 31903, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18383, itemizedDeductions: makeFromInt 17520, federalTaxDue: makeFromInt 22357, stateTaxDue: makeFromInt 7935 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38755, qualifiedIncome: makeFromInt 11930, itemizedDeductions: makeFromInt 5051, federalTaxDue: makeFromInt 9689, stateTaxDue: makeFromInt 2034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45423, ordinaryIncomeNonSS: makeFromInt 84994, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19973, stateTaxDue: makeFromInt 3795 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33251, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 936, federalTaxDue: makeFromInt 250, stateTaxDue: makeFromInt 988 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7615, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72156, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5176, stateTaxDue: makeFromInt 3456 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25505, ordinaryIncomeNonSS: makeFromInt 1279, qualifiedIncome: makeFromInt 4216, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 55 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21763, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33561, ordinaryIncomeNonSS: makeFromInt 88572, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9898, stateTaxDue: makeFromInt 3754 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62621, qualifiedIncome: makeFromInt 85122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15317, stateTaxDue: makeFromInt 7132 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30012, ordinaryIncomeNonSS: makeFromInt 89200, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9611, stateTaxDue: makeFromInt 3985 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135487, qualifiedIncome: makeFromInt 68314, itemizedDeductions: makeFromInt 7615, federalTaxDue: makeFromInt 28389, stateTaxDue: makeFromInt 9815 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19321, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15701, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143593, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18488, federalTaxDue: makeFromInt 36188, stateTaxDue: makeFromInt 6976 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41133, ordinaryIncomeNonSS: makeFromInt 130359, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3242, federalTaxDue: makeFromInt 28748, stateTaxDue: makeFromInt 6263 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42955, ordinaryIncomeNonSS: makeFromInt 117850, qualifiedIncome: makeFromInt 99634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43700, stateTaxDue: makeFromInt 10663 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6907, ordinaryIncomeNonSS: makeFromInt 107968, qualifiedIncome: makeFromInt 62641, itemizedDeductions: makeFromInt 27489, federalTaxDue: makeFromInt 23446, stateTaxDue: makeFromInt 8275 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85507, qualifiedIncome: makeFromInt 42667, itemizedDeductions: makeFromInt 22059, federalTaxDue: makeFromInt 15502, stateTaxDue: makeFromInt 6190 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44666, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17933, ordinaryIncomeNonSS: makeFromInt 117515, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27548, stateTaxDue: makeFromInt 10401 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16989, ordinaryIncomeNonSS: makeFromInt 99454, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22626, federalTaxDue: makeFromInt 9720, stateTaxDue: makeFromInt 4419 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1430, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30624, ordinaryIncomeNonSS: makeFromInt 142455, qualifiedIncome: makeFromInt 54133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33571, stateTaxDue: makeFromInt 9373 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42589, ordinaryIncomeNonSS: makeFromInt 103264, qualifiedIncome: makeFromInt 59387, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33492, stateTaxDue: makeFromInt 7867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113720, qualifiedIncome: makeFromInt 31283, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24082, stateTaxDue: makeFromInt 7048 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15832, ordinaryIncomeNonSS: makeFromInt 53625, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4207, stateTaxDue: makeFromInt 2082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59047, itemizedDeductions: makeFromInt 11624, federalTaxDue: makeFromInt 8682, stateTaxDue: makeFromInt 2665 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7221, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47996, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96292, itemizedDeductions: makeFromInt 4751, federalTaxDue: makeFromInt 2848, stateTaxDue: makeFromInt 4340 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15338, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23774, federalTaxDue: makeFromInt 19209, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18206, itemizedDeductions: makeFromInt 11780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 582 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35523, ordinaryIncomeNonSS: makeFromInt 43066, qualifiedIncome: makeFromInt 31294, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8254, stateTaxDue: makeFromInt 3143 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143714, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5904, federalTaxDue: makeFromInt 47405, stateTaxDue: makeFromInt 11611 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53541, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1657, federalTaxDue: makeFromInt 2481, stateTaxDue: makeFromInt 2202 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 835, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4409, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44717, itemizedDeductions: makeFromInt 23576, federalTaxDue: makeFromInt 30092, stateTaxDue: makeFromInt 9281 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17782, ordinaryIncomeNonSS: makeFromInt 37751, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2970, federalTaxDue: makeFromInt 6421, stateTaxDue: makeFromInt 6413 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19037, federalTaxDue: makeFromInt 55472, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24550, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16847, federalTaxDue: makeFromInt 29186, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85644, qualifiedIncome: makeFromInt 27625, itemizedDeductions: makeFromInt 11245, federalTaxDue: makeFromInt 11703, stateTaxDue: makeFromInt 5088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48611, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3364, federalTaxDue: makeFromInt 3002, stateTaxDue: makeFromInt 1856 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29046, ordinaryIncomeNonSS: makeFromInt 32736, qualifiedIncome: makeFromInt 45890, itemizedDeductions: makeFromInt 16532, federalTaxDue: makeFromInt 6168, stateTaxDue: makeFromInt 3556 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9201, ordinaryIncomeNonSS: makeFromInt 137733, qualifiedIncome: makeFromInt 73635, itemizedDeductions: makeFromInt 13684, federalTaxDue: makeFromInt 36984, stateTaxDue: makeFromInt 10351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12183, ordinaryIncomeNonSS: makeFromInt 95193, qualifiedIncome: makeFromInt 54782, itemizedDeductions: makeFromInt 8807, federalTaxDue: makeFromInt 25564, stateTaxDue: makeFromInt 7302 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 698, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17912, federalTaxDue: makeFromInt 1523, stateTaxDue: makeFromInt 1372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109272, qualifiedIncome: makeFromInt 38574, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16130, stateTaxDue: makeFromInt 7091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27794, ordinaryIncomeNonSS: makeFromInt 24052, qualifiedIncome: makeFromInt 96728, itemizedDeductions: makeFromInt 11089, federalTaxDue: makeFromInt 18159, stateTaxDue: makeFromInt 5935 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55460, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21239, federalTaxDue: makeFromInt 3128, stateTaxDue: makeFromInt 2098 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8053, itemizedDeductions: makeFromInt 2385, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26013, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32792, itemizedDeductions: makeFromInt 6271, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36224, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72268, itemizedDeductions: makeFromInt 3981, federalTaxDue: makeFromInt 9514, stateTaxDue: makeFromInt 3257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14645, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38420, stateTaxDue: makeFromInt 7948 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80363, itemizedDeductions: makeFromInt 22684, federalTaxDue: makeFromInt 43879, stateTaxDue: makeFromInt 10943 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12561, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17179, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 423 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13326, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34041, stateTaxDue: makeFromInt 7911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140704, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29536, stateTaxDue: makeFromInt 6952 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23708, ordinaryIncomeNonSS: makeFromInt 5270, qualifiedIncome: makeFromInt 56861, itemizedDeductions: makeFromInt 20338, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2632 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24492, ordinaryIncomeNonSS: makeFromInt 74555, qualifiedIncome: makeFromInt 72621, itemizedDeductions: makeFromInt 11897, federalTaxDue: makeFromInt 19987, stateTaxDue: makeFromInt 6984 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29444, ordinaryIncomeNonSS: makeFromInt 77198, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7370, federalTaxDue: makeFromInt 14423, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21286, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23702, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 810 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23247, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44929, itemizedDeductions: makeFromInt 27809, federalTaxDue: makeFromInt 1092, stateTaxDue: makeFromInt 2067 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22774, ordinaryIncomeNonSS: makeFromInt 53899, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11159, federalTaxDue: makeFromInt 4637, stateTaxDue: makeFromInt 2220 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21800, ordinaryIncomeNonSS: makeFromInt 116254, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33984, stateTaxDue: makeFromInt 10558 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36494, ordinaryIncomeNonSS: makeFromInt 85822, qualifiedIncome: makeFromInt 30383, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22902, stateTaxDue: makeFromInt 5498 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7986, qualifiedIncome: makeFromInt 74213, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3635 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21696, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6720, itemizedDeductions: makeFromInt 15442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7200, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47303, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25633, stateTaxDue: makeFromInt 9390 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6829, ordinaryIncomeNonSS: makeFromInt 25876, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1657, federalTaxDue: makeFromInt 148, stateTaxDue: makeFromInt 862 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38153, ordinaryIncomeNonSS: makeFromInt 16484, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13193, stateTaxDue: makeFromInt 5369 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115745, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10889, federalTaxDue: makeFromInt 31923, stateTaxDue: makeFromInt 10575 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34257, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25804, federalTaxDue: makeFromInt 24744, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22468, qualifiedIncome: makeFromInt 46358, itemizedDeductions: makeFromInt 3469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24086, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34474, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28875, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13332, qualifiedIncome: makeFromInt 79320, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19040, stateTaxDue: makeFromInt 4501 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40339, itemizedDeductions: makeFromInt 10747, federalTaxDue: makeFromInt 403, stateTaxDue: makeFromInt 1629 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96715, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8345, stateTaxDue: makeFromInt 4280 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125353, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10919, stateTaxDue: makeFromInt 5593 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14415, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45397, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24830, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147856, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27464, federalTaxDue: makeFromInt 23383, stateTaxDue: makeFromInt 7194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24931, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28697, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13426, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8451, federalTaxDue: makeFromInt 18852, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39133, ordinaryIncomeNonSS: makeFromInt 81315, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13319, stateTaxDue: makeFromInt 3491 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67855, qualifiedIncome: makeFromInt 17162, itemizedDeductions: makeFromInt 18841, federalTaxDue: makeFromInt 8410, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30191, ordinaryIncomeNonSS: makeFromInt 13754, qualifiedIncome: makeFromInt 29758, itemizedDeductions: makeFromInt 14263, federalTaxDue: makeFromInt 1532, stateTaxDue: makeFromInt 1601 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6418, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49126, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48471, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 423, stateTaxDue: makeFromInt 1749 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32488, ordinaryIncomeNonSS: makeFromInt 66850, qualifiedIncome: makeFromInt 9105, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8191, stateTaxDue: makeFromInt 3445 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30512, qualifiedIncome: makeFromInt 34696, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3336, stateTaxDue: makeFromInt 3005 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93822, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17411, stateTaxDue: makeFromInt 4132 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42930, ordinaryIncomeNonSS: makeFromInt 128434, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30828, stateTaxDue: makeFromInt 6264 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39291, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36367, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 56, stateTaxDue: makeFromInt 1243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28190, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7031, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4493, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4977 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40235, ordinaryIncomeNonSS: makeFromInt 115820, qualifiedIncome: makeFromInt 29752, itemizedDeductions: makeFromInt 20102, federalTaxDue: makeFromInt 30182, stateTaxDue: makeFromInt 7077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127023, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22213, federalTaxDue: makeFromInt 43397, stateTaxDue: makeFromInt 11096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30388, ordinaryIncomeNonSS: makeFromInt 102304, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26573, federalTaxDue: makeFromInt 20340, stateTaxDue: makeFromInt 4993 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13235, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59987, itemizedDeductions: makeFromInt 28278, federalTaxDue: makeFromInt 2747, stateTaxDue: makeFromInt 2744 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78079, qualifiedIncome: makeFromInt 24175, itemizedDeductions: makeFromInt 29971, federalTaxDue: makeFromInt 16919, stateTaxDue: makeFromInt 4538 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40059, qualifiedIncome: makeFromInt 18177, itemizedDeductions: makeFromInt 12980, federalTaxDue: makeFromInt 11478, stateTaxDue: makeFromInt 2623 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4073, itemizedDeductions: makeFromInt 17929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15576, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33821, stateTaxDue: makeFromInt 10289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36519, ordinaryIncomeNonSS: makeFromInt 18845, qualifiedIncome: makeFromInt 73627, itemizedDeductions: makeFromInt 1927, federalTaxDue: makeFromInt 16699, stateTaxDue: makeFromInt 4492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44002, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5922, itemizedDeductions: makeFromInt 18900, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 78 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13774, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58216, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23968, federalTaxDue: makeFromInt 3878, stateTaxDue: makeFromInt 2656 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9070, ordinaryIncomeNonSS: makeFromInt 136665, qualifiedIncome: makeFromInt 35892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27800, stateTaxDue: makeFromInt 8253 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85850, itemizedDeductions: makeFromInt 26646, federalTaxDue: makeFromInt 6184, stateTaxDue: makeFromInt 4038 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47367, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1693 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21176, federalTaxDue: makeFromInt 31825, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120740, qualifiedIncome: makeFromInt 8532, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11006, stateTaxDue: makeFromInt 5989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30998, ordinaryIncomeNonSS: makeFromInt 20592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3836, federalTaxDue: makeFromInt 2004, stateTaxDue: makeFromInt 826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43429, ordinaryIncomeNonSS: makeFromInt 52342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27032, federalTaxDue: makeFromInt 10315, stateTaxDue: makeFromInt 2445 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39863, qualifiedIncome: makeFromInt 8978, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2566, stateTaxDue: makeFromInt 1987 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111133, qualifiedIncome: makeFromInt 97601, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29804, stateTaxDue: makeFromInt 10197 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22485, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7452, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26658, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46992, ordinaryIncomeNonSS: makeFromInt 53001, qualifiedIncome: makeFromInt 76242, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18650, stateTaxDue: makeFromInt 6087 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1312, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7430, itemizedDeductions: makeFromInt 26536, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 117 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10331, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3988, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17645, ordinaryIncomeNonSS: makeFromInt 34375, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27562, federalTaxDue: makeFromInt 1077, stateTaxDue: makeFromInt 1244 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44362, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96405, itemizedDeductions: makeFromInt 17549, federalTaxDue: makeFromInt 10708, stateTaxDue: makeFromInt 4245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48717, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78279, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11168, stateTaxDue: makeFromInt 3659 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43553, ordinaryIncomeNonSS: makeFromInt 62107, qualifiedIncome: makeFromInt 46326, itemizedDeductions: makeFromInt 23097, federalTaxDue: makeFromInt 19615, stateTaxDue: makeFromInt 5102 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89810, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36732, stateTaxDue: makeFromInt 11416 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49439, ordinaryIncomeNonSS: makeFromInt 83472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18284, stateTaxDue: makeFromInt 3706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13802, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34836, ordinaryIncomeNonSS: makeFromInt 48055, qualifiedIncome: makeFromInt 44864, itemizedDeductions: makeFromInt 12346, federalTaxDue: makeFromInt 13736, stateTaxDue: makeFromInt 4310 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21305, qualifiedIncome: makeFromInt 52872, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3234 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38434, ordinaryIncomeNonSS: makeFromInt 125265, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19077, federalTaxDue: makeFromInt 18937, stateTaxDue: makeFromInt 5588 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124715, qualifiedIncome: makeFromInt 86201, itemizedDeductions: makeFromInt 10436, federalTaxDue: makeFromInt 31212, stateTaxDue: makeFromInt 10308 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22268, ordinaryIncomeNonSS: makeFromInt 13519, qualifiedIncome: makeFromInt 48446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4773, stateTaxDue: makeFromInt 2813 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5048, ordinaryIncomeNonSS: makeFromInt 96771, qualifiedIncome: makeFromInt 78870, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22176, stateTaxDue: makeFromInt 8407 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57375, qualifiedIncome: makeFromInt 32951, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9948, stateTaxDue: makeFromInt 4261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72993, qualifiedIncome: makeFromInt 96241, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19247, stateTaxDue: makeFromInt 8080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23236, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34933, ordinaryIncomeNonSS: makeFromInt 69338, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10070, federalTaxDue: makeFromInt 12138, stateTaxDue: makeFromInt 3087 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44851, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25618, federalTaxDue: makeFromInt 2736, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10421, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118323, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24441, federalTaxDue: makeFromInt 15707, stateTaxDue: makeFromInt 5461 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20621, qualifiedIncome: makeFromInt 51206, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3016 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45371, ordinaryIncomeNonSS: makeFromInt 128251, qualifiedIncome: makeFromInt 66017, itemizedDeductions: makeFromInt 4674, federalTaxDue: makeFromInt 38987, stateTaxDue: makeFromInt 9459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38512, ordinaryIncomeNonSS: makeFromInt 113364, qualifiedIncome: makeFromInt 92921, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33793, stateTaxDue: makeFromInt 9868 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54240, qualifiedIncome: makeFromInt 14291, itemizedDeductions: makeFromInt 15615, federalTaxDue: makeFromInt 4259, stateTaxDue: makeFromInt 3046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4134, federalTaxDue: makeFromInt 9967, stateTaxDue: makeFromInt 2292 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16773, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7739, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81262, itemizedDeductions: makeFromInt 29640, federalTaxDue: makeFromInt 6542, stateTaxDue: makeFromInt 3716 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44077, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19193, itemizedDeductions: makeFromInt 28349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32594, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8879, federalTaxDue: makeFromInt 36413, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26030, ordinaryIncomeNonSS: makeFromInt 62042, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8301, stateTaxDue: makeFromInt 2940 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44689, ordinaryIncomeNonSS: makeFromInt 144048, qualifiedIncome: makeFromInt 94254, itemizedDeductions: makeFromInt 15072, federalTaxDue: makeFromInt 45086, stateTaxDue: makeFromInt 11540 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40751, ordinaryIncomeNonSS: makeFromInt 115084, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23700, stateTaxDue: makeFromInt 5379 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39769, ordinaryIncomeNonSS: makeFromInt 8741, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141311, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31764, stateTaxDue: makeFromInt 6491 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3349, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13769, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23877, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45854, itemizedDeductions: makeFromInt 24424, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1770 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64307, itemizedDeductions: makeFromInt 16677, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26870, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71885, itemizedDeductions: makeFromInt 24478, federalTaxDue: makeFromInt 5135, stateTaxDue: makeFromInt 3238 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10876, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7306, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64812, qualifiedIncome: makeFromInt 29231, itemizedDeductions: makeFromInt 20928, federalTaxDue: makeFromInt 5663, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21517, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84099, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42075, stateTaxDue: makeFromInt 11250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33144, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 659, stateTaxDue: makeFromInt 1262 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67178, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93409, itemizedDeductions: makeFromInt 22352, federalTaxDue: makeFromInt 2716, stateTaxDue: makeFromInt 4315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3613, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25404, federalTaxDue: makeFromInt 31341, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99704, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6139, stateTaxDue: makeFromInt 4636 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46364, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60720, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8623, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4754, itemizedDeductions: makeFromInt 27274, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34991, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91251, itemizedDeductions: makeFromInt 6888, federalTaxDue: makeFromInt 8868, stateTaxDue: makeFromInt 4307 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53278, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18676, stateTaxDue: makeFromInt 7470 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7562, ordinaryIncomeNonSS: makeFromInt 71587, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3698, stateTaxDue: makeFromInt 3223 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12916, federalTaxDue: makeFromInt 42186, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128271, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22377, federalTaxDue: makeFromInt 11561, stateTaxDue: makeFromInt 5939 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27923, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72500, qualifiedIncome: makeFromInt 79355, itemizedDeductions: makeFromInt 16120, federalTaxDue: makeFromInt 29470, stateTaxDue: makeFromInt 7338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10573, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6329, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85926, itemizedDeductions: makeFromInt 23272, federalTaxDue: makeFromInt 1594, stateTaxDue: makeFromInt 3933 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1298, federalTaxDue: makeFromInt 16611, stateTaxDue: makeFromInt 5508 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23058, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12693, federalTaxDue: makeFromInt 31011, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14656, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 38961, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11017, federalTaxDue: makeFromInt 2457, stateTaxDue: makeFromInt 1493 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49904, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49206, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24760, federalTaxDue: makeFromInt 34145, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35048, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19152, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 528 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37797, ordinaryIncomeNonSS: makeFromInt 101757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12796, stateTaxDue: makeFromInt 4613 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29051, ordinaryIncomeNonSS: makeFromInt 6888, qualifiedIncome: makeFromInt 51470, itemizedDeductions: makeFromInt 19759, federalTaxDue: makeFromInt 3627, stateTaxDue: makeFromInt 2663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11736, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43554, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1874 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44629, ordinaryIncomeNonSS: makeFromInt 13030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 647, stateTaxDue: makeFromInt 436 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 859 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6313, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57838, itemizedDeductions: makeFromInt 14546, federalTaxDue: makeFromInt 26904, stateTaxDue: makeFromInt 9917 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40825, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12615, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3368, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2570, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27068, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3035, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21175, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7474, ordinaryIncomeNonSS: makeFromInt 67902, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24524, stateTaxDue: makeFromInt 8216 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44459, ordinaryIncomeNonSS: makeFromInt 56429, qualifiedIncome: makeFromInt 92713, itemizedDeductions: makeFromInt 9969, federalTaxDue: makeFromInt 26047, stateTaxDue: makeFromInt 7002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2685, itemizedDeductions: makeFromInt 28677, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4628, ordinaryIncomeNonSS: makeFromInt 63499, qualifiedIncome: makeFromInt 68239, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18054, stateTaxDue: makeFromInt 6372 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3824, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48036, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14270, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24245, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28375, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32275, ordinaryIncomeNonSS: makeFromInt 78012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 809, federalTaxDue: makeFromInt 14610, stateTaxDue: makeFromInt 3446 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24698, ordinaryIncomeNonSS: makeFromInt 42969, qualifiedIncome: makeFromInt 59827, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16220, stateTaxDue: makeFromInt 4969 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42999, qualifiedIncome: makeFromInt 41874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6738, stateTaxDue: makeFromInt 3789 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19944, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80914, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4097, stateTaxDue: makeFromInt 3671 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145761, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21897, federalTaxDue: makeFromInt 22770, stateTaxDue: makeFromInt 6833 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6447, ordinaryIncomeNonSS: makeFromInt 119952, qualifiedIncome: makeFromInt 76454, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30642, stateTaxDue: makeFromInt 9565 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36752, ordinaryIncomeNonSS: makeFromInt 30897, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19708, federalTaxDue: makeFromInt 3209, stateTaxDue: makeFromInt 1090 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67500, qualifiedIncome: makeFromInt 60673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11106, stateTaxDue: makeFromInt 6034 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26845, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26639, qualifiedIncome: makeFromInt 98338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7191, stateTaxDue: makeFromInt 5823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125933, qualifiedIncome: makeFromInt 72252, itemizedDeductions: makeFromInt 21643, federalTaxDue: makeFromInt 36770, stateTaxDue: makeFromInt 9557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 838, stateTaxDue: makeFromInt 1353 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23129, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40655, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83430, qualifiedIncome: makeFromInt 44080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12918, stateTaxDue: makeFromInt 6001 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4874, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 290, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13119, ordinaryIncomeNonSS: makeFromInt 95980, qualifiedIncome: makeFromInt 17759, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18580, stateTaxDue: makeFromInt 5372 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16110, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50294, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2040 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13169, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26160, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 733 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33196, itemizedDeductions: makeFromInt 16908, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1185 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98679, qualifiedIncome: makeFromInt 62789, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25048, stateTaxDue: makeFromInt 7888 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25546, ordinaryIncomeNonSS: makeFromInt 133089, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17398, stateTaxDue: makeFromInt 5979 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15858, ordinaryIncomeNonSS: makeFromInt 68754, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9503, stateTaxDue: makeFromInt 2983 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33359, itemizedDeductions: makeFromInt 7684, federalTaxDue: makeFromInt 29582, stateTaxDue: makeFromInt 8801 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7100, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2017, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9706, itemizedDeductions: makeFromInt 21322, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67783, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6742, stateTaxDue: makeFromInt 3008 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31043, ordinaryIncomeNonSS: makeFromInt 44874, qualifiedIncome: makeFromInt 82245, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11918, stateTaxDue: makeFromInt 5881 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41609, ordinaryIncomeNonSS: makeFromInt 107838, qualifiedIncome: makeFromInt 39375, itemizedDeductions: makeFromInt 28426, federalTaxDue: makeFromInt 22738, stateTaxDue: makeFromInt 6886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33141, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 55026, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118073, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2789, federalTaxDue: makeFromInt 16428, stateTaxDue: makeFromInt 5471 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4449, ordinaryIncomeNonSS: makeFromInt 57946, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15446, stateTaxDue: makeFromInt 7322 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38126, ordinaryIncomeNonSS: makeFromInt 6990, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15892, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19322, ordinaryIncomeNonSS: makeFromInt 28812, qualifiedIncome: makeFromInt 76148, itemizedDeductions: makeFromInt 5695, federalTaxDue: makeFromInt 4847, stateTaxDue: makeFromInt 4654 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53377, itemizedDeductions: makeFromInt 9286, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119517, qualifiedIncome: makeFromInt 72432, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23774, stateTaxDue: makeFromInt 9341 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18009, ordinaryIncomeNonSS: makeFromInt 27197, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20134, federalTaxDue: makeFromInt 1380, stateTaxDue: makeFromInt 905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28264, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26836, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121010, qualifiedIncome: makeFromInt 56752, itemizedDeductions: makeFromInt 24657, federalTaxDue: makeFromInt 25927, stateTaxDue: makeFromInt 8841 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24067, federalTaxDue: makeFromInt 7627, stateTaxDue: makeFromInt 1998 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91264, itemizedDeductions: makeFromInt 3332, federalTaxDue: makeFromInt 4240, stateTaxDue: makeFromInt 4188 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4005, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101236, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45385, stateTaxDue: makeFromInt 10039 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19203, federalTaxDue: makeFromInt 3770, stateTaxDue: makeFromInt 2627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66324, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5772, federalTaxDue: makeFromInt 7541, stateTaxDue: makeFromInt 3036 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136734, qualifiedIncome: makeFromInt 79767, itemizedDeductions: makeFromInt 27706, federalTaxDue: makeFromInt 27448, stateTaxDue: makeFromInt 10150 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18167, ordinaryIncomeNonSS: makeFromInt 148465, qualifiedIncome: makeFromInt 29086, itemizedDeductions: makeFromInt 16068, federalTaxDue: makeFromInt 26100, stateTaxDue: makeFromInt 8403 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1488, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14182, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40058, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26943, itemizedDeductions: makeFromInt 10050, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48279, ordinaryIncomeNonSS: makeFromInt 40693, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25159, federalTaxDue: makeFromInt 3236, stateTaxDue: makeFromInt 1525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11810, ordinaryIncomeNonSS: makeFromInt 94224, qualifiedIncome: makeFromInt 84278, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25365, stateTaxDue: makeFromInt 8550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40049, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17422, itemizedDeductions: makeFromInt 3393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 236 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11326, ordinaryIncomeNonSS: makeFromInt 144110, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14641, federalTaxDue: makeFromInt 27404, stateTaxDue: makeFromInt 6751 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31242, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34727, itemizedDeductions: makeFromInt 13496, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1261 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6633, itemizedDeductions: makeFromInt 2872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11393, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45075, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 971, stateTaxDue: makeFromInt 2074 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16701, ordinaryIncomeNonSS: makeFromInt 69616, qualifiedIncome: makeFromInt 53221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8901, stateTaxDue: makeFromInt 5467 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6677, stateTaxDue: makeFromInt 2467 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136335, qualifiedIncome: makeFromInt 32087, itemizedDeductions: makeFromInt 6616, federalTaxDue: makeFromInt 26277, stateTaxDue: makeFromInt 8141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64102, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28909, stateTaxDue: makeFromInt 8145 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24530, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11095, federalTaxDue: makeFromInt 26629, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18030, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4733, ordinaryIncomeNonSS: makeFromInt 85768, qualifiedIncome: makeFromInt 94777, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15586, stateTaxDue: makeFromInt 8552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135981, qualifiedIncome: makeFromInt 43838, itemizedDeductions: makeFromInt 19784, federalTaxDue: makeFromInt 28298, stateTaxDue: makeFromInt 8736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35649, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6488, federalTaxDue: makeFromInt 32604, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14906, itemizedDeductions: makeFromInt 6654, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 70 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79183, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4122, stateTaxDue: makeFromInt 3488 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46914, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24285, itemizedDeductions: makeFromInt 19090, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 810 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16873, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40949, qualifiedIncome: makeFromInt 48753, itemizedDeductions: makeFromInt 16088, federalTaxDue: makeFromInt 7766, stateTaxDue: makeFromInt 4030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13861, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7826, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23089, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79196, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36413, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11404, ordinaryIncomeNonSS: makeFromInt 70999, qualifiedIncome: makeFromInt 62071, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17651, stateTaxDue: makeFromInt 6236 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42500, ordinaryIncomeNonSS: makeFromInt 128710, qualifiedIncome: makeFromInt 71215, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40844, stateTaxDue: makeFromInt 9741 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88331, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3800, stateTaxDue: makeFromInt 4042 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6992, federalTaxDue: makeFromInt 51223, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47816, ordinaryIncomeNonSS: makeFromInt 74394, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27395, federalTaxDue: makeFromInt 11146, stateTaxDue: makeFromInt 3243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83627, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25454, stateTaxDue: makeFromInt 4041 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10463, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69505, itemizedDeductions: makeFromInt 27428, federalTaxDue: makeFromInt 34354, stateTaxDue: makeFromInt 10848 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75371, itemizedDeductions: makeFromInt 11063, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3294 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91053, qualifiedIncome: makeFromInt 25502, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6772, stateTaxDue: makeFromInt 5153 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41793, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20721, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22713, ordinaryIncomeNonSS: makeFromInt 48032, qualifiedIncome: makeFromInt 99240, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12650, stateTaxDue: makeFromInt 7062 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30334, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91544, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8039, stateTaxDue: makeFromInt 4240 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29347, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 844 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131841, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10784, federalTaxDue: makeFromInt 22243, stateTaxDue: makeFromInt 6137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 135315, qualifiedIncome: makeFromInt 94144, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37613, stateTaxDue: makeFromInt 11274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92523, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38758, stateTaxDue: makeFromInt 11920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55496, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10664, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47858, ordinaryIncomeNonSS: makeFromInt 43788, qualifiedIncome: makeFromInt 88070, itemizedDeductions: makeFromInt 21055, federalTaxDue: makeFromInt 17872, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7839, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58891, qualifiedIncome: makeFromInt 34072, itemizedDeductions: makeFromInt 8052, federalTaxDue: makeFromInt 5691, stateTaxDue: makeFromInt 4190 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47760, qualifiedIncome: makeFromInt 80568, itemizedDeductions: makeFromInt 21766, federalTaxDue: makeFromInt 13581, stateTaxDue: makeFromInt 5741 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38411, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1612 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25163, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57360, qualifiedIncome: makeFromInt 34800, itemizedDeductions: makeFromInt 24144, federalTaxDue: makeFromInt 2729, stateTaxDue: makeFromInt 3933 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57878, qualifiedIncome: makeFromInt 47787, itemizedDeductions: makeFromInt 23387, federalTaxDue: makeFromInt 9195, stateTaxDue: makeFromInt 5028 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31466, ordinaryIncomeNonSS: makeFromInt 124127, qualifiedIncome: makeFromInt 15052, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18956, stateTaxDue: makeFromInt 6445 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32642, ordinaryIncomeNonSS: makeFromInt 149870, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13676, federalTaxDue: makeFromInt 31698, stateTaxDue: makeFromInt 7239 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22397, ordinaryIncomeNonSS: makeFromInt 130335, qualifiedIncome: makeFromInt 87514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45090, stateTaxDue: makeFromInt 10886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128358, qualifiedIncome: makeFromInt 31981, itemizedDeductions: makeFromInt 24172, federalTaxDue: makeFromInt 17324, stateTaxDue: makeFromInt 7524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43774, ordinaryIncomeNonSS: makeFromInt 104934, qualifiedIncome: makeFromInt 80407, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33435, stateTaxDue: makeFromInt 8892 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44454, ordinaryIncomeNonSS: makeFromInt 79166, qualifiedIncome: makeFromInt 34764, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20104, stateTaxDue: makeFromInt 5442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2257, ordinaryIncomeNonSS: makeFromInt 25752, qualifiedIncome: makeFromInt 69044, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1817, stateTaxDue: makeFromInt 4386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12534, qualifiedIncome: makeFromInt 27514, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1527 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73518, qualifiedIncome: makeFromInt 13399, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10567, stateTaxDue: makeFromInt 3891 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25102, qualifiedIncome: makeFromInt 10099, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4007, stateTaxDue: makeFromInt 1505 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24882, ordinaryIncomeNonSS: makeFromInt 50787, qualifiedIncome: makeFromInt 90997, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22594, stateTaxDue: makeFromInt 6884 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29338, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13037, federalTaxDue: makeFromInt 7199, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1948, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1343 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116373, qualifiedIncome: makeFromInt 42528, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17659, stateTaxDue: makeFromInt 7470 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25839, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20586, itemizedDeductions: makeFromInt 6996, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5122, ordinaryIncomeNonSS: makeFromInt 139080, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7103, federalTaxDue: makeFromInt 38238, stateTaxDue: makeFromInt 11744 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142192, qualifiedIncome: makeFromInt 57496, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32382, stateTaxDue: makeFromInt 9529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10256, ordinaryIncomeNonSS: makeFromInt 127536, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32393, stateTaxDue: makeFromInt 10952 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64594, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3997, stateTaxDue: makeFromInt 2866 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12999, federalTaxDue: makeFromInt 13818, stateTaxDue: makeFromInt 5823 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5598, ordinaryIncomeNonSS: makeFromInt 127867, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6403, federalTaxDue: makeFromInt 12519, stateTaxDue: makeFromInt 5918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14352, ordinaryIncomeNonSS: makeFromInt 110024, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13886, stateTaxDue: makeFromInt 4958 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46651, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3380, stateTaxDue: makeFromInt 1878 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26111, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50723, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2161 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14112, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 31 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7976, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39371, ordinaryIncomeNonSS: makeFromInt 49211, qualifiedIncome: makeFromInt 90122, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24882, stateTaxDue: makeFromInt 6612 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6813, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91780, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4317, stateTaxDue: makeFromInt 4014 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42909, ordinaryIncomeNonSS: makeFromInt 114219, qualifiedIncome: makeFromInt 98108, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39679, stateTaxDue: makeFromInt 10380 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33333, ordinaryIncomeNonSS: makeFromInt 146307, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14999, federalTaxDue: makeFromInt 36547, stateTaxDue: makeFromInt 7237 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102501, qualifiedIncome: makeFromInt 88846, itemizedDeductions: makeFromInt 21412, federalTaxDue: makeFromInt 36031, stateTaxDue: makeFromInt 9312 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16862, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9795, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 15 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1688, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24975, itemizedDeductions: makeFromInt 17699, federalTaxDue: makeFromInt 22290, stateTaxDue: makeFromInt 8074 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33904, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60422, itemizedDeductions: makeFromInt 19817, federalTaxDue: makeFromInt 856, stateTaxDue: makeFromInt 2646 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7803, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14278, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8312, itemizedDeductions: makeFromInt 9456, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 77 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7462, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73846, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5077, stateTaxDue: makeFromInt 3237 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18420, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24132, stateTaxDue: makeFromInt 7846 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49273, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24164, federalTaxDue: makeFromInt 2226, stateTaxDue: makeFromInt 2064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33488, qualifiedIncome: makeFromInt 41106, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1684, stateTaxDue: makeFromInt 3355 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22778, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46683, itemizedDeductions: makeFromInt 12205, federalTaxDue: makeFromInt 30611, stateTaxDue: makeFromInt 9488 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19764, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87813, itemizedDeductions: makeFromInt 14885, federalTaxDue: makeFromInt 5417, stateTaxDue: makeFromInt 3928 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 286, federalTaxDue: makeFromInt 35271, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78236, qualifiedIncome: makeFromInt 67503, itemizedDeductions: makeFromInt 10176, federalTaxDue: makeFromInt 16801, stateTaxDue: makeFromInt 6912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2281, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31428, itemizedDeductions: makeFromInt 16811, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 941 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 573 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23724, ordinaryIncomeNonSS: makeFromInt 2455, qualifiedIncome: makeFromInt 46596, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1978 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38651, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1420 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84673, itemizedDeductions: makeFromInt 1411, federalTaxDue: makeFromInt 29042, stateTaxDue: makeFromInt 11059 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24564, ordinaryIncomeNonSS: makeFromInt 140069, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21247, stateTaxDue: makeFromInt 6329 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47326, itemizedDeductions: makeFromInt 10118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1891 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20524, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8170, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2273, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2395, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48249, ordinaryIncomeNonSS: makeFromInt 102968, qualifiedIncome: makeFromInt 12794, itemizedDeductions: makeFromInt 11271, federalTaxDue: makeFromInt 16936, stateTaxDue: makeFromInt 5313 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91866, itemizedDeductions: makeFromInt 5653, federalTaxDue: makeFromInt 4330, stateTaxDue: makeFromInt 4218 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35063, itemizedDeductions: makeFromInt 4817, federalTaxDue: makeFromInt 34278, stateTaxDue: makeFromInt 8785 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45310, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2719, stateTaxDue: makeFromInt 1891 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2976, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10792, itemizedDeductions: makeFromInt 15721, federalTaxDue: makeFromInt 25268, stateTaxDue: makeFromInt 7465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52365, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2000, stateTaxDue: makeFromInt 2018 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26856, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22210, federalTaxDue: makeFromInt 17506, stateTaxDue: makeFromInt 5768 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3830, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37389, ordinaryIncomeNonSS: makeFromInt 21424, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 728, stateTaxDue: makeFromInt 496 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13629, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46634, ordinaryIncomeNonSS: makeFromInt 97840, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21750, stateTaxDue: makeFromInt 4541 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15128, ordinaryIncomeNonSS: makeFromInt 68893, qualifiedIncome: makeFromInt 5346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8838, stateTaxDue: makeFromInt 3337 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32644, ordinaryIncomeNonSS: makeFromInt 115006, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45110, stateTaxDue: makeFromInt 10741 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19289, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28699, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47055, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1411, stateTaxDue: makeFromInt 2175 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49561, ordinaryIncomeNonSS: makeFromInt 128116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10839, federalTaxDue: makeFromInt 31166, stateTaxDue: makeFromInt 5951 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39576, ordinaryIncomeNonSS: makeFromInt 105866, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22552, stateTaxDue: makeFromInt 4838 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116569, qualifiedIncome: makeFromInt 78341, itemizedDeductions: makeFromInt 24182, federalTaxDue: makeFromInt 27129, stateTaxDue: makeFromInt 9491 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39424, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2083, stateTaxDue: makeFromInt 2664 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48784, ordinaryIncomeNonSS: makeFromInt 87053, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19915, stateTaxDue: makeFromInt 4098 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20639, ordinaryIncomeNonSS: makeFromInt 101724, qualifiedIncome: makeFromInt 7006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10379, stateTaxDue: makeFromInt 4962 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123277, qualifiedIncome: makeFromInt 99317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33555, stateTaxDue: makeFromInt 10675 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68491, qualifiedIncome: makeFromInt 65385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17489, stateTaxDue: makeFromInt 6239 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29933, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4837, itemizedDeductions: makeFromInt 5529, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 22 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29097, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107584, qualifiedIncome: makeFromInt 76405, itemizedDeductions: makeFromInt 8453, federalTaxDue: makeFromInt 29317, stateTaxDue: makeFromInt 9037 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35613, ordinaryIncomeNonSS: makeFromInt 129193, qualifiedIncome: makeFromInt 82020, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39152, stateTaxDue: makeFromInt 10425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30300, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2517, stateTaxDue: makeFromInt 1260 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20930, itemizedDeductions: makeFromInt 18461, federalTaxDue: makeFromInt 39130, stateTaxDue: makeFromInt 8167 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39250, ordinaryIncomeNonSS: makeFromInt 59947, qualifiedIncome: makeFromInt 68240, itemizedDeductions: makeFromInt 15867, federalTaxDue: makeFromInt 18876, stateTaxDue: makeFromInt 6034 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6146, stateTaxDue: makeFromInt 1919 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4574, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17548, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 402 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17773, ordinaryIncomeNonSS: makeFromInt 24753, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24961, federalTaxDue: makeFromInt 411, stateTaxDue: makeFromInt 663 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8292, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41255, ordinaryIncomeNonSS: makeFromInt 73192, qualifiedIncome: makeFromInt 15465, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14249, stateTaxDue: makeFromInt 3858 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33201, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1265 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133369, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35252, stateTaxDue: makeFromInt 11351 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140835, qualifiedIncome: makeFromInt 69517, itemizedDeductions: makeFromInt 16870, federalTaxDue: makeFromInt 24752, stateTaxDue: makeFromInt 9843 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37520, ordinaryIncomeNonSS: makeFromInt 79632, qualifiedIncome: makeFromInt 31584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17385, stateTaxDue: makeFromInt 5186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83824, qualifiedIncome: makeFromInt 15925, itemizedDeductions: makeFromInt 16990, federalTaxDue: makeFromInt 20431, stateTaxDue: makeFromInt 4659 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89744, qualifiedIncome: makeFromInt 9776, itemizedDeductions: makeFromInt 1893, federalTaxDue: makeFromInt 14863, stateTaxDue: makeFromInt 4729 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39432, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36988, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17657, ordinaryIncomeNonSS: makeFromInt 134367, qualifiedIncome: makeFromInt 81037, itemizedDeductions: makeFromInt 20224, federalTaxDue: makeFromInt 35906, stateTaxDue: makeFromInt 10535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15534, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19246, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34821, itemizedDeductions: makeFromInt 26372, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118303, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36726, stateTaxDue: makeFromInt 10580 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40173, ordinaryIncomeNonSS: makeFromInt 3516, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24858, federalTaxDue: makeFromInt 3728, stateTaxDue: makeFromInt 4701 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53945, qualifiedIncome: makeFromInt 51599, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10551, stateTaxDue: makeFromInt 5022 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 3073 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78352, itemizedDeductions: makeFromInt 27827, federalTaxDue: makeFromInt 6105, stateTaxDue: makeFromInt 3568 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119328, qualifiedIncome: makeFromInt 45374, itemizedDeductions: makeFromInt 25309, federalTaxDue: makeFromInt 18736, stateTaxDue: makeFromInt 7760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32623, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92581, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37300, stateTaxDue: makeFromInt 11719 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17467, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11305, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14749, ordinaryIncomeNonSS: makeFromInt 100217, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19643, federalTaxDue: makeFromInt 27918, stateTaxDue: makeFromInt 9436 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40384, ordinaryIncomeNonSS: makeFromInt 130642, qualifiedIncome: makeFromInt 73435, itemizedDeductions: makeFromInt 14564, federalTaxDue: makeFromInt 30649, stateTaxDue: makeFromInt 9529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108885, qualifiedIncome: makeFromInt 77028, itemizedDeductions: makeFromInt 29303, federalTaxDue: makeFromInt 17131, stateTaxDue: makeFromInt 8829 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83307, itemizedDeductions: makeFromInt 4662, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3690 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6194, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68357, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4002, stateTaxDue: makeFromInt 3163 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95946, qualifiedIncome: makeFromInt 71108, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25139, stateTaxDue: makeFromInt 7878 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115854, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10021, federalTaxDue: makeFromInt 19052, stateTaxDue: makeFromInt 5426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57733, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1100, stateTaxDue: makeFromInt 2598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 742, ordinaryIncomeNonSS: makeFromInt 141268, qualifiedIncome: makeFromInt 22670, itemizedDeductions: makeFromInt 10373, federalTaxDue: makeFromInt 32130, stateTaxDue: makeFromInt 8136 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5196, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40262, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 495, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46124, ordinaryIncomeNonSS: makeFromInt 136497, qualifiedIncome: makeFromInt 82902, itemizedDeductions: makeFromInt 2444, federalTaxDue: makeFromInt 36768, stateTaxDue: makeFromInt 10295 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121961, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28516, federalTaxDue: makeFromInt 26462, stateTaxDue: makeFromInt 5643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 145 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28072, ordinaryIncomeNonSS: makeFromInt 109669, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20833, federalTaxDue: makeFromInt 32672, stateTaxDue: makeFromInt 9908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43898, ordinaryIncomeNonSS: makeFromInt 22027, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 546, stateTaxDue: makeFromInt 573 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3816, qualifiedIncome: makeFromInt 46662, itemizedDeductions: makeFromInt 17058, federalTaxDue: makeFromInt 7899, stateTaxDue: makeFromInt 2069 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11121, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4674, ordinaryIncomeNonSS: makeFromInt 38308, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5040, federalTaxDue: makeFromInt 990, stateTaxDue: makeFromInt 1440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14182, federalTaxDue: makeFromInt 25396, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52446, itemizedDeductions: makeFromInt 22993, federalTaxDue: makeFromInt 833, stateTaxDue: makeFromInt 2147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8036, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63383, itemizedDeductions: makeFromInt 7051, federalTaxDue: makeFromInt 3860, stateTaxDue: makeFromInt 2804 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92488, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3949 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24520, ordinaryIncomeNonSS: makeFromInt 85617, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16797, stateTaxDue: makeFromInt 3900 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144523, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24486, stateTaxDue: makeFromInt 6551 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44131, ordinaryIncomeNonSS: makeFromInt 134322, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26865, stateTaxDue: makeFromInt 6341 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 135756, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17115, stateTaxDue: makeFromInt 6495 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97790, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 561, stateTaxDue: makeFromInt 4415 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56103, itemizedDeductions: makeFromInt 7736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22179, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6585, stateTaxDue: makeFromInt 3995 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43905, ordinaryIncomeNonSS: makeFromInt 25197, qualifiedIncome: makeFromInt 41415, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13140, stateTaxDue: makeFromInt 3142 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70891, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7008, stateTaxDue: makeFromInt 3290 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8594, ordinaryIncomeNonSS: makeFromInt 83317, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8436, federalTaxDue: makeFromInt 11349, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8660, ordinaryIncomeNonSS: makeFromInt 92416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10063, stateTaxDue: makeFromInt 4246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87206, itemizedDeductions: makeFromInt 29274, federalTaxDue: makeFromInt 33404, stateTaxDue: makeFromInt 11285 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101453, qualifiedIncome: makeFromInt 37974, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21291, stateTaxDue: makeFromInt 6617 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 80, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13087, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25328, qualifiedIncome: makeFromInt 41752, itemizedDeductions: makeFromInt 13265, federalTaxDue: makeFromInt 3540, stateTaxDue: makeFromInt 2993 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21214, ordinaryIncomeNonSS: makeFromInt 136041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25808, stateTaxDue: makeFromInt 6489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29716, ordinaryIncomeNonSS: makeFromInt 65292, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21519, federalTaxDue: makeFromInt 21412, stateTaxDue: makeFromInt 7879 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31741, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36972, itemizedDeductions: makeFromInt 17959, federalTaxDue: makeFromInt 36753, stateTaxDue: makeFromInt 9094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11705, ordinaryIncomeNonSS: makeFromInt 4511, qualifiedIncome: makeFromInt 64875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5111, stateTaxDue: makeFromInt 3314 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18489, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23921, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37998, ordinaryIncomeNonSS: makeFromInt 135707, qualifiedIncome: makeFromInt 37782, itemizedDeductions: makeFromInt 7467, federalTaxDue: makeFromInt 31614, stateTaxDue: makeFromInt 8299 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17236, ordinaryIncomeNonSS: makeFromInt 68903, qualifiedIncome: makeFromInt 74809, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22302, stateTaxDue: makeFromInt 6731 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3445, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1271, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9821, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13741, stateTaxDue: makeFromInt 5036 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20848, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48905, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34596, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33173, stateTaxDue: makeFromInt 8755 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60909, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2083, stateTaxDue: makeFromInt 2590 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4570, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4957, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27179, ordinaryIncomeNonSS: makeFromInt 124200, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20278, federalTaxDue: makeFromInt 18171, stateTaxDue: makeFromInt 5681 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146942, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24647, stateTaxDue: makeFromInt 7270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31237, ordinaryIncomeNonSS: makeFromInt 138512, qualifiedIncome: makeFromInt 66961, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34640, stateTaxDue: makeFromInt 9826 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20335, ordinaryIncomeNonSS: makeFromInt 73385, qualifiedIncome: makeFromInt 58830, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18344, stateTaxDue: makeFromInt 6192 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96392, itemizedDeductions: makeFromInt 5902, federalTaxDue: makeFromInt 33297, stateTaxDue: makeFromInt 11645 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45859, ordinaryIncomeNonSS: makeFromInt 30646, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3318, federalTaxDue: makeFromInt 6130, stateTaxDue: makeFromInt 1339 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77625, itemizedDeductions: makeFromInt 1430, federalTaxDue: makeFromInt 4590, stateTaxDue: makeFromInt 3626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43220, ordinaryIncomeNonSS: makeFromInt 43437, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26003, stateTaxDue: makeFromInt 6968 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13667, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37227, ordinaryIncomeNonSS: makeFromInt 17326, qualifiedIncome: makeFromInt 68745, itemizedDeductions: makeFromInt 22985, federalTaxDue: makeFromInt 11068, stateTaxDue: makeFromInt 3849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43922, ordinaryIncomeNonSS: makeFromInt 7449, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4491, federalTaxDue: makeFromInt 19219, stateTaxDue: makeFromInt 5255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37649, ordinaryIncomeNonSS: makeFromInt 23054, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14962, federalTaxDue: makeFromInt 18111, stateTaxDue: makeFromInt 5898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2798, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53448, itemizedDeductions: makeFromInt 13572, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12009, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74002, qualifiedIncome: makeFromInt 41545, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22542, stateTaxDue: makeFromInt 5492 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52491, itemizedDeductions: makeFromInt 23676, federalTaxDue: makeFromInt 2849, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123013, qualifiedIncome: makeFromInt 8797, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19913, stateTaxDue: makeFromInt 6136 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5088, itemizedDeductions: makeFromInt 3568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42214, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25955, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62185, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9049, stateTaxDue: makeFromInt 2854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3036, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98391, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 485, federalTaxDue: makeFromInt 21906, stateTaxDue: makeFromInt 9445 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16598, itemizedDeductions: makeFromInt 4136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 355 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47664, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86522, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6157, stateTaxDue: makeFromInt 3751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3445, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22672, ordinaryIncomeNonSS: makeFromInt 65984, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3557, federalTaxDue: makeFromInt 7038, stateTaxDue: makeFromInt 2724 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22001, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36920, itemizedDeductions: makeFromInt 22970, federalTaxDue: makeFromInt 28451, stateTaxDue: makeFromInt 8880 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123794, qualifiedIncome: makeFromInt 39529, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18842, stateTaxDue: makeFromInt 7491 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3767, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24023, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4366, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122195, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27372, federalTaxDue: makeFromInt 12941, stateTaxDue: makeFromInt 5681 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13069, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7558, federalTaxDue: makeFromInt 23607, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80488, itemizedDeductions: makeFromInt 26248, federalTaxDue: makeFromInt 29264, stateTaxDue: makeFromInt 10849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121341, qualifiedIncome: makeFromInt 88019, itemizedDeductions: makeFromInt 1431, federalTaxDue: makeFromInt 37317, stateTaxDue: makeFromInt 10453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47017, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17824, ordinaryIncomeNonSS: makeFromInt 36801, qualifiedIncome: makeFromInt 84147, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13762, stateTaxDue: makeFromInt 5822 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48113, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12973, federalTaxDue: makeFromInt 41666, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50517, qualifiedIncome: makeFromInt 12381, itemizedDeductions: makeFromInt 13672, federalTaxDue: makeFromInt 3844, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34624, itemizedDeductions: makeFromInt 3535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1215 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45566, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51621, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44091, stateTaxDue: makeFromInt 10058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39417, ordinaryIncomeNonSS: makeFromInt 134629, qualifiedIncome: makeFromInt 60244, itemizedDeductions: makeFromInt 6319, federalTaxDue: makeFromInt 38450, stateTaxDue: makeFromInt 9490 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35881, ordinaryIncomeNonSS: makeFromInt 149299, qualifiedIncome: makeFromInt 12833, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35980, stateTaxDue: makeFromInt 7852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11718, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89208, itemizedDeductions: makeFromInt 12145, federalTaxDue: makeFromInt 2086, stateTaxDue: makeFromInt 4101 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113387, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13057, stateTaxDue: makeFromInt 5294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84668, qualifiedIncome: makeFromInt 25349, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18153, stateTaxDue: makeFromInt 5386 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13109, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 711, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93306, itemizedDeductions: makeFromInt 11973, federalTaxDue: makeFromInt 41995, stateTaxDue: makeFromInt 12062 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25212, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69449, itemizedDeductions: makeFromInt 21041, federalTaxDue: makeFromInt 40532, stateTaxDue: makeFromInt 10517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103679, qualifiedIncome: makeFromInt 31971, itemizedDeductions: makeFromInt 3157, federalTaxDue: makeFromInt 21675, stateTaxDue: makeFromInt 6571 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79904, qualifiedIncome: makeFromInt 79621, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18572, stateTaxDue: makeFromInt 7687 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13397, ordinaryIncomeNonSS: makeFromInt 147427, qualifiedIncome: makeFromInt 48089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33679, stateTaxDue: makeFromInt 9530 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2242, qualifiedIncome: makeFromInt 62454, itemizedDeductions: makeFromInt 15897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3196, ordinaryIncomeNonSS: makeFromInt 78848, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1954, federalTaxDue: makeFromInt 22252, stateTaxDue: makeFromInt 8672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148608, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18792, federalTaxDue: makeFromInt 37984, stateTaxDue: makeFromInt 12230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37403, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72359, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14270, stateTaxDue: makeFromInt 8342 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6313, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71677, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37110, stateTaxDue: makeFromInt 10829 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8291, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52554, qualifiedIncome: makeFromInt 74183, itemizedDeductions: makeFromInt 21696, federalTaxDue: makeFromInt 13262, stateTaxDue: makeFromInt 5882 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100672, qualifiedIncome: makeFromInt 5643, itemizedDeductions: makeFromInt 28265, federalTaxDue: makeFromInt 9326, stateTaxDue: makeFromInt 4973 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122547, qualifiedIncome: makeFromInt 83385, itemizedDeductions: makeFromInt 25779, federalTaxDue: makeFromInt 25146, stateTaxDue: makeFromInt 9822 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60475, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5688, stateTaxDue: makeFromInt 2769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41397, qualifiedIncome: makeFromInt 81991, itemizedDeductions: makeFromInt 6677, federalTaxDue: makeFromInt 13485, stateTaxDue: makeFromInt 5714 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12497, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25785, ordinaryIncomeNonSS: makeFromInt 94190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14262, stateTaxDue: makeFromInt 4135 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96329, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15391, federalTaxDue: makeFromInt 22951, stateTaxDue: makeFromInt 4561 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46894, ordinaryIncomeNonSS: makeFromInt 143336, qualifiedIncome: makeFromInt 29522, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29959, stateTaxDue: makeFromInt 7968 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23802, ordinaryIncomeNonSS: makeFromInt 46112, qualifiedIncome: makeFromInt 85804, itemizedDeductions: makeFromInt 22219, federalTaxDue: makeFromInt 18327, stateTaxDue: makeFromInt 6341 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97721, itemizedDeductions: makeFromInt 18096, federalTaxDue: makeFromInt 3488, stateTaxDue: makeFromInt 4211 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11788, stateTaxDue: makeFromInt 4524 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33696, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84725, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7369, stateTaxDue: makeFromInt 3935 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112008, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17044, federalTaxDue: makeFromInt 39848, stateTaxDue: makeFromInt 10225 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17065, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8838, federalTaxDue: makeFromInt 9712, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35865, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 349 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33238, ordinaryIncomeNonSS: makeFromInt 24224, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5177, federalTaxDue: makeFromInt 1069, stateTaxDue: makeFromInt 636 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24386, ordinaryIncomeNonSS: makeFromInt 94678, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11067, stateTaxDue: makeFromInt 4259 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87211, itemizedDeductions: makeFromInt 16107, federalTaxDue: makeFromInt 39506, stateTaxDue: makeFromInt 11669 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28210, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17985, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12042, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14873, qualifiedIncome: makeFromInt 65580, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19220, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1818, itemizedDeductions: makeFromInt 7377, federalTaxDue: makeFromInt 27574, stateTaxDue: makeFromInt 7314 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1909, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 837 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28823, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5054, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1245, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5894, ordinaryIncomeNonSS: makeFromInt 18776, qualifiedIncome: makeFromInt 3791, itemizedDeductions: makeFromInt 2611, federalTaxDue: makeFromInt 703, stateTaxDue: makeFromInt 927 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27135, ordinaryIncomeNonSS: makeFromInt 119046, qualifiedIncome: makeFromInt 76079, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31361, stateTaxDue: makeFromInt 9501 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18039, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28045, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82047, itemizedDeductions: makeFromInt 14458, federalTaxDue: makeFromInt 40386, stateTaxDue: makeFromInt 11227 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82506, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9760, stateTaxDue: makeFromInt 3779 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16176, ordinaryIncomeNonSS: makeFromInt 141308, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38056, stateTaxDue: makeFromInt 11810 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18735, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74429, itemizedDeductions: makeFromInt 3951, federalTaxDue: makeFromInt 44278, stateTaxDue: makeFromInt 11099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28386, itemizedDeductions: makeFromInt 10503, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48324, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21107, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 526 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21278, federalTaxDue: makeFromInt 17407, stateTaxDue: makeFromInt 4513 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76881, qualifiedIncome: makeFromInt 23172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9373, stateTaxDue: makeFromInt 4552 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42777, qualifiedIncome: makeFromInt 58943, itemizedDeductions: makeFromInt 11574, federalTaxDue: makeFromInt 17388, stateTaxDue: makeFromInt 4511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20335, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13912, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31599, ordinaryIncomeNonSS: makeFromInt 99084, qualifiedIncome: makeFromInt 98095, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34011, stateTaxDue: makeFromInt 9404 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55747, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4452, stateTaxDue: makeFromInt 2532 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 943 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68014, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10151, stateTaxDue: makeFromInt 2926 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38166, ordinaryIncomeNonSS: makeFromInt 2896, qualifiedIncome: makeFromInt 42746, itemizedDeductions: makeFromInt 15725, federalTaxDue: makeFromInt 764, stateTaxDue: makeFromInt 1899 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29262, ordinaryIncomeNonSS: makeFromInt 35938, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10631, federalTaxDue: makeFromInt 2387, stateTaxDue: makeFromInt 1169 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35738, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 724, federalTaxDue: makeFromInt 7022, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40442, ordinaryIncomeNonSS: makeFromInt 42824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22574, federalTaxDue: makeFromInt 6184, stateTaxDue: makeFromInt 1686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61563, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4788, stateTaxDue: makeFromInt 2711 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84652, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3228, federalTaxDue: makeFromInt 6842, stateTaxDue: makeFromInt 3629 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41793, qualifiedIncome: makeFromInt 48652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 894, stateTaxDue: makeFromInt 3960 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14728, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94, itemizedDeductions: makeFromInt 13422, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30697, ordinaryIncomeNonSS: makeFromInt 95010, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10378, stateTaxDue: makeFromInt 4276 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39904, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94003, itemizedDeductions: makeFromInt 6246, federalTaxDue: makeFromInt 785, stateTaxDue: makeFromInt 4025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40620, ordinaryIncomeNonSS: makeFromInt 92344, qualifiedIncome: makeFromInt 56141, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19674, stateTaxDue: makeFromInt 6749 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24745, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1055, federalTaxDue: makeFromInt 90, stateTaxDue: makeFromInt 862 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3113, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8721, ordinaryIncomeNonSS: makeFromInt 11462, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8527, stateTaxDue: makeFromInt 5118 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23941, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16555, ordinaryIncomeNonSS: makeFromInt 75903, qualifiedIncome: makeFromInt 16256, itemizedDeductions: makeFromInt 15105, federalTaxDue: makeFromInt 11865, stateTaxDue: makeFromInt 4272 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15352, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6447, itemizedDeductions: makeFromInt 9093, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7087, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126332, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24381, federalTaxDue: makeFromInt 11134, stateTaxDue: makeFromInt 5642 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22396, ordinaryIncomeNonSS: makeFromInt 43240, qualifiedIncome: makeFromInt 35977, itemizedDeductions: makeFromInt 10558, federalTaxDue: makeFromInt 11711, stateTaxDue: makeFromInt 3506 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80516, itemizedDeductions: makeFromInt 19002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 969, ordinaryIncomeNonSS: makeFromInt 60438, qualifiedIncome: makeFromInt 97721, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20809, stateTaxDue: makeFromInt 7719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34058, ordinaryIncomeNonSS: makeFromInt 32330, qualifiedIncome: makeFromInt 77986, itemizedDeductions: makeFromInt 2838, federalTaxDue: makeFromInt 12994, stateTaxDue: makeFromInt 5075 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1861, ordinaryIncomeNonSS: makeFromInt 124464, qualifiedIncome: makeFromInt 25248, itemizedDeductions: makeFromInt 9870, federalTaxDue: makeFromInt 21687, stateTaxDue: makeFromInt 6911 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30683, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2581, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44286, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10655, stateTaxDue: makeFromInt 1912 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38367, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21200, federalTaxDue: makeFromInt 31781, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99680, itemizedDeductions: makeFromInt 23751, federalTaxDue: makeFromInt 51461, stateTaxDue: makeFromInt 12387 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12222, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15365, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 93 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1226, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39612, ordinaryIncomeNonSS: makeFromInt 21203, qualifiedIncome: makeFromInt 14346, itemizedDeductions: makeFromInt 6244, federalTaxDue: makeFromInt 3886, stateTaxDue: makeFromInt 1522 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45096, ordinaryIncomeNonSS: makeFromInt 21348, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11671, stateTaxDue: makeFromInt 5592 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4648, ordinaryIncomeNonSS: makeFromInt 51691, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13601, stateTaxDue: makeFromInt 7210 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47908, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29738, qualifiedIncome: makeFromInt 88223, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9508, stateTaxDue: makeFromInt 5643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15495, ordinaryIncomeNonSS: makeFromInt 26633, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5907 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18915, federalTaxDue: makeFromInt 4516, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1043, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42270, itemizedDeductions: makeFromInt 28806, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1503 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23970, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 524 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18248, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19130, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51993, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16681, itemizedDeductions: makeFromInt 1980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17828, federalTaxDue: makeFromInt 28911, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45732, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1884 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9686, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41392, qualifiedIncome: makeFromInt 48812, itemizedDeductions: makeFromInt 7712, federalTaxDue: makeFromInt 1064, stateTaxDue: makeFromInt 4035 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59205, qualifiedIncome: makeFromInt 49157, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2951, stateTaxDue: makeFromInt 4943 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5287, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6825, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4789, ordinaryIncomeNonSS: makeFromInt 46962, qualifiedIncome: makeFromInt 11762, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2028, stateTaxDue: makeFromInt 2261 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108264, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2936, federalTaxDue: makeFromInt 15672, stateTaxDue: makeFromInt 5158 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129839, qualifiedIncome: makeFromInt 4511, itemizedDeductions: makeFromInt 881, federalTaxDue: makeFromInt 31109, stateTaxDue: makeFromInt 6463 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28630, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33298, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37, stateTaxDue: makeFromInt 1410 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10557, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43831, ordinaryIncomeNonSS: makeFromInt 17187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 224 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16421, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141905, qualifiedIncome: makeFromInt 42942, itemizedDeductions: makeFromInt 14975, federalTaxDue: makeFromInt 29076, stateTaxDue: makeFromInt 8876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28336, ordinaryIncomeNonSS: makeFromInt 13465, qualifiedIncome: makeFromInt 7815, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 589 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102362, qualifiedIncome: makeFromInt 50560, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15161, stateTaxDue: makeFromInt 7350 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36572, ordinaryIncomeNonSS: makeFromInt 48519, qualifiedIncome: makeFromInt 39459, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11192, stateTaxDue: makeFromInt 3824 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44412, ordinaryIncomeNonSS: makeFromInt 138270, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22329, federalTaxDue: makeFromInt 30721, stateTaxDue: makeFromInt 6459 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110496, qualifiedIncome: makeFromInt 73551, itemizedDeductions: makeFromInt 20854, federalTaxDue: makeFromInt 21941, stateTaxDue: makeFromInt 8734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33154, qualifiedIncome: makeFromInt 10434, itemizedDeductions: makeFromInt 25512, federalTaxDue: makeFromInt 359, stateTaxDue: makeFromInt 1999 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39508, ordinaryIncomeNonSS: makeFromInt 40807, qualifiedIncome: makeFromInt 37668, itemizedDeductions: makeFromInt 15265, federalTaxDue: makeFromInt 11140, stateTaxDue: makeFromInt 3574 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9368, ordinaryIncomeNonSS: makeFromInt 19044, qualifiedIncome: makeFromInt 11152, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 859, stateTaxDue: makeFromInt 1255 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18324, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 341 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18334, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96735, qualifiedIncome: makeFromInt 25046, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17422, stateTaxDue: makeFromInt 5634 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13460, ordinaryIncomeNonSS: makeFromInt 64365, qualifiedIncome: makeFromInt 49604, itemizedDeductions: makeFromInt 4465, federalTaxDue: makeFromInt 17352, stateTaxDue: makeFromInt 5466 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47490, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1900 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44482, ordinaryIncomeNonSS: makeFromInt 148372, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29789, stateTaxDue: makeFromInt 6914 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43043, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12585, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30818, stateTaxDue: makeFromInt 7754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8648, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20740, ordinaryIncomeNonSS: makeFromInt 132464, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18248, stateTaxDue: makeFromInt 5948 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30731, ordinaryIncomeNonSS: makeFromInt 116804, qualifiedIncome: makeFromInt 75198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36183, stateTaxDue: makeFromInt 9145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31764, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1273 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32044, ordinaryIncomeNonSS: makeFromInt 99460, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5619, federalTaxDue: makeFromInt 18056, stateTaxDue: makeFromInt 4398 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29829, qualifiedIncome: makeFromInt 12835, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 718, stateTaxDue: makeFromInt 1558 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 967, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21822, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34884, ordinaryIncomeNonSS: makeFromInt 93718, qualifiedIncome: makeFromInt 46279, itemizedDeductions: makeFromInt 21340, federalTaxDue: makeFromInt 23998, stateTaxDue: makeFromInt 6425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25061, ordinaryIncomeNonSS: makeFromInt 131049, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24998, stateTaxDue: makeFromInt 6133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37803, itemizedDeductions: makeFromInt 21428, federalTaxDue: makeFromInt 23, stateTaxDue: makeFromInt 1500 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78679, itemizedDeductions: makeFromInt 23896, federalTaxDue: makeFromInt 4748, stateTaxDue: makeFromInt 3679 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73468, itemizedDeductions: makeFromInt 11786, federalTaxDue: makeFromInt 1570, stateTaxDue: makeFromInt 3298 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85053, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9113, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3413, ordinaryIncomeNonSS: makeFromInt 25283, qualifiedIncome: makeFromInt 25749, itemizedDeductions: makeFromInt 27916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1877 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3473, ordinaryIncomeNonSS: makeFromInt 64031, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15113, federalTaxDue: makeFromInt 6511, stateTaxDue: makeFromInt 2919 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61967, itemizedDeductions: makeFromInt 26234, federalTaxDue: makeFromInt 31335, stateTaxDue: makeFromInt 10223 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30288, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53157, itemizedDeductions: makeFromInt 28202, federalTaxDue: makeFromInt 2067, stateTaxDue: makeFromInt 2462 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16448, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51499, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2032, stateTaxDue: makeFromInt 2402 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11792, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57288, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1539, stateTaxDue: makeFromInt 2609 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16415, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7483, ordinaryIncomeNonSS: makeFromInt 147898, qualifiedIncome: makeFromInt 97935, itemizedDeductions: makeFromInt 29576, federalTaxDue: makeFromInt 37183, stateTaxDue: makeFromInt 11717 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5448, ordinaryIncomeNonSS: makeFromInt 64980, qualifiedIncome: makeFromInt 89098, itemizedDeductions: makeFromInt 18452, federalTaxDue: makeFromInt 20913, stateTaxDue: makeFromInt 7634 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112563, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2821, federalTaxDue: makeFromInt 15051, stateTaxDue: makeFromInt 5190 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132142, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1768, federalTaxDue: makeFromInt 27139, stateTaxDue: makeFromInt 6515 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14719, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 61 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14745, stateTaxDue: makeFromInt 5561 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26286, ordinaryIncomeNonSS: makeFromInt 84287, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13948, stateTaxDue: makeFromInt 3850 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114063, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41646, stateTaxDue: makeFromInt 10448 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142558, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 653, federalTaxDue: makeFromInt 35738, stateTaxDue: makeFromInt 6673 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17383, ordinaryIncomeNonSS: makeFromInt 28530, qualifiedIncome: makeFromInt 28545, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1331, stateTaxDue: makeFromInt 2479 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10583, ordinaryIncomeNonSS: makeFromInt 133102, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27106, federalTaxDue: makeFromInt 18947, stateTaxDue: makeFromInt 6080 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12983, ordinaryIncomeNonSS: makeFromInt 107750, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12892, stateTaxDue: makeFromInt 4813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15827, ordinaryIncomeNonSS: makeFromInt 134056, qualifiedIncome: makeFromInt 18380, itemizedDeductions: makeFromInt 24199, federalTaxDue: makeFromInt 20064, stateTaxDue: makeFromInt 7121 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4226, ordinaryIncomeNonSS: makeFromInt 59133, qualifiedIncome: makeFromInt 28412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4211, stateTaxDue: makeFromInt 3977 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 479, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23472, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50480, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1369, stateTaxDue: makeFromInt 2269 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18562, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92701, itemizedDeductions: makeFromInt 20032, federalTaxDue: makeFromInt 36054, stateTaxDue: makeFromInt 11660 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77142, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44438, stateTaxDue: makeFromInt 11156 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43702, itemizedDeductions: makeFromInt 11494, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1610 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35903, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1382 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2988, stateTaxDue: makeFromInt 3125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73031, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6325, stateTaxDue: makeFromInt 3378 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21579, ordinaryIncomeNonSS: makeFromInt 133555, qualifiedIncome: makeFromInt 52858, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30009, stateTaxDue: makeFromInt 8946 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9184, stateTaxDue: makeFromInt 2515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49092, ordinaryIncomeNonSS: makeFromInt 80381, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29424, federalTaxDue: makeFromInt 12406, stateTaxDue: makeFromInt 3549 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32408, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130542, qualifiedIncome: makeFromInt 65887, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25549, stateTaxDue: makeFromInt 9569 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92670, itemizedDeductions: makeFromInt 13734, federalTaxDue: makeFromInt 48317, stateTaxDue: makeFromInt 11559 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75758, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14694, federalTaxDue: makeFromInt 8079, stateTaxDue: makeFromInt 3533 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31073, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1050 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30695, ordinaryIncomeNonSS: makeFromInt 21567, qualifiedIncome: makeFromInt 95373, itemizedDeductions: makeFromInt 25015, federalTaxDue: makeFromInt 4425, stateTaxDue: makeFromInt 5172 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6237, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84567, itemizedDeductions: makeFromInt 16476, federalTaxDue: makeFromInt 6779, stateTaxDue: makeFromInt 4048 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49148, ordinaryIncomeNonSS: makeFromInt 23433, qualifiedIncome: makeFromInt 87515, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15602, stateTaxDue: makeFromInt 5108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42505, itemizedDeductions: makeFromInt 14601, federalTaxDue: makeFromInt 32067, stateTaxDue: makeFromInt 9150 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45016, ordinaryIncomeNonSS: makeFromInt 133940, qualifiedIncome: makeFromInt 51851, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38318, stateTaxDue: makeFromInt 9027 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42503, ordinaryIncomeNonSS: makeFromInt 112809, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25758, federalTaxDue: makeFromInt 22317, stateTaxDue: makeFromInt 5151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17587, stateTaxDue: makeFromInt 3209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41815, ordinaryIncomeNonSS: makeFromInt 131765, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45461, stateTaxDue: makeFromInt 11133 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30538, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12115, federalTaxDue: makeFromInt 27855, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91127, qualifiedIncome: makeFromInt 28052, itemizedDeductions: makeFromInt 3289, federalTaxDue: makeFromInt 13900, stateTaxDue: makeFromInt 5527 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25274, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52684, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1959 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139900, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31854, stateTaxDue: makeFromInt 6788 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11465, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21155, ordinaryIncomeNonSS: makeFromInt 3809, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29647, itemizedDeductions: makeFromInt 12041, federalTaxDue: makeFromInt 29327, stateTaxDue: makeFromInt 8713 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40075, itemizedDeductions: makeFromInt 6319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73581, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4243, federalTaxDue: makeFromInt 12350, stateTaxDue: makeFromInt 3100 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140387, qualifiedIncome: makeFromInt 62002, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24201, stateTaxDue: makeFromInt 9444 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2268, stateTaxDue: makeFromInt 1311 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1391, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43657, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14244, federalTaxDue: makeFromInt 12133, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145002, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27285, federalTaxDue: makeFromInt 17777, stateTaxDue: makeFromInt 6946 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 793, stateTaxDue: makeFromInt 1332 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40337, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13708, federalTaxDue: makeFromInt 50902, stateTaxDue: makeFromInt 12201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27802, ordinaryIncomeNonSS: makeFromInt 89516, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20411, federalTaxDue: makeFromInt 25120, stateTaxDue: makeFromInt 9001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28455, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35427, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28817, ordinaryIncomeNonSS: makeFromInt 24310, qualifiedIncome: makeFromInt 9599, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 788, stateTaxDue: makeFromInt 1020 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36562, ordinaryIncomeNonSS: makeFromInt 101509, qualifiedIncome: makeFromInt 78544, itemizedDeductions: makeFromInt 25333, federalTaxDue: makeFromInt 25010, stateTaxDue: makeFromInt 8530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125532, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11756, federalTaxDue: makeFromInt 32679, stateTaxDue: makeFromInt 10951 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17131, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98886, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10358, stateTaxDue: makeFromInt 4369 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41315, ordinaryIncomeNonSS: makeFromInt 101972, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19537, stateTaxDue: makeFromInt 4844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21955, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5754, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11564, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62032, itemizedDeductions: makeFromInt 21902, federalTaxDue: makeFromInt 35045, stateTaxDue: makeFromInt 10227 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53287, itemizedDeductions: makeFromInt 10166, federalTaxDue: makeFromInt 2346, stateTaxDue: makeFromInt 2289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24029, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25816, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6264, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29207, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8062, federalTaxDue: makeFromInt 1950, stateTaxDue: makeFromInt 1031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42341, itemizedDeductions: makeFromInt 3835, federalTaxDue: makeFromInt 38490, stateTaxDue: makeFromInt 9585 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34665, ordinaryIncomeNonSS: makeFromInt 124576, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25560, federalTaxDue: makeFromInt 24671, stateTaxDue: makeFromInt 5974 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44786, qualifiedIncome: makeFromInt 25472, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2181, stateTaxDue: makeFromInt 2938 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48082, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27952, stateTaxDue: makeFromInt 9449 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3841, ordinaryIncomeNonSS: makeFromInt 104387, qualifiedIncome: makeFromInt 94723, itemizedDeductions: makeFromInt 29600, federalTaxDue: makeFromInt 24739, stateTaxDue: makeFromInt 9381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25215, itemizedDeductions: makeFromInt 1938, federalTaxDue: makeFromInt 40006, stateTaxDue: makeFromInt 8487 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8935, ordinaryIncomeNonSS: makeFromInt 8986, qualifiedIncome: makeFromInt 86634, itemizedDeductions: makeFromInt 21198, federalTaxDue: makeFromInt 6301, stateTaxDue: makeFromInt 4326 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73891, qualifiedIncome: makeFromInt 84696, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20373, stateTaxDue: makeFromInt 7474 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40511, ordinaryIncomeNonSS: makeFromInt 2766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8500, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4710, federalTaxDue: makeFromInt 26216, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21044, itemizedDeductions: makeFromInt 14780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 797 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22636, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72937, itemizedDeductions: makeFromInt 26589, federalTaxDue: makeFromInt 3186, stateTaxDue: makeFromInt 3169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45366, qualifiedIncome: makeFromInt 80009, itemizedDeductions: makeFromInt 22016, federalTaxDue: makeFromInt 5216, stateTaxDue: makeFromInt 5843 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16427, federalTaxDue: makeFromInt 9384, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18097, qualifiedIncome: makeFromInt 6110, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42563, ordinaryIncomeNonSS: makeFromInt 55801, qualifiedIncome: makeFromInt 51783, itemizedDeductions: makeFromInt 25493, federalTaxDue: makeFromInt 14276, stateTaxDue: makeFromInt 5038 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124871, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10831, stateTaxDue: makeFromInt 5569 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31480, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96496, itemizedDeductions: makeFromInt 2386, federalTaxDue: makeFromInt 6914, stateTaxDue: makeFromInt 4371 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4433, qualifiedIncome: makeFromInt 68024, itemizedDeductions: makeFromInt 20302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3043 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18495, itemizedDeductions: makeFromInt 8592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 290 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3830, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7315, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1598, ordinaryIncomeNonSS: makeFromInt 115054, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16959, federalTaxDue: makeFromInt 15328, stateTaxDue: makeFromInt 5419 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2553, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28253, ordinaryIncomeNonSS: makeFromInt 132829, qualifiedIncome: makeFromInt 5378, itemizedDeductions: makeFromInt 10612, federalTaxDue: makeFromInt 28081, stateTaxDue: makeFromInt 6655 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16877, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20676, stateTaxDue: makeFromInt 5389 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36373, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23959, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 773 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29638, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 631, itemizedDeductions: makeFromInt 20545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99447, itemizedDeductions: makeFromInt 14335, federalTaxDue: makeFromInt 10172, stateTaxDue: makeFromInt 4597 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4270, ordinaryIncomeNonSS: makeFromInt 19244, qualifiedIncome: makeFromInt 79480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24183, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45079, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123922, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4695, federalTaxDue: makeFromInt 44012, stateTaxDue: makeFromInt 10941 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91432, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23227, stateTaxDue: makeFromInt 9197 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42887, ordinaryIncomeNonSS: makeFromInt 33562, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2920, stateTaxDue: makeFromInt 1283 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75229, itemizedDeductions: makeFromInt 13017, federalTaxDue: makeFromInt 13264, stateTaxDue: makeFromInt 3612 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3175, ordinaryIncomeNonSS: makeFromInt 96259, qualifiedIncome: makeFromInt 63675, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22734, stateTaxDue: makeFromInt 7742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17056, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27377, federalTaxDue: makeFromInt 25761, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50713, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2770, stateTaxDue: makeFromInt 2117 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32730, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50960, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28780, stateTaxDue: makeFromInt 9473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39399, qualifiedIncome: makeFromInt 18536, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9111, stateTaxDue: makeFromInt 2506 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51030, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45521, stateTaxDue: makeFromInt 9797 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75547, itemizedDeductions: makeFromInt 7966, federalTaxDue: makeFromInt 4876, stateTaxDue: makeFromInt 3402 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33953, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30940, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8264, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24203, federalTaxDue: makeFromInt 40898, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3, ordinaryIncomeNonSS: makeFromInt 51875, qualifiedIncome: makeFromInt 16149, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3032, stateTaxDue: makeFromInt 3026 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46484, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 279, stateTaxDue: makeFromInt 1869 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48832, ordinaryIncomeNonSS: makeFromInt 50741, qualifiedIncome: makeFromInt 7452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13266, stateTaxDue: makeFromInt 2655 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18041, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3300 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98956, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14173, federalTaxDue: makeFromInt 14154, stateTaxDue: makeFromInt 4493 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95240, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6666, stateTaxDue: makeFromInt 4510 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134785, qualifiedIncome: makeFromInt 23002, itemizedDeductions: makeFromInt 19960, federalTaxDue: makeFromInt 21424, stateTaxDue: makeFromInt 7314 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63272, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4746, stateTaxDue: makeFromInt 2789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19753, ordinaryIncomeNonSS: makeFromInt 88611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25795, federalTaxDue: makeFromInt 9137, stateTaxDue: makeFromInt 3968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81079, itemizedDeductions: makeFromInt 21607, federalTaxDue: makeFromInt 4602, stateTaxDue: makeFromInt 3584 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15380, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 394 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5951, ordinaryIncomeNonSS: makeFromInt 34969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1618, stateTaxDue: makeFromInt 1373 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28980, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 927 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5263, stateTaxDue: makeFromInt 4530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2780, itemizedDeductions: makeFromInt 21487, federalTaxDue: makeFromInt 23075, stateTaxDue: makeFromInt 7343 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40195, ordinaryIncomeNonSS: makeFromInt 146399, qualifiedIncome: makeFromInt 22850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37728, stateTaxDue: makeFromInt 8007 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20725, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88640, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19553, federalTaxDue: makeFromInt 16059, stateTaxDue: makeFromInt 8957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88705, itemizedDeductions: makeFromInt 27169, federalTaxDue: makeFromInt 2011, stateTaxDue: makeFromInt 3871 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21855, ordinaryIncomeNonSS: makeFromInt 50671, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20416, federalTaxDue: makeFromInt 4994, stateTaxDue: makeFromInt 2114 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9929, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32104, itemizedDeductions: makeFromInt 28263, federalTaxDue: makeFromInt 25171, stateTaxDue: makeFromInt 8550 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74358, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13821, stateTaxDue: makeFromInt 3143 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7402, ordinaryIncomeNonSS: makeFromInt 138501, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24139, federalTaxDue: makeFromInt 15195, stateTaxDue: makeFromInt 6250 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10460, ordinaryIncomeNonSS: makeFromInt 4274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15599, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4839 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43137, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74159, itemizedDeductions: makeFromInt 16295, federalTaxDue: makeFromInt 41549, stateTaxDue: makeFromInt 10833 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24047, ordinaryIncomeNonSS: makeFromInt 86198, qualifiedIncome: makeFromInt 46727, itemizedDeductions: makeFromInt 15795, federalTaxDue: makeFromInt 12927, stateTaxDue: makeFromInt 6171 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26236, federalTaxDue: makeFromInt 22746, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5116, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25493, ordinaryIncomeNonSS: makeFromInt 118402, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14157, stateTaxDue: makeFromInt 5445 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29483, ordinaryIncomeNonSS: makeFromInt 18081, qualifiedIncome: makeFromInt 93177, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12481, stateTaxDue: makeFromInt 5275 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19190, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6333, ordinaryIncomeNonSS: makeFromInt 56526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3485, stateTaxDue: makeFromInt 2151 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104404, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14381, stateTaxDue: makeFromInt 4965 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6741, qualifiedIncome: makeFromInt 44779, itemizedDeductions: makeFromInt 18382, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55543, qualifiedIncome: makeFromInt 61612, itemizedDeductions: makeFromInt 9725, federalTaxDue: makeFromInt 13550, stateTaxDue: makeFromInt 5628 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26491, stateTaxDue: makeFromInt 8747 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58328, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 839, federalTaxDue: makeFromInt 25294, stateTaxDue: makeFromInt 7341 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62456, itemizedDeductions: makeFromInt 20032, federalTaxDue: makeFromInt 5634, stateTaxDue: makeFromInt 2961 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11224, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26754, stateTaxDue: makeFromInt 7806 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1551, ordinaryIncomeNonSS: makeFromInt 101571, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27858, federalTaxDue: makeFromInt 9866, stateTaxDue: makeFromInt 4504 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34180, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26752, stateTaxDue: makeFromInt 8634 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27629, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41459, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27102, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135383, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8433, federalTaxDue: makeFromInt 21563, stateTaxDue: makeFromInt 6314 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41958, ordinaryIncomeNonSS: makeFromInt 107323, qualifiedIncome: makeFromInt 14338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25538, stateTaxDue: makeFromInt 5628 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33793, ordinaryIncomeNonSS: makeFromInt 29410, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14197, stateTaxDue: makeFromInt 6096 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38519, ordinaryIncomeNonSS: makeFromInt 27642, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1249, federalTaxDue: makeFromInt 19039, stateTaxDue: makeFromInt 6081 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88781, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2277, federalTaxDue: makeFromInt 20578, stateTaxDue: makeFromInt 3984 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11035, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13608, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16056, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 472 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81586, itemizedDeductions: makeFromInt 23648, federalTaxDue: makeFromInt 10042, stateTaxDue: makeFromInt 3824 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46896, ordinaryIncomeNonSS: makeFromInt 119389, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26723, stateTaxDue: makeFromInt 5538 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21369, itemizedDeductions: makeFromInt 7657, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 393 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33015, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67175, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4170, stateTaxDue: makeFromInt 3170 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92139, itemizedDeductions: makeFromInt 26903, federalTaxDue: makeFromInt 2436, stateTaxDue: makeFromInt 4250 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145717, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31372, stateTaxDue: makeFromInt 6831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18120, ordinaryIncomeNonSS: makeFromInt 98708, qualifiedIncome: makeFromInt 56353, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18785, stateTaxDue: makeFromInt 7078 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27159, itemizedDeductions: makeFromInt 11619, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87186, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30751, stateTaxDue: makeFromInt 8894 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12145, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15524, federalTaxDue: makeFromInt 18612, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29729, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9821, itemizedDeductions: makeFromInt 219, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45500, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13685, itemizedDeductions: makeFromInt 14741, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 147 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143075, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2348, federalTaxDue: makeFromInt 29818, stateTaxDue: makeFromInt 11479 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6962, ordinaryIncomeNonSS: makeFromInt 53809, qualifiedIncome: makeFromInt 14370, itemizedDeductions: makeFromInt 24578, federalTaxDue: makeFromInt 3223, stateTaxDue: makeFromInt 2734 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39422, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87004, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 276, stateTaxDue: makeFromInt 3675 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89747, itemizedDeductions: makeFromInt 14310, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4189 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24568, ordinaryIncomeNonSS: makeFromInt 106430, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21263, stateTaxDue: makeFromInt 5067 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42182, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19323, itemizedDeductions: makeFromInt 1156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 491 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69073, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36379, stateTaxDue: makeFromInt 8398 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39306, ordinaryIncomeNonSS: makeFromInt 4112, qualifiedIncome: makeFromInt 8217, itemizedDeductions: makeFromInt 16142, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27990, itemizedDeductions: makeFromInt 25781, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 877 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66740, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2451, stateTaxDue: makeFromInt 2853 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19911, ordinaryIncomeNonSS: makeFromInt 12425, qualifiedIncome: makeFromInt 63604, itemizedDeductions: makeFromInt 5080, federalTaxDue: makeFromInt 4623, stateTaxDue: makeFromInt 3531 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31583, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5946, stateTaxDue: makeFromInt 6004 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3406, ordinaryIncomeNonSS: makeFromInt 115475, qualifiedIncome: makeFromInt 31908, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20075, stateTaxDue: makeFromInt 6914 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6751, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9291, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18804, ordinaryIncomeNonSS: makeFromInt 53502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4093, federalTaxDue: makeFromInt 6699, stateTaxDue: makeFromInt 2420 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17808, itemizedDeductions: makeFromInt 24181, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 435 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97093, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6449, stateTaxDue: makeFromInt 4480 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131269, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2787, federalTaxDue: makeFromInt 22914, stateTaxDue: makeFromInt 6470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79342, qualifiedIncome: makeFromInt 78602, itemizedDeductions: makeFromInt 2367, federalTaxDue: makeFromInt 22586, stateTaxDue: makeFromInt 7708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35947, ordinaryIncomeNonSS: makeFromInt 132255, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29382, stateTaxDue: makeFromInt 6358 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30061, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28764, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11156, ordinaryIncomeNonSS: makeFromInt 121937, qualifiedIncome: makeFromInt 12920, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23111, stateTaxDue: makeFromInt 6288 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44547, ordinaryIncomeNonSS: makeFromInt 32871, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2759, stateTaxDue: makeFromInt 1269 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113835, qualifiedIncome: makeFromInt 78759, itemizedDeductions: makeFromInt 27949, federalTaxDue: makeFromInt 25762, stateTaxDue: makeFromInt 9375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12074, ordinaryIncomeNonSS: makeFromInt 93170, qualifiedIncome: makeFromInt 98045, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31525, stateTaxDue: makeFromInt 9405 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25070, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29309, itemizedDeductions: makeFromInt 19077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 944 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118411, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12799, federalTaxDue: makeFromInt 14162, stateTaxDue: makeFromInt 5346 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18948, ordinaryIncomeNonSS: makeFromInt 126243, qualifiedIncome: makeFromInt 71034, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36065, stateTaxDue: makeFromInt 9538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30521, ordinaryIncomeNonSS: makeFromInt 121476, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46416, stateTaxDue: makeFromInt 11071 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24571, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 943, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78742, itemizedDeductions: makeFromInt 7451, federalTaxDue: makeFromInt 2361, stateTaxDue: makeFromInt 3562 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10511, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27076, federalTaxDue: makeFromInt 24284, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28062, ordinaryIncomeNonSS: makeFromInt 62468, qualifiedIncome: makeFromInt 30250, itemizedDeductions: makeFromInt 987, federalTaxDue: makeFromInt 19301, stateTaxDue: makeFromInt 4504 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7643, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16094, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 389 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15819, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95178, itemizedDeductions: makeFromInt 7960, federalTaxDue: makeFromInt 169, stateTaxDue: makeFromInt 4284 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13737, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22990, federalTaxDue: makeFromInt 27364, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68017, itemizedDeductions: makeFromInt 9270, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45023, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70390, itemizedDeductions: makeFromInt 23833, federalTaxDue: makeFromInt 7171, stateTaxDue: makeFromInt 3065 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109078, qualifiedIncome: makeFromInt 10385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9298, stateTaxDue: makeFromInt 5298 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6630, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40174, ordinaryIncomeNonSS: makeFromInt 86972, qualifiedIncome: makeFromInt 36041, itemizedDeductions: makeFromInt 2147, federalTaxDue: makeFromInt 25182, stateTaxDue: makeFromInt 5896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35150, ordinaryIncomeNonSS: makeFromInt 45203, qualifiedIncome: makeFromInt 47025, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14159, stateTaxDue: makeFromInt 4357 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1852, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32417, stateTaxDue: makeFromInt 7520 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44029, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17801, federalTaxDue: makeFromInt 4212, stateTaxDue: makeFromInt 6526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117947, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31746, stateTaxDue: makeFromInt 10891 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45747, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26343, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59933, qualifiedIncome: makeFromInt 61541, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3038, stateTaxDue: makeFromInt 5399 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139854, qualifiedIncome: makeFromInt 53551, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25747, stateTaxDue: makeFromInt 9295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79597, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4380, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25187, federalTaxDue: makeFromInt 32683, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31341, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79099, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32780, stateTaxDue: makeFromInt 8685 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36770, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76176, itemizedDeductions: makeFromInt 3249, federalTaxDue: makeFromInt 10471, stateTaxDue: makeFromInt 3625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9982, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5160 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3862, ordinaryIncomeNonSS: makeFromInt 106749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23433, federalTaxDue: makeFromInt 10556, stateTaxDue: makeFromInt 4744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68232, qualifiedIncome: makeFromInt 16105, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13129, stateTaxDue: makeFromInt 3852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17685, ordinaryIncomeNonSS: makeFromInt 74728, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7220, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 8360 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31175, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4709, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8767, ordinaryIncomeNonSS: makeFromInt 131498, qualifiedIncome: makeFromInt 79612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37639, stateTaxDue: makeFromInt 10420 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53864, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97343, qualifiedIncome: makeFromInt 99670, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37291, stateTaxDue: makeFromInt 9599 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35586, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2995, stateTaxDue: makeFromInt 1304 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45629, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80402, itemizedDeductions: makeFromInt 12885, federalTaxDue: makeFromInt 8598, stateTaxDue: makeFromInt 3645 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16876, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25068, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101393, qualifiedIncome: makeFromInt 26003, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14319, stateTaxDue: makeFromInt 5795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43490, qualifiedIncome: makeFromInt 97061, itemizedDeductions: makeFromInt 2797, federalTaxDue: makeFromInt 18279, stateTaxDue: makeFromInt 6515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112060, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21516, stateTaxDue: makeFromInt 5491 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18921, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 537 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23955, ordinaryIncomeNonSS: makeFromInt 33985, qualifiedIncome: makeFromInt 21949, itemizedDeductions: makeFromInt 26600, federalTaxDue: makeFromInt 2999, stateTaxDue: makeFromInt 2422 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46115, ordinaryIncomeNonSS: makeFromInt 44786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26205, federalTaxDue: makeFromInt 5891, stateTaxDue: makeFromInt 1664 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25270, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11345, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23650, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46687, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 943, stateTaxDue: makeFromInt 1879 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21226, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 241 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9632, ordinaryIncomeNonSS: makeFromInt 95833, qualifiedIncome: makeFromInt 22751, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16270, stateTaxDue: makeFromInt 5497 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96134, qualifiedIncome: makeFromInt 22388, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13698, stateTaxDue: makeFromInt 5671 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10672, ordinaryIncomeNonSS: makeFromInt 27, qualifiedIncome: makeFromInt 14438, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 85 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35951, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23153, federalTaxDue: makeFromInt 30675, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12743, ordinaryIncomeNonSS: makeFromInt 80834, qualifiedIncome: makeFromInt 29359, itemizedDeductions: makeFromInt 1890, federalTaxDue: makeFromInt 9826, stateTaxDue: makeFromInt 4967 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23540, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 602 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109531, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17229, federalTaxDue: makeFromInt 26373, stateTaxDue: makeFromInt 5222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48614, ordinaryIncomeNonSS: makeFromInt 100698, qualifiedIncome: makeFromInt 29822, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27629, stateTaxDue: makeFromInt 6071 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36779, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1264 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15692, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93132, itemizedDeductions: makeFromInt 9850, federalTaxDue: makeFromInt 40937, stateTaxDue: makeFromInt 11582 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18994, ordinaryIncomeNonSS: makeFromInt 93373, qualifiedIncome: makeFromInt 98501, itemizedDeductions: makeFromInt 20545, federalTaxDue: makeFromInt 27587, stateTaxDue: makeFromInt 9019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2402, ordinaryIncomeNonSS: makeFromInt 107596, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9073, federalTaxDue: makeFromInt 14790, stateTaxDue: makeFromInt 5039 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13455, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21303, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9262, federalTaxDue: makeFromInt 241, stateTaxDue: makeFromInt 457 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84486, itemizedDeductions: makeFromInt 10335, federalTaxDue: makeFromInt 5619, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14096, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70926, itemizedDeductions: makeFromInt 18733, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2964 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39992, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23398, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 860, ordinaryIncomeNonSS: makeFromInt 107757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20515, stateTaxDue: makeFromInt 5271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69828, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6774, stateTaxDue: makeFromInt 3036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12193, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43315, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6251, federalTaxDue: makeFromInt 13808, stateTaxDue: makeFromInt 6962 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28682, federalTaxDue: makeFromInt 16810, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 104 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107237, qualifiedIncome: makeFromInt 53415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14092, stateTaxDue: makeFromInt 7358 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24539, ordinaryIncomeNonSS: makeFromInt 101230, qualifiedIncome: makeFromInt 76128, itemizedDeductions: makeFromInt 26469, federalTaxDue: makeFromInt 25814, stateTaxDue: makeFromInt 8293 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9042, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21152, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25188, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2224, ordinaryIncomeNonSS: makeFromInt 123328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22265, stateTaxDue: makeFromInt 5943 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15472, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27391, stateTaxDue: makeFromInt 7819 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120360, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32349, stateTaxDue: makeFromInt 11014 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41272, itemizedDeductions: makeFromInt 18240, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1809 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2872, ordinaryIncomeNonSS: makeFromInt 86533, qualifiedIncome: makeFromInt 39394, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17286, stateTaxDue: makeFromInt 5994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6556, ordinaryIncomeNonSS: makeFromInt 54703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3271, stateTaxDue: makeFromInt 2443 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12380, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36664, stateTaxDue: makeFromInt 11979 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4006, ordinaryIncomeNonSS: makeFromInt 60798, qualifiedIncome: makeFromInt 69297, itemizedDeductions: makeFromInt 27022, federalTaxDue: makeFromInt 6018, stateTaxDue: makeFromInt 6030 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9759, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54937, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16030, stateTaxDue: makeFromInt 7372 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28883, ordinaryIncomeNonSS: makeFromInt 118326, qualifiedIncome: makeFromInt 56492, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34011, stateTaxDue: makeFromInt 8606 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16957, qualifiedIncome: makeFromInt 88977, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4822 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2683, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27842, itemizedDeductions: makeFromInt 11597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 917 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85965, qualifiedIncome: makeFromInt 46730, itemizedDeductions: makeFromInt 16361, federalTaxDue: makeFromInt 18181, stateTaxDue: makeFromInt 6479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33998, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1081 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14815, ordinaryIncomeNonSS: makeFromInt 27964, qualifiedIncome: makeFromInt 34926, itemizedDeductions: makeFromInt 679, federalTaxDue: makeFromInt 1096, stateTaxDue: makeFromInt 2657 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14004, qualifiedIncome: makeFromInt 50247, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 483, stateTaxDue: makeFromInt 2958 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82083, qualifiedIncome: makeFromInt 78057, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17449, stateTaxDue: makeFromInt 7632 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50542, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21673, federalTaxDue: makeFromInt 1979, stateTaxDue: makeFromInt 1852 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36625, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18360, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8004, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10445, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6720, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15030, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69254, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 938, stateTaxDue: makeFromInt 3088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13137, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 242 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9184, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5568, ordinaryIncomeNonSS: makeFromInt 61466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6505, stateTaxDue: makeFromInt 2686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10861, ordinaryIncomeNonSS: makeFromInt 100221, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20786, stateTaxDue: makeFromInt 4887 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34237, ordinaryIncomeNonSS: makeFromInt 59873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28934, federalTaxDue: makeFromInt 6817, stateTaxDue: makeFromInt 2579 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25356, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45911, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30087, itemizedDeductions: makeFromInt 24155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1029 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12446, ordinaryIncomeNonSS: makeFromInt 141618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24118, federalTaxDue: makeFromInt 18435, stateTaxDue: makeFromInt 6570 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5913, federalTaxDue: makeFromInt 19035, stateTaxDue: makeFromInt 6125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9059, federalTaxDue: makeFromInt 38120, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25248, ordinaryIncomeNonSS: makeFromInt 15517, qualifiedIncome: makeFromInt 32654, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1915, stateTaxDue: makeFromInt 2028 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35103, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15565, federalTaxDue: makeFromInt 1125, stateTaxDue: makeFromInt 1180 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 365, ordinaryIncomeNonSS: makeFromInt 7529, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42745, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38828, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95338, qualifiedIncome: makeFromInt 92257, itemizedDeductions: makeFromInt 15640, federalTaxDue: makeFromInt 27003, stateTaxDue: makeFromInt 9221 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17340, qualifiedIncome: makeFromInt 95234, itemizedDeductions: makeFromInt 14548, federalTaxDue: makeFromInt 7568, stateTaxDue: makeFromInt 5154 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32531, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22424, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24425, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71304, itemizedDeductions: makeFromInt 24004, federalTaxDue: makeFromInt 3136, stateTaxDue: makeFromInt 3086 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24591, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26135, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 696 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16269, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28951, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2311, ordinaryIncomeNonSS: makeFromInt 123101, qualifiedIncome: makeFromInt 21492, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14079, stateTaxDue: makeFromInt 6755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27581, ordinaryIncomeNonSS: makeFromInt 5432, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22742, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48123, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10054, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139957, qualifiedIncome: makeFromInt 91310, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35596, stateTaxDue: makeFromInt 11244 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53820, qualifiedIncome: makeFromInt 9458, itemizedDeductions: makeFromInt 14172, federalTaxDue: makeFromInt 4412, stateTaxDue: makeFromInt 2778 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29991, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35793, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47634, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62178, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4867, stateTaxDue: makeFromInt 2534 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76081, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16753, stateTaxDue: makeFromInt 8448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42042, ordinaryIncomeNonSS: makeFromInt 142143, qualifiedIncome: makeFromInt 71054, itemizedDeductions: makeFromInt 20091, federalTaxDue: makeFromInt 46741, stateTaxDue: makeFromInt 10649 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45964, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42110, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1495 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51195, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12658, federalTaxDue: makeFromInt 2045, stateTaxDue: makeFromInt 2085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31652, ordinaryIncomeNonSS: makeFromInt 119291, qualifiedIncome: makeFromInt 91687, itemizedDeductions: makeFromInt 26303, federalTaxDue: makeFromInt 34256, stateTaxDue: makeFromInt 10311 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37203, ordinaryIncomeNonSS: makeFromInt 130067, qualifiedIncome: makeFromInt 4542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30896, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9152, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28246, qualifiedIncome: makeFromInt 79889, itemizedDeductions: makeFromInt 12667, federalTaxDue: makeFromInt 6545, stateTaxDue: makeFromInt 4915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48595, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46708, stateTaxDue: makeFromInt 9785 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28331, ordinaryIncomeNonSS: makeFromInt 49507, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5406, stateTaxDue: makeFromInt 1872 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49578, ordinaryIncomeNonSS: makeFromInt 18890, qualifiedIncome: makeFromInt 96318, itemizedDeductions: makeFromInt 25856, federalTaxDue: makeFromInt 17031, stateTaxDue: makeFromInt 5505 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68027, itemizedDeductions: makeFromInt 1353, federalTaxDue: makeFromInt 4557, stateTaxDue: makeFromInt 3041 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44213, ordinaryIncomeNonSS: makeFromInt 34852, qualifiedIncome: makeFromInt 5320, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7357, stateTaxDue: makeFromInt 1754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13224, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1483, federalTaxDue: makeFromInt 27266, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67211, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1525, federalTaxDue: makeFromInt 12249, stateTaxDue: makeFromInt 2786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75983, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44264, stateTaxDue: makeFromInt 11097 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1315, itemizedDeductions: makeFromInt 3614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42960, ordinaryIncomeNonSS: makeFromInt 103386, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13956, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2348, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22538, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20762, ordinaryIncomeNonSS: makeFromInt 20748, qualifiedIncome: makeFromInt 8543, itemizedDeductions: makeFromInt 25039, federalTaxDue: makeFromInt 98, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90647, itemizedDeductions: makeFromInt 14411, federalTaxDue: makeFromInt 4147, stateTaxDue: makeFromInt 3957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23481, qualifiedIncome: makeFromInt 8213, itemizedDeductions: makeFromInt 2180, federalTaxDue: makeFromInt 4426, stateTaxDue: makeFromInt 1270 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41646, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89303, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6798, stateTaxDue: makeFromInt 4106 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80989, qualifiedIncome: makeFromInt 13212, itemizedDeductions: makeFromInt 24059, federalTaxDue: makeFromInt 18909, stateTaxDue: makeFromInt 4455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22882, ordinaryIncomeNonSS: makeFromInt 32899, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10763, federalTaxDue: makeFromInt 20149, stateTaxDue: makeFromInt 6553 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4946, ordinaryIncomeNonSS: makeFromInt 28628, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 155, stateTaxDue: makeFromInt 909 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96042, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24636, federalTaxDue: makeFromInt 8528, stateTaxDue: makeFromInt 4470 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52626, itemizedDeductions: makeFromInt 11442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2256 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39871, ordinaryIncomeNonSS: makeFromInt 120523, qualifiedIncome: makeFromInt 7633, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26782, stateTaxDue: makeFromInt 6189 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77221, itemizedDeductions: makeFromInt 6151, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3186 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22778, federalTaxDue: makeFromInt 22934, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92329, itemizedDeductions: makeFromInt 12470, federalTaxDue: makeFromInt 33448, stateTaxDue: makeFromInt 11910 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128738, qualifiedIncome: makeFromInt 31205, itemizedDeductions: makeFromInt 11298, federalTaxDue: makeFromInt 19352, stateTaxDue: makeFromInt 7633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77013, qualifiedIncome: makeFromInt 56719, itemizedDeductions: makeFromInt 24360, federalTaxDue: makeFromInt 10006, stateTaxDue: makeFromInt 6270 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21796, itemizedDeductions: makeFromInt 24687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 515 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63643, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23787, federalTaxDue: makeFromInt 9310, stateTaxDue: makeFromInt 7507 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10612, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76929, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2089, stateTaxDue: makeFromInt 3271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23957, federalTaxDue: makeFromInt 24796, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17971, federalTaxDue: makeFromInt 28871, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12963, qualifiedIncome: makeFromInt 60839, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1566, stateTaxDue: makeFromInt 3417 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18452, ordinaryIncomeNonSS: makeFromInt 123695, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7258, federalTaxDue: makeFromInt 14005, stateTaxDue: makeFromInt 5710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12296, ordinaryIncomeNonSS: makeFromInt 105430, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3876, federalTaxDue: makeFromInt 22586, stateTaxDue: makeFromInt 5153 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14381, ordinaryIncomeNonSS: makeFromInt 139254, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26402, federalTaxDue: makeFromInt 24308, stateTaxDue: makeFromInt 6878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7298, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62799, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2754 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8619, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41615, itemizedDeductions: makeFromInt 25200, federalTaxDue: makeFromInt 550, stateTaxDue: makeFromInt 1694 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132603, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17450, stateTaxDue: makeFromInt 6255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66260, itemizedDeductions: makeFromInt 25488, federalTaxDue: makeFromInt 5620, stateTaxDue: makeFromInt 3033 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86032, qualifiedIncome: makeFromInt 87493, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17912, stateTaxDue: makeFromInt 8197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132118, qualifiedIncome: makeFromInt 22671, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34413, stateTaxDue: makeFromInt 7343 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1653, ordinaryIncomeNonSS: makeFromInt 5025, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58812, itemizedDeductions: makeFromInt 9970, federalTaxDue: makeFromInt 34513, stateTaxDue: makeFromInt 9766 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9188, ordinaryIncomeNonSS: makeFromInt 40753, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19111, federalTaxDue: makeFromInt 2635, stateTaxDue: makeFromInt 1663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12435, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65180, itemizedDeductions: makeFromInt 12352, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15984, ordinaryIncomeNonSS: makeFromInt 38165, qualifiedIncome: makeFromInt 36756, itemizedDeductions: makeFromInt 9477, federalTaxDue: makeFromInt 7732, stateTaxDue: makeFromInt 3491 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25626, qualifiedIncome: makeFromInt 79165, itemizedDeductions: makeFromInt 4866, federalTaxDue: makeFromInt 9984, stateTaxDue: makeFromInt 4765 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23899, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37880, ordinaryIncomeNonSS: makeFromInt 54074, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7698, stateTaxDue: makeFromInt 2329 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14479, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29787, itemizedDeductions: makeFromInt 26453, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1014 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21075, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18560, federalTaxDue: makeFromInt 2913, stateTaxDue: makeFromInt 2010 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7980, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45236, itemizedDeductions: makeFromInt 18416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1807 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1856, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19025, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35848, ordinaryIncomeNonSS: makeFromInt 28660, qualifiedIncome: makeFromInt 32513, itemizedDeductions: makeFromInt 10527, federalTaxDue: makeFromInt 5450, stateTaxDue: makeFromInt 2684 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47027, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11111, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 218 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34944, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119058, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10384, stateTaxDue: makeFromInt 5478 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12662, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35041, stateTaxDue: makeFromInt 7678 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71012, qualifiedIncome: makeFromInt 80895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23071, stateTaxDue: makeFromInt 7523 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67048, qualifiedIncome: makeFromInt 32072, itemizedDeductions: makeFromInt 19901, federalTaxDue: makeFromInt 9517, stateTaxDue: makeFromInt 4708 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33728, ordinaryIncomeNonSS: makeFromInt 26057, qualifiedIncome: makeFromInt 36525, itemizedDeductions: makeFromInt 6070, federalTaxDue: makeFromInt 3306, stateTaxDue: makeFromInt 2743 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81990, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14363, stateTaxDue: makeFromInt 3529 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18978, ordinaryIncomeNonSS: makeFromInt 131287, qualifiedIncome: makeFromInt 35534, itemizedDeductions: makeFromInt 3993, federalTaxDue: makeFromInt 31957, stateTaxDue: makeFromInt 8202 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24865, ordinaryIncomeNonSS: makeFromInt 102925, qualifiedIncome: makeFromInt 86598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30413, stateTaxDue: makeFromInt 8901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26554, ordinaryIncomeNonSS: makeFromInt 56102, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10628, stateTaxDue: makeFromInt 2514 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10143, ordinaryIncomeNonSS: makeFromInt 107425, qualifiedIncome: makeFromInt 34744, itemizedDeductions: makeFromInt 18224, federalTaxDue: makeFromInt 24450, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35655, qualifiedIncome: makeFromInt 61023, itemizedDeductions: makeFromInt 16751, federalTaxDue: makeFromInt 6972, stateTaxDue: makeFromInt 4379 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32624, ordinaryIncomeNonSS: makeFromInt 82490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10086, stateTaxDue: makeFromInt 3650 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14115, itemizedDeductions: makeFromInt 25648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 271 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13210, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69377, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12598, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22342, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13079, ordinaryIncomeNonSS: makeFromInt 89503, qualifiedIncome: makeFromInt 82125, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24384, stateTaxDue: makeFromInt 8202 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5774, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106117, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9207, stateTaxDue: makeFromInt 4631 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18198, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120774, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29424, stateTaxDue: makeFromInt 10664 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141005, qualifiedIncome: makeFromInt 32203, itemizedDeductions: makeFromInt 15690, federalTaxDue: makeFromInt 28927, stateTaxDue: makeFromInt 8405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4193, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28740, ordinaryIncomeNonSS: makeFromInt 77535, qualifiedIncome: makeFromInt 96675, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22590, stateTaxDue: makeFromInt 8036 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19568, federalTaxDue: makeFromInt 33838, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10635, qualifiedIncome: makeFromInt 73065, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3710 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47376, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28731, stateTaxDue: makeFromInt 9294 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111559, qualifiedIncome: makeFromInt 70107, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23171, stateTaxDue: makeFromInt 8508 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68384, itemizedDeductions: makeFromInt 12063, federalTaxDue: makeFromInt 808, stateTaxDue: makeFromInt 2844 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39984, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89927, itemizedDeductions: makeFromInt 1435, federalTaxDue: makeFromInt 10911, stateTaxDue: makeFromInt 4241 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2051, qualifiedIncome: makeFromInt 45734, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 609, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45521, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70179, itemizedDeductions: makeFromInt 22697, federalTaxDue: makeFromInt 1077, stateTaxDue: makeFromInt 3134 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27846, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71249, itemizedDeductions: makeFromInt 19668, federalTaxDue: makeFromInt 4995, stateTaxDue: makeFromInt 3205 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3208, itemizedDeductions: makeFromInt 26467, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12849, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4202, federalTaxDue: makeFromInt 9977, stateTaxDue: makeFromInt 5531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33071, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14429, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32171, stateTaxDue: makeFromInt 7646 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50420, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37912, stateTaxDue: makeFromInt 9446 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1047, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6967, ordinaryIncomeNonSS: makeFromInt 6329, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12707, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4841 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47734, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 397, federalTaxDue: makeFromInt 34808, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45431, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9130, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32496, itemizedDeductions: makeFromInt 18148, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1208 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43286, ordinaryIncomeNonSS: makeFromInt 58265, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7580, federalTaxDue: makeFromInt 12325, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119949, qualifiedIncome: makeFromInt 93331, itemizedDeductions: makeFromInt 18379, federalTaxDue: makeFromInt 33079, stateTaxDue: makeFromInt 10189 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52849, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82818, itemizedDeductions: makeFromInt 4988, federalTaxDue: makeFromInt 7955, stateTaxDue: makeFromInt 3775 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121551, qualifiedIncome: makeFromInt 78938, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35945, stateTaxDue: makeFromInt 10001 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34878, ordinaryIncomeNonSS: makeFromInt 131797, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11891, federalTaxDue: makeFromInt 18859, stateTaxDue: makeFromInt 5915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17441, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39448, itemizedDeductions: makeFromInt 2596, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1548 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10216, qualifiedIncome: makeFromInt 30402, itemizedDeductions: makeFromInt 753, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1656 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32319, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40378, itemizedDeductions: makeFromInt 18822, federalTaxDue: makeFromInt 572, stateTaxDue: makeFromInt 1764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30442, ordinaryIncomeNonSS: makeFromInt 8878, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11265, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115459, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9831, federalTaxDue: makeFromInt 17116, stateTaxDue: makeFromInt 5460 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91437, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35341, stateTaxDue: makeFromInt 11497 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16877, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42634, ordinaryIncomeNonSS: makeFromInt 136396, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12813, federalTaxDue: makeFromInt 44198, stateTaxDue: makeFromInt 11445 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3999, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3803, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25641, stateTaxDue: makeFromInt 7435 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149544, qualifiedIncome: makeFromInt 17752, itemizedDeductions: makeFromInt 22052, federalTaxDue: makeFromInt 31576, stateTaxDue: makeFromInt 7879 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28014, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41783, itemizedDeductions: makeFromInt 26073, federalTaxDue: makeFromInt 34479, stateTaxDue: makeFromInt 9140 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5949, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 766 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20366, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79636, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15360, federalTaxDue: makeFromInt 20845, stateTaxDue: makeFromInt 8713 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70235, itemizedDeductions: makeFromInt 21312, federalTaxDue: makeFromInt 4888, stateTaxDue: makeFromInt 3154 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38067, ordinaryIncomeNonSS: makeFromInt 86339, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26011, federalTaxDue: makeFromInt 29882, stateTaxDue: makeFromInt 8742 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8654, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63132, itemizedDeductions: makeFromInt 16735, federalTaxDue: makeFromInt 1355, stateTaxDue: makeFromInt 2782 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31448, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29018, federalTaxDue: makeFromInt 30619, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31193, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4068, stateTaxDue: makeFromInt 1030 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21466, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 598 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46360, ordinaryIncomeNonSS: makeFromInt 79190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12889, stateTaxDue: makeFromInt 3386 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5847, ordinaryIncomeNonSS: makeFromInt 94310, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2773, federalTaxDue: makeFromInt 12430, stateTaxDue: makeFromInt 4463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73135, itemizedDeductions: makeFromInt 10823, federalTaxDue: makeFromInt 2268, stateTaxDue: makeFromInt 3182 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41406, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55414, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4586, federalTaxDue: makeFromInt 18208, stateTaxDue: makeFromInt 7516 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103939, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16355, stateTaxDue: makeFromInt 5076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22276, federalTaxDue: makeFromInt 22461, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34189, ordinaryIncomeNonSS: makeFromInt 17353, qualifiedIncome: makeFromInt 71938, itemizedDeductions: makeFromInt 22689, federalTaxDue: makeFromInt 364, stateTaxDue: makeFromInt 3901 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79573, itemizedDeductions: makeFromInt 13590, federalTaxDue: makeFromInt 3896, stateTaxDue: makeFromInt 3404 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22160, ordinaryIncomeNonSS: makeFromInt 80242, qualifiedIncome: makeFromInt 83754, itemizedDeductions: makeFromInt 261, federalTaxDue: makeFromInt 27059, stateTaxDue: makeFromInt 7745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35723, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6973, federalTaxDue: makeFromInt 28913, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18131, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3045, federalTaxDue: makeFromInt 43733, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2740, ordinaryIncomeNonSS: makeFromInt 129391, qualifiedIncome: makeFromInt 98016, itemizedDeductions: makeFromInt 27207, federalTaxDue: makeFromInt 32828, stateTaxDue: makeFromInt 10915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6551, ordinaryIncomeNonSS: makeFromInt 90943, qualifiedIncome: makeFromInt 43405, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23822, stateTaxDue: makeFromInt 6627 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17372, federalTaxDue: makeFromInt 36138, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 157, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94301, itemizedDeductions: makeFromInt 8115, federalTaxDue: makeFromInt 30516, stateTaxDue: makeFromInt 11540 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30797, ordinaryIncomeNonSS: makeFromInt 147791, qualifiedIncome: makeFromInt 59453, itemizedDeductions: makeFromInt 9563, federalTaxDue: makeFromInt 36295, stateTaxDue: makeFromInt 9987 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134415, qualifiedIncome: makeFromInt 68197, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27927, stateTaxDue: makeFromInt 9756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79238, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28464, stateTaxDue: makeFromInt 8692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17653, ordinaryIncomeNonSS: makeFromInt 89367, qualifiedIncome: makeFromInt 22937, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12675, stateTaxDue: makeFromInt 5075 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31757, qualifiedIncome: makeFromInt 73151, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7793, stateTaxDue: makeFromInt 4790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64996, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37352, stateTaxDue: makeFromInt 10536 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20693, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28128, federalTaxDue: makeFromInt 27550, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27881, ordinaryIncomeNonSS: makeFromInt 110233, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20505, federalTaxDue: makeFromInt 17769, stateTaxDue: makeFromInt 5137 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22273, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24677, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25393, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24945, federalTaxDue: makeFromInt 45, stateTaxDue: makeFromInt 1060 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21543, ordinaryIncomeNonSS: makeFromInt 76164, qualifiedIncome: makeFromInt 2429, itemizedDeductions: makeFromInt 5232, federalTaxDue: makeFromInt 9261, stateTaxDue: makeFromInt 3555 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2817, stateTaxDue: makeFromInt 2315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37476, qualifiedIncome: makeFromInt 40638, itemizedDeductions: makeFromInt 20365, federalTaxDue: makeFromInt 3430, stateTaxDue: makeFromInt 3651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9305, ordinaryIncomeNonSS: makeFromInt 73883, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15531, federalTaxDue: makeFromInt 24850, stateTaxDue: makeFromInt 8521 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1896, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11599, federalTaxDue: makeFromInt 26694, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 471, itemizedDeductions: makeFromInt 4668, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22603, ordinaryIncomeNonSS: makeFromInt 107470, qualifiedIncome: makeFromInt 36631, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24969, stateTaxDue: makeFromInt 6750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33338, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37465, ordinaryIncomeNonSS: makeFromInt 106255, qualifiedIncome: makeFromInt 13781, itemizedDeductions: makeFromInt 2180, federalTaxDue: makeFromInt 24282, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55365, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5579, stateTaxDue: makeFromInt 2574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25848, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38719, itemizedDeductions: makeFromInt 16502, federalTaxDue: makeFromInt 160, stateTaxDue: makeFromInt 1750 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15076, ordinaryIncomeNonSS: makeFromInt 117382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15242, stateTaxDue: makeFromInt 5334 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28788, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14910, federalTaxDue: makeFromInt 45223, stateTaxDue: makeFromInt 12282 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28695, qualifiedIncome: makeFromInt 71651, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9475, stateTaxDue: makeFromInt 4542 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63912, qualifiedIncome: makeFromInt 10168, itemizedDeductions: makeFromInt 3249, federalTaxDue: makeFromInt 6998, stateTaxDue: makeFromInt 3449 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30984, ordinaryIncomeNonSS: makeFromInt 106377, qualifiedIncome: makeFromInt 4295, itemizedDeductions: makeFromInt 12634, federalTaxDue: makeFromInt 21578, stateTaxDue: makeFromInt 5216 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16431, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53143, itemizedDeductions: makeFromInt 18806, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27021, ordinaryIncomeNonSS: makeFromInt 124857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28288, federalTaxDue: makeFromInt 20414, stateTaxDue: makeFromInt 5919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82100, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33060, stateTaxDue: makeFromInt 8736 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69578, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4530, stateTaxDue: makeFromInt 3089 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2042, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7475, federalTaxDue: makeFromInt 24066, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9775, ordinaryIncomeNonSS: makeFromInt 40825, qualifiedIncome: makeFromInt 82385, itemizedDeductions: makeFromInt 29022, federalTaxDue: makeFromInt 8954, stateTaxDue: makeFromInt 5937 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19852, ordinaryIncomeNonSS: makeFromInt 125775, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1291, federalTaxDue: makeFromInt 16611, stateTaxDue: makeFromInt 5614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38442, ordinaryIncomeNonSS: makeFromInt 13927, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29630, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17044, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90841, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2331, stateTaxDue: makeFromInt 4184 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29735, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111216, qualifiedIncome: makeFromInt 765, itemizedDeductions: makeFromInt 16199, federalTaxDue: makeFromInt 12694, stateTaxDue: makeFromInt 5024 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42913, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26707, federalTaxDue: makeFromInt 18314, stateTaxDue: makeFromInt 6738 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38593, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70297, itemizedDeductions: makeFromInt 27219, federalTaxDue: makeFromInt 5881, stateTaxDue: makeFromInt 3260 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121910, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10308, federalTaxDue: makeFromInt 24432, stateTaxDue: makeFromInt 5565 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40514, qualifiedIncome: makeFromInt 11654, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 976, stateTaxDue: makeFromInt 2133 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41291, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19300, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2285, qualifiedIncome: makeFromInt 30008, itemizedDeductions: makeFromInt 21293, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12095, ordinaryIncomeNonSS: makeFromInt 72566, qualifiedIncome: makeFromInt 82767, itemizedDeductions: makeFromInt 24511, federalTaxDue: makeFromInt 20284, stateTaxDue: makeFromInt 7575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123749, qualifiedIncome: makeFromInt 214, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28701, stateTaxDue: makeFromInt 5771 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5618, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46147, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31250, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48833, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99744, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 46766, stateTaxDue: makeFromInt 12232 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49148, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99469, itemizedDeductions: makeFromInt 5510, federalTaxDue: makeFromInt 40452, stateTaxDue: makeFromInt 11798 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45779, itemizedDeductions: makeFromInt 347, federalTaxDue: makeFromInt 92, stateTaxDue: makeFromInt 1784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48893, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82094, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12554, stateTaxDue: makeFromInt 3840 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8168, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12217, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33213, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1032, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9679, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27035, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76175, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3866, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45628, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44802, itemizedDeductions: makeFromInt 11486, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 1865 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28037, qualifiedIncome: makeFromInt 95972, itemizedDeductions: makeFromInt 28576, federalTaxDue: makeFromInt 19417, stateTaxDue: makeFromInt 5945 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19942, qualifiedIncome: makeFromInt 38388, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3864, stateTaxDue: makeFromInt 2526 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6366, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13687, ordinaryIncomeNonSS: makeFromInt 29322, qualifiedIncome: makeFromInt 48401, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 811, stateTaxDue: makeFromInt 3311 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44732, ordinaryIncomeNonSS: makeFromInt 112852, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40099, stateTaxDue: makeFromInt 10407 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11059, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9843, ordinaryIncomeNonSS: makeFromInt 74823, qualifiedIncome: makeFromInt 672, itemizedDeductions: makeFromInt 19742, federalTaxDue: makeFromInt 9918, stateTaxDue: makeFromInt 3388 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25359, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14927, itemizedDeductions: makeFromInt 7548, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 211 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96182, itemizedDeductions: makeFromInt 2213, federalTaxDue: makeFromInt 7374, stateTaxDue: makeFromInt 4554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6714, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24295, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 740 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47217, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17824, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11608, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 325 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90288, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6795, stateTaxDue: makeFromInt 4039 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10566, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58962, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8625, federalTaxDue: makeFromInt 3882, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37406, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65576, itemizedDeductions: makeFromInt 7062, federalTaxDue: makeFromInt 5534, stateTaxDue: makeFromInt 2794 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44169, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2679, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8026, federalTaxDue: makeFromInt 12672, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1532, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81820, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6625, stateTaxDue: makeFromInt 3516 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37433, ordinaryIncomeNonSS: makeFromInt 136282, qualifiedIncome: makeFromInt 81931, itemizedDeductions: makeFromInt 19299, federalTaxDue: makeFromInt 35871, stateTaxDue: makeFromInt 10476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31903, qualifiedIncome: makeFromInt 66537, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4333, stateTaxDue: makeFromInt 4796 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31423, ordinaryIncomeNonSS: makeFromInt 89139, qualifiedIncome: makeFromInt 23012, itemizedDeductions: makeFromInt 6008, federalTaxDue: makeFromInt 11857, stateTaxDue: makeFromInt 4933 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15624, qualifiedIncome: makeFromInt 50241, itemizedDeductions: makeFromInt 25888, federalTaxDue: makeFromInt 1199, stateTaxDue: makeFromInt 2706 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14746, federalTaxDue: makeFromInt 29719, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56744, itemizedDeductions: makeFromInt 19852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37078, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12399, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7502, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33428, ordinaryIncomeNonSS: makeFromInt 65434, qualifiedIncome: makeFromInt 50419, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12617, stateTaxDue: makeFromInt 5118 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30715, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25021, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2710 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17795, ordinaryIncomeNonSS: makeFromInt 127887, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5109, federalTaxDue: makeFromInt 14804, stateTaxDue: makeFromInt 5919 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28194, federalTaxDue: makeFromInt 21803, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46460, ordinaryIncomeNonSS: makeFromInt 113869, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25225, federalTaxDue: makeFromInt 22546, stateTaxDue: makeFromInt 5318 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9772, ordinaryIncomeNonSS: makeFromInt 149045, qualifiedIncome: makeFromInt 15008, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25384, stateTaxDue: makeFromInt 7828 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 598, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21299, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45947, ordinaryIncomeNonSS: makeFromInt 59222, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11479, stateTaxDue: makeFromInt 2470 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13645, itemizedDeductions: makeFromInt 2471, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 207 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16692, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42792, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26230, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28565, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31318, ordinaryIncomeNonSS: makeFromInt 48166, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7865, stateTaxDue: makeFromInt 1953 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8038, ordinaryIncomeNonSS: makeFromInt 127563, qualifiedIncome: makeFromInt 31145, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22769, stateTaxDue: makeFromInt 7480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39840, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41750, ordinaryIncomeNonSS: makeFromInt 52526, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28423, federalTaxDue: makeFromInt 8727, stateTaxDue: makeFromInt 2171 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119486, qualifiedIncome: makeFromInt 43372, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30242, stateTaxDue: makeFromInt 7653 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32934, itemizedDeductions: makeFromInt 23419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1192 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18853, ordinaryIncomeNonSS: makeFromInt 57728, qualifiedIncome: makeFromInt 22367, itemizedDeductions: makeFromInt 20851, federalTaxDue: makeFromInt 7876, stateTaxDue: makeFromInt 3430 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141131, qualifiedIncome: makeFromInt 11778, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34555, stateTaxDue: makeFromInt 7379 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56893, itemizedDeductions: makeFromInt 13121, federalTaxDue: makeFromInt 2886, stateTaxDue: makeFromInt 2677 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58899, qualifiedIncome: makeFromInt 49505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15289, stateTaxDue: makeFromInt 5304 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9471, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94457, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2874, stateTaxDue: makeFromInt 4165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96489, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13147, stateTaxDue: makeFromInt 4493 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43236, itemizedDeductions: makeFromInt 11599, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1787 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82051, itemizedDeductions: makeFromInt 6079, federalTaxDue: makeFromInt 12029, stateTaxDue: makeFromInt 3648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129277, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41337, stateTaxDue: makeFromInt 11469 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31208, ordinaryIncomeNonSS: makeFromInt 80701, qualifiedIncome: makeFromInt 90812, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23971, stateTaxDue: makeFromInt 8001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55822, qualifiedIncome: makeFromInt 28125, itemizedDeductions: makeFromInt 7152, federalTaxDue: makeFromInt 3878, stateTaxDue: makeFromInt 3730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22197, itemizedDeductions: makeFromInt 27722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 479 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110669, qualifiedIncome: makeFromInt 36469, itemizedDeductions: makeFromInt 9811, federalTaxDue: makeFromInt 22632, stateTaxDue: makeFromInt 6902 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42528, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26892, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129472, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21855, stateTaxDue: makeFromInt 6175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63291, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15675, federalTaxDue: makeFromInt 5873, stateTaxDue: makeFromInt 2881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25888, itemizedDeductions: makeFromInt 9407, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 919 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29439, federalTaxDue: makeFromInt 38380, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20641, ordinaryIncomeNonSS: makeFromInt 125746, qualifiedIncome: makeFromInt 81414, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34251, stateTaxDue: makeFromInt 9783 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1719, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15914, ordinaryIncomeNonSS: makeFromInt 142901, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17755, stateTaxDue: makeFromInt 6470 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11142, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9826, itemizedDeductions: makeFromInt 29763, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52435, itemizedDeductions: makeFromInt 29066, federalTaxDue: makeFromInt 2218, stateTaxDue: makeFromInt 2450 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3955, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23477, itemizedDeductions: makeFromInt 24236, federalTaxDue: makeFromInt 25861, stateTaxDue: makeFromInt 8299 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42153, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14445, federalTaxDue: makeFromInt 5948, stateTaxDue: makeFromInt 1533 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1165 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40199, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 240, stateTaxDue: makeFromInt 1622 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35282, qualifiedIncome: makeFromInt 7408, itemizedDeductions: makeFromInt 24164, federalTaxDue: makeFromInt 707, stateTaxDue: makeFromInt 1830 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21171, itemizedDeductions: makeFromInt 19519, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 604 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8604, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4462, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14900, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23411, federalTaxDue: makeFromInt 39671, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28377, ordinaryIncomeNonSS: makeFromInt 128317, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31877, stateTaxDue: makeFromInt 10741 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47605, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11298, federalTaxDue: makeFromInt 28530, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39119, ordinaryIncomeNonSS: makeFromInt 63008, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1446, federalTaxDue: makeFromInt 32204, stateTaxDue: makeFromInt 8089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10468, ordinaryIncomeNonSS: makeFromInt 13350, qualifiedIncome: makeFromInt 38223, itemizedDeductions: makeFromInt 9191, federalTaxDue: makeFromInt 2338, stateTaxDue: makeFromInt 2406 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2210, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4856 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44934, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61088, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34757, stateTaxDue: makeFromInt 10079 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77823, qualifiedIncome: makeFromInt 78637, itemizedDeductions: makeFromInt 25558, federalTaxDue: makeFromInt 18038, stateTaxDue: makeFromInt 7633 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26255, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16237, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27382, ordinaryIncomeNonSS: makeFromInt 133813, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23967, federalTaxDue: makeFromInt 24992, stateTaxDue: makeFromInt 6236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44007, qualifiedIncome: makeFromInt 38439, itemizedDeductions: makeFromInt 29036, federalTaxDue: makeFromInt 1497, stateTaxDue: makeFromInt 3747 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 898, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6687, qualifiedIncome: makeFromInt 51393, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 149, stateTaxDue: makeFromInt 2615 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25008, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4018, itemizedDeductions: makeFromInt 7315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8214, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14445, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 71 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43576, ordinaryIncomeNonSS: makeFromInt 42780, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7530, stateTaxDue: makeFromInt 1684 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146899, qualifiedIncome: makeFromInt 11530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20396, stateTaxDue: makeFromInt 7354 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99933, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7077, stateTaxDue: makeFromInt 4703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33011, ordinaryIncomeNonSS: makeFromInt 71491, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20602, federalTaxDue: makeFromInt 10446, stateTaxDue: makeFromInt 3218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36508, ordinaryIncomeNonSS: makeFromInt 118832, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11066, federalTaxDue: makeFromInt 23935, stateTaxDue: makeFromInt 5510 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21132, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 682 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40969, ordinaryIncomeNonSS: makeFromInt 116028, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42841, stateTaxDue: makeFromInt 10589 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41806, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30681, stateTaxDue: makeFromInt 9231 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44626, ordinaryIncomeNonSS: makeFromInt 58405, qualifiedIncome: makeFromInt 42217, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12902, stateTaxDue: makeFromInt 4556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7547, ordinaryIncomeNonSS: makeFromInt 36515, qualifiedIncome: makeFromInt 64726, itemizedDeductions: makeFromInt 18659, federalTaxDue: makeFromInt 3458, stateTaxDue: makeFromInt 4714 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9621, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25070, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44124, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58559, itemizedDeductions: makeFromInt 2998, federalTaxDue: makeFromInt 51424, stateTaxDue: makeFromInt 10412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17835, ordinaryIncomeNonSS: makeFromInt 90865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12258, federalTaxDue: makeFromInt 12677, stateTaxDue: makeFromInt 4083 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10917, ordinaryIncomeNonSS: makeFromInt 51073, qualifiedIncome: makeFromInt 24418, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8204, stateTaxDue: makeFromInt 3320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23523, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47410, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28192, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38500, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27530, ordinaryIncomeNonSS: makeFromInt 13208, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 84, stateTaxDue: makeFromInt 327 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62394, qualifiedIncome: makeFromInt 72055, itemizedDeductions: makeFromInt 24361, federalTaxDue: makeFromInt 9116, stateTaxDue: makeFromInt 6204 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36739, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125370, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24438, stateTaxDue: makeFromInt 5694 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32344, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4584, stateTaxDue: makeFromInt 1362 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7235, federalTaxDue: makeFromInt 16706, stateTaxDue: makeFromInt 4984 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10637, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26227, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15350, federalTaxDue: makeFromInt 29796, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53630, qualifiedIncome: makeFromInt 65158, itemizedDeductions: makeFromInt 1650, federalTaxDue: makeFromInt 21096, stateTaxDue: makeFromInt 5609 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95954, qualifiedIncome: makeFromInt 58464, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11803, stateTaxDue: makeFromInt 7246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29186, ordinaryIncomeNonSS: makeFromInt 141, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7760, federalTaxDue: makeFromInt 10340, stateTaxDue: makeFromInt 4760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34613, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14610, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15777, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41196, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31322, itemizedDeductions: makeFromInt 13247, federalTaxDue: makeFromInt 41976, stateTaxDue: makeFromInt 8901 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41063, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8954, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31975, ordinaryIncomeNonSS: makeFromInt 39500, qualifiedIncome: makeFromInt 75707, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17437, stateTaxDue: makeFromInt 5505 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109627, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21126, federalTaxDue: makeFromInt 15530, stateTaxDue: makeFromInt 5163 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3599, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20252, itemizedDeductions: makeFromInt 5678, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 380 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7840, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11599, stateTaxDue: makeFromInt 5153 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33071, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85731, itemizedDeductions: makeFromInt 6935, federalTaxDue: makeFromInt 11055, stateTaxDue: makeFromInt 4107 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41635, qualifiedIncome: makeFromInt 61063, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16387, stateTaxDue: makeFromInt 4560 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44355, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73768, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34350, stateTaxDue: makeFromInt 11065 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20145, ordinaryIncomeNonSS: makeFromInt 38695, qualifiedIncome: makeFromInt 17736, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2544, stateTaxDue: makeFromInt 2347 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38164, ordinaryIncomeNonSS: makeFromInt 45929, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29218, federalTaxDue: makeFromInt 13285, stateTaxDue: makeFromInt 6821 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40302, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79376, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10003, stateTaxDue: makeFromInt 3514 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6130, ordinaryIncomeNonSS: makeFromInt 98998, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22308, federalTaxDue: makeFromInt 8933, stateTaxDue: makeFromInt 4275 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38742, ordinaryIncomeNonSS: makeFromInt 128789, qualifiedIncome: makeFromInt 42437, itemizedDeductions: makeFromInt 5456, federalTaxDue: makeFromInt 32438, stateTaxDue: makeFromInt 7986 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38093, ordinaryIncomeNonSS: makeFromInt 107852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13237, federalTaxDue: makeFromInt 14192, stateTaxDue: makeFromInt 4918 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1306, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33000, ordinaryIncomeNonSS: makeFromInt 68292, qualifiedIncome: makeFromInt 62394, itemizedDeductions: makeFromInt 29588, federalTaxDue: makeFromInt 19098, stateTaxDue: makeFromInt 6079 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22605, ordinaryIncomeNonSS: makeFromInt 32703, qualifiedIncome: makeFromInt 37200, itemizedDeductions: makeFromInt 17325, federalTaxDue: makeFromInt 5795, stateTaxDue: makeFromInt 2920 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17800, ordinaryIncomeNonSS: makeFromInt 96957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4055, federalTaxDue: makeFromInt 9296, stateTaxDue: makeFromInt 4173 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87914, qualifiedIncome: makeFromInt 5585, itemizedDeductions: makeFromInt 19848, federalTaxDue: makeFromInt 10250, stateTaxDue: makeFromInt 4378 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9168, ordinaryIncomeNonSS: makeFromInt 119584, qualifiedIncome: makeFromInt 80931, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22899, stateTaxDue: makeFromInt 9573 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19463, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39119, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18295, qualifiedIncome: makeFromInt 61084, itemizedDeductions: makeFromInt 26074, federalTaxDue: makeFromInt 1603, stateTaxDue: makeFromInt 3702 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20240, ordinaryIncomeNonSS: makeFromInt 46806, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7382, stateTaxDue: makeFromInt 1959 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122874, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28723, stateTaxDue: makeFromInt 5818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39257, ordinaryIncomeNonSS: makeFromInt 67475, qualifiedIncome: makeFromInt 24433, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15786, stateTaxDue: makeFromInt 4137 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65520, itemizedDeductions: makeFromInt 25298, federalTaxDue: makeFromInt 45827, stateTaxDue: makeFromInt 10645 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2324, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83903, qualifiedIncome: makeFromInt 58402, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11854, stateTaxDue: makeFromInt 6605 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72597, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2202, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93163, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22664, federalTaxDue: makeFromInt 10563, stateTaxDue: makeFromInt 4403 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27733, federalTaxDue: makeFromInt 4736, stateTaxDue: makeFromInt 2916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48495, ordinaryIncomeNonSS: makeFromInt 53085, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4648, stateTaxDue: makeFromInt 2055 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39250, ordinaryIncomeNonSS: makeFromInt 89600, qualifiedIncome: makeFromInt 61182, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19503, stateTaxDue: makeFromInt 6864 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50207, itemizedDeductions: makeFromInt 13315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2035 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17700, ordinaryIncomeNonSS: makeFromInt 124397, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16697, federalTaxDue: makeFromInt 21151, stateTaxDue: makeFromInt 5895 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134716, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25814, federalTaxDue: makeFromInt 29379, stateTaxDue: makeFromInt 6481 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144563, qualifiedIncome: makeFromInt 64391, itemizedDeductions: makeFromInt 26196, federalTaxDue: makeFromInt 31902, stateTaxDue: makeFromInt 10193 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12508, ordinaryIncomeNonSS: makeFromInt 60531, qualifiedIncome: makeFromInt 81877, itemizedDeductions: makeFromInt 18307, federalTaxDue: makeFromInt 9841, stateTaxDue: makeFromInt 6610 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3324, ordinaryIncomeNonSS: makeFromInt 91458, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12154, stateTaxDue: makeFromInt 4318 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48626, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14539, itemizedDeductions: makeFromInt 284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 52 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16031, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3399, stateTaxDue: makeFromInt 3263 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107473, qualifiedIncome: makeFromInt 51240, itemizedDeductions: makeFromInt 11032, federalTaxDue: makeFromInt 27029, stateTaxDue: makeFromInt 7369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30469, itemizedDeductions: makeFromInt 13827, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1105 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19702, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2308, ordinaryIncomeNonSS: makeFromInt 46089, qualifiedIncome: makeFromInt 1527, itemizedDeductions: makeFromInt 7472, federalTaxDue: makeFromInt 2113, stateTaxDue: makeFromInt 1878 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24361, ordinaryIncomeNonSS: makeFromInt 41811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18220, federalTaxDue: makeFromInt 3495, stateTaxDue: makeFromInt 1480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22974, ordinaryIncomeNonSS: makeFromInt 115968, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32204, stateTaxDue: makeFromInt 10362 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54837, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1001, stateTaxDue: makeFromInt 2267 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7647, ordinaryIncomeNonSS: makeFromInt 2578, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10847, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2043, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23873, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 939 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31188, ordinaryIncomeNonSS: makeFromInt 35576, qualifiedIncome: makeFromInt 69103, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15878, stateTaxDue: makeFromInt 4979 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68947, qualifiedIncome: makeFromInt 84280, itemizedDeductions: makeFromInt 1456, federalTaxDue: makeFromInt 8384, stateTaxDue: makeFromInt 6986 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22082, ordinaryIncomeNonSS: makeFromInt 88037, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15720, federalTaxDue: makeFromInt 20964, stateTaxDue: makeFromInt 8927 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41484, ordinaryIncomeNonSS: makeFromInt 48307, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7560, stateTaxDue: makeFromInt 1913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30611, ordinaryIncomeNonSS: makeFromInt 19194, qualifiedIncome: makeFromInt 86022, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14240, stateTaxDue: makeFromInt 5019 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20594, ordinaryIncomeNonSS: makeFromInt 112250, qualifiedIncome: makeFromInt 24970, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19051, stateTaxDue: makeFromInt 6286 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14320, ordinaryIncomeNonSS: makeFromInt 148524, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19377, federalTaxDue: makeFromInt 42938, stateTaxDue: makeFromInt 11971 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102346, qualifiedIncome: makeFromInt 16528, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16407, stateTaxDue: makeFromInt 5689 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103739, qualifiedIncome: makeFromInt 44817, itemizedDeductions: makeFromInt 18946, federalTaxDue: makeFromInt 19427, stateTaxDue: makeFromInt 6853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25312, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86254, qualifiedIncome: makeFromInt 29296, itemizedDeductions: makeFromInt 2027, federalTaxDue: makeFromInt 27543, stateTaxDue: makeFromInt 5546 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8827, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21799, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 715 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39450, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57564, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2203 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19565, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30509, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1005 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18701, ordinaryIncomeNonSS: makeFromInt 7718, qualifiedIncome: makeFromInt 77439, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 321, stateTaxDue: makeFromInt 3690 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28082, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24353, federalTaxDue: makeFromInt 373, stateTaxDue: makeFromInt 1075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17236, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4497, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45335, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23892, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8907, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21023, ordinaryIncomeNonSS: makeFromInt 93661, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1419, federalTaxDue: makeFromInt 12649, stateTaxDue: makeFromInt 4308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 688, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18547, ordinaryIncomeNonSS: makeFromInt 131368, qualifiedIncome: makeFromInt 5205, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24671, stateTaxDue: makeFromInt 6414 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90054, qualifiedIncome: makeFromInt 4654, itemizedDeductions: makeFromInt 17164, federalTaxDue: makeFromInt 9228, stateTaxDue: makeFromInt 4360 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141973, qualifiedIncome: makeFromInt 35172, itemizedDeductions: makeFromInt 6745, federalTaxDue: makeFromInt 31729, stateTaxDue: makeFromInt 8688 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21144, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11373, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28393, federalTaxDue: makeFromInt 19234, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95160, qualifiedIncome: makeFromInt 33129, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30344, stateTaxDue: makeFromInt 6196 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23132, ordinaryIncomeNonSS: makeFromInt 11300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 90 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3984, ordinaryIncomeNonSS: makeFromInt 99454, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1335, federalTaxDue: makeFromInt 16670, stateTaxDue: makeFromInt 4725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99528, qualifiedIncome: makeFromInt 27164, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11495, stateTaxDue: makeFromInt 6012 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32156, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50159, itemizedDeductions: makeFromInt 22187, federalTaxDue: makeFromInt 1757, stateTaxDue: makeFromInt 2053 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32947, ordinaryIncomeNonSS: makeFromInt 60539, qualifiedIncome: makeFromInt 85837, itemizedDeductions: makeFromInt 12701, federalTaxDue: makeFromInt 20467, stateTaxDue: makeFromInt 6944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38036, ordinaryIncomeNonSS: makeFromInt 20878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20060, federalTaxDue: makeFromInt 72, stateTaxDue: makeFromInt 616 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28297, ordinaryIncomeNonSS: makeFromInt 29847, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4996, federalTaxDue: makeFromInt 940, stateTaxDue: makeFromInt 1017 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41378, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86855, itemizedDeductions: makeFromInt 10952, federalTaxDue: makeFromInt 442, stateTaxDue: makeFromInt 3668 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5848, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8560, stateTaxDue: makeFromInt 3981 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3811, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5070 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114148, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13225, stateTaxDue: makeFromInt 5132 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61170, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7849, stateTaxDue: makeFromInt 2691 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34406, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24168, federalTaxDue: makeFromInt 32681, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25371, qualifiedIncome: makeFromInt 22710, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3678, stateTaxDue: makeFromInt 2029 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 823, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9536, stateTaxDue: makeFromInt 4294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15400, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 337 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95205, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19316, federalTaxDue: makeFromInt 9681, stateTaxDue: makeFromInt 4427 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30642, ordinaryIncomeNonSS: makeFromInt 97795, qualifiedIncome: makeFromInt 33434, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20372, stateTaxDue: makeFromInt 6186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96543, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43136, stateTaxDue: makeFromInt 12227 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5076, ordinaryIncomeNonSS: makeFromInt 63372, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23952, federalTaxDue: makeFromInt 4976, stateTaxDue: makeFromInt 2681 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92960, qualifiedIncome: makeFromInt 64798, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20250, stateTaxDue: makeFromInt 7597 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33897, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3433, federalTaxDue: makeFromInt 11265, stateTaxDue: makeFromInt 6278 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22774, ordinaryIncomeNonSS: makeFromInt 128190, qualifiedIncome: makeFromInt 38337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32409, stateTaxDue: makeFromInt 8187 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38563, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13090, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78594, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47060, stateTaxDue: makeFromInt 10975 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7149, ordinaryIncomeNonSS: makeFromInt 86602, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27469, federalTaxDue: makeFromInt 8642, stateTaxDue: makeFromInt 3755 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73006, qualifiedIncome: makeFromInt 14565, itemizedDeductions: makeFromInt 15566, federalTaxDue: makeFromInt 5074, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34037, ordinaryIncomeNonSS: makeFromInt 118468, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14477, federalTaxDue: makeFromInt 21001, stateTaxDue: makeFromInt 5348 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5467, ordinaryIncomeNonSS: makeFromInt 55505, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14543, stateTaxDue: makeFromInt 7584 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43646, ordinaryIncomeNonSS: makeFromInt 51869, qualifiedIncome: makeFromInt 65729, itemizedDeductions: makeFromInt 24506, federalTaxDue: makeFromInt 17400, stateTaxDue: makeFromInt 5305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48806, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25038, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140859, qualifiedIncome: makeFromInt 83622, itemizedDeductions: makeFromInt 20116, federalTaxDue: makeFromInt 35357, stateTaxDue: makeFromInt 10969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8273, ordinaryIncomeNonSS: makeFromInt 95398, qualifiedIncome: makeFromInt 86878, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29599, stateTaxDue: makeFromInt 8949 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7654, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2961, stateTaxDue: makeFromInt 3092 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1391, ordinaryIncomeNonSS: makeFromInt 102252, qualifiedIncome: makeFromInt 77034, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28374, stateTaxDue: makeFromInt 8797 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27061, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3466, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26915, qualifiedIncome: makeFromInt 47061, itemizedDeductions: makeFromInt 24795, federalTaxDue: makeFromInt 5517, stateTaxDue: makeFromInt 3024 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40300, qualifiedIncome: makeFromInt 62397, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1420, stateTaxDue: makeFromInt 4660 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30222, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5965, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90594, qualifiedIncome: makeFromInt 53568, itemizedDeductions: makeFromInt 6927, federalTaxDue: makeFromInt 29048, stateTaxDue: makeFromInt 6953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16545, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27984, stateTaxDue: makeFromInt 8269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12586, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 91 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15809, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97724, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8659, stateTaxDue: makeFromInt 4631 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46194, ordinaryIncomeNonSS: makeFromInt 3408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25200, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2188, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136250, qualifiedIncome: makeFromInt 77091, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29962, stateTaxDue: makeFromInt 10534 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9865, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48671, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15017, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32048, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 225, federalTaxDue: makeFromInt 31608, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43509, ordinaryIncomeNonSS: makeFromInt 72978, qualifiedIncome: makeFromInt 62206, itemizedDeductions: makeFromInt 9754, federalTaxDue: makeFromInt 29292, stateTaxDue: makeFromInt 6670 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2923, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97932, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5240, stateTaxDue: makeFromInt 4522 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27452, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47997, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82260, itemizedDeductions: makeFromInt 14345, federalTaxDue: makeFromInt 8242, stateTaxDue: makeFromInt 3767 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47341, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63485, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 949, stateTaxDue: makeFromInt 2499 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90595, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7897, stateTaxDue: makeFromInt 4192 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39276, ordinaryIncomeNonSS: makeFromInt 19461, qualifiedIncome: makeFromInt 32860, itemizedDeductions: makeFromInt 21907, federalTaxDue: makeFromInt 6369, stateTaxDue: makeFromInt 2361 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48354, ordinaryIncomeNonSS: makeFromInt 113358, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19260, stateTaxDue: makeFromInt 5128 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32367, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15494, stateTaxDue: makeFromInt 6526 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25847, ordinaryIncomeNonSS: makeFromInt 759, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6419, ordinaryIncomeNonSS: makeFromInt 57491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4005, federalTaxDue: makeFromInt 8921, stateTaxDue: makeFromInt 2708 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3599, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18266, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34547, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 316, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4898, federalTaxDue: makeFromInt 12187, stateTaxDue: makeFromInt 4441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37437, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22915, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74250, qualifiedIncome: makeFromInt 97906, itemizedDeductions: makeFromInt 5330, federalTaxDue: makeFromInt 20799, stateTaxDue: makeFromInt 8033 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1835, qualifiedIncome: makeFromInt 55845, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2317, stateTaxDue: makeFromInt 2629 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41865, itemizedDeductions: makeFromInt 16711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1838 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120853, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41294, stateTaxDue: makeFromInt 10835 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45341, ordinaryIncomeNonSS: makeFromInt 43512, qualifiedIncome: makeFromInt 74065, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17043, stateTaxDue: makeFromInt 5504 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83016, qualifiedIncome: makeFromInt 48126, itemizedDeductions: makeFromInt 9207, federalTaxDue: makeFromInt 18096, stateTaxDue: makeFromInt 6102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48235, ordinaryIncomeNonSS: makeFromInt 47971, qualifiedIncome: makeFromInt 12039, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17232, stateTaxDue: makeFromInt 2836 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48107, qualifiedIncome: makeFromInt 50371, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3550, stateTaxDue: makeFromInt 4676 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26685, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12781, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20564, itemizedDeductions: makeFromInt 124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 453 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15956, qualifiedIncome: makeFromInt 27775, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45704, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48523, itemizedDeductions: makeFromInt 27209, federalTaxDue: makeFromInt 1631, stateTaxDue: makeFromInt 2046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13385, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 294 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19635, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98603, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 683, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139620, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26828, federalTaxDue: makeFromInt 18864, stateTaxDue: makeFromInt 6606 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46661, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45113, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7828, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29552, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31921, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3935, itemizedDeductions: makeFromInt 1189, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144375, qualifiedIncome: makeFromInt 71652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25851, stateTaxDue: makeFromInt 10126 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109866, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4658, federalTaxDue: makeFromInt 17777, stateTaxDue: makeFromInt 5175 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35756, qualifiedIncome: makeFromInt 47069, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 931, stateTaxDue: makeFromInt 3666 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2106, ordinaryIncomeNonSS: makeFromInt 110262, qualifiedIncome: makeFromInt 85663, itemizedDeductions: makeFromInt 9098, federalTaxDue: makeFromInt 23850, stateTaxDue: makeFromInt 9450 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64680, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1332, stateTaxDue: makeFromInt 2859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33845, ordinaryIncomeNonSS: makeFromInt 145874, qualifiedIncome: makeFromInt 29112, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31357, stateTaxDue: makeFromInt 8271 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10733, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30684, ordinaryIncomeNonSS: makeFromInt 109967, qualifiedIncome: makeFromInt 32785, itemizedDeductions: makeFromInt 20585, federalTaxDue: makeFromInt 24614, stateTaxDue: makeFromInt 6852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97730, qualifiedIncome: makeFromInt 76538, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29568, stateTaxDue: makeFromInt 8439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30938, ordinaryIncomeNonSS: makeFromInt 41929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6715, federalTaxDue: makeFromInt 5473, stateTaxDue: makeFromInt 1690 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42586, qualifiedIncome: makeFromInt 66032, itemizedDeductions: makeFromInt 650, federalTaxDue: makeFromInt 19212, stateTaxDue: makeFromInt 5193 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17164, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93005, itemizedDeductions: makeFromInt 2946, federalTaxDue: makeFromInt 44862, stateTaxDue: makeFromInt 11965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137760, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24176, stateTaxDue: makeFromInt 6597 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37054, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56784, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5267, stateTaxDue: makeFromInt 2584 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33777, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25395, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5308, qualifiedIncome: makeFromInt 87739, itemizedDeductions: makeFromInt 25000, federalTaxDue: makeFromInt 2505, stateTaxDue: makeFromInt 4093 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7765, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24138, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4945 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 888, itemizedDeductions: makeFromInt 8644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131011, qualifiedIncome: makeFromInt 39309, itemizedDeductions: makeFromInt 21791, federalTaxDue: makeFromInt 23910, stateTaxDue: makeFromInt 8258 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132606, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23736, federalTaxDue: makeFromInt 30772, stateTaxDue: makeFromInt 11414 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18549, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73163, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5199, stateTaxDue: makeFromInt 3385 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26994, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12759, ordinaryIncomeNonSS: makeFromInt 107954, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29248, stateTaxDue: makeFromInt 9823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18837, ordinaryIncomeNonSS: makeFromInt 24198, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 683 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48764, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9935, federalTaxDue: makeFromInt 5921, stateTaxDue: makeFromInt 1963 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18931, ordinaryIncomeNonSS: makeFromInt 127375, qualifiedIncome: makeFromInt 26568, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24042, stateTaxDue: makeFromInt 7322 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41504, ordinaryIncomeNonSS: makeFromInt 100609, qualifiedIncome: makeFromInt 5047, itemizedDeductions: makeFromInt 19373, federalTaxDue: makeFromInt 18995, stateTaxDue: makeFromInt 4908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29833, federalTaxDue: makeFromInt 541, stateTaxDue: makeFromInt 1657 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16114, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36851, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36741, ordinaryIncomeNonSS: makeFromInt 42390, qualifiedIncome: makeFromInt 44299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6238, stateTaxDue: makeFromInt 3659 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93785, itemizedDeductions: makeFromInt 223, federalTaxDue: makeFromInt 680, stateTaxDue: makeFromInt 4014 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3916, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99479, itemizedDeductions: makeFromInt 3447, federalTaxDue: makeFromInt 14643, stateTaxDue: makeFromInt 4719 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4914, ordinaryIncomeNonSS: makeFromInt 32295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 692, stateTaxDue: makeFromInt 1096 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34261, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6238, federalTaxDue: makeFromInt 1893, stateTaxDue: makeFromInt 1458 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49464, ordinaryIncomeNonSS: makeFromInt 140534, qualifiedIncome: makeFromInt 41433, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47407, stateTaxDue: makeFromInt 9056 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2878, ordinaryIncomeNonSS: makeFromInt 108972, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9188, federalTaxDue: makeFromInt 12624, stateTaxDue: makeFromInt 5074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9378, qualifiedIncome: makeFromInt 10697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 792 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43265, ordinaryIncomeNonSS: makeFromInt 106157, qualifiedIncome: makeFromInt 73073, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36674, stateTaxDue: makeFromInt 8712 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87693, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1859, stateTaxDue: makeFromInt 3820 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47136, ordinaryIncomeNonSS: makeFromInt 116429, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26629, stateTaxDue: makeFromInt 5566 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70182, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11718, federalTaxDue: makeFromInt 5229, stateTaxDue: makeFromInt 3134 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46313, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4378, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100967, qualifiedIncome: makeFromInt 83183, itemizedDeductions: makeFromInt 25131, federalTaxDue: makeFromInt 22520, stateTaxDue: makeFromInt 8633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15660, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2556, ordinaryIncomeNonSS: makeFromInt 146221, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35428, stateTaxDue: makeFromInt 11904 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62468, itemizedDeductions: makeFromInt 304, federalTaxDue: makeFromInt 3310, stateTaxDue: makeFromInt 2868 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9379, federalTaxDue: makeFromInt 5547, stateTaxDue: makeFromInt 3224 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79657, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6032, stateTaxDue: makeFromInt 3308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15876, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11652, federalTaxDue: makeFromInt 7484, stateTaxDue: makeFromInt 5563 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19312, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75038, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3277 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28160, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1089 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40860, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11364, federalTaxDue: makeFromInt 40391, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32228, ordinaryIncomeNonSS: makeFromInt 137733, qualifiedIncome: makeFromInt 96044, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43108, stateTaxDue: makeFromInt 11434 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29596, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7283, federalTaxDue: makeFromInt 10671, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91335, qualifiedIncome: makeFromInt 39511, itemizedDeductions: makeFromInt 21186, federalTaxDue: makeFromInt 12674, stateTaxDue: makeFromInt 6122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40296, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131727, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26500, federalTaxDue: makeFromInt 23412, stateTaxDue: makeFromInt 6065 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14539, itemizedDeductions: makeFromInt 9388, federalTaxDue: makeFromInt 25947, stateTaxDue: makeFromInt 7852 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91318, qualifiedIncome: makeFromInt 48840, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9108, stateTaxDue: makeFromInt 6533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22359, ordinaryIncomeNonSS: makeFromInt 26357, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28578, federalTaxDue: makeFromInt 10624, stateTaxDue: makeFromInt 6097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86580, qualifiedIncome: makeFromInt 34885, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9005, stateTaxDue: makeFromInt 5542 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39850, ordinaryIncomeNonSS: makeFromInt 115391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21820, federalTaxDue: makeFromInt 23155, stateTaxDue: makeFromInt 5195 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23023, ordinaryIncomeNonSS: makeFromInt 109528, qualifiedIncome: makeFromInt 30194, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16272, stateTaxDue: makeFromInt 6511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32957, ordinaryIncomeNonSS: makeFromInt 75329, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10100, federalTaxDue: makeFromInt 16596, stateTaxDue: makeFromInt 3495 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5578, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41229, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4805, stateTaxDue: makeFromInt 1606 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97012, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8552, stateTaxDue: makeFromInt 4596 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43104, qualifiedIncome: makeFromInt 33432, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15550, stateTaxDue: makeFromInt 3475 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11560, ordinaryIncomeNonSS: makeFromInt 26868, qualifiedIncome: makeFromInt 66802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 594, stateTaxDue: makeFromInt 4209 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24224, ordinaryIncomeNonSS: makeFromInt 32128, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28561, federalTaxDue: makeFromInt 758, stateTaxDue: makeFromInt 1131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130219, qualifiedIncome: makeFromInt 5397, itemizedDeductions: makeFromInt 27838, federalTaxDue: makeFromInt 21379, stateTaxDue: makeFromInt 6692 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2145, ordinaryIncomeNonSS: makeFromInt 94123, qualifiedIncome: makeFromInt 83726, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15590, stateTaxDue: makeFromInt 8417 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26668, qualifiedIncome: makeFromInt 68735, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5786, stateTaxDue: makeFromInt 4315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103414, qualifiedIncome: makeFromInt 13550, itemizedDeductions: makeFromInt 25039, federalTaxDue: makeFromInt 14911, stateTaxDue: makeFromInt 5618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 758, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58293, itemizedDeductions: makeFromInt 26567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2320 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62666, qualifiedIncome: makeFromInt 894, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1242, stateTaxDue: makeFromInt 2691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1689, stateTaxDue: makeFromInt 1884 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101146, qualifiedIncome: makeFromInt 35193, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14290, stateTaxDue: makeFromInt 6442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20367, ordinaryIncomeNonSS: makeFromInt 12315, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38753, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4398, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7801, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25940, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3588, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71439, itemizedDeductions: makeFromInt 5108, federalTaxDue: makeFromInt 3662, stateTaxDue: makeFromInt 3317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16050, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28291, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19033, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26038, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89196, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5819, stateTaxDue: makeFromInt 3998 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65870, itemizedDeductions: makeFromInt 22653, federalTaxDue: makeFromInt 431, stateTaxDue: makeFromInt 2719 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57056, qualifiedIncome: makeFromInt 72324, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6858, stateTaxDue: makeFromInt 6170 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36962, qualifiedIncome: makeFromInt 12388, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4679, stateTaxDue: makeFromInt 1993 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49994, ordinaryIncomeNonSS: makeFromInt 70423, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29014, stateTaxDue: makeFromInt 8345 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23071, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1415, ordinaryIncomeNonSS: makeFromInt 32202, qualifiedIncome: makeFromInt 55363, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 55, stateTaxDue: makeFromInt 3813 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8474, ordinaryIncomeNonSS: makeFromInt 78238, qualifiedIncome: makeFromInt 60633, itemizedDeductions: makeFromInt 22837, federalTaxDue: makeFromInt 17216, stateTaxDue: makeFromInt 6569 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30929, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2123, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42326, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20037, federalTaxDue: makeFromInt 1824, stateTaxDue: makeFromInt 1710 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35248, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1451 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17203, ordinaryIncomeNonSS: makeFromInt 47068, qualifiedIncome: makeFromInt 35145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10174, stateTaxDue: makeFromInt 3656 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27903, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115145, qualifiedIncome: makeFromInt 14471, itemizedDeductions: makeFromInt 1911, federalTaxDue: makeFromInt 15615, stateTaxDue: makeFromInt 6106 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16689, federalTaxDue: makeFromInt 15417, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31176, qualifiedIncome: makeFromInt 62063, itemizedDeductions: makeFromInt 1778, federalTaxDue: makeFromInt 4819, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39982, ordinaryIncomeNonSS: makeFromInt 104477, qualifiedIncome: makeFromInt 38629, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23740, stateTaxDue: makeFromInt 6646 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70164, qualifiedIncome: makeFromInt 79323, itemizedDeductions: makeFromInt 28849, federalTaxDue: makeFromInt 10140, stateTaxDue: makeFromInt 6799 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6125, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39667, ordinaryIncomeNonSS: makeFromInt 87936, qualifiedIncome: makeFromInt 10655, itemizedDeductions: makeFromInt 5515, federalTaxDue: makeFromInt 16474, stateTaxDue: makeFromInt 4555 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142733, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30832, stateTaxDue: makeFromInt 6851 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93231, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7733, stateTaxDue: makeFromInt 4407 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 669, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29119, stateTaxDue: makeFromInt 7235 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21286, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34968, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20450, itemizedDeductions: makeFromInt 11239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 568 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23849, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22039, federalTaxDue: makeFromInt 23196, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33210, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25832, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1037 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46730, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 700, ordinaryIncomeNonSS: makeFromInt 140472, qualifiedIncome: makeFromInt 608, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22738, stateTaxDue: makeFromInt 6746 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 528, stateTaxDue: makeFromInt 837 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47890, ordinaryIncomeNonSS: makeFromInt 148094, qualifiedIncome: makeFromInt 96971, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40979, stateTaxDue: makeFromInt 11578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30937, itemizedDeductions: makeFromInt 26357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44044, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16344, federalTaxDue: makeFromInt 33758, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14533, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9544, itemizedDeductions: makeFromInt 11640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 102 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 34158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2229, stateTaxDue: makeFromInt 1033 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36656, ordinaryIncomeNonSS: makeFromInt 8793, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9575, stateTaxDue: makeFromInt 5065 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26616, federalTaxDue: makeFromInt 2364, stateTaxDue: makeFromInt 1132 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83571, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6836, stateTaxDue: makeFromInt 3604 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29209, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7231, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25825, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36137, ordinaryIncomeNonSS: makeFromInt 109748, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33356, stateTaxDue: makeFromInt 10044 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40165, ordinaryIncomeNonSS: makeFromInt 117899, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42197, stateTaxDue: makeFromInt 10640 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37604, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1820, stateTaxDue: makeFromInt 1571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58974, itemizedDeductions: makeFromInt 8031, federalTaxDue: makeFromInt 2071, stateTaxDue: makeFromInt 2457 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141878, qualifiedIncome: makeFromInt 97527, itemizedDeductions: makeFromInt 25158, federalTaxDue: makeFromInt 35211, stateTaxDue: makeFromInt 11395 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44354, ordinaryIncomeNonSS: makeFromInt 8428, qualifiedIncome: makeFromInt 7702, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 370 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27856, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16236, itemizedDeductions: makeFromInt 2323, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3202, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30504, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90956, itemizedDeductions: makeFromInt 10499, federalTaxDue: makeFromInt 256, stateTaxDue: makeFromInt 4073 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12980, ordinaryIncomeNonSS: makeFromInt 26929, qualifiedIncome: makeFromInt 44127, itemizedDeductions: makeFromInt 5010, federalTaxDue: makeFromInt 2495, stateTaxDue: makeFromInt 3178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39225, qualifiedIncome: makeFromInt 26668, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2708 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13691, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84100, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5055, stateTaxDue: makeFromInt 3738 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26476, qualifiedIncome: makeFromInt 95240, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 179, stateTaxDue: makeFromInt 5611 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19427, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18576, stateTaxDue: makeFromInt 5688 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40432, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71033, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6962, stateTaxDue: makeFromInt 3194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31787, ordinaryIncomeNonSS: makeFromInt 81568, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8882, stateTaxDue: makeFromInt 3609 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25086, itemizedDeductions: makeFromInt 12468, federalTaxDue: makeFromInt 166, stateTaxDue: makeFromInt 933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75161, itemizedDeductions: makeFromInt 7295, federalTaxDue: makeFromInt 5023, stateTaxDue: makeFromInt 3503 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82179, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18748, stateTaxDue: makeFromInt 8842 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22358, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14309, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 505 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41209, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82762, itemizedDeductions: makeFromInt 11557, federalTaxDue: makeFromInt 44701, stateTaxDue: makeFromInt 11263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12395, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22684, federalTaxDue: makeFromInt 13619, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38804, ordinaryIncomeNonSS: makeFromInt 98141, qualifiedIncome: makeFromInt 37558, itemizedDeductions: makeFromInt 1075, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6408 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118769, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20727, federalTaxDue: makeFromInt 15040, stateTaxDue: makeFromInt 5608 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15264, ordinaryIncomeNonSS: makeFromInt 66336, qualifiedIncome: makeFromInt 39257, itemizedDeductions: makeFromInt 267, federalTaxDue: makeFromInt 11082, stateTaxDue: makeFromInt 4905 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34778, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1427 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48111, ordinaryIncomeNonSS: makeFromInt 62731, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15040, stateTaxDue: makeFromInt 2771 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10064, ordinaryIncomeNonSS: makeFromInt 20233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 637 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111037, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18331, federalTaxDue: makeFromInt 17119, stateTaxDue: makeFromInt 5077 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94034, qualifiedIncome: makeFromInt 86902, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23605, stateTaxDue: makeFromInt 8472 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40969, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27154, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64911, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16596, federalTaxDue: makeFromInt 6837, stateTaxDue: makeFromInt 3086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12828, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8114, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58408, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 391, stateTaxDue: makeFromInt 2345 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1077, ordinaryIncomeNonSS: makeFromInt 136082, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21230, stateTaxDue: makeFromInt 6327 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4078, federalTaxDue: makeFromInt 36625, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36667, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 622, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77553, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4073, stateTaxDue: makeFromInt 3404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43320, ordinaryIncomeNonSS: makeFromInt 79269, qualifiedIncome: makeFromInt 8734, itemizedDeductions: makeFromInt 17968, federalTaxDue: makeFromInt 20687, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44513, ordinaryIncomeNonSS: makeFromInt 10315, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12609, stateTaxDue: makeFromInt 5141 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93809, qualifiedIncome: makeFromInt 8651, itemizedDeductions: makeFromInt 25140, federalTaxDue: makeFromInt 18280, stateTaxDue: makeFromInt 4675 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146587, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16440, stateTaxDue: makeFromInt 6854 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17193, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25407, federalTaxDue: makeFromInt 23992, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 827, stateTaxDue: makeFromInt 893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38660, ordinaryIncomeNonSS: makeFromInt 93617, qualifiedIncome: makeFromInt 10130, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27072, stateTaxDue: makeFromInt 5067 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3791, stateTaxDue: makeFromInt 2335 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34944, ordinaryIncomeNonSS: makeFromInt 111894, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19752, federalTaxDue: makeFromInt 37285, stateTaxDue: makeFromInt 10140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17917, ordinaryIncomeNonSS: makeFromInt 147680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46217, stateTaxDue: makeFromInt 12203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91024, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3272, stateTaxDue: makeFromInt 4193 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40695, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39530, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77851, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 285, stateTaxDue: makeFromInt 3218 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17568, stateTaxDue: makeFromInt 4759 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23023, ordinaryIncomeNonSS: makeFromInt 108012, qualifiedIncome: makeFromInt 55928, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24910, stateTaxDue: makeFromInt 7742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32553, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37086, itemizedDeductions: makeFromInt 4228, federalTaxDue: makeFromInt 2635, stateTaxDue: makeFromInt 1667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38140, ordinaryIncomeNonSS: makeFromInt 363, qualifiedIncome: makeFromInt 23336, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 780 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49043, itemizedDeductions: makeFromInt 402, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1977 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21768, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4778, stateTaxDue: makeFromInt 3644 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20734, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30609, qualifiedIncome: makeFromInt 34450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12663, stateTaxDue: makeFromInt 2798 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111171, qualifiedIncome: makeFromInt 12310, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9187, stateTaxDue: makeFromInt 5499 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98740, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9494, federalTaxDue: makeFromInt 39205, stateTaxDue: makeFromInt 9482 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149799, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25447, stateTaxDue: makeFromInt 7415 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3120, federalTaxDue: makeFromInt 15854, stateTaxDue: makeFromInt 4970 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43486, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 916, federalTaxDue: makeFromInt 11177, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2334, ordinaryIncomeNonSS: makeFromInt 83515, qualifiedIncome: makeFromInt 24373, itemizedDeductions: makeFromInt 25372, federalTaxDue: makeFromInt 8257, stateTaxDue: makeFromInt 5053 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12555, qualifiedIncome: makeFromInt 78822, itemizedDeductions: makeFromInt 17889, federalTaxDue: makeFromInt 2373, stateTaxDue: makeFromInt 3994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92899, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11601, federalTaxDue: makeFromInt 26033, stateTaxDue: makeFromInt 9409 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20918, ordinaryIncomeNonSS: makeFromInt 135894, qualifiedIncome: makeFromInt 12779, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22324, stateTaxDue: makeFromInt 6930 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32022, ordinaryIncomeNonSS: makeFromInt 35582, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9160, federalTaxDue: makeFromInt 20202, stateTaxDue: makeFromInt 6324 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144082, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15039, stateTaxDue: makeFromInt 6529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13015, ordinaryIncomeNonSS: makeFromInt 41275, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1192, federalTaxDue: makeFromInt 8624, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32135, itemizedDeductions: makeFromInt 5756, federalTaxDue: makeFromInt 28469, stateTaxDue: makeFromInt 8532 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15949, ordinaryIncomeNonSS: makeFromInt 148742, qualifiedIncome: makeFromInt 20101, itemizedDeductions: makeFromInt 17510, federalTaxDue: makeFromInt 30807, stateTaxDue: makeFromInt 8187 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25872, ordinaryIncomeNonSS: makeFromInt 123319, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15309, stateTaxDue: makeFromInt 5491 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10514, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10260, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79062, qualifiedIncome: makeFromInt 9029, itemizedDeductions: makeFromInt 16177, federalTaxDue: makeFromInt 18879, stateTaxDue: makeFromInt 3903 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47360, ordinaryIncomeNonSS: makeFromInt 114698, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6291, federalTaxDue: makeFromInt 25591, stateTaxDue: makeFromInt 5299 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53451, itemizedDeductions: makeFromInt 12191, federalTaxDue: makeFromInt 35381, stateTaxDue: makeFromInt 9948 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80016, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6355, stateTaxDue: makeFromInt 3856 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17318, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99659, itemizedDeductions: makeFromInt 16876, federalTaxDue: makeFromInt 7895, stateTaxDue: makeFromInt 4728 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19045, qualifiedIncome: makeFromInt 12259, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 870, stateTaxDue: makeFromInt 1372 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29489, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41520, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6243, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25869, ordinaryIncomeNonSS: makeFromInt 61913, qualifiedIncome: makeFromInt 56633, itemizedDeductions: makeFromInt 9678, federalTaxDue: makeFromInt 18365, stateTaxDue: makeFromInt 5472 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1118, federalTaxDue: makeFromInt 3623, stateTaxDue: makeFromInt 2413 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27332, ordinaryIncomeNonSS: makeFromInt 31317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2317, stateTaxDue: makeFromInt 1169 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7913, ordinaryIncomeNonSS: makeFromInt 99677, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11862, stateTaxDue: makeFromInt 4729 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39409, ordinaryIncomeNonSS: makeFromInt 66992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1851, federalTaxDue: makeFromInt 14825, stateTaxDue: makeFromInt 3095 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38139, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77165, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1155, stateTaxDue: makeFromInt 3383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51179, qualifiedIncome: makeFromInt 15026, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2582, stateTaxDue: makeFromInt 2826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19438, ordinaryIncomeNonSS: makeFromInt 33565, qualifiedIncome: makeFromInt 27242, itemizedDeductions: makeFromInt 2908, federalTaxDue: makeFromInt 5036, stateTaxDue: makeFromInt 2673 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26884, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8140, federalTaxDue: makeFromInt 38022, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1216, ordinaryIncomeNonSS: makeFromInt 56326, qualifiedIncome: makeFromInt 69275, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3004, stateTaxDue: makeFromInt 5605 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67248, itemizedDeductions: makeFromInt 7653, federalTaxDue: makeFromInt 26428, stateTaxDue: makeFromInt 10187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49691, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80372, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10651, stateTaxDue: makeFromInt 3671 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59416, itemizedDeductions: makeFromInt 21504, federalTaxDue: makeFromInt 1859, stateTaxDue: makeFromInt 2716 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22662, ordinaryIncomeNonSS: makeFromInt 129464, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6805, federalTaxDue: makeFromInt 39765, stateTaxDue: makeFromInt 11218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60745, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26265, federalTaxDue: makeFromInt 24656, stateTaxDue: makeFromInt 7749 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30843, ordinaryIncomeNonSS: makeFromInt 64642, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18724, federalTaxDue: makeFromInt 23742, stateTaxDue: makeFromInt 7968 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9172, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5478, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80731, itemizedDeductions: makeFromInt 23867, federalTaxDue: makeFromInt 2660, stateTaxDue: makeFromInt 3462 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19571, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6420, federalTaxDue: makeFromInt 166, stateTaxDue: makeFromInt 342 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14996, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29675, qualifiedIncome: makeFromInt 58239, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1176, stateTaxDue: makeFromInt 4137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140443, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16846, stateTaxDue: makeFromInt 6612 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26586, ordinaryIncomeNonSS: makeFromInt 14730, qualifiedIncome: makeFromInt 98051, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13032, stateTaxDue: makeFromInt 5384 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134129, qualifiedIncome: makeFromInt 38591, itemizedDeductions: makeFromInt 25018, federalTaxDue: makeFromInt 23775, stateTaxDue: makeFromInt 8380 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46744, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40082, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38195, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29193, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13257, federalTaxDue: makeFromInt 26869, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49377, ordinaryIncomeNonSS: makeFromInt 104230, qualifiedIncome: makeFromInt 37998, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36775, stateTaxDue: makeFromInt 7029 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 63, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16353, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10463, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 105 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27414, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5249, qualifiedIncome: makeFromInt 57833, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2579 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50032, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6238, federalTaxDue: makeFromInt 15536, stateTaxDue: makeFromInt 2327 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20772, ordinaryIncomeNonSS: makeFromInt 39549, qualifiedIncome: makeFromInt 35657, itemizedDeductions: makeFromInt 3973, federalTaxDue: makeFromInt 2921, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32472, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90172, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15072, federalTaxDue: makeFromInt 7950, stateTaxDue: makeFromInt 3934 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17163, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17016, ordinaryIncomeNonSS: makeFromInt 37223, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15152, stateTaxDue: makeFromInt 6486 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21438, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39340, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1292 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52007, qualifiedIncome: makeFromInt 45708, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3017, stateTaxDue: makeFromInt 4311 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80694, itemizedDeductions: makeFromInt 2122, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3360 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148525, qualifiedIncome: makeFromInt 57256, itemizedDeductions: makeFromInt 22609, federalTaxDue: makeFromInt 24605, stateTaxDue: makeFromInt 9814 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19566, federalTaxDue: makeFromInt 34349, stateTaxDue: makeFromInt 12181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146904, qualifiedIncome: makeFromInt 7434, itemizedDeductions: makeFromInt 22964, federalTaxDue: makeFromInt 34896, stateTaxDue: makeFromInt 7462 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46859, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20694, itemizedDeductions: makeFromInt 22699, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 580 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28322, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77761, itemizedDeductions: makeFromInt 29719, federalTaxDue: makeFromInt 43931, stateTaxDue: makeFromInt 11391 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19998, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3820, federalTaxDue: makeFromInt 43879, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34922, ordinaryIncomeNonSS: makeFromInt 121009, qualifiedIncome: makeFromInt 28112, itemizedDeductions: makeFromInt 27823, federalTaxDue: makeFromInt 28219, stateTaxDue: makeFromInt 7258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47452, ordinaryIncomeNonSS: makeFromInt 16289, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20795, federalTaxDue: makeFromInt 13562, stateTaxDue: makeFromInt 5502 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5830, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1342, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4917 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30556, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10882, federalTaxDue: makeFromInt 6036, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139028, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15703, stateTaxDue: makeFromInt 6577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26115, federalTaxDue: makeFromInt 5154, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19259, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11003, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70223, itemizedDeductions: makeFromInt 17792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2836 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47843, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96134, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8565, stateTaxDue: makeFromInt 4250 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28301, ordinaryIncomeNonSS: makeFromInt 105305, qualifiedIncome: makeFromInt 15837, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22493, stateTaxDue: makeFromInt 5802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27939, ordinaryIncomeNonSS: makeFromInt 82385, qualifiedIncome: makeFromInt 52686, itemizedDeductions: makeFromInt 16552, federalTaxDue: makeFromInt 23583, stateTaxDue: makeFromInt 6542 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37351, ordinaryIncomeNonSS: makeFromInt 2860, qualifiedIncome: makeFromInt 3414, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86724, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10815, stateTaxDue: makeFromInt 3995 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25463, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70642, itemizedDeductions: makeFromInt 9984, federalTaxDue: makeFromInt 3543, stateTaxDue: makeFromInt 3077 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34618, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21774, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74082, qualifiedIncome: makeFromInt 41339, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12381, stateTaxDue: makeFromInt 5196 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10991, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32314, stateTaxDue: makeFromInt 5819 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14174, ordinaryIncomeNonSS: makeFromInt 83003, qualifiedIncome: makeFromInt 4530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7252, stateTaxDue: makeFromInt 3702 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35840, ordinaryIncomeNonSS: makeFromInt 26664, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 241, stateTaxDue: makeFromInt 658 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11205, ordinaryIncomeNonSS: makeFromInt 149357, qualifiedIncome: makeFromInt 84020, itemizedDeductions: makeFromInt 17049, federalTaxDue: makeFromInt 38591, stateTaxDue: makeFromInt 11453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23224, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5179, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25050, ordinaryIncomeNonSS: makeFromInt 19646, qualifiedIncome: makeFromInt 78145, itemizedDeductions: makeFromInt 9060, federalTaxDue: makeFromInt 6555, stateTaxDue: makeFromInt 4515 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46520, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14855, itemizedDeductions: makeFromInt 29340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 368 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35674, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44801, stateTaxDue: makeFromInt 9041 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20065, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26451, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3046, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26691, ordinaryIncomeNonSS: makeFromInt 818, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21214, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2043, stateTaxDue: makeFromInt 3456 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14216, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33957, stateTaxDue: makeFromInt 7636 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50830, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2067 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36157, ordinaryIncomeNonSS: makeFromInt 100910, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31120, stateTaxDue: makeFromInt 9818 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24023, qualifiedIncome: makeFromInt 36607, itemizedDeductions: makeFromInt 18203, federalTaxDue: makeFromInt 3695, stateTaxDue: makeFromInt 2557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15894, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22522, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20199, stateTaxDue: makeFromInt 6240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12993, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15038, ordinaryIncomeNonSS: makeFromInt 21017, qualifiedIncome: makeFromInt 1571, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 454 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126223, qualifiedIncome: makeFromInt 22914, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14547, stateTaxDue: makeFromInt 6782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43164, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38443, itemizedDeductions: makeFromInt 1812, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1512 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44263, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21095, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 505, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16317, federalTaxDue: makeFromInt 18773, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8839, ordinaryIncomeNonSS: makeFromInt 2720, qualifiedIncome: makeFromInt 56029, itemizedDeductions: makeFromInt 17081, federalTaxDue: makeFromInt 1351, stateTaxDue: makeFromInt 2682 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90773, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4064 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44585, ordinaryIncomeNonSS: makeFromInt 53934, qualifiedIncome: makeFromInt 7941, itemizedDeductions: makeFromInt 25395, federalTaxDue: makeFromInt 7448, stateTaxDue: makeFromInt 2419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12103, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29681, ordinaryIncomeNonSS: makeFromInt 101644, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23347, federalTaxDue: makeFromInt 16412, stateTaxDue: makeFromInt 4735 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10143, itemizedDeductions: makeFromInt 7036, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 132 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14838, qualifiedIncome: makeFromInt 50610, itemizedDeductions: makeFromInt 22873, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2797 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17062, federalTaxDue: makeFromInt 31341, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34070, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47641, stateTaxDue: makeFromInt 11278 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133270, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31255, stateTaxDue: makeFromInt 6409 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49753, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75637, itemizedDeductions: makeFromInt 23731, federalTaxDue: makeFromInt 1309, stateTaxDue: makeFromInt 3307 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13212, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 449 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34153, ordinaryIncomeNonSS: makeFromInt 108939, qualifiedIncome: makeFromInt 62421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28101, stateTaxDue: makeFromInt 7993 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54534, itemizedDeductions: makeFromInt 4174, federalTaxDue: makeFromInt 26858, stateTaxDue: makeFromInt 9752 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9062, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3523, federalTaxDue: makeFromInt 13588, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148324, qualifiedIncome: makeFromInt 82802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49751, stateTaxDue: makeFromInt 11101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7078, qualifiedIncome: makeFromInt 35651, itemizedDeductions: makeFromInt 22539, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11274, ordinaryIncomeNonSS: makeFromInt 86128, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8502, stateTaxDue: makeFromInt 3740 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4491, ordinaryIncomeNonSS: makeFromInt 59526, qualifiedIncome: makeFromInt 12860, itemizedDeductions: makeFromInt 18744, federalTaxDue: makeFromInt 5871, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28004, ordinaryIncomeNonSS: makeFromInt 11754, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 13 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23217, ordinaryIncomeNonSS: makeFromInt 49810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10966, federalTaxDue: makeFromInt 5601, stateTaxDue: makeFromInt 1916 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98097, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3875, federalTaxDue: makeFromInt 11463, stateTaxDue: makeFromInt 4530 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1344, itemizedDeductions: makeFromInt 20062, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49364, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71890, itemizedDeductions: makeFromInt 16280, federalTaxDue: makeFromInt 4955, stateTaxDue: makeFromInt 3218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90796, itemizedDeductions: makeFromInt 361, federalTaxDue: makeFromInt 5186, stateTaxDue: makeFromInt 4182 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20384, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123992, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18771, federalTaxDue: makeFromInt 15391, stateTaxDue: makeFromInt 5825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38859, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82390, itemizedDeductions: makeFromInt 24255, federalTaxDue: makeFromInt 8492, stateTaxDue: makeFromInt 3665 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41165, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42546, ordinaryIncomeNonSS: makeFromInt 139694, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45099, stateTaxDue: makeFromInt 11878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68732, qualifiedIncome: makeFromInt 96638, itemizedDeductions: makeFromInt 25079, federalTaxDue: makeFromInt 30793, stateTaxDue: makeFromInt 8209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23661, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7862, federalTaxDue: makeFromInt 44955, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6694, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11678, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18025, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49832, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18776, federalTaxDue: makeFromInt 10082, stateTaxDue: makeFromInt 7091 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16706, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52910, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2046 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120902, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14386, stateTaxDue: makeFromInt 5470 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45388, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1764 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28083, federalTaxDue: makeFromInt 18539, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2913, ordinaryIncomeNonSS: makeFromInt 49431, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4719, stateTaxDue: makeFromInt 2093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29021, ordinaryIncomeNonSS: makeFromInt 132304, qualifiedIncome: makeFromInt 57304, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33529, stateTaxDue: makeFromInt 8905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1478, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31320, itemizedDeductions: makeFromInt 4623, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41183, ordinaryIncomeNonSS: makeFromInt 145860, qualifiedIncome: makeFromInt 98947, itemizedDeductions: makeFromInt 12636, federalTaxDue: makeFromInt 49313, stateTaxDue: makeFromInt 12057 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15137, ordinaryIncomeNonSS: makeFromInt 60983, qualifiedIncome: makeFromInt 88658, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11527, stateTaxDue: makeFromInt 7007 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20116, ordinaryIncomeNonSS: makeFromInt 104320, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9045, federalTaxDue: makeFromInt 21315, stateTaxDue: makeFromInt 4974 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13124, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18952, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68970, itemizedDeductions: makeFromInt 1925, federalTaxDue: makeFromInt 2591, stateTaxDue: makeFromInt 2967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79299, itemizedDeductions: makeFromInt 24381, federalTaxDue: makeFromInt 4335, stateTaxDue: makeFromInt 3493 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3602, ordinaryIncomeNonSS: makeFromInt 37688, qualifiedIncome: makeFromInt 13034, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1000, stateTaxDue: makeFromInt 1861 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36156, ordinaryIncomeNonSS: makeFromInt 107171, qualifiedIncome: makeFromInt 34997, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34001, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8855, ordinaryIncomeNonSS: makeFromInt 148917, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32759, stateTaxDue: makeFromInt 11771 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40983, ordinaryIncomeNonSS: makeFromInt 135859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29545, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40096, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17705, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37829, stateTaxDue: makeFromInt 7930 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64361, itemizedDeductions: makeFromInt 20069, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2543 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5461, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86151, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 420, stateTaxDue: makeFromInt 3833 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10967, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11975, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17483, ordinaryIncomeNonSS: makeFromInt 676, qualifiedIncome: makeFromInt 34460, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1082 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11504, ordinaryIncomeNonSS: makeFromInt 18207, qualifiedIncome: makeFromInt 77864, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5890, stateTaxDue: makeFromInt 4675 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131898, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13159, federalTaxDue: makeFromInt 13209, stateTaxDue: makeFromInt 6120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1812, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88996, qualifiedIncome: makeFromInt 90267, itemizedDeductions: makeFromInt 15057, federalTaxDue: makeFromInt 21260, stateTaxDue: makeFromInt 8592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41718, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49754, ordinaryIncomeNonSS: makeFromInt 110821, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27455, stateTaxDue: makeFromInt 5286 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26329, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2542, qualifiedIncome: makeFromInt 44035, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9084, stateTaxDue: makeFromInt 2151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13765, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 253 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25071, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37593, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 850, stateTaxDue: makeFromInt 1505 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98177, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7167, stateTaxDue: makeFromInt 4456 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35146, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7844, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3308, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15381, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140397, qualifiedIncome: makeFromInt 50742, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28956, stateTaxDue: makeFromInt 8982 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11897, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32542, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 599, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15221, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 386 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71027, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4748, stateTaxDue: makeFromInt 3163 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39642, ordinaryIncomeNonSS: makeFromInt 45900, qualifiedIncome: makeFromInt 259, itemizedDeductions: makeFromInt 5596, federalTaxDue: makeFromInt 7695, stateTaxDue: makeFromInt 2007 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 51223, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78546, qualifiedIncome: makeFromInt 62053, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7641, stateTaxDue: makeFromInt 6355 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69885, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6566, stateTaxDue: makeFromInt 3119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80214, itemizedDeductions: makeFromInt 11090, federalTaxDue: makeFromInt 4472, stateTaxDue: makeFromInt 3744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8346, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92662, itemizedDeductions: makeFromInt 19234, federalTaxDue: makeFromInt 2514, stateTaxDue: makeFromInt 4073 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35128, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40499, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34752, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40452, itemizedDeductions: makeFromInt 22003, federalTaxDue: makeFromInt 275, stateTaxDue: makeFromInt 1568 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46855, ordinaryIncomeNonSS: makeFromInt 83256, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11433, federalTaxDue: makeFromInt 25358, stateTaxDue: makeFromInt 8688 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17205, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38309, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40908, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1370 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73443, itemizedDeductions: makeFromInt 19009, federalTaxDue: makeFromInt 1566, stateTaxDue: makeFromInt 3297 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 526, ordinaryIncomeNonSS: makeFromInt 76388, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22492, stateTaxDue: makeFromInt 8649 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22473, ordinaryIncomeNonSS: makeFromInt 125274, qualifiedIncome: makeFromInt 56145, itemizedDeductions: makeFromInt 8765, federalTaxDue: makeFromInt 30838, stateTaxDue: makeFromInt 8496 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118305, qualifiedIncome: makeFromInt 30041, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13574, stateTaxDue: makeFromInt 6742 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23023, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33013, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8396, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23146, itemizedDeductions: makeFromInt 8804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 902 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26473, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1965, stateTaxDue: makeFromInt 2114 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15572, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68302, itemizedDeductions: makeFromInt 21630, federalTaxDue: makeFromInt 37273, stateTaxDue: makeFromInt 10660 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8530, ordinaryIncomeNonSS: makeFromInt 104147, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12960, stateTaxDue: makeFromInt 4752 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144395, qualifiedIncome: makeFromInt 62415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26357, stateTaxDue: makeFromInt 9666 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 48079, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21248, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 487 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12097, ordinaryIncomeNonSS: makeFromInt 132220, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10985, federalTaxDue: makeFromInt 21967, stateTaxDue: makeFromInt 6036 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139559, qualifiedIncome: makeFromInt 72575, itemizedDeductions: makeFromInt 22553, federalTaxDue: makeFromInt 31722, stateTaxDue: makeFromInt 10167 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20660, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45354, itemizedDeductions: makeFromInt 22764, federalTaxDue: makeFromInt 33890, stateTaxDue: makeFromInt 9393 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99542, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28311, stateTaxDue: makeFromInt 9522 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42682, ordinaryIncomeNonSS: makeFromInt 104511, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22860, stateTaxDue: makeFromInt 4971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49622, ordinaryIncomeNonSS: makeFromInt 45366, qualifiedIncome: makeFromInt 62274, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24411, stateTaxDue: makeFromInt 5265 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99705, qualifiedIncome: makeFromInt 33147, itemizedDeductions: makeFromInt 24819, federalTaxDue: makeFromInt 24849, stateTaxDue: makeFromInt 6327 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66506, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4328, stateTaxDue: makeFromInt 3167 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48058, ordinaryIncomeNonSS: makeFromInt 131401, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10165, federalTaxDue: makeFromInt 45411, stateTaxDue: makeFromInt 11315 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23133, ordinaryIncomeNonSS: makeFromInt 43378, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1172, federalTaxDue: makeFromInt 11710, stateTaxDue: makeFromInt 6659 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94773, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32196, stateTaxDue: makeFromInt 11564 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17327, ordinaryIncomeNonSS: makeFromInt 136189, qualifiedIncome: makeFromInt 74610, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33254, stateTaxDue: makeFromInt 10085 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36923, ordinaryIncomeNonSS: makeFromInt 4196, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45520, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19755, itemizedDeductions: makeFromInt 4508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 457 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60195, itemizedDeductions: makeFromInt 14389, federalTaxDue: makeFromInt 1409, stateTaxDue: makeFromInt 2723 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118751, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15590, stateTaxDue: makeFromInt 5832 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9297, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26856, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31011, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88753, itemizedDeductions: makeFromInt 24576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3963 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20594, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36594, qualifiedIncome: makeFromInt 25567, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10476, stateTaxDue: makeFromInt 2619 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9362, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65493, itemizedDeductions: makeFromInt 16442, federalTaxDue: makeFromInt 38631, stateTaxDue: makeFromInt 10643 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94077, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25742, federalTaxDue: makeFromInt 16101, stateTaxDue: makeFromInt 4306 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41044, itemizedDeductions: makeFromInt 29019, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32142, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20526, federalTaxDue: makeFromInt 1099, stateTaxDue: makeFromInt 1032 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33718, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8375, federalTaxDue: makeFromInt 31949, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83003, qualifiedIncome: makeFromInt 14369, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21347, stateTaxDue: makeFromInt 4614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60711, qualifiedIncome: makeFromInt 50445, itemizedDeductions: makeFromInt 18358, federalTaxDue: makeFromInt 6835, stateTaxDue: makeFromInt 5220 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9995, ordinaryIncomeNonSS: makeFromInt 128008, qualifiedIncome: makeFromInt 48779, itemizedDeductions: makeFromInt 985, federalTaxDue: makeFromInt 31324, stateTaxDue: makeFromInt 8504 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129082, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21581, stateTaxDue: makeFromInt 6199 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49386, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1864, stateTaxDue: makeFromInt 1794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87579, itemizedDeductions: makeFromInt 12908, federalTaxDue: makeFromInt 4434, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135708, qualifiedIncome: makeFromInt 63085, itemizedDeductions: makeFromInt 5758, federalTaxDue: makeFromInt 34350, stateTaxDue: makeFromInt 9792 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28623, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19221, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 286 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26567, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7065, ordinaryIncomeNonSS: makeFromInt 7581, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32813, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18001, federalTaxDue: makeFromInt 1151, stateTaxDue: makeFromInt 1449 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8048, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13500, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17312, ordinaryIncomeNonSS: makeFromInt 76683, qualifiedIncome: makeFromInt 46444, itemizedDeductions: makeFromInt 1673, federalTaxDue: makeFromInt 16860, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35684, ordinaryIncomeNonSS: makeFromInt 106700, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21847, federalTaxDue: makeFromInt 29338, stateTaxDue: makeFromInt 9860 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19321, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132337, qualifiedIncome: makeFromInt 11214, itemizedDeductions: makeFromInt 7659, federalTaxDue: makeFromInt 22513, stateTaxDue: makeFromInt 6723 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6401, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21565, federalTaxDue: makeFromInt 29388, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30632, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1398, stateTaxDue: makeFromInt 1113 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28831, qualifiedIncome: makeFromInt 64756, itemizedDeductions: makeFromInt 24594, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8233, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18444, federalTaxDue: makeFromInt 25169, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7446, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 155 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37194, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87267, itemizedDeductions: makeFromInt 12672, federalTaxDue: makeFromInt 5581, stateTaxDue: makeFromInt 3988 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38131, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53803, itemizedDeductions: makeFromInt 1653, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24295, ordinaryIncomeNonSS: makeFromInt 53355, qualifiedIncome: makeFromInt 3761, itemizedDeductions: makeFromInt 8566, federalTaxDue: makeFromInt 5246, stateTaxDue: makeFromInt 2260 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4760, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25124, stateTaxDue: makeFromInt 7342 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47926, qualifiedIncome: makeFromInt 8659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13806, stateTaxDue: makeFromInt 2574 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14677, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8559, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8061, ordinaryIncomeNonSS: makeFromInt 37210, qualifiedIncome: makeFromInt 62843, itemizedDeductions: makeFromInt 24311, federalTaxDue: makeFromInt 3779, stateTaxDue: makeFromInt 4674 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34064, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8138, federalTaxDue: makeFromInt 486, stateTaxDue: makeFromInt 1228 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97844, qualifiedIncome: makeFromInt 53657, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22941, stateTaxDue: makeFromInt 7298 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31649, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48791, ordinaryIncomeNonSS: makeFromInt 68318, qualifiedIncome: makeFromInt 42716, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13177, stateTaxDue: makeFromInt 5077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10134, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22268, federalTaxDue: makeFromInt 20567, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40875, ordinaryIncomeNonSS: makeFromInt 134814, qualifiedIncome: makeFromInt 56628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39896, stateTaxDue: makeFromInt 9117 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17507, ordinaryIncomeNonSS: makeFromInt 51146, qualifiedIncome: makeFromInt 78021, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9871, stateTaxDue: makeFromInt 5983 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35887, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80903, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18231, stateTaxDue: makeFromInt 3677 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129666, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17404, federalTaxDue: makeFromInt 21351, stateTaxDue: makeFromInt 6266 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6429, qualifiedIncome: makeFromInt 48862, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8786, stateTaxDue: makeFromInt 2310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22776, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9931, ordinaryIncomeNonSS: makeFromInt 18454, qualifiedIncome: makeFromInt 79226, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7416, stateTaxDue: makeFromInt 4629 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122768, qualifiedIncome: makeFromInt 54478, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17705, stateTaxDue: makeFromInt 8387 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133438, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3515, federalTaxDue: makeFromInt 12697, stateTaxDue: makeFromInt 6197 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32201, itemizedDeductions: makeFromInt 19491, federalTaxDue: makeFromInt 39395, stateTaxDue: makeFromInt 8655 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41548, ordinaryIncomeNonSS: makeFromInt 60165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7304, stateTaxDue: makeFromInt 2333 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50563, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7594, federalTaxDue: makeFromInt 3850, stateTaxDue: makeFromInt 2073 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84771, itemizedDeductions: makeFromInt 6531, federalTaxDue: makeFromInt 5662, stateTaxDue: makeFromInt 3984 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43445, ordinaryIncomeNonSS: makeFromInt 123481, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15562, federalTaxDue: makeFromInt 43599, stateTaxDue: makeFromInt 10719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27157, itemizedDeductions: makeFromInt 8452, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 834 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37047, ordinaryIncomeNonSS: makeFromInt 96506, qualifiedIncome: makeFromInt 50625, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23682, stateTaxDue: makeFromInt 6982 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22826, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29727, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40747, ordinaryIncomeNonSS: makeFromInt 118817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20108, stateTaxDue: makeFromInt 5556 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 269, stateTaxDue: makeFromInt 997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50921, qualifiedIncome: makeFromInt 62510, itemizedDeductions: makeFromInt 68, federalTaxDue: makeFromInt 2017, stateTaxDue: makeFromInt 5197 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8647, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11855, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 18 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1846, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6135, qualifiedIncome: makeFromInt 85273, itemizedDeductions: makeFromInt 12336, federalTaxDue: makeFromInt 671, stateTaxDue: makeFromInt 4095 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27852, itemizedDeductions: makeFromInt 15505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68898, qualifiedIncome: makeFromInt 5982, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2135, stateTaxDue: makeFromInt 3268 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29937, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41528, itemizedDeductions: makeFromInt 23683, federalTaxDue: makeFromInt 582, stateTaxDue: makeFromInt 1894 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30155, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7126, stateTaxDue: makeFromInt 6133 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38482, ordinaryIncomeNonSS: makeFromInt 93450, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6335, federalTaxDue: makeFromInt 37442, stateTaxDue: makeFromInt 9519 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24471, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30796, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33377, stateTaxDue: makeFromInt 8665 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29946, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39565, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19806, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 415 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23135, qualifiedIncome: makeFromInt 93884, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7029, stateTaxDue: makeFromInt 5396 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117452, qualifiedIncome: makeFromInt 52328, itemizedDeductions: makeFromInt 4323, federalTaxDue: makeFromInt 19527, stateTaxDue: makeFromInt 8014 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40938, ordinaryIncomeNonSS: makeFromInt 132360, qualifiedIncome: makeFromInt 64609, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29807, stateTaxDue: makeFromInt 9373 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36161, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79072, itemizedDeductions: makeFromInt 11084, federalTaxDue: makeFromInt 4133, stateTaxDue: makeFromInt 3579 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18662, federalTaxDue: makeFromInt 26120, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21054, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23956, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3450, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37329, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21203, ordinaryIncomeNonSS: makeFromInt 58530, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17967, federalTaxDue: makeFromInt 20277, stateTaxDue: makeFromInt 7352 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31284, ordinaryIncomeNonSS: makeFromInt 118825, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5111, federalTaxDue: makeFromInt 35525, stateTaxDue: makeFromInt 10366 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100746, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11893, federalTaxDue: makeFromInt 11403, stateTaxDue: makeFromInt 4587 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8220, itemizedDeductions: makeFromInt 2830, federalTaxDue: makeFromInt 17574, stateTaxDue: makeFromInt 7436 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24807, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62990, itemizedDeductions: makeFromInt 1868, federalTaxDue: makeFromInt 39580, stateTaxDue: makeFromInt 10195 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18683, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29796, federalTaxDue: makeFromInt 27187, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24136, ordinaryIncomeNonSS: makeFromInt 42045, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24429, federalTaxDue: makeFromInt 1196, stateTaxDue: makeFromInt 1491 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1309, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10827, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23734, stateTaxDue: makeFromInt 7586 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26392, ordinaryIncomeNonSS: makeFromInt 56489, qualifiedIncome: makeFromInt 85181, itemizedDeductions: makeFromInt 11121, federalTaxDue: makeFromInt 17866, stateTaxDue: makeFromInt 6709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46064, ordinaryIncomeNonSS: makeFromInt 129066, qualifiedIncome: makeFromInt 70668, itemizedDeductions: makeFromInt 6159, federalTaxDue: makeFromInt 39821, stateTaxDue: makeFromInt 9636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42298, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98273, itemizedDeductions: makeFromInt 5009, federalTaxDue: makeFromInt 8309, stateTaxDue: makeFromInt 4563 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18027, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7252, stateTaxDue: makeFromInt 5469 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4993, ordinaryIncomeNonSS: makeFromInt 51121, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3859, stateTaxDue: makeFromInt 2179 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15678, ordinaryIncomeNonSS: makeFromInt 81502, qualifiedIncome: makeFromInt 45940, itemizedDeductions: makeFromInt 16499, federalTaxDue: makeFromInt 16471, stateTaxDue: makeFromInt 5997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119234, qualifiedIncome: makeFromInt 26905, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23360, stateTaxDue: makeFromInt 6852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9718, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18188, itemizedDeductions: makeFromInt 22094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 434 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64457, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45892, stateTaxDue: makeFromInt 10489 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48931, ordinaryIncomeNonSS: makeFromInt 30087, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2068, federalTaxDue: makeFromInt 21357, stateTaxDue: makeFromInt 6288 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103452, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29509, federalTaxDue: makeFromInt 28212, stateTaxDue: makeFromInt 10152 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28964, ordinaryIncomeNonSS: makeFromInt 108547, qualifiedIncome: makeFromInt 87919, itemizedDeductions: makeFromInt 13101, federalTaxDue: makeFromInt 34218, stateTaxDue: makeFromInt 9568 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70593, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27920, federalTaxDue: makeFromInt 13196, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11878, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36057, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32301, itemizedDeductions: makeFromInt 6243, federalTaxDue: makeFromInt 37271, stateTaxDue: makeFromInt 8860 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2333, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4358, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11569, ordinaryIncomeNonSS: makeFromInt 95116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19014, federalTaxDue: makeFromInt 16243, stateTaxDue: makeFromInt 4627 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18064, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 697 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1710, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22029, stateTaxDue: makeFromInt 4039 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44521, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29879, itemizedDeductions: makeFromInt 4450, federalTaxDue: makeFromInt 35189, stateTaxDue: makeFromInt 8419 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41443, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6857, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29176, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5922, ordinaryIncomeNonSS: makeFromInt 70338, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5358, stateTaxDue: makeFromInt 3042 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24687, ordinaryIncomeNonSS: makeFromInt 119619, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23233, federalTaxDue: makeFromInt 22190, stateTaxDue: makeFromInt 5526 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2483, ordinaryIncomeNonSS: makeFromInt 139508, qualifiedIncome: makeFromInt 86724, itemizedDeductions: makeFromInt 7146, federalTaxDue: makeFromInt 35266, stateTaxDue: makeFromInt 10987 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104194, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10561, federalTaxDue: makeFromInt 24056, stateTaxDue: makeFromInt 9761 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37218, ordinaryIncomeNonSS: makeFromInt 142420, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20780, federalTaxDue: makeFromInt 30866, stateTaxDue: makeFromInt 6666 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139719, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22306, federalTaxDue: makeFromInt 49035, stateTaxDue: makeFromInt 11879 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48171, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14002, federalTaxDue: makeFromInt 37622, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34821, ordinaryIncomeNonSS: makeFromInt 21309, qualifiedIncome: makeFromInt 75297, itemizedDeductions: makeFromInt 28217, federalTaxDue: makeFromInt 2226, stateTaxDue: makeFromInt 4155 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28720, ordinaryIncomeNonSS: makeFromInt 93187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17182, federalTaxDue: makeFromInt 9958, stateTaxDue: makeFromInt 4184 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120238, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15800, stateTaxDue: makeFromInt 5785 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38199, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 52746, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125219, qualifiedIncome: makeFromInt 17843, itemizedDeductions: makeFromInt 22283, federalTaxDue: makeFromInt 13566, stateTaxDue: makeFromInt 6478 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93913, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12073, stateTaxDue: makeFromInt 4441 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18607, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40315, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29126, stateTaxDue: makeFromInt 9257 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33589, qualifiedIncome: makeFromInt 27335, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11241, stateTaxDue: makeFromInt 2733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11935, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24615, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71931, qualifiedIncome: makeFromInt 16915, itemizedDeductions: makeFromInt 10076, federalTaxDue: makeFromInt 10976, stateTaxDue: makeFromInt 4187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63384, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28858, federalTaxDue: makeFromInt 3909, stateTaxDue: makeFromInt 2886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26840, ordinaryIncomeNonSS: makeFromInt 123333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24424, stateTaxDue: makeFromInt 6066 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81298, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26285, stateTaxDue: makeFromInt 8899 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54644, qualifiedIncome: makeFromInt 89516, itemizedDeductions: makeFromInt 2567, federalTaxDue: makeFromInt 7618, stateTaxDue: makeFromInt 6699 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19998, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74717, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33064, stateTaxDue: makeFromInt 10904 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21210, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34484, itemizedDeductions: makeFromInt 26614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1149 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10432, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3573, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5982, ordinaryIncomeNonSS: makeFromInt 134017, qualifiedIncome: makeFromInt 12662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26530, stateTaxDue: makeFromInt 7185 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12454, ordinaryIncomeNonSS: makeFromInt 56815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6673, federalTaxDue: makeFromInt 21240, stateTaxDue: makeFromInt 7586 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146280, qualifiedIncome: makeFromInt 87202, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37258, stateTaxDue: makeFromInt 11419 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23704, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99862, qualifiedIncome: makeFromInt 44145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20721, stateTaxDue: makeFromInt 6916 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36497, ordinaryIncomeNonSS: makeFromInt 6834, qualifiedIncome: makeFromInt 24011, itemizedDeductions: makeFromInt 5785, federalTaxDue: makeFromInt 846, stateTaxDue: makeFromInt 1087 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47748, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25270, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31464, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33593, itemizedDeductions: makeFromInt 833, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1285 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27774, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88009, itemizedDeductions: makeFromInt 6459, federalTaxDue: makeFromInt 3751, stateTaxDue: makeFromInt 3825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48857, ordinaryIncomeNonSS: makeFromInt 92716, qualifiedIncome: makeFromInt 62444, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28465, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 827, ordinaryIncomeNonSS: makeFromInt 74807, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12016, stateTaxDue: makeFromInt 3591 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20719, itemizedDeductions: makeFromInt 15928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 404 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23682, ordinaryIncomeNonSS: makeFromInt 99967, qualifiedIncome: makeFromInt 22465, itemizedDeductions: makeFromInt 11311, federalTaxDue: makeFromInt 12922, stateTaxDue: makeFromInt 5447 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34388, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42164, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65222, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21211, stateTaxDue: makeFromInt 7586 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23353, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 763 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9468, federalTaxDue: makeFromInt 14438, stateTaxDue: makeFromInt 2561 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7576, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48475, itemizedDeductions: makeFromInt 25841, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15957, itemizedDeductions: makeFromInt 19396, federalTaxDue: makeFromInt 24019, stateTaxDue: makeFromInt 7923 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8403, ordinaryIncomeNonSS: makeFromInt 62387, qualifiedIncome: makeFromInt 66927, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13730, stateTaxDue: makeFromInt 6044 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11611, ordinaryIncomeNonSS: makeFromInt 142917, qualifiedIncome: makeFromInt 41521, itemizedDeductions: makeFromInt 21726, federalTaxDue: makeFromInt 25519, stateTaxDue: makeFromInt 8547 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39367, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36972, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21118, itemizedDeductions: makeFromInt 21414, federalTaxDue: makeFromInt 21729, stateTaxDue: makeFromInt 8074 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18845, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61905, itemizedDeductions: makeFromInt 17389, federalTaxDue: makeFromInt 1726, stateTaxDue: makeFromInt 2606 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29459, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 998 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13360, ordinaryIncomeNonSS: makeFromInt 38012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1286 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13993, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20576, federalTaxDue: makeFromInt 216, stateTaxDue: makeFromInt 161 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38129, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38199, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1235 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137016, qualifiedIncome: makeFromInt 14381, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19651, stateTaxDue: makeFromInt 7068 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33874, ordinaryIncomeNonSS: makeFromInt 17875, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13303, stateTaxDue: makeFromInt 5439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15893, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38699, stateTaxDue: makeFromInt 7970 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17965, ordinaryIncomeNonSS: makeFromInt 122925, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19430, federalTaxDue: makeFromInt 16081, stateTaxDue: makeFromInt 5671 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13830, ordinaryIncomeNonSS: makeFromInt 145889, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17034, federalTaxDue: makeFromInt 46219, stateTaxDue: makeFromInt 12316 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38512, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21316, federalTaxDue: makeFromInt 32576, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53282, qualifiedIncome: makeFromInt 56431, itemizedDeductions: makeFromInt 16395, federalTaxDue: makeFromInt 19020, stateTaxDue: makeFromInt 5167 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41304, ordinaryIncomeNonSS: makeFromInt 42794, qualifiedIncome: makeFromInt 63249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7647, stateTaxDue: makeFromInt 4827 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26671, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 930, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19708, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2379, ordinaryIncomeNonSS: makeFromInt 146842, qualifiedIncome: makeFromInt 27104, itemizedDeductions: makeFromInt 9300, federalTaxDue: makeFromInt 23415, stateTaxDue: makeFromInt 8422 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37042, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82836, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 797, stateTaxDue: makeFromInt 3467 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66767, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17642, stateTaxDue: makeFromInt 7883 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45391, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12363, federalTaxDue: makeFromInt 13429, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84474, itemizedDeductions: makeFromInt 10385, federalTaxDue: makeFromInt 8902, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18740, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15371, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 194 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1028, ordinaryIncomeNonSS: makeFromInt 97217, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5093, federalTaxDue: makeFromInt 26044, stateTaxDue: makeFromInt 9486 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23835, ordinaryIncomeNonSS: makeFromInt 442, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 949, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58069, qualifiedIncome: makeFromInt 70213, itemizedDeductions: makeFromInt 8835, federalTaxDue: makeFromInt 22121, stateTaxDue: makeFromInt 6039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98820, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2168, federalTaxDue: makeFromInt 13839, stateTaxDue: makeFromInt 4611 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36534, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42800, itemizedDeductions: makeFromInt 17531, federalTaxDue: makeFromInt 1861, stateTaxDue: makeFromInt 1685 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111623, qualifiedIncome: makeFromInt 32918, itemizedDeductions: makeFromInt 29744, federalTaxDue: makeFromInt 18004, stateTaxDue: makeFromInt 6772 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106719, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9236, federalTaxDue: makeFromInt 17583, stateTaxDue: makeFromInt 5096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7447, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32946, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25722, itemizedDeductions: makeFromInt 23080, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 761 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36221, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4247, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31680, ordinaryIncomeNonSS: makeFromInt 100914, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12140, stateTaxDue: makeFromInt 4371 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38688, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21685, federalTaxDue: makeFromInt 1611, stateTaxDue: makeFromInt 1359 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90773, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12227, stateTaxDue: makeFromInt 4201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124376, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24199, stateTaxDue: makeFromInt 5844 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66316, itemizedDeductions: makeFromInt 23218, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2933 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38279, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43396, ordinaryIncomeNonSS: makeFromInt 44781, qualifiedIncome: makeFromInt 19220, itemizedDeductions: makeFromInt 2437, federalTaxDue: makeFromInt 12434, stateTaxDue: makeFromInt 2836 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35071, ordinaryIncomeNonSS: makeFromInt 40666, qualifiedIncome: makeFromInt 75457, itemizedDeductions: makeFromInt 15706, federalTaxDue: makeFromInt 16544, stateTaxDue: makeFromInt 5231 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13739, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26105, federalTaxDue: makeFromInt 28933, stateTaxDue: makeFromInt 6306 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13743, ordinaryIncomeNonSS: makeFromInt 38929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1822, stateTaxDue: makeFromInt 1639 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84832, qualifiedIncome: makeFromInt 91085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22112, stateTaxDue: makeFromInt 8221 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26770, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67904, itemizedDeductions: makeFromInt 29318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2920 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38667, ordinaryIncomeNonSS: makeFromInt 102113, qualifiedIncome: makeFromInt 24806, itemizedDeductions: makeFromInt 27013, federalTaxDue: makeFromInt 17128, stateTaxDue: makeFromInt 5820 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63117, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6499, stateTaxDue: makeFromInt 2701 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98531, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13818, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119406, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16421, federalTaxDue: makeFromInt 17728, stateTaxDue: makeFromInt 5715 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34913, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15032, stateTaxDue: makeFromInt 6591 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45895, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96973, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2504, stateTaxDue: makeFromInt 4374 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75744, qualifiedIncome: makeFromInt 62552, itemizedDeductions: makeFromInt 14109, federalTaxDue: makeFromInt 26832, stateTaxDue: makeFromInt 6660 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46618, ordinaryIncomeNonSS: makeFromInt 146439, qualifiedIncome: makeFromInt 40562, itemizedDeductions: makeFromInt 22699, federalTaxDue: makeFromInt 38334, stateTaxDue: makeFromInt 9095 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17093, itemizedDeductions: makeFromInt 20464, federalTaxDue: makeFromInt 18905, stateTaxDue: makeFromInt 7880 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5847, ordinaryIncomeNonSS: makeFromInt 131597, qualifiedIncome: makeFromInt 58660, itemizedDeductions: makeFromInt 12621, federalTaxDue: makeFromInt 30646, stateTaxDue: makeFromInt 9258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42618, ordinaryIncomeNonSS: makeFromInt 89064, qualifiedIncome: makeFromInt 59367, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29589, stateTaxDue: makeFromInt 7142 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30569, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67699, itemizedDeductions: makeFromInt 24907, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45283, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49992, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 761, stateTaxDue: makeFromInt 2203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49637, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68018, itemizedDeductions: makeFromInt 6847, federalTaxDue: makeFromInt 46340, stateTaxDue: makeFromInt 10670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111454, qualifiedIncome: makeFromInt 3195, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15253, stateTaxDue: makeFromInt 5296 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17446, ordinaryIncomeNonSS: makeFromInt 4840, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4694 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23990, ordinaryIncomeNonSS: makeFromInt 123216, qualifiedIncome: makeFromInt 65830, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30540, stateTaxDue: makeFromInt 8997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23042, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35768, ordinaryIncomeNonSS: makeFromInt 136011, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8758, federalTaxDue: makeFromInt 29010, stateTaxDue: makeFromInt 6546 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53187, itemizedDeductions: makeFromInt 8589, federalTaxDue: makeFromInt 4073, stateTaxDue: makeFromInt 2488 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90742, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6735, stateTaxDue: makeFromInt 3862 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32925, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48709, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35712, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14721, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11239, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40625, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4182, stateTaxDue: makeFromInt 1241 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20805, itemizedDeductions: makeFromInt 22167, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 565 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14303, ordinaryIncomeNonSS: makeFromInt 62925, qualifiedIncome: makeFromInt 17183, itemizedDeductions: makeFromInt 5269, federalTaxDue: makeFromInt 10508, stateTaxDue: makeFromInt 3750 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25323, ordinaryIncomeNonSS: makeFromInt 111001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12497, stateTaxDue: makeFromInt 5075 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47321, itemizedDeductions: makeFromInt 7924, federalTaxDue: makeFromInt 23439, stateTaxDue: makeFromInt 9191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67362, qualifiedIncome: makeFromInt 89061, itemizedDeductions: makeFromInt 3969, federalTaxDue: makeFromInt 21160, stateTaxDue: makeFromInt 7631 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126121, qualifiedIncome: makeFromInt 12362, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24345, stateTaxDue: makeFromInt 6716 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4502, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25864, ordinaryIncomeNonSS: makeFromInt 142492, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4538, federalTaxDue: makeFromInt 41734, stateTaxDue: makeFromInt 11750 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5094, ordinaryIncomeNonSS: makeFromInt 28039, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1566, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40931, ordinaryIncomeNonSS: makeFromInt 70517, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12316, stateTaxDue: makeFromInt 3071 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40266, qualifiedIncome: makeFromInt 5550, itemizedDeductions: makeFromInt 1248, federalTaxDue: makeFromInt 952, stateTaxDue: makeFromInt 1816 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20294, ordinaryIncomeNonSS: makeFromInt 44566, qualifiedIncome: makeFromInt 82324, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18666, stateTaxDue: makeFromInt 6125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19592, ordinaryIncomeNonSS: makeFromInt 34115, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1007, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13874, ordinaryIncomeNonSS: makeFromInt 137996, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36574, stateTaxDue: makeFromInt 11525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15523, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15630, itemizedDeductions: makeFromInt 1059, federalTaxDue: makeFromInt 18686, stateTaxDue: makeFromInt 7607 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111869, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14275, federalTaxDue: makeFromInt 26119, stateTaxDue: makeFromInt 5338 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14759, ordinaryIncomeNonSS: makeFromInt 68981, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 870, federalTaxDue: makeFromInt 6256, stateTaxDue: makeFromInt 2974 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60074, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2329 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71378, itemizedDeductions: makeFromInt 490, federalTaxDue: makeFromInt 1175, stateTaxDue: makeFromInt 2894 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118608, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6726, federalTaxDue: makeFromInt 19713, stateTaxDue: makeFromInt 5768 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20767, itemizedDeductions: makeFromInt 767, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42600, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4545, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1673, stateTaxDue: makeFromInt 3333 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27183, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43227, stateTaxDue: makeFromInt 11429 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47507, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 154, federalTaxDue: makeFromInt 2129, stateTaxDue: makeFromInt 1700 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39486, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14842, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4008, federalTaxDue: makeFromInt 2562, stateTaxDue: makeFromInt 946 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18409, ordinaryIncomeNonSS: makeFromInt 31197, qualifiedIncome: makeFromInt 7372, itemizedDeductions: makeFromInt 23713, federalTaxDue: makeFromInt 2428, stateTaxDue: makeFromInt 1353 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46073, itemizedDeductions: makeFromInt 20371, federalTaxDue: makeFromInt 3849, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142768, qualifiedIncome: makeFromInt 46629, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29596, stateTaxDue: makeFromInt 9108 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145893, qualifiedIncome: makeFromInt 25609, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27206, stateTaxDue: makeFromInt 8317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5412, ordinaryIncomeNonSS: makeFromInt 77056, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12981, federalTaxDue: makeFromInt 11928, stateTaxDue: makeFromInt 3706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17261, qualifiedIncome: makeFromInt 80371, itemizedDeductions: makeFromInt 16465, federalTaxDue: makeFromInt 6408, stateTaxDue: makeFromInt 4551 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43321, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4464, stateTaxDue: makeFromInt 1761 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21714, ordinaryIncomeNonSS: makeFromInt 90495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13914, stateTaxDue: makeFromInt 4150 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32517, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12891, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44322, qualifiedIncome: makeFromInt 86757, itemizedDeductions: makeFromInt 18197, federalTaxDue: makeFromInt 8835, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70319, qualifiedIncome: makeFromInt 28356, itemizedDeductions: makeFromInt 28920, federalTaxDue: makeFromInt 19987, stateTaxDue: makeFromInt 4808 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44108, ordinaryIncomeNonSS: makeFromInt 18708, qualifiedIncome: makeFromInt 76125, itemizedDeductions: makeFromInt 18217, federalTaxDue: makeFromInt 14760, stateTaxDue: makeFromInt 4287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72631, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6427, stateTaxDue: makeFromInt 3255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3267, stateTaxDue: makeFromInt 1670 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19392, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 956 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2120, federalTaxDue: makeFromInt 19427, stateTaxDue: makeFromInt 6069 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32927, ordinaryIncomeNonSS: makeFromInt 67603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17936, stateTaxDue: makeFromInt 7705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92443, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29273, federalTaxDue: makeFromInt 5511, stateTaxDue: makeFromInt 4062 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39380, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78176, itemizedDeductions: makeFromInt 2315, federalTaxDue: makeFromInt 44830, stateTaxDue: makeFromInt 10954 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29263, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27874, ordinaryIncomeNonSS: makeFromInt 78779, qualifiedIncome: makeFromInt 55437, itemizedDeductions: makeFromInt 22961, federalTaxDue: makeFromInt 13109, stateTaxDue: makeFromInt 6036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42697, ordinaryIncomeNonSS: makeFromInt 80085, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12573, federalTaxDue: makeFromInt 12424, stateTaxDue: makeFromInt 3432 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108803, qualifiedIncome: makeFromInt 15008, itemizedDeductions: makeFromInt 8199, federalTaxDue: makeFromInt 18672, stateTaxDue: makeFromInt 5936 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47898, qualifiedIncome: makeFromInt 30341, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7493, stateTaxDue: makeFromInt 3657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1723, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89879, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7834, stateTaxDue: makeFromInt 4155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34007, ordinaryIncomeNonSS: makeFromInt 126635, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30206, stateTaxDue: makeFromInt 6112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1789, ordinaryIncomeNonSS: makeFromInt 14333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41543, ordinaryIncomeNonSS: makeFromInt 135348, qualifiedIncome: makeFromInt 25907, itemizedDeductions: makeFromInt 23591, federalTaxDue: makeFromInt 34324, stateTaxDue: makeFromInt 7877 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36228, ordinaryIncomeNonSS: makeFromInt 81065, qualifiedIncome: makeFromInt 37069, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11725, stateTaxDue: makeFromInt 5372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6774, qualifiedIncome: makeFromInt 60353, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3405, stateTaxDue: makeFromInt 3199 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48662, ordinaryIncomeNonSS: makeFromInt 35933, qualifiedIncome: makeFromInt 75708, itemizedDeductions: makeFromInt 15247, federalTaxDue: makeFromInt 16006, stateTaxDue: makeFromInt 5007 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11921, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32533, itemizedDeductions: makeFromInt 15057, federalTaxDue: makeFromInt 33988, stateTaxDue: makeFromInt 9085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23667, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45170, itemizedDeductions: makeFromInt 24910, federalTaxDue: makeFromInt 29557, stateTaxDue: makeFromInt 9301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68311, qualifiedIncome: makeFromInt 28380, itemizedDeductions: makeFromInt 25584, federalTaxDue: makeFromInt 2444, stateTaxDue: makeFromInt 4278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22268, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29096, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 6011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32942, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83597, itemizedDeductions: makeFromInt 16970, federalTaxDue: makeFromInt 6725, stateTaxDue: makeFromInt 3917 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5648, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11189, ordinaryIncomeNonSS: makeFromInt 11096, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 300 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51929, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 736, stateTaxDue: makeFromInt 2141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126885, qualifiedIncome: makeFromInt 85300, itemizedDeductions: makeFromInt 9614, federalTaxDue: makeFromInt 32998, stateTaxDue: makeFromInt 10393 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1969, stateTaxDue: makeFromInt 1883 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13265, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3981 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77843, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3417 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45402, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9094, federalTaxDue: makeFromInt 15313, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32774, ordinaryIncomeNonSS: makeFromInt 77372, qualifiedIncome: makeFromInt 89562, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24697, stateTaxDue: makeFromInt 7772 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15214, ordinaryIncomeNonSS: makeFromInt 17909, qualifiedIncome: makeFromInt 48376, itemizedDeductions: makeFromInt 9930, federalTaxDue: makeFromInt 6189, stateTaxDue: makeFromInt 3125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15801, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21363, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11035, qualifiedIncome: makeFromInt 719, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38130, ordinaryIncomeNonSS: makeFromInt 39857, qualifiedIncome: makeFromInt 1907, itemizedDeductions: makeFromInt 23943, federalTaxDue: makeFromInt 1597, stateTaxDue: makeFromInt 1477 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26583, ordinaryIncomeNonSS: makeFromInt 149565, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30389, stateTaxDue: makeFromInt 7223 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108623, qualifiedIncome: makeFromInt 13943, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16474, stateTaxDue: makeFromInt 6026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11987, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 183 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39188, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3497, stateTaxDue: makeFromInt 1346 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16484, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 5349 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45258, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25017, ordinaryIncomeNonSS: makeFromInt 67170, qualifiedIncome: makeFromInt 43030, itemizedDeductions: makeFromInt 12995, federalTaxDue: makeFromInt 11543, stateTaxDue: makeFromInt 4919 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29970, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84945, itemizedDeductions: makeFromInt 20273, federalTaxDue: makeFromInt 44011, stateTaxDue: makeFromInt 11292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47456, itemizedDeductions: makeFromInt 27223, federalTaxDue: makeFromInt 24777, stateTaxDue: makeFromInt 9417 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111301, qualifiedIncome: makeFromInt 35856, itemizedDeductions: makeFromInt 16359, federalTaxDue: makeFromInt 20669, stateTaxDue: makeFromInt 7158 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9682, ordinaryIncomeNonSS: makeFromInt 113838, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33367, stateTaxDue: makeFromInt 10237 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21388, federalTaxDue: makeFromInt 23909, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3556, ordinaryIncomeNonSS: makeFromInt 6385, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49224, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2687, stateTaxDue: makeFromInt 2286 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1901, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24959, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27590, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 848 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15563, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27405, stateTaxDue: makeFromInt 7823 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38267, ordinaryIncomeNonSS: makeFromInt 99396, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3990, federalTaxDue: makeFromInt 38883, stateTaxDue: makeFromInt 9822 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11293, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82025, itemizedDeductions: makeFromInt 13783, federalTaxDue: makeFromInt 2854, stateTaxDue: makeFromInt 3726 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40533, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15386, federalTaxDue: makeFromInt 34706, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5619, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1019, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5585, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21717, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25934, ordinaryIncomeNonSS: makeFromInt 37523, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27579, federalTaxDue: makeFromInt 2164, stateTaxDue: makeFromInt 1201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3210, qualifiedIncome: makeFromInt 44198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42460, qualifiedIncome: makeFromInt 33599, itemizedDeductions: makeFromInt 8639, federalTaxDue: makeFromInt 13310, stateTaxDue: makeFromInt 3430 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38526, ordinaryIncomeNonSS: makeFromInt 132434, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19395, federalTaxDue: makeFromInt 34681, stateTaxDue: makeFromInt 10947 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147639, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23820, stateTaxDue: makeFromInt 6979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14212, ordinaryIncomeNonSS: makeFromInt 111882, qualifiedIncome: makeFromInt 29902, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24544, stateTaxDue: makeFromInt 6634 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90759, itemizedDeductions: makeFromInt 2287, federalTaxDue: makeFromInt 7966, stateTaxDue: makeFromInt 4200 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34584, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22808, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29453, ordinaryIncomeNonSS: makeFromInt 116372, qualifiedIncome: makeFromInt 11770, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21546, stateTaxDue: makeFromInt 5952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16803, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1088 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45923, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8936, federalTaxDue: makeFromInt 4686, stateTaxDue: makeFromInt 6621 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45843, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25672, itemizedDeductions: makeFromInt 27950, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 909 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86350, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21693, stateTaxDue: makeFromInt 8743 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18586, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23130, itemizedDeductions: makeFromInt 15028, federalTaxDue: makeFromInt 33944, stateTaxDue: makeFromInt 8401 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90737, itemizedDeductions: makeFromInt 29003, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3862 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32486, ordinaryIncomeNonSS: makeFromInt 84982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16183, stateTaxDue: makeFromInt 3994 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42468, ordinaryIncomeNonSS: makeFromInt 100627, qualifiedIncome: makeFromInt 70508, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24847, stateTaxDue: makeFromInt 8082 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73763, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3138, federalTaxDue: makeFromInt 19150, stateTaxDue: makeFromInt 3301 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7293, stateTaxDue: makeFromInt 4221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88258, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7591, stateTaxDue: makeFromInt 4277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143957, qualifiedIncome: makeFromInt 72385, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32632, stateTaxDue: makeFromInt 10687 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20830, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9902, ordinaryIncomeNonSS: makeFromInt 25594, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2239, stateTaxDue: makeFromInt 1081 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19542, federalTaxDue: makeFromInt 10274, stateTaxDue: makeFromInt 4846 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149603, qualifiedIncome: makeFromInt 62973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25700, stateTaxDue: makeFromInt 9954 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21625, ordinaryIncomeNonSS: makeFromInt 40407, qualifiedIncome: makeFromInt 40433, itemizedDeductions: makeFromInt 4383, federalTaxDue: makeFromInt 6359, stateTaxDue: makeFromInt 3674 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23124, itemizedDeductions: makeFromInt 19724, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15771, ordinaryIncomeNonSS: makeFromInt 13663, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 44 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76851, itemizedDeductions: makeFromInt 16642, federalTaxDue: makeFromInt 233, stateTaxDue: makeFromInt 3267 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44631, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15876, ordinaryIncomeNonSS: makeFromInt 82660, qualifiedIncome: makeFromInt 68759, itemizedDeductions: makeFromInt 12902, federalTaxDue: makeFromInt 22880, stateTaxDue: makeFromInt 7316 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102028, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28715, federalTaxDue: makeFromInt 10425, stateTaxDue: makeFromInt 4726 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22668, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29491, ordinaryIncomeNonSS: makeFromInt 127234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21556, stateTaxDue: makeFromInt 6061 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47320, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42499, ordinaryIncomeNonSS: makeFromInt 118740, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32411, stateTaxDue: makeFromInt 10262 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26850, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31883, ordinaryIncomeNonSS: makeFromInt 32934, qualifiedIncome: makeFromInt 99180, itemizedDeductions: makeFromInt 15657, federalTaxDue: makeFromInt 14753, stateTaxDue: makeFromInt 6289 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58949, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2573 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26252, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17452, qualifiedIncome: makeFromInt 38738, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 163, stateTaxDue: makeFromInt 2641 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70944, itemizedDeductions: makeFromInt 5698, federalTaxDue: makeFromInt 7743, stateTaxDue: makeFromInt 3172 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17793, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7521, federalTaxDue: makeFromInt 19668, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10282, ordinaryIncomeNonSS: makeFromInt 25481, qualifiedIncome: makeFromInt 97612, itemizedDeductions: makeFromInt 8253, federalTaxDue: makeFromInt 7739, stateTaxDue: makeFromInt 5829 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66991, qualifiedIncome: makeFromInt 13467, itemizedDeductions: makeFromInt 645, federalTaxDue: makeFromInt 9372, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12815, ordinaryIncomeNonSS: makeFromInt 116678, qualifiedIncome: makeFromInt 52720, itemizedDeductions: makeFromInt 1523, federalTaxDue: makeFromInt 24150, stateTaxDue: makeFromInt 8095 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4810, ordinaryIncomeNonSS: makeFromInt 143627, qualifiedIncome: makeFromInt 53193, itemizedDeductions: makeFromInt 8658, federalTaxDue: makeFromInt 29056, stateTaxDue: makeFromInt 9266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84600, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14334, stateTaxDue: makeFromInt 4090 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30247, ordinaryIncomeNonSS: makeFromInt 14075, qualifiedIncome: makeFromInt 99082, itemizedDeductions: makeFromInt 26030, federalTaxDue: makeFromInt 7302, stateTaxDue: makeFromInt 5220 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17705, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5740, ordinaryIncomeNonSS: makeFromInt 94374, qualifiedIncome: makeFromInt 89109, itemizedDeductions: makeFromInt 4199, federalTaxDue: makeFromInt 23314, stateTaxDue: makeFromInt 8599 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36320, ordinaryIncomeNonSS: makeFromInt 139844, qualifiedIncome: makeFromInt 85157, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44346, stateTaxDue: makeFromInt 10995 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40830, ordinaryIncomeNonSS: makeFromInt 124331, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25429, stateTaxDue: makeFromInt 5842 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13678, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129037, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11729, stateTaxDue: makeFromInt 5977 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31275, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1236 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27266, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31428, stateTaxDue: makeFromInt 9522 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19264, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4902, itemizedDeductions: makeFromInt 17488, federalTaxDue: makeFromInt 30304, stateTaxDue: makeFromInt 7290 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39930, qualifiedIncome: makeFromInt 10788, itemizedDeductions: makeFromInt 16897, federalTaxDue: makeFromInt 1608, stateTaxDue: makeFromInt 2161 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19329, federalTaxDue: makeFromInt 11962, stateTaxDue: makeFromInt 3289 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23699, ordinaryIncomeNonSS: makeFromInt 4720, qualifiedIncome: makeFromInt 42543, itemizedDeductions: makeFromInt 6970, federalTaxDue: makeFromInt 456, stateTaxDue: makeFromInt 1988 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 15614, qualifiedIncome: makeFromInt 47054, itemizedDeductions: makeFromInt 14124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107973, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29395, federalTaxDue: makeFromInt 13036, stateTaxDue: makeFromInt 5144 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31949, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2779, stateTaxDue: makeFromInt 1405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 249, stateTaxDue: makeFromInt 2076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28056, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62299, itemizedDeductions: makeFromInt 16401, federalTaxDue: makeFromInt 340, stateTaxDue: makeFromInt 2729 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51019, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4918, ordinaryIncomeNonSS: makeFromInt 146145, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10259, federalTaxDue: makeFromInt 40149, stateTaxDue: makeFromInt 11852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18253, federalTaxDue: makeFromInt 40692, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106589, qualifiedIncome: makeFromInt 20221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20641, stateTaxDue: makeFromInt 6121 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58351, itemizedDeductions: makeFromInt 1566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2443 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17938, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 785 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35482, ordinaryIncomeNonSS: makeFromInt 149344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31044, stateTaxDue: makeFromInt 7270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34516, qualifiedIncome: makeFromInt 79167, itemizedDeductions: makeFromInt 7353, federalTaxDue: makeFromInt 7956, stateTaxDue: makeFromInt 5369 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65344, qualifiedIncome: makeFromInt 68293, itemizedDeductions: makeFromInt 21268, federalTaxDue: makeFromInt 9098, stateTaxDue: makeFromInt 6304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6520, ordinaryIncomeNonSS: makeFromInt 114212, qualifiedIncome: makeFromInt 25599, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27510, stateTaxDue: makeFromInt 6906 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25407, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20959, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55684, itemizedDeductions: makeFromInt 25171, federalTaxDue: makeFromInt 37552, stateTaxDue: makeFromInt 10143 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21833, ordinaryIncomeNonSS: makeFromInt 109672, qualifiedIncome: makeFromInt 69378, itemizedDeductions: makeFromInt 3388, federalTaxDue: makeFromInt 26807, stateTaxDue: makeFromInt 8378 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18358, ordinaryIncomeNonSS: makeFromInt 130322, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13705, federalTaxDue: makeFromInt 23372, stateTaxDue: makeFromInt 6036 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6770, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18924, itemizedDeductions: makeFromInt 4167, federalTaxDue: makeFromInt 29852, stateTaxDue: makeFromInt 8191 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27967, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1346, itemizedDeductions: makeFromInt 21659, federalTaxDue: makeFromInt 29045, stateTaxDue: makeFromInt 6992 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126176, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4505, federalTaxDue: makeFromInt 26100, stateTaxDue: makeFromInt 10634 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12879, qualifiedIncome: makeFromInt 92644, itemizedDeductions: makeFromInt 29787, federalTaxDue: makeFromInt 6843, stateTaxDue: makeFromInt 4821 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51632, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32155, stateTaxDue: makeFromInt 9732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52105, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 256, stateTaxDue: makeFromInt 2311 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5157, stateTaxDue: makeFromInt 3245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79718, qualifiedIncome: makeFromInt 21116, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14005, stateTaxDue: makeFromInt 4918 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1593, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29241, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23389, federalTaxDue: makeFromInt 24938, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35320, ordinaryIncomeNonSS: makeFromInt 45217, qualifiedIncome: makeFromInt 66910, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7477, stateTaxDue: makeFromInt 4931 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40294, ordinaryIncomeNonSS: makeFromInt 50225, qualifiedIncome: makeFromInt 58851, itemizedDeductions: makeFromInt 22623, federalTaxDue: makeFromInt 9086, stateTaxDue: makeFromInt 4910 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50308, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3879, federalTaxDue: makeFromInt 13382, stateTaxDue: makeFromInt 2219 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36639, qualifiedIncome: makeFromInt 26371, itemizedDeductions: makeFromInt 16048, federalTaxDue: makeFromInt 5343, stateTaxDue: makeFromInt 2676 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15414, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 5396 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2493, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30983, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38134, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32190, stateTaxDue: makeFromInt 8832 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48697, qualifiedIncome: makeFromInt 60215, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10781, stateTaxDue: makeFromInt 4771 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37681, ordinaryIncomeNonSS: makeFromInt 119312, qualifiedIncome: makeFromInt 92881, itemizedDeductions: makeFromInt 18785, federalTaxDue: makeFromInt 38788, stateTaxDue: makeFromInt 10355 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 426, qualifiedIncome: makeFromInt 11487, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 221 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21096, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8292, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48031, ordinaryIncomeNonSS: makeFromInt 2952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14982, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49223, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22907, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16915, ordinaryIncomeNonSS: makeFromInt 82502, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8831, stateTaxDue: makeFromInt 3750 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69779, itemizedDeductions: makeFromInt 11419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8717, ordinaryIncomeNonSS: makeFromInt 92499, qualifiedIncome: makeFromInt 93735, itemizedDeductions: makeFromInt 21030, federalTaxDue: makeFromInt 24286, stateTaxDue: makeFromInt 9049 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2606, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47831, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44407, itemizedDeductions: makeFromInt 8169, federalTaxDue: makeFromInt 22, stateTaxDue: makeFromInt 1745 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18177, ordinaryIncomeNonSS: makeFromInt 38873, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3801, stateTaxDue: makeFromInt 1369 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65330, itemizedDeductions: makeFromInt 13952, federalTaxDue: makeFromInt 350, stateTaxDue: makeFromInt 2692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46753, ordinaryIncomeNonSS: makeFromInt 90828, qualifiedIncome: makeFromInt 84100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36217, stateTaxDue: makeFromInt 8575 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2607, stateTaxDue: makeFromInt 2042 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40714, ordinaryIncomeNonSS: makeFromInt 67959, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6920, stateTaxDue: makeFromInt 2813 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22073, ordinaryIncomeNonSS: makeFromInt 148876, qualifiedIncome: makeFromInt 91018, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35650, stateTaxDue: makeFromInt 11468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2462, ordinaryIncomeNonSS: makeFromInt 103851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10037, stateTaxDue: makeFromInt 4644 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88837, itemizedDeductions: makeFromInt 28204, federalTaxDue: makeFromInt 1746, stateTaxDue: makeFromInt 3878 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41020, ordinaryIncomeNonSS: makeFromInt 126202, qualifiedIncome: makeFromInt 58448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32364, stateTaxDue: makeFromInt 8764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7134, ordinaryIncomeNonSS: makeFromInt 77674, qualifiedIncome: makeFromInt 11267, itemizedDeductions: makeFromInt 25668, federalTaxDue: makeFromInt 10966, stateTaxDue: makeFromInt 4312 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141289, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15257, federalTaxDue: makeFromInt 29425, stateTaxDue: makeFromInt 11589 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125288, qualifiedIncome: makeFromInt 96232, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43774, stateTaxDue: makeFromInt 10821 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25915, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35536, ordinaryIncomeNonSS: makeFromInt 70227, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20634, federalTaxDue: makeFromInt 8480, stateTaxDue: makeFromInt 3036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12748, ordinaryIncomeNonSS: makeFromInt 70670, qualifiedIncome: makeFromInt 28854, itemizedDeductions: makeFromInt 5061, federalTaxDue: makeFromInt 11615, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19726, qualifiedIncome: makeFromInt 17246, itemizedDeductions: makeFromInt 17081, federalTaxDue: makeFromInt 1025, stateTaxDue: makeFromInt 1374 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5942, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6553, federalTaxDue: makeFromInt 41283, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127156, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18699, stateTaxDue: makeFromInt 5934 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19113, ordinaryIncomeNonSS: makeFromInt 5706, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32335, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8098, federalTaxDue: makeFromInt 8136, stateTaxDue: makeFromInt 6198 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107976, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8803, stateTaxDue: makeFromInt 4724 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10261, qualifiedIncome: makeFromInt 77427, itemizedDeductions: makeFromInt 8646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3709 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 149 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20483, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19895, stateTaxDue: makeFromInt 8154 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40857, ordinaryIncomeNonSS: makeFromInt 147038, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29249, stateTaxDue: makeFromInt 6977 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41044, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65059, itemizedDeductions: makeFromInt 9521, federalTaxDue: makeFromInt 414, stateTaxDue: makeFromInt 2578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2917, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16934, federalTaxDue: makeFromInt 29855, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41097, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13115, federalTaxDue: makeFromInt 35476, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3956, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97832, qualifiedIncome: makeFromInt 34226, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29521, stateTaxDue: makeFromInt 6348 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22813, ordinaryIncomeNonSS: makeFromInt 37586, qualifiedIncome: makeFromInt 95400, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6820, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38867, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4556, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49370, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39627, itemizedDeductions: makeFromInt 21867, federalTaxDue: makeFromInt 2254, stateTaxDue: makeFromInt 1797 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135960, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5097, federalTaxDue: makeFromInt 21701, stateTaxDue: makeFromInt 6543 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27503, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25229, ordinaryIncomeNonSS: makeFromInt 75916, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12831, stateTaxDue: makeFromInt 3541 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30817, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9428, stateTaxDue: makeFromInt 5184 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 152, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10135, itemizedDeductions: makeFromInt 9209, federalTaxDue: makeFromInt 28259, stateTaxDue: makeFromInt 7552 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116106, qualifiedIncome: makeFromInt 24240, itemizedDeductions: makeFromInt 7282, federalTaxDue: makeFromInt 17292, stateTaxDue: makeFromInt 6642 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26497, ordinaryIncomeNonSS: makeFromInt 135554, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27764, stateTaxDue: makeFromInt 6689 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3371, itemizedDeductions: makeFromInt 21202, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51009, itemizedDeductions: makeFromInt 1459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1875 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24982, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28226, stateTaxDue: makeFromInt 9146 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22710, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5324, federalTaxDue: makeFromInt 40070, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5698, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2846, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23520, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29045, ordinaryIncomeNonSS: makeFromInt 12270, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 239 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92458, qualifiedIncome: makeFromInt 30048, itemizedDeductions: makeFromInt 26685, federalTaxDue: makeFromInt 22829, stateTaxDue: makeFromInt 5750 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81140, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3985, federalTaxDue: makeFromInt 24263, stateTaxDue: makeFromInt 8802 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67387, itemizedDeductions: makeFromInt 1009, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2694 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32165, qualifiedIncome: makeFromInt 7762, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 257, stateTaxDue: makeFromInt 1485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91265, itemizedDeductions: makeFromInt 7769, federalTaxDue: makeFromInt 42345, stateTaxDue: makeFromInt 11958 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15744, qualifiedIncome: makeFromInt 37785, itemizedDeductions: makeFromInt 2966, federalTaxDue: makeFromInt 2604, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69084, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4715, stateTaxDue: makeFromInt 3095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32682, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38039, itemizedDeductions: makeFromInt 20585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1389 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92653, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9798, federalTaxDue: makeFromInt 8496, stateTaxDue: makeFromInt 4258 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19100, itemizedDeductions: makeFromInt 28377, federalTaxDue: makeFromInt 23404, stateTaxDue: makeFromInt 8080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58593, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27916, federalTaxDue: makeFromInt 7529, stateTaxDue: makeFromInt 2437 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16008, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19334, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19360, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39907, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33088, itemizedDeductions: makeFromInt 26716, federalTaxDue: makeFromInt 40883, stateTaxDue: makeFromInt 9113 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42591, itemizedDeductions: makeFromInt 28236, federalTaxDue: makeFromInt 34024, stateTaxDue: makeFromInt 8955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74100, qualifiedIncome: makeFromInt 69498, itemizedDeductions: makeFromInt 21148, federalTaxDue: makeFromInt 12873, stateTaxDue: makeFromInt 6875 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121600, qualifiedIncome: makeFromInt 65683, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29744, stateTaxDue: makeFromInt 9109 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34637, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42531, itemizedDeductions: makeFromInt 26530, federalTaxDue: makeFromInt 34872, stateTaxDue: makeFromInt 9052 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16151, itemizedDeductions: makeFromInt 894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 273 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33048, ordinaryIncomeNonSS: makeFromInt 126202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22655, stateTaxDue: makeFromInt 5735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7162, ordinaryIncomeNonSS: makeFromInt 141614, qualifiedIncome: makeFromInt 75675, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35657, stateTaxDue: makeFromInt 10633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34055, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42187, itemizedDeductions: makeFromInt 13949, federalTaxDue: makeFromInt 4734, stateTaxDue: makeFromInt 1854 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3344, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29552, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81727, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17967, stateTaxDue: makeFromInt 3617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32601, ordinaryIncomeNonSS: makeFromInt 149834, qualifiedIncome: makeFromInt 61371, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45573, stateTaxDue: makeFromInt 10425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127744, qualifiedIncome: makeFromInt 74794, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22135, stateTaxDue: makeFromInt 9677 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32629, ordinaryIncomeNonSS: makeFromInt 98823, qualifiedIncome: makeFromInt 93257, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25172, stateTaxDue: makeFromInt 9129 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11839, itemizedDeductions: makeFromInt 14731, federalTaxDue: makeFromInt 28910, stateTaxDue: makeFromInt 7907 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42432, ordinaryIncomeNonSS: makeFromInt 142756, qualifiedIncome: makeFromInt 95694, itemizedDeductions: makeFromInt 11807, federalTaxDue: makeFromInt 48990, stateTaxDue: makeFromInt 11820 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44179, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25089, itemizedDeductions: makeFromInt 9223, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 580 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16941, ordinaryIncomeNonSS: makeFromInt 145937, qualifiedIncome: makeFromInt 82040, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42033, stateTaxDue: makeFromInt 11089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138478, qualifiedIncome: makeFromInt 70543, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28531, stateTaxDue: makeFromInt 10007 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38365, ordinaryIncomeNonSS: makeFromInt 11262, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146546, qualifiedIncome: makeFromInt 15563, itemizedDeductions: makeFromInt 22303, federalTaxDue: makeFromInt 26680, stateTaxDue: makeFromInt 7921 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21441, ordinaryIncomeNonSS: makeFromInt 32002, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14983, federalTaxDue: makeFromInt 1296, stateTaxDue: makeFromInt 1172 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11348, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21220, ordinaryIncomeNonSS: makeFromInt 110451, qualifiedIncome: makeFromInt 49957, itemizedDeductions: makeFromInt 17041, federalTaxDue: makeFromInt 26097, stateTaxDue: makeFromInt 7445 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46471, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2023 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21936, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58062, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2179, stateTaxDue: makeFromInt 2648 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72452, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41217, stateTaxDue: makeFromInt 10548 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19592, federalTaxDue: makeFromInt 5079, stateTaxDue: makeFromInt 2685 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47580, ordinaryIncomeNonSS: makeFromInt 71504, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13346, stateTaxDue: makeFromInt 3000 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99804, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13131, federalTaxDue: makeFromInt 16395, stateTaxDue: makeFromInt 4866 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24223, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2621, ordinaryIncomeNonSS: makeFromInt 32092, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10142, federalTaxDue: makeFromInt 2214, stateTaxDue: makeFromInt 1290 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10748, ordinaryIncomeNonSS: makeFromInt 78282, qualifiedIncome: makeFromInt 41336, itemizedDeductions: makeFromInt 16304, federalTaxDue: makeFromInt 17264, stateTaxDue: makeFromInt 5754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40296, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64179, itemizedDeductions: makeFromInt 4651, federalTaxDue: makeFromInt 3242, stateTaxDue: makeFromInt 2722 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44649, itemizedDeductions: makeFromInt 7593, federalTaxDue: makeFromInt 34107, stateTaxDue: makeFromInt 9703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26425, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9266, federalTaxDue: makeFromInt 30408, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42468, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 431, stateTaxDue: makeFromInt 1846 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37218, ordinaryIncomeNonSS: makeFromInt 123626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10439, federalTaxDue: makeFromInt 22888, stateTaxDue: makeFromInt 5806 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13285, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13428, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36412, itemizedDeductions: makeFromInt 25065, federalTaxDue: makeFromInt 32898, stateTaxDue: makeFromInt 9160 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10335, ordinaryIncomeNonSS: makeFromInt 82715, qualifiedIncome: makeFromInt 24356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11895, stateTaxDue: makeFromInt 4979 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17700, ordinaryIncomeNonSS: makeFromInt 24721, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13241, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 710 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35444, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48816, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2354, stateTaxDue: makeFromInt 2122 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36561, itemizedDeductions: makeFromInt 9591, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1353 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31559, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46186, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11470, itemizedDeductions: makeFromInt 5587, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76824, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 229, stateTaxDue: makeFromInt 3265 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49155, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29832, itemizedDeductions: makeFromInt 17720, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1017 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56658, itemizedDeductions: makeFromInt 21039, federalTaxDue: makeFromInt 939, stateTaxDue: makeFromInt 2543 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22074, stateTaxDue: makeFromInt 5401 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12816, qualifiedIncome: makeFromInt 62441, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3719, stateTaxDue: makeFromInt 3410 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6512, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26399, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42940, ordinaryIncomeNonSS: makeFromInt 34289, qualifiedIncome: makeFromInt 94274, itemizedDeductions: makeFromInt 16408, federalTaxDue: makeFromInt 18269, stateTaxDue: makeFromInt 6128 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83880, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5826, stateTaxDue: makeFromInt 3727 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37996, ordinaryIncomeNonSS: makeFromInt 27549, qualifiedIncome: makeFromInt 83629, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14146, stateTaxDue: makeFromInt 5304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81501, qualifiedIncome: makeFromInt 11332, itemizedDeductions: makeFromInt 4070, federalTaxDue: makeFromInt 11209, stateTaxDue: makeFromInt 4306 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7364, ordinaryIncomeNonSS: makeFromInt 51589, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29052, federalTaxDue: makeFromInt 2788, stateTaxDue: makeFromInt 1904 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5653, ordinaryIncomeNonSS: makeFromInt 130271, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23424, stateTaxDue: makeFromInt 6215 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116792, qualifiedIncome: makeFromInt 73566, itemizedDeductions: makeFromInt 19848, federalTaxDue: makeFromInt 32428, stateTaxDue: makeFromInt 8967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24625, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74400, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21758, ordinaryIncomeNonSS: makeFromInt 73047, qualifiedIncome: makeFromInt 48061, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16812, stateTaxDue: makeFromInt 5680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3270, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53479, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2374, stateTaxDue: makeFromInt 2299 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24181, ordinaryIncomeNonSS: makeFromInt 63443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22819, stateTaxDue: makeFromInt 7907 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29618, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72788, itemizedDeductions: makeFromInt 4518, federalTaxDue: makeFromInt 43561, stateTaxDue: makeFromInt 10884 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9910, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13083, qualifiedIncome: makeFromInt 79456, itemizedDeductions: makeFromInt 8685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74619, itemizedDeductions: makeFromInt 10583, federalTaxDue: makeFromInt 3633, stateTaxDue: makeFromInt 3459 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85511, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6107, stateTaxDue: makeFromInt 3601 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5672, itemizedDeductions: makeFromInt 13126, federalTaxDue: makeFromInt 29206, stateTaxDue: makeFromInt 7209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13025, itemizedDeductions: makeFromInt 3710, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9228, ordinaryIncomeNonSS: makeFromInt 34293, qualifiedIncome: makeFromInt 80972, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11768, stateTaxDue: makeFromInt 5308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22431, ordinaryIncomeNonSS: makeFromInt 97131, qualifiedIncome: makeFromInt 18919, itemizedDeductions: makeFromInt 12768, federalTaxDue: makeFromInt 19404, stateTaxDue: makeFromInt 5490 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6702, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77938, qualifiedIncome: makeFromInt 19472, itemizedDeductions: makeFromInt 13835, federalTaxDue: makeFromInt 12232, stateTaxDue: makeFromInt 4621 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13049, ordinaryIncomeNonSS: makeFromInt 71347, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24590, federalTaxDue: makeFromInt 18658, stateTaxDue: makeFromInt 8290 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17533, ordinaryIncomeNonSS: makeFromInt 134120, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2529, federalTaxDue: makeFromInt 26367, stateTaxDue: makeFromInt 6251 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22101, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87078, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44171, stateTaxDue: makeFromInt 11399 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31100, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 326, stateTaxDue: makeFromInt 3406 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24482, ordinaryIncomeNonSS: makeFromInt 73331, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10175, stateTaxDue: makeFromInt 3092 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7989, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3184, stateTaxDue: makeFromInt 2958 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36924, qualifiedIncome: makeFromInt 81804, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6130, stateTaxDue: makeFromInt 5606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73314, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6530, stateTaxDue: makeFromInt 3290 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17283, itemizedDeductions: makeFromInt 13932, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 409 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10923, ordinaryIncomeNonSS: makeFromInt 65290, qualifiedIncome: makeFromInt 4202, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4795, stateTaxDue: makeFromInt 2800 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93298, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2700, stateTaxDue: makeFromInt 4105 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41997, qualifiedIncome: makeFromInt 88499, itemizedDeductions: makeFromInt 22438, federalTaxDue: makeFromInt 6194, stateTaxDue: makeFromInt 6206 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90476, itemizedDeductions: makeFromInt 1338, federalTaxDue: makeFromInt 2276, stateTaxDue: makeFromInt 3961 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120401, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16151, federalTaxDue: makeFromInt 23168, stateTaxDue: makeFromInt 5488 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1857, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69330, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3346, stateTaxDue: makeFromInt 3212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148651, qualifiedIncome: makeFromInt 68456, itemizedDeductions: makeFromInt 7879, federalTaxDue: makeFromInt 34341, stateTaxDue: makeFromInt 10522 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44886, ordinaryIncomeNonSS: makeFromInt 24746, qualifiedIncome: makeFromInt 92347, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16396, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32567, qualifiedIncome: makeFromInt 69679, itemizedDeductions: makeFromInt 21833, federalTaxDue: makeFromInt 12985, stateTaxDue: makeFromInt 4766 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7222, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23078, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46101, ordinaryIncomeNonSS: makeFromInt 86641, qualifiedIncome: makeFromInt 2962, itemizedDeductions: makeFromInt 23388, federalTaxDue: makeFromInt 15289, stateTaxDue: makeFromInt 4019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46388, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21318, federalTaxDue: makeFromInt 34438, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103094, qualifiedIncome: makeFromInt 36950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10504, stateTaxDue: makeFromInt 6327 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27288, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49841, itemizedDeductions: makeFromInt 8113, federalTaxDue: makeFromInt 39350, stateTaxDue: makeFromInt 9537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17584, ordinaryIncomeNonSS: makeFromInt 94326, qualifiedIncome: makeFromInt 36868, itemizedDeductions: makeFromInt 20439, federalTaxDue: makeFromInt 18269, stateTaxDue: makeFromInt 6242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27351, federalTaxDue: makeFromInt 32093, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11161, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25926, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27453, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11013, stateTaxDue: makeFromInt 5698 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41960, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40494, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 427, stateTaxDue: makeFromInt 1841 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19310, qualifiedIncome: makeFromInt 62740, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3263, stateTaxDue: makeFromInt 3428 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13762, ordinaryIncomeNonSS: makeFromInt 96877, qualifiedIncome: makeFromInt 62666, itemizedDeductions: makeFromInt 8838, federalTaxDue: makeFromInt 24036, stateTaxDue: makeFromInt 7790 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107512, qualifiedIncome: makeFromInt 81346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28312, stateTaxDue: makeFromInt 8988 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52672, itemizedDeductions: makeFromInt 23427, federalTaxDue: makeFromInt 29526, stateTaxDue: makeFromInt 9759 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38962, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14974, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87140, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40754, stateTaxDue: makeFromInt 11543 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81033, itemizedDeductions: makeFromInt 7629, federalTaxDue: makeFromInt 5341, stateTaxDue: makeFromInt 3677 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33997, stateTaxDue: makeFromInt 11979 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46432, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1678, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22197, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9943, federalTaxDue: makeFromInt 31129, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75063, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12092, federalTaxDue: makeFromInt 10502, stateTaxDue: makeFromInt 3604 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3374 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36338, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24772, federalTaxDue: makeFromInt 23136, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12022, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9676, ordinaryIncomeNonSS: makeFromInt 107468, qualifiedIncome: makeFromInt 59102, itemizedDeductions: makeFromInt 18376, federalTaxDue: makeFromInt 19674, stateTaxDue: makeFromInt 7842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19974, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24522, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1026 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149598, qualifiedIncome: makeFromInt 39650, itemizedDeductions: makeFromInt 3326, federalTaxDue: makeFromInt 43938, stateTaxDue: makeFromInt 9207 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26443, ordinaryIncomeNonSS: makeFromInt 30737, qualifiedIncome: makeFromInt 18274, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2554, stateTaxDue: makeFromInt 1996 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10468, ordinaryIncomeNonSS: makeFromInt 102911, qualifiedIncome: makeFromInt 17443, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9931, stateTaxDue: makeFromInt 5543 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48036, itemizedDeductions: makeFromInt 13985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17592, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36073, itemizedDeductions: makeFromInt 25745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1615 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10916, itemizedDeductions: makeFromInt 29409, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 128 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47331, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23906, federalTaxDue: makeFromInt 46267, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40219, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79131, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9346, stateTaxDue: makeFromInt 3702 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47831, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22225, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24683, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36247, ordinaryIncomeNonSS: makeFromInt 98939, qualifiedIncome: makeFromInt 69071, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30078, stateTaxDue: makeFromInt 8222 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93031, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8165, stateTaxDue: makeFromInt 4520 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49162, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13708, itemizedDeductions: makeFromInt 28775, federalTaxDue: makeFromInt 27590, stateTaxDue: makeFromInt 7710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84658, qualifiedIncome: makeFromInt 49399, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15484, stateTaxDue: makeFromInt 6286 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135892, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18239, stateTaxDue: makeFromInt 6220 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35537, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27311, federalTaxDue: makeFromInt 823, stateTaxDue: makeFromInt 1102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32336, ordinaryIncomeNonSS: makeFromInt 124437, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21683, federalTaxDue: makeFromInt 21795, stateTaxDue: makeFromInt 5795 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30836, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70753, itemizedDeductions: makeFromInt 27414, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3063 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73933, itemizedDeductions: makeFromInt 2040, federalTaxDue: makeFromInt 36160, stateTaxDue: makeFromInt 10942 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79539, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11013, federalTaxDue: makeFromInt 20255, stateTaxDue: makeFromInt 8602 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20384, ordinaryIncomeNonSS: makeFromInt 110081, qualifiedIncome: makeFromInt 7678, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22037, stateTaxDue: makeFromInt 5633 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17070, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43242, ordinaryIncomeNonSS: makeFromInt 148216, qualifiedIncome: makeFromInt 77928, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40231, stateTaxDue: makeFromInt 10932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29064, federalTaxDue: makeFromInt 17803, stateTaxDue: makeFromInt 3791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119459, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34051, stateTaxDue: makeFromInt 10764 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136122, qualifiedIncome: makeFromInt 86905, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42263, stateTaxDue: makeFromInt 10776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20471, ordinaryIncomeNonSS: makeFromInt 111517, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4269, federalTaxDue: makeFromInt 23189, stateTaxDue: makeFromInt 5341 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100493, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14826, stateTaxDue: makeFromInt 4570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108359, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5632, federalTaxDue: makeFromInt 47379, stateTaxDue: makeFromInt 10402 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17632, ordinaryIncomeNonSS: makeFromInt 72320, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9671, stateTaxDue: makeFromInt 3240 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20150, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9982, ordinaryIncomeNonSS: makeFromInt 40639, qualifiedIncome: makeFromInt 71373, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8226, stateTaxDue: makeFromInt 5264 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27246, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20968, ordinaryIncomeNonSS: makeFromInt 70171, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11742, stateTaxDue: makeFromInt 3254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114214, qualifiedIncome: makeFromInt 17497, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18558, stateTaxDue: makeFromInt 6268 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 923, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112610, qualifiedIncome: makeFromInt 16429, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17841, stateTaxDue: makeFromInt 5971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20509, federalTaxDue: makeFromInt 21782, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8858, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 5068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10501, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92532, itemizedDeductions: makeFromInt 150, federalTaxDue: makeFromInt 6320, stateTaxDue: makeFromInt 4168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26628, ordinaryIncomeNonSS: makeFromInt 65334, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27368, federalTaxDue: makeFromInt 8435, stateTaxDue: makeFromInt 2985 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93029, itemizedDeductions: makeFromInt 28005, federalTaxDue: makeFromInt 9208, stateTaxDue: makeFromInt 4276 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84862, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5676, stateTaxDue: makeFromInt 3988 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8927, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38190, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43605, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77198, itemizedDeductions: makeFromInt 28474, federalTaxDue: makeFromInt 4765, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74874, itemizedDeductions: makeFromInt 3372, federalTaxDue: makeFromInt 1175, stateTaxDue: makeFromInt 3269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2859, ordinaryIncomeNonSS: makeFromInt 56521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7922, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11617, stateTaxDue: makeFromInt 4524 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128689, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19956, stateTaxDue: makeFromInt 5980 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45338, itemizedDeductions: makeFromInt 28146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1892 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32920, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4268, federalTaxDue: makeFromInt 46954, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110993, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32353, stateTaxDue: makeFromInt 10108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67967, qualifiedIncome: makeFromInt 17047, itemizedDeductions: makeFromInt 10517, federalTaxDue: makeFromInt 5495, stateTaxDue: makeFromInt 3785 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11673, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12027, federalTaxDue: makeFromInt 24006, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74531, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5013, stateTaxDue: makeFromInt 3352 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76952, itemizedDeductions: makeFromInt 8720, federalTaxDue: makeFromInt 27884, stateTaxDue: makeFromInt 10873 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12922, ordinaryIncomeNonSS: makeFromInt 55732, qualifiedIncome: makeFromInt 1046, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1802, stateTaxDue: makeFromInt 2345 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49893, ordinaryIncomeNonSS: makeFromInt 10788, qualifiedIncome: makeFromInt 5766, itemizedDeductions: makeFromInt 16026, federalTaxDue: makeFromInt 564, stateTaxDue: makeFromInt 373 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83791, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41224, stateTaxDue: makeFromInt 11577 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110598, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11455, federalTaxDue: makeFromInt 34520, stateTaxDue: makeFromInt 9855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22295, ordinaryIncomeNonSS: makeFromInt 117413, qualifiedIncome: makeFromInt 94369, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42476, stateTaxDue: makeFromInt 10576 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5686, federalTaxDue: makeFromInt 39503, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6703, itemizedDeductions: makeFromInt 26090, federalTaxDue: makeFromInt 19983, stateTaxDue: makeFromInt 7267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69061, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3935, federalTaxDue: makeFromInt 14800, stateTaxDue: makeFromInt 2971 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66813, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7769, federalTaxDue: makeFromInt 4825, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3706, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32587, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63602, itemizedDeductions: makeFromInt 20138, federalTaxDue: makeFromInt 1980, stateTaxDue: makeFromInt 2693 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41390, ordinaryIncomeNonSS: makeFromInt 29437, qualifiedIncome: makeFromInt 2916, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1313, stateTaxDue: makeFromInt 987 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33778, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72291, itemizedDeductions: makeFromInt 17998, federalTaxDue: makeFromInt 41500, stateTaxDue: makeFromInt 10540 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91238, itemizedDeductions: makeFromInt 23787, federalTaxDue: makeFromInt 36731, stateTaxDue: makeFromInt 11637 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29354, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22851, ordinaryIncomeNonSS: makeFromInt 13814, qualifiedIncome: makeFromInt 62981, itemizedDeductions: makeFromInt 11334, federalTaxDue: makeFromInt 4213, stateTaxDue: makeFromInt 3488 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39246, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63942, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2722 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49813, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98702, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13431, stateTaxDue: makeFromInt 4605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141395, qualifiedIncome: makeFromInt 99292, itemizedDeductions: makeFromInt 21585, federalTaxDue: makeFromInt 40343, stateTaxDue: makeFromInt 12051 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24456, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13831, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10800, ordinaryIncomeNonSS: makeFromInt 77904, qualifiedIncome: makeFromInt 80914, itemizedDeductions: makeFromInt 11230, federalTaxDue: makeFromInt 22708, stateTaxDue: makeFromInt 7686 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17354, ordinaryIncomeNonSS: makeFromInt 26799, qualifiedIncome: makeFromInt 1292, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 705, stateTaxDue: makeFromInt 1004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8851, ordinaryIncomeNonSS: makeFromInt 126140, qualifiedIncome: makeFromInt 23692, itemizedDeductions: makeFromInt 12294, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7193 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106121, qualifiedIncome: makeFromInt 49266, itemizedDeductions: makeFromInt 13348, federalTaxDue: makeFromInt 17336, stateTaxDue: makeFromInt 7272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46257, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1291, stateTaxDue: makeFromInt 2135 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21961, itemizedDeductions: makeFromInt 2401, federalTaxDue: makeFromInt 19635, stateTaxDue: makeFromInt 7923 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39306, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58956, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1223, stateTaxDue: makeFromInt 2456 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36624, ordinaryIncomeNonSS: makeFromInt 55385, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22283, federalTaxDue: makeFromInt 6810, stateTaxDue: makeFromInt 2294 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 647, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9186, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20077, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23723, itemizedDeductions: makeFromInt 3803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7816, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116056, qualifiedIncome: makeFromInt 30239, itemizedDeductions: makeFromInt 3972, federalTaxDue: makeFromInt 12997, stateTaxDue: makeFromInt 6640 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46127, ordinaryIncomeNonSS: makeFromInt 102719, qualifiedIncome: makeFromInt 11951, itemizedDeductions: makeFromInt 2878, federalTaxDue: makeFromInt 24564, stateTaxDue: makeFromInt 5399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14222, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5275 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30673, ordinaryIncomeNonSS: makeFromInt 149886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31300, stateTaxDue: makeFromInt 7239 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49697, ordinaryIncomeNonSS: makeFromInt 31098, qualifiedIncome: makeFromInt 69861, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14895, stateTaxDue: makeFromInt 4593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8247, ordinaryIncomeNonSS: makeFromInt 72395, qualifiedIncome: makeFromInt 2850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8486, stateTaxDue: makeFromInt 3389 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33747, itemizedDeductions: makeFromInt 7864, federalTaxDue: makeFromInt 3037, stateTaxDue: makeFromInt 1497 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42287, itemizedDeductions: makeFromInt 28026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1859 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4399, qualifiedIncome: makeFromInt 40267, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 1912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35365, ordinaryIncomeNonSS: makeFromInt 44699, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14990, stateTaxDue: makeFromInt 6931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10883, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3205, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19871, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20919, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 783 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4472, ordinaryIncomeNonSS: makeFromInt 35510, qualifiedIncome: makeFromInt 50927, itemizedDeductions: makeFromInt 11232, federalTaxDue: makeFromInt 8262, stateTaxDue: makeFromInt 3867 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66588, qualifiedIncome: makeFromInt 58112, itemizedDeductions: makeFromInt 19654, federalTaxDue: makeFromInt 14103, stateTaxDue: makeFromInt 5780 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10249, ordinaryIncomeNonSS: makeFromInt 131932, qualifiedIncome: makeFromInt 92852, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33882, stateTaxDue: makeFromInt 10784 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3271, ordinaryIncomeNonSS: makeFromInt 131648, qualifiedIncome: makeFromInt 59409, itemizedDeductions: makeFromInt 511, federalTaxDue: makeFromInt 21827, stateTaxDue: makeFromInt 9078 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103457, qualifiedIncome: makeFromInt 50893, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23873, stateTaxDue: makeFromInt 7647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92148, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8603, federalTaxDue: makeFromInt 21042, stateTaxDue: makeFromInt 4251 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40129, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11070, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23925, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 995, stateTaxDue: makeFromInt 842 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8977, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 668, federalTaxDue: makeFromInt 54449, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33247, ordinaryIncomeNonSS: makeFromInt 113725, qualifiedIncome: makeFromInt 93248, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39346, stateTaxDue: makeFromInt 10127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133428, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2371, federalTaxDue: makeFromInt 31583, stateTaxDue: makeFromInt 6356 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73493, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22973, federalTaxDue: makeFromInt 19977, stateTaxDue: makeFromInt 8300 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15196, itemizedDeductions: makeFromInt 20098, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 385 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9545, ordinaryIncomeNonSS: makeFromInt 55130, qualifiedIncome: makeFromInt 56992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3435, stateTaxDue: makeFromInt 5131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68402, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4613, stateTaxDue: makeFromInt 3060 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5320, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28738, stateTaxDue: makeFromInt 10826 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72016, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14216, federalTaxDue: makeFromInt 5924, stateTaxDue: makeFromInt 3226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29485, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88893, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7686, stateTaxDue: makeFromInt 4105 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109901, qualifiedIncome: makeFromInt 58248, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21368, stateTaxDue: makeFromInt 7952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37657, ordinaryIncomeNonSS: makeFromInt 66101, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3744, federalTaxDue: makeFromInt 15487, stateTaxDue: makeFromInt 3024 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80523, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43414, stateTaxDue: makeFromInt 11151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34182, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47999, itemizedDeductions: makeFromInt 9684, federalTaxDue: makeFromInt 3574, stateTaxDue: makeFromInt 2101 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18804, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47826, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36080, stateTaxDue: makeFromInt 9436 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58309, qualifiedIncome: makeFromInt 48581, itemizedDeductions: makeFromInt 7863, federalTaxDue: makeFromInt 11632, stateTaxDue: makeFromInt 4870 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13198, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31622, itemizedDeductions: makeFromInt 21914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1164 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8708, itemizedDeductions: makeFromInt 4328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7297, ordinaryIncomeNonSS: makeFromInt 94624, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8088, stateTaxDue: makeFromInt 4256 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40621, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25148, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1521 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9540, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8058, federalTaxDue: makeFromInt 13331, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15070, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12074, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23664, itemizedDeductions: makeFromInt 15999, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37769, ordinaryIncomeNonSS: makeFromInt 104073, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19942, stateTaxDue: makeFromInt 4829 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10182, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9908, ordinaryIncomeNonSS: makeFromInt 137104, qualifiedIncome: makeFromInt 42310, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25968, stateTaxDue: makeFromInt 8497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37325, qualifiedIncome: makeFromInt 74709, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8328, stateTaxDue: makeFromInt 5285 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 882 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3185, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125223, qualifiedIncome: makeFromInt 39381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18903, stateTaxDue: makeFromInt 7844 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7248, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39870, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29084, stateTaxDue: makeFromInt 8919 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26187, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4873, federalTaxDue: makeFromInt 27700, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4627, ordinaryIncomeNonSS: makeFromInt 14447, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29677, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 5612 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33313, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34600, ordinaryIncomeNonSS: makeFromInt 51029, qualifiedIncome: makeFromInt 9961, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9592, stateTaxDue: makeFromInt 2737 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35182, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37102, stateTaxDue: makeFromInt 8684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28087, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14140, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1265, ordinaryIncomeNonSS: makeFromInt 142587, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16689, federalTaxDue: makeFromInt 24553, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33316, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31394, itemizedDeductions: makeFromInt 6359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1095 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134174, qualifiedIncome: makeFromInt 1475, itemizedDeductions: makeFromInt 17242, federalTaxDue: makeFromInt 20773, stateTaxDue: makeFromInt 6305 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17565, ordinaryIncomeNonSS: makeFromInt 53716, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8214, stateTaxDue: makeFromInt 7187 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11509, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31042, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37723, stateTaxDue: makeFromInt 7874 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30758, ordinaryIncomeNonSS: makeFromInt 16430, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 389 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18358, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 5443 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115437, qualifiedIncome: makeFromInt 42076, itemizedDeductions: makeFromInt 15352, federalTaxDue: makeFromInt 14606, stateTaxDue: makeFromInt 7401 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7371, qualifiedIncome: makeFromInt 92637, itemizedDeductions: makeFromInt 15223, federalTaxDue: makeFromInt 6842, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39691, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39617, itemizedDeductions: makeFromInt 19944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1306 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10401, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16857, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37877, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49720, stateTaxDue: makeFromInt 9357 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2655, itemizedDeductions: makeFromInt 28744, federalTaxDue: makeFromInt 22542, stateTaxDue: makeFromInt 7378 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87732, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3710, stateTaxDue: makeFromInt 4012 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36360, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17039, itemizedDeductions: makeFromInt 3358, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 277 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22714, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36131, stateTaxDue: makeFromInt 8611 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8926, itemizedDeductions: makeFromInt 27035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5963, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69147, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3078 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8868, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33087, ordinaryIncomeNonSS: makeFromInt 127325, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41242, stateTaxDue: makeFromInt 11145 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144228, qualifiedIncome: makeFromInt 34238, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22704, stateTaxDue: makeFromInt 8448 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48863, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9994, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11097, itemizedDeductions: makeFromInt 24644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 100 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17129, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13820, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2156, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15861, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40209, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45704, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38318, stateTaxDue: makeFromInt 9410 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13510, ordinaryIncomeNonSS: makeFromInt 42321, qualifiedIncome: makeFromInt 66186, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3960, stateTaxDue: makeFromInt 4750 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5467, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62084, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3620, stateTaxDue: makeFromInt 2942 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8939, federalTaxDue: makeFromInt 40464, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99048, qualifiedIncome: makeFromInt 69378, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17490, stateTaxDue: makeFromInt 7946 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34445, ordinaryIncomeNonSS: makeFromInt 59132, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22034, federalTaxDue: makeFromInt 15997, stateTaxDue: makeFromInt 7482 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74229, itemizedDeductions: makeFromInt 11240, federalTaxDue: makeFromInt 4441, stateTaxDue: makeFromInt 3256 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 15563, qualifiedIncome: makeFromInt 52556, itemizedDeductions: makeFromInt 758, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2821 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53203, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2245, stateTaxDue: makeFromInt 2185 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71974, qualifiedIncome: makeFromInt 80373, itemizedDeductions: makeFromInt 12599, federalTaxDue: makeFromInt 18478, stateTaxDue: makeFromInt 7219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39030, ordinaryIncomeNonSS: makeFromInt 21223, qualifiedIncome: makeFromInt 57803, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8801, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94840, qualifiedIncome: makeFromInt 21070, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20054, stateTaxDue: makeFromInt 5687 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22013, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20083, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38141, ordinaryIncomeNonSS: makeFromInt 140273, qualifiedIncome: makeFromInt 40163, itemizedDeductions: makeFromInt 27942, federalTaxDue: makeFromInt 27358, stateTaxDue: makeFromInt 8347 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19183, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20063, federalTaxDue: makeFromInt 823, stateTaxDue: makeFromInt 632 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16644, stateTaxDue: makeFromInt 5958 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49031, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69941, itemizedDeductions: makeFromInt 23922, federalTaxDue: makeFromInt 49365, stateTaxDue: makeFromInt 10993 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16276, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26852, stateTaxDue: makeFromInt 7929 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137473, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17710, federalTaxDue: makeFromInt 18619, stateTaxDue: makeFromInt 6499 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38523, ordinaryIncomeNonSS: makeFromInt 16938, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 313 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19368, ordinaryIncomeNonSS: makeFromInt 138424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8290, federalTaxDue: makeFromInt 19913, stateTaxDue: makeFromInt 6246 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26838, ordinaryIncomeNonSS: makeFromInt 133595, qualifiedIncome: makeFromInt 26706, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29894, stateTaxDue: makeFromInt 7550 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38624, ordinaryIncomeNonSS: makeFromInt 51062, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2602, federalTaxDue: makeFromInt 19210, stateTaxDue: makeFromInt 7051 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30542, stateTaxDue: makeFromInt 9126 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34503, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16367, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25807, ordinaryIncomeNonSS: makeFromInt 61880, qualifiedIncome: makeFromInt 34865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5904, stateTaxDue: makeFromInt 4362 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37955, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66677, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35327, stateTaxDue: makeFromInt 10359 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16522, stateTaxDue: makeFromInt 5923 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110074, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2843, federalTaxDue: makeFromInt 13680, stateTaxDue: makeFromInt 5129 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53586, itemizedDeductions: makeFromInt 9603, federalTaxDue: makeFromInt 34716, stateTaxDue: makeFromInt 9954 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72837, qualifiedIncome: makeFromInt 96341, itemizedDeductions: makeFromInt 19655, federalTaxDue: makeFromInt 14675, stateTaxDue: makeFromInt 7984 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43261, ordinaryIncomeNonSS: makeFromInt 12206, qualifiedIncome: makeFromInt 28808, itemizedDeductions: makeFromInt 27086, federalTaxDue: makeFromInt 1444, stateTaxDue: makeFromInt 1796 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34942, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35797, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74252, itemizedDeductions: makeFromInt 14026, federalTaxDue: makeFromInt 3578, stateTaxDue: makeFromInt 3236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137859, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13670, stateTaxDue: makeFromInt 6418 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 688 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8108, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108685, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11659, stateTaxDue: makeFromInt 4859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37098, ordinaryIncomeNonSS: makeFromInt 95899, qualifiedIncome: makeFromInt 75810, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30555, stateTaxDue: makeFromInt 8533 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29561, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44105, ordinaryIncomeNonSS: makeFromInt 52477, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2683, federalTaxDue: makeFromInt 24772, stateTaxDue: makeFromInt 7328 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17832, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4648, itemizedDeductions: makeFromInt 25452, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 968, federalTaxDue: makeFromInt 47139, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28903, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29861, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12146, ordinaryIncomeNonSS: makeFromInt 51988, qualifiedIncome: makeFromInt 20260, itemizedDeductions: makeFromInt 23144, federalTaxDue: makeFromInt 3790, stateTaxDue: makeFromInt 3137 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8434, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24609, itemizedDeductions: makeFromInt 28652, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 775 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24307, ordinaryIncomeNonSS: makeFromInt 114065, qualifiedIncome: makeFromInt 39985, itemizedDeductions: makeFromInt 16755, federalTaxDue: makeFromInt 24690, stateTaxDue: makeFromInt 7328 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28481, ordinaryIncomeNonSS: makeFromInt 33268, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2717, stateTaxDue: makeFromInt 1088 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40010, ordinaryIncomeNonSS: makeFromInt 115771, qualifiedIncome: makeFromInt 64692, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28493, stateTaxDue: makeFromInt 8348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35331, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13372, stateTaxDue: makeFromInt 6555 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1619, ordinaryIncomeNonSS: makeFromInt 24428, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10260, stateTaxDue: makeFromInt 5766 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19249, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44250, ordinaryIncomeNonSS: makeFromInt 24649, qualifiedIncome: makeFromInt 63262, itemizedDeductions: makeFromInt 6976, federalTaxDue: makeFromInt 15800, stateTaxDue: makeFromInt 4141 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101735, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3449, federalTaxDue: makeFromInt 28794, stateTaxDue: makeFromInt 9632 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37779, ordinaryIncomeNonSS: makeFromInt 148371, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23249, federalTaxDue: makeFromInt 23047, stateTaxDue: makeFromInt 6944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27172, ordinaryIncomeNonSS: makeFromInt 113822, qualifiedIncome: makeFromInt 35906, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26995, stateTaxDue: makeFromInt 7187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80076, itemizedDeductions: makeFromInt 23850, federalTaxDue: makeFromInt 37702, stateTaxDue: makeFromInt 11029 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17264, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34959, itemizedDeductions: makeFromInt 7213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1334 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34596, ordinaryIncomeNonSS: makeFromInt 131558, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13639, federalTaxDue: makeFromInt 24257, stateTaxDue: makeFromInt 6203 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27167, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42354, ordinaryIncomeNonSS: makeFromInt 27957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29931, federalTaxDue: makeFromInt 1237, stateTaxDue: makeFromInt 1201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59695, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1199, stateTaxDue: makeFromInt 2494 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7134, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44025, ordinaryIncomeNonSS: makeFromInt 98495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22927, stateTaxDue: makeFromInt 4670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25637, ordinaryIncomeNonSS: makeFromInt 48968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14427, federalTaxDue: makeFromInt 6814, stateTaxDue: makeFromInt 2049 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28954, stateTaxDue: makeFromInt 6327 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36680, ordinaryIncomeNonSS: makeFromInt 101883, qualifiedIncome: makeFromInt 75572, itemizedDeductions: makeFromInt 20732, federalTaxDue: makeFromInt 31337, stateTaxDue: makeFromInt 8418 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94874, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4781, stateTaxDue: makeFromInt 4169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57598, itemizedDeductions: makeFromInt 5559, federalTaxDue: makeFromInt 31, stateTaxDue: makeFromInt 2205 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13635, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93456, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3998 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72436, itemizedDeductions: makeFromInt 2227, federalTaxDue: makeFromInt 4805, stateTaxDue: makeFromInt 3367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10725, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47141, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1853 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3196, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32638, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7998, federalTaxDue: makeFromInt 879, stateTaxDue: makeFromInt 1057 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92410, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26717, federalTaxDue: makeFromInt 7402, stateTaxDue: makeFromInt 4146 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17380, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25190, itemizedDeductions: makeFromInt 14814, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 785 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7090, ordinaryIncomeNonSS: makeFromInt 92435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7871, stateTaxDue: makeFromInt 4147 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77583, itemizedDeductions: makeFromInt 24930, federalTaxDue: makeFromInt 44897, stateTaxDue: makeFromInt 11124 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52537, itemizedDeductions: makeFromInt 24231, federalTaxDue: makeFromInt 5737, stateTaxDue: makeFromInt 2455 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46312, ordinaryIncomeNonSS: makeFromInt 99231, qualifiedIncome: makeFromInt 34092, itemizedDeductions: makeFromInt 10380, federalTaxDue: makeFromInt 27447, stateTaxDue: makeFromInt 6411 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27747, ordinaryIncomeNonSS: makeFromInt 90930, qualifiedIncome: makeFromInt 7845, itemizedDeductions: makeFromInt 17286, federalTaxDue: makeFromInt 9588, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9196, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11703, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9805, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14976, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55568, itemizedDeductions: makeFromInt 15992, federalTaxDue: makeFromInt 1641, stateTaxDue: makeFromInt 2323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19595, federalTaxDue: makeFromInt 28416, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13993, qualifiedIncome: makeFromInt 43504, itemizedDeductions: makeFromInt 454, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2500 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15543, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2140, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36922, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1536 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40148, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62040, itemizedDeductions: makeFromInt 4835, federalTaxDue: makeFromInt 338, stateTaxDue: makeFromInt 2427 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73351, itemizedDeductions: makeFromInt 10723, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3193 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107964, qualifiedIncome: makeFromInt 43010, itemizedDeductions: makeFromInt 8523, federalTaxDue: makeFromInt 22021, stateTaxDue: makeFromInt 7271 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32325, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86665, itemizedDeductions: makeFromInt 13251, federalTaxDue: makeFromInt 4456, stateTaxDue: makeFromInt 3758 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45312, ordinaryIncomeNonSS: makeFromInt 54788, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11939, stateTaxDue: makeFromInt 2484 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22397, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3212, ordinaryIncomeNonSS: makeFromInt 145513, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15955, stateTaxDue: makeFromInt 6801 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9256, ordinaryIncomeNonSS: makeFromInt 85863, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 3918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2417, stateTaxDue: makeFromInt 1381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15523, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71374, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3146, stateTaxDue: makeFromInt 3089 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33881, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10697, itemizedDeductions: makeFromInt 3571, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 160 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84319, itemizedDeductions: makeFromInt 27398, federalTaxDue: makeFromInt 5088, stateTaxDue: makeFromInt 3953 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17802, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54305, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34867, stateTaxDue: makeFromInt 10195 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3519, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40305, itemizedDeductions: makeFromInt 15412, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22897, ordinaryIncomeNonSS: makeFromInt 64484, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28034, federalTaxDue: makeFromInt 17476, stateTaxDue: makeFromInt 7838 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72585, itemizedDeductions: makeFromInt 16495, federalTaxDue: makeFromInt 1438, stateTaxDue: makeFromInt 3254 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110033, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23429, stateTaxDue: makeFromInt 5247 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43080, ordinaryIncomeNonSS: makeFromInt 104674, qualifiedIncome: makeFromInt 22006, itemizedDeductions: makeFromInt 18290, federalTaxDue: makeFromInt 22836, stateTaxDue: makeFromInt 5959 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24038, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129862, qualifiedIncome: makeFromInt 38550, itemizedDeductions: makeFromInt 27821, federalTaxDue: makeFromInt 33110, stateTaxDue: makeFromInt 8046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128448, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30442, stateTaxDue: makeFromInt 10998 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119002, qualifiedIncome: makeFromInt 65508, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24745, stateTaxDue: makeFromInt 8851 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38899, ordinaryIncomeNonSS: makeFromInt 143059, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23975, stateTaxDue: makeFromInt 6678 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117926, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3922, federalTaxDue: makeFromInt 21643, stateTaxDue: makeFromInt 5511 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17342, qualifiedIncome: makeFromInt 59213, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3189, stateTaxDue: makeFromInt 3476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39871, ordinaryIncomeNonSS: makeFromInt 84740, qualifiedIncome: makeFromInt 65651, itemizedDeductions: makeFromInt 12486, federalTaxDue: makeFromInt 22835, stateTaxDue: makeFromInt 7017 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21707, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48202, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60312, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5022, ordinaryIncomeNonSS: makeFromInt 113804, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22236, federalTaxDue: makeFromInt 18737, stateTaxDue: makeFromInt 5580 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15120, ordinaryIncomeNonSS: makeFromInt 116102, qualifiedIncome: makeFromInt 12246, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19607, stateTaxDue: makeFromInt 6162 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44514, itemizedDeductions: makeFromInt 26411, federalTaxDue: makeFromInt 29381, stateTaxDue: makeFromInt 9271 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22375, ordinaryIncomeNonSS: makeFromInt 8449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10098, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2352, ordinaryIncomeNonSS: makeFromInt 116259, qualifiedIncome: makeFromInt 51797, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24560, stateTaxDue: makeFromInt 8346 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97216, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6987, federalTaxDue: makeFromInt 12800, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23070, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6922, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 6 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8631, ordinaryIncomeNonSS: makeFromInt 81169, qualifiedIncome: makeFromInt 42358, itemizedDeductions: makeFromInt 21813, federalTaxDue: makeFromInt 16966, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35578, ordinaryIncomeNonSS: makeFromInt 31308, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7473, federalTaxDue: makeFromInt 4619, stateTaxDue: makeFromInt 1250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16730, ordinaryIncomeNonSS: makeFromInt 11991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 265 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1108, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21048, itemizedDeductions: makeFromInt 1893, federalTaxDue: makeFromInt 28454, stateTaxDue: makeFromInt 8297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146101, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14730, federalTaxDue: makeFromInt 22078, stateTaxDue: makeFromInt 6900 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1394, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72602, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12106, stateTaxDue: makeFromInt 3050 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3281, federalTaxDue: makeFromInt 5690, stateTaxDue: makeFromInt 2975 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19806, ordinaryIncomeNonSS: makeFromInt 27707, qualifiedIncome: makeFromInt 2562, itemizedDeductions: makeFromInt 23038, federalTaxDue: makeFromInt 471, stateTaxDue: makeFromInt 1095 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61194, qualifiedIncome: makeFromInt 22891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17658, stateTaxDue: makeFromInt 3749 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19568, ordinaryIncomeNonSS: makeFromInt 92753, qualifiedIncome: makeFromInt 71463, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23237, stateTaxDue: makeFromInt 7756 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27791, itemizedDeductions: makeFromInt 10643, federalTaxDue: makeFromInt 25794, stateTaxDue: makeFromInt 8515 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49591, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22954, itemizedDeductions: makeFromInt 11973, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 893 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46872, qualifiedIncome: makeFromInt 62773, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4191, stateTaxDue: makeFromInt 5107 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68673, qualifiedIncome: makeFromInt 56285, itemizedDeductions: makeFromInt 11394, federalTaxDue: makeFromInt 16725, stateTaxDue: makeFromInt 6088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31507, qualifiedIncome: makeFromInt 12442, itemizedDeductions: makeFromInt 28155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1895 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5373, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82918, itemizedDeductions: makeFromInt 27831, federalTaxDue: makeFromInt 1143, stateTaxDue: makeFromInt 3576 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80017, itemizedDeductions: makeFromInt 26652, federalTaxDue: makeFromInt 2553, stateTaxDue: makeFromInt 3426 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45749, ordinaryIncomeNonSS: makeFromInt 23726, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23792, stateTaxDue: makeFromInt 6086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20603, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48040, itemizedDeductions: makeFromInt 18500, federalTaxDue: makeFromInt 955, stateTaxDue: makeFromInt 1947 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43695, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26595, federalTaxDue: makeFromInt 7275, stateTaxDue: makeFromInt 6710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47035, itemizedDeductions: makeFromInt 673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2052 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109247, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29054, stateTaxDue: makeFromInt 5225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48176, ordinaryIncomeNonSS: makeFromInt 109478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20033, federalTaxDue: makeFromInt 21834, stateTaxDue: makeFromInt 5033 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32711, ordinaryIncomeNonSS: makeFromInt 20835, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5387, federalTaxDue: makeFromInt 20344, stateTaxDue: makeFromInt 5938 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54554, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25599, federalTaxDue: makeFromInt 3144, stateTaxDue: makeFromInt 2353 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74915, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7321, stateTaxDue: makeFromInt 3171 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144249, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13305, federalTaxDue: makeFromInt 35245, stateTaxDue: makeFromInt 11637 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28617, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1176 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21227, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15970, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58226, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3086, stateTaxDue: makeFromInt 2745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33404, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28982, federalTaxDue: makeFromInt 38833, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75293, qualifiedIncome: makeFromInt 30945, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12599, stateTaxDue: makeFromInt 4990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7094, ordinaryIncomeNonSS: makeFromInt 19655, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 656 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22668, ordinaryIncomeNonSS: makeFromInt 99648, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16170, federalTaxDue: makeFromInt 11390, stateTaxDue: makeFromInt 4507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34311, ordinaryIncomeNonSS: makeFromInt 148552, qualifiedIncome: makeFromInt 25137, itemizedDeductions: makeFromInt 13309, federalTaxDue: makeFromInt 39064, stateTaxDue: makeFromInt 8511 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41996, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1125, stateTaxDue: makeFromInt 1625 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42953, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1673 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13020, ordinaryIncomeNonSS: makeFromInt 35977, qualifiedIncome: makeFromInt 51737, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1629, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41130, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78236, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 421, stateTaxDue: makeFromInt 3237 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53068, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2559, stateTaxDue: makeFromInt 2398 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116207, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3554, federalTaxDue: makeFromInt 15150, stateTaxDue: makeFromInt 5435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27090, ordinaryIncomeNonSS: makeFromInt 13219, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11433, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 450 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18173, ordinaryIncomeNonSS: makeFromInt 134164, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21705, federalTaxDue: makeFromInt 16256, stateTaxDue: makeFromInt 6033 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1444, qualifiedIncome: makeFromInt 71678, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3698, stateTaxDue: makeFromInt 3201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15872, ordinaryIncomeNonSS: makeFromInt 100589, qualifiedIncome: makeFromInt 87534, itemizedDeductions: makeFromInt 2614, federalTaxDue: makeFromInt 29640, stateTaxDue: makeFromInt 8951 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7876, ordinaryIncomeNonSS: makeFromInt 37996, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4378, stateTaxDue: makeFromInt 6425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24637, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38350, ordinaryIncomeNonSS: makeFromInt 39021, qualifiedIncome: makeFromInt 66369, itemizedDeductions: makeFromInt 11840, federalTaxDue: makeFromInt 15358, stateTaxDue: makeFromInt 4695 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77639, itemizedDeductions: makeFromInt 29066, federalTaxDue: makeFromInt 2502, stateTaxDue: makeFromInt 3407 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21208, itemizedDeductions: makeFromInt 19449, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 805 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24196, ordinaryIncomeNonSS: makeFromInt 107851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6687, federalTaxDue: makeFromInt 11593, stateTaxDue: makeFromInt 4918 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6269, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7388, ordinaryIncomeNonSS: makeFromInt 106470, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17321, stateTaxDue: makeFromInt 5002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49753, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56840, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2726, stateTaxDue: makeFromInt 2450 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94697, qualifiedIncome: makeFromInt 25608, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18476, stateTaxDue: makeFromInt 5789 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55635, qualifiedIncome: makeFromInt 60102, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8651, stateTaxDue: makeFromInt 5532 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8844, ordinaryIncomeNonSS: makeFromInt 137050, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27134, stateTaxDue: makeFromInt 6643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12827, ordinaryIncomeNonSS: makeFromInt 81858, qualifiedIncome: makeFromInt 82754, itemizedDeductions: makeFromInt 12538, federalTaxDue: makeFromInt 22983, stateTaxDue: makeFromInt 7946 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14495, ordinaryIncomeNonSS: makeFromInt 47762, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12860, federalTaxDue: makeFromInt 20601, stateTaxDue: makeFromInt 6933 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115963, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13624, stateTaxDue: makeFromInt 5223 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19885, ordinaryIncomeNonSS: makeFromInt 58229, qualifiedIncome: makeFromInt 46949, itemizedDeductions: makeFromInt 23500, federalTaxDue: makeFromInt 4862, stateTaxDue: makeFromInt 4784 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10410, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19583, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64910, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9935, federalTaxDue: makeFromInt 4745, stateTaxDue: makeFromInt 2882 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5356, stateTaxDue: makeFromInt 3187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37075, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86606, itemizedDeductions: makeFromInt 45, federalTaxDue: makeFromInt 5922, stateTaxDue: makeFromInt 3866 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18685, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66948, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46628, stateTaxDue: makeFromInt 10840 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10754, ordinaryIncomeNonSS: makeFromInt 9504, qualifiedIncome: makeFromInt 26683, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 829, stateTaxDue: makeFromInt 1621 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18898, ordinaryIncomeNonSS: makeFromInt 76448, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7170, stateTaxDue: makeFromInt 3247 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9269, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137748, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7692, federalTaxDue: makeFromInt 32498, stateTaxDue: makeFromInt 6474 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11906, ordinaryIncomeNonSS: makeFromInt 21584, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5938, federalTaxDue: makeFromInt 880, stateTaxDue: makeFromInt 624 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59216, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2952, stateTaxDue: makeFromInt 2286 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52331, qualifiedIncome: makeFromInt 45658, itemizedDeductions: makeFromInt 29085, federalTaxDue: makeFromInt 5839, stateTaxDue: makeFromInt 4444 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94406, itemizedDeductions: makeFromInt 13732, federalTaxDue: makeFromInt 39231, stateTaxDue: makeFromInt 11765 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25001, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21830, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26992, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37085, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 44 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4592, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84893, itemizedDeductions: makeFromInt 5659, federalTaxDue: makeFromInt 38249, stateTaxDue: makeFromInt 11429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12697, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28469, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41964, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1843 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67297, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1175, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40117, ordinaryIncomeNonSS: makeFromInt 146774, qualifiedIncome: makeFromInt 39678, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32093, stateTaxDue: makeFromInt 8769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27083, ordinaryIncomeNonSS: makeFromInt 8859, qualifiedIncome: makeFromInt 6870, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138482, qualifiedIncome: makeFromInt 30701, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26136, stateTaxDue: makeFromInt 8078 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5915, ordinaryIncomeNonSS: makeFromInt 89124, qualifiedIncome: makeFromInt 21700, itemizedDeductions: makeFromInt 2049, federalTaxDue: makeFromInt 15380, stateTaxDue: makeFromInt 5086 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44716, ordinaryIncomeNonSS: makeFromInt 139715, qualifiedIncome: makeFromInt 12281, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26220, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11932, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76772, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2066, stateTaxDue: makeFromInt 3464 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87453, qualifiedIncome: makeFromInt 79507, itemizedDeductions: makeFromInt 22195, federalTaxDue: makeFromInt 30830, stateTaxDue: makeFromInt 7893 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46357, itemizedDeductions: makeFromInt 16472, federalTaxDue: makeFromInt 26553, stateTaxDue: makeFromInt 9565 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10531, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40788, itemizedDeductions: makeFromInt 12123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1664 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3318, federalTaxDue: makeFromInt 52127, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15511, ordinaryIncomeNonSS: makeFromInt 141156, qualifiedIncome: makeFromInt 37259, itemizedDeductions: makeFromInt 14091, federalTaxDue: makeFromInt 22885, stateTaxDue: makeFromInt 8446 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9804, ordinaryIncomeNonSS: makeFromInt 58627, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16859, stateTaxDue: makeFromInt 7356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16008, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55646, itemizedDeductions: makeFromInt 5636, federalTaxDue: makeFromInt 3514, stateTaxDue: makeFromInt 2614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37587, ordinaryIncomeNonSS: makeFromInt 53182, qualifiedIncome: makeFromInt 74214, itemizedDeductions: makeFromInt 26850, federalTaxDue: makeFromInt 20461, stateTaxDue: makeFromInt 6273 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4845, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21582, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27286, federalTaxDue: makeFromInt 11695, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44982, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 54270, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17083, ordinaryIncomeNonSS: makeFromInt 80982, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17912, stateTaxDue: makeFromInt 8574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2362, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7845, stateTaxDue: makeFromInt 4363 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1511, ordinaryIncomeNonSS: makeFromInt 85747, qualifiedIncome: makeFromInt 81612, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12866, stateTaxDue: makeFromInt 7693 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147389, qualifiedIncome: makeFromInt 719, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21106, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53005, qualifiedIncome: makeFromInt 59337, itemizedDeductions: makeFromInt 15496, federalTaxDue: makeFromInt 18630, stateTaxDue: makeFromInt 5242 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118370, qualifiedIncome: makeFromInt 82284, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28011, stateTaxDue: makeFromInt 9458 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31324, ordinaryIncomeNonSS: makeFromInt 100142, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9683, federalTaxDue: makeFromInt 33506, stateTaxDue: makeFromInt 9656 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4852, ordinaryIncomeNonSS: makeFromInt 45693, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3147, stateTaxDue: makeFromInt 1710 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25898, ordinaryIncomeNonSS: makeFromInt 115185, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2341, federalTaxDue: makeFromInt 30862, stateTaxDue: makeFromInt 10084 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44368, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4921, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40001, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13428, federalTaxDue: makeFromInt 29785, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40753, itemizedDeductions: makeFromInt 2778, federalTaxDue: makeFromInt 130, stateTaxDue: makeFromInt 1663 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37276, ordinaryIncomeNonSS: makeFromInt 78389, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4115, federalTaxDue: makeFromInt 17125, stateTaxDue: makeFromInt 3464 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8891, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129701, qualifiedIncome: makeFromInt 74906, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26991, stateTaxDue: makeFromInt 9782 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129860, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30380, stateTaxDue: makeFromInt 6072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36764, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3050, itemizedDeductions: makeFromInt 27050, federalTaxDue: makeFromInt 31301, stateTaxDue: makeFromInt 7198 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41809, ordinaryIncomeNonSS: makeFromInt 65394, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21621, federalTaxDue: makeFromInt 10317, stateTaxDue: makeFromInt 2895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44088, ordinaryIncomeNonSS: makeFromInt 6315, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20946, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20258, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67679, qualifiedIncome: makeFromInt 23392, itemizedDeductions: makeFromInt 3863, federalTaxDue: makeFromInt 6725, stateTaxDue: makeFromInt 4094 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39213, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25053, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36828, stateTaxDue: makeFromInt 8498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22032, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41406, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1411, stateTaxDue: makeFromInt 1595 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43129, ordinaryIncomeNonSS: makeFromInt 139065, qualifiedIncome: makeFromInt 1057, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22833, stateTaxDue: makeFromInt 6331 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28847, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7668, federalTaxDue: makeFromInt 27220, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6621, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3686, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15781, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40863, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1368 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12898, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123777, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13580, stateTaxDue: makeFromInt 5806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48021, ordinaryIncomeNonSS: makeFromInt 148312, qualifiedIncome: makeFromInt 93512, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 49102, stateTaxDue: makeFromInt 11782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72417, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3809, stateTaxDue: makeFromInt 3166 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19174, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25537, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15944, qualifiedIncome: makeFromInt 7819, itemizedDeductions: makeFromInt 23047, federalTaxDue: makeFromInt 914, stateTaxDue: makeFromInt 813 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129678, qualifiedIncome: makeFromInt 13537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21740, stateTaxDue: makeFromInt 6855 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26013, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29873, ordinaryIncomeNonSS: makeFromInt 88507, qualifiedIncome: makeFromInt 44496, itemizedDeductions: makeFromInt 28079, federalTaxDue: makeFromInt 19851, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92102, itemizedDeductions: makeFromInt 15865, federalTaxDue: makeFromInt 5916, stateTaxDue: makeFromInt 3930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79019, qualifiedIncome: makeFromInt 23218, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3891, stateTaxDue: makeFromInt 4663 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20973, ordinaryIncomeNonSS: makeFromInt 3532, qualifiedIncome: makeFromInt 24114, itemizedDeductions: makeFromInt 1357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 927 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26044, qualifiedIncome: makeFromInt 74134, itemizedDeductions: makeFromInt 13813, federalTaxDue: makeFromInt 8045, stateTaxDue: makeFromInt 4554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14422, ordinaryIncomeNonSS: makeFromInt 107270, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15075, federalTaxDue: makeFromInt 16644, stateTaxDue: makeFromInt 5022 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1129, ordinaryIncomeNonSS: makeFromInt 122485, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27418, federalTaxDue: makeFromInt 14715, stateTaxDue: makeFromInt 5818 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47686, ordinaryIncomeNonSS: makeFromInt 136716, qualifiedIncome: makeFromInt 66930, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41297, stateTaxDue: makeFromInt 9835 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13947, ordinaryIncomeNonSS: makeFromInt 9547, qualifiedIncome: makeFromInt 77223, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8788, stateTaxDue: makeFromInt 4201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20115, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22722, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 506 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15707, ordinaryIncomeNonSS: makeFromInt 5639, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3830, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79514, qualifiedIncome: makeFromInt 37101, itemizedDeductions: makeFromInt 29718, federalTaxDue: makeFromInt 17829, stateTaxDue: makeFromInt 5397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27724, ordinaryIncomeNonSS: makeFromInt 104181, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19272, stateTaxDue: makeFromInt 5089 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130837, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24544, federalTaxDue: makeFromInt 27125, stateTaxDue: makeFromInt 10867 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3695, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32928, itemizedDeductions: makeFromInt 7394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1271 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28894, ordinaryIncomeNonSS: makeFromInt 41746, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25827, federalTaxDue: makeFromInt 4482, stateTaxDue: makeFromInt 1632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14422, stateTaxDue: makeFromInt 4379 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13440, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26948, stateTaxDue: makeFromInt 7072 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13306, ordinaryIncomeNonSS: makeFromInt 97761, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22283, federalTaxDue: makeFromInt 14401, stateTaxDue: makeFromInt 4433 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48953, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21484, itemizedDeductions: makeFromInt 26088, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18583, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96169, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3130, stateTaxDue: makeFromInt 4456 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26038, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99008, itemizedDeductions: makeFromInt 18584, federalTaxDue: makeFromInt 6811, stateTaxDue: makeFromInt 4375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32942, ordinaryIncomeNonSS: makeFromInt 39060, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1030, federalTaxDue: makeFromInt 4833, stateTaxDue: makeFromInt 1564 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16590, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73330, itemizedDeductions: makeFromInt 15789, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3192 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38480, ordinaryIncomeNonSS: makeFromInt 118789, qualifiedIncome: makeFromInt 84194, itemizedDeductions: makeFromInt 17711, federalTaxDue: makeFromInt 34613, stateTaxDue: makeFromInt 9774 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37448, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53752, qualifiedIncome: makeFromInt 38390, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4797, stateTaxDue: makeFromInt 4148 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38944, ordinaryIncomeNonSS: makeFromInt 1126, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11355, stateTaxDue: makeFromInt 4811 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 835, ordinaryIncomeNonSS: makeFromInt 16929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14330, federalTaxDue: makeFromInt 260, stateTaxDue: makeFromInt 435 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86541, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3531, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 470, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15794, federalTaxDue: makeFromInt 25166, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78303, itemizedDeductions: makeFromInt 18656, federalTaxDue: makeFromInt 10041, stateTaxDue: makeFromInt 3460 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34227, ordinaryIncomeNonSS: makeFromInt 59038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21766, federalTaxDue: makeFromInt 19353, stateTaxDue: makeFromInt 7277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39710, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56552, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1509, stateTaxDue: makeFromInt 2253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16880, qualifiedIncome: makeFromInt 43057, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2608 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129953, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34398, stateTaxDue: makeFromInt 11177 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1024, stateTaxDue: makeFromInt 2044 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117962, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26164, federalTaxDue: makeFromInt 10001, stateTaxDue: makeFromInt 5223 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21353, ordinaryIncomeNonSS: makeFromInt 149846, qualifiedIncome: makeFromInt 70337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41177, stateTaxDue: makeFromInt 10554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20297, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4602, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3345, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14788, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29768, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1033 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15221, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2493, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28116, stateTaxDue: makeFromInt 7226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16544, ordinaryIncomeNonSS: makeFromInt 63471, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13183, federalTaxDue: makeFromInt 6796, stateTaxDue: makeFromInt 2809 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32699, qualifiedIncome: makeFromInt 88731, itemizedDeductions: makeFromInt 16256, federalTaxDue: makeFromInt 11769, stateTaxDue: makeFromInt 5765 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31096, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26681, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15746, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92819, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6168, stateTaxDue: makeFromInt 4387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26922, ordinaryIncomeNonSS: makeFromInt 40244, qualifiedIncome: makeFromInt 60974, itemizedDeductions: makeFromInt 22377, federalTaxDue: makeFromInt 7934, stateTaxDue: makeFromInt 4713 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48018, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16438, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28434, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1789 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6777, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22532, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13189, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73234, itemizedDeductions: makeFromInt 15611, federalTaxDue: makeFromInt 5195, stateTaxDue: makeFromInt 3511 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4269, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41682, stateTaxDue: makeFromInt 12009 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64191, itemizedDeductions: makeFromInt 24178, federalTaxDue: makeFromInt 2009, stateTaxDue: makeFromInt 2723 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75257, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5838, stateTaxDue: makeFromInt 3388 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36767, ordinaryIncomeNonSS: makeFromInt 16902, qualifiedIncome: makeFromInt 22728, itemizedDeductions: makeFromInt 28531, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1593 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11428, ordinaryIncomeNonSS: makeFromInt 105419, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19285, federalTaxDue: makeFromInt 15757, stateTaxDue: makeFromInt 4778 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 646 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23265, ordinaryIncomeNonSS: makeFromInt 61574, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5608, stateTaxDue: makeFromInt 2404 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13332, federalTaxDue: makeFromInt 9938, stateTaxDue: makeFromInt 5197 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46115, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64943, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1190, stateTaxDue: makeFromInt 2772 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47309, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85117, itemizedDeductions: makeFromInt 19532, federalTaxDue: makeFromInt 41238, stateTaxDue: makeFromInt 11338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48220, ordinaryIncomeNonSS: makeFromInt 83420, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10196, stateTaxDue: makeFromInt 3602 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5455, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1837, stateTaxDue: makeFromInt 2509 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12941, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66833, itemizedDeductions: makeFromInt 793, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13092, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72069, itemizedDeductions: makeFromInt 28928, federalTaxDue: makeFromInt 5163, stateTaxDue: makeFromInt 3451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44060, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39141, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133689, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28427, stateTaxDue: makeFromInt 11209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36745, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84577, itemizedDeductions: makeFromInt 5296, federalTaxDue: makeFromInt 12840, stateTaxDue: makeFromInt 4089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39347, ordinaryIncomeNonSS: makeFromInt 4672, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14003, ordinaryIncomeNonSS: makeFromInt 41773, qualifiedIncome: makeFromInt 3393, itemizedDeductions: makeFromInt 20921, federalTaxDue: makeFromInt 3699, stateTaxDue: makeFromInt 2003 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12295, ordinaryIncomeNonSS: makeFromInt 81752, qualifiedIncome: makeFromInt 57256, itemizedDeductions: makeFromInt 26927, federalTaxDue: makeFromInt 10609, stateTaxDue: makeFromInt 6475 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17951, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61179, itemizedDeductions: makeFromInt 12449, federalTaxDue: makeFromInt 4089, stateTaxDue: makeFromInt 2692 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33574, ordinaryIncomeNonSS: makeFromInt 69767, qualifiedIncome: makeFromInt 79363, itemizedDeductions: makeFromInt 13385, federalTaxDue: makeFromInt 16735, stateTaxDue: makeFromInt 6782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8635, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7043, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57512, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 907, federalTaxDue: makeFromInt 7562, stateTaxDue: makeFromInt 2709 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1129, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18107, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 430 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3610, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14336, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 342 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11277, qualifiedIncome: makeFromInt 11848, itemizedDeductions: makeFromInt 21159, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 751 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3646, stateTaxDue: makeFromInt 2475 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65504, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12528, federalTaxDue: makeFromInt 7513, stateTaxDue: makeFromInt 2884 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68585, itemizedDeductions: makeFromInt 13682, federalTaxDue: makeFromInt 5542, stateTaxDue: makeFromInt 2854 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32301, ordinaryIncomeNonSS: makeFromInt 126825, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12587, federalTaxDue: makeFromInt 24676, stateTaxDue: makeFromInt 5766 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74900, qualifiedIncome: makeFromInt 79639, itemizedDeductions: makeFromInt 26284, federalTaxDue: makeFromInt 17093, stateTaxDue: makeFromInt 7535 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9346, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2796, stateTaxDue: makeFromInt 1510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4846, ordinaryIncomeNonSS: makeFromInt 135479, qualifiedIncome: makeFromInt 4708, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26566, stateTaxDue: makeFromInt 6803 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13147, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12058, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27829, ordinaryIncomeNonSS: makeFromInt 100105, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33320, stateTaxDue: makeFromInt 9757 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3533, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83988, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29829, stateTaxDue: makeFromInt 11281 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43960, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60850, itemizedDeductions: makeFromInt 6544, federalTaxDue: makeFromInt 6188, stateTaxDue: makeFromInt 2675 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29336, federalTaxDue: makeFromInt 9283, stateTaxDue: makeFromInt 2689 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45572, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14306, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24163, ordinaryIncomeNonSS: makeFromInt 138718, qualifiedIncome: makeFromInt 91839, itemizedDeductions: makeFromInt 14172, federalTaxDue: makeFromInt 39282, stateTaxDue: makeFromInt 11208 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36045, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28946, federalTaxDue: makeFromInt 23081, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18215, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88631, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1715, stateTaxDue: makeFromInt 4071 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96749, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40203, stateTaxDue: makeFromInt 11662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49524, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14979, ordinaryIncomeNonSS: makeFromInt 51568, qualifiedIncome: makeFromInt 50728, itemizedDeductions: makeFromInt 14083, federalTaxDue: makeFromInt 9142, stateTaxDue: makeFromInt 4768 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27647, qualifiedIncome: makeFromInt 6527, itemizedDeductions: makeFromInt 5186, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22850, qualifiedIncome: makeFromInt 69049, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12745, stateTaxDue: makeFromInt 4238 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63359, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25103, federalTaxDue: makeFromInt 2237, stateTaxDue: makeFromInt 2803 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21094, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3455, federalTaxDue: makeFromInt 20286, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39226, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79051, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5246, stateTaxDue: makeFromInt 3481 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19945, ordinaryIncomeNonSS: makeFromInt 35644, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4093, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124381, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10637, federalTaxDue: makeFromInt 18922, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10102, ordinaryIncomeNonSS: makeFromInt 147248, qualifiedIncome: makeFromInt 10315, itemizedDeductions: makeFromInt 28648, federalTaxDue: makeFromInt 24970, stateTaxDue: makeFromInt 7485 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43786, ordinaryIncomeNonSS: makeFromInt 20460, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16770, stateTaxDue: makeFromInt 5648 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46306, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41982, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 711, stateTaxDue: makeFromInt 1524 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40190, ordinaryIncomeNonSS: makeFromInt 90482, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16794, stateTaxDue: makeFromInt 4269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136940, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21615, stateTaxDue: makeFromInt 6535 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39356, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19133, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102333, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20370, federalTaxDue: makeFromInt 26977, stateTaxDue: makeFromInt 9742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47378, ordinaryIncomeNonSS: makeFromInt 8069, qualifiedIncome: makeFromInt 53347, itemizedDeductions: makeFromInt 8330, federalTaxDue: makeFromInt 12679, stateTaxDue: makeFromInt 2908 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46840, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29483, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48034, ordinaryIncomeNonSS: makeFromInt 84150, qualifiedIncome: makeFromInt 97267, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29721, stateTaxDue: makeFromInt 8696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6585, federalTaxDue: makeFromInt 1195, stateTaxDue: makeFromInt 944 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31737, ordinaryIncomeNonSS: makeFromInt 2208, qualifiedIncome: makeFromInt 10911, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 238 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10768, ordinaryIncomeNonSS: makeFromInt 10227, qualifiedIncome: makeFromInt 60999, itemizedDeductions: makeFromInt 3213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3086 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8631, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130459, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34995, stateTaxDue: makeFromInt 11305 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45064, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55065, itemizedDeductions: makeFromInt 20818, federalTaxDue: makeFromInt 6881, stateTaxDue: makeFromInt 2357 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19211, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50424, itemizedDeductions: makeFromInt 25974, federalTaxDue: makeFromInt 510, stateTaxDue: makeFromInt 2266 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32327, itemizedDeductions: makeFromInt 23332, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15874, federalTaxDue: makeFromInt 804, stateTaxDue: makeFromInt 1824 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29814, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13713, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49225, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5999, federalTaxDue: makeFromInt 5511, stateTaxDue: makeFromInt 6986 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47983, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23323, federalTaxDue: makeFromInt 16556, stateTaxDue: makeFromInt 6724 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45796, ordinaryIncomeNonSS: makeFromInt 50708, qualifiedIncome: makeFromInt 5840, itemizedDeductions: makeFromInt 26628, federalTaxDue: makeFromInt 10677, stateTaxDue: makeFromInt 2456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38048, itemizedDeductions: makeFromInt 10706, federalTaxDue: makeFromInt 36612, stateTaxDue: makeFromInt 9366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37423, qualifiedIncome: makeFromInt 64464, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6820, stateTaxDue: makeFromInt 4768 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50990, itemizedDeductions: makeFromInt 10211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1975 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41520, ordinaryIncomeNonSS: makeFromInt 28015, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3191, stateTaxDue: makeFromInt 1146 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3197, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42899, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129442, qualifiedIncome: makeFromInt 51553, itemizedDeductions: makeFromInt 2572, federalTaxDue: makeFromInt 20401, stateTaxDue: makeFromInt 8575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48943, ordinaryIncomeNonSS: makeFromInt 5374, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25831, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1093 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37380, ordinaryIncomeNonSS: makeFromInt 58977, qualifiedIncome: makeFromInt 8523, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14926, stateTaxDue: makeFromInt 3096 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61042, qualifiedIncome: makeFromInt 46124, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9597, stateTaxDue: makeFromInt 4983 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7427, ordinaryIncomeNonSS: makeFromInt 75650, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6183, federalTaxDue: makeFromInt 23620, stateTaxDue: makeFromInt 8611 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10237, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26543, ordinaryIncomeNonSS: makeFromInt 80200, qualifiedIncome: makeFromInt 12807, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13993, stateTaxDue: makeFromInt 4075 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30347, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25232, federalTaxDue: makeFromInt 512, stateTaxDue: makeFromInt 1062 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17267, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21460, ordinaryIncomeNonSS: makeFromInt 148212, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13156, federalTaxDue: makeFromInt 28854, stateTaxDue: makeFromInt 7110 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11303, ordinaryIncomeNonSS: makeFromInt 20616, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15461, federalTaxDue: makeFromInt 325, stateTaxDue: makeFromInt 501 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4937, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27491, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3220, ordinaryIncomeNonSS: makeFromInt 51303, qualifiedIncome: makeFromInt 71855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2495, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49545, ordinaryIncomeNonSS: makeFromInt 13216, qualifiedIncome: makeFromInt 10563, itemizedDeductions: makeFromInt 2525, federalTaxDue: makeFromInt 1392, stateTaxDue: makeFromInt 734 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2328, qualifiedIncome: makeFromInt 28669, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1152 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47745, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2012 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35282, ordinaryIncomeNonSS: makeFromInt 84477, qualifiedIncome: makeFromInt 82505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22786, stateTaxDue: makeFromInt 7874 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20155, ordinaryIncomeNonSS: makeFromInt 22785, qualifiedIncome: makeFromInt 84618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10591, stateTaxDue: makeFromInt 5049 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18392, ordinaryIncomeNonSS: makeFromInt 14503, qualifiedIncome: makeFromInt 60714, itemizedDeductions: makeFromInt 8246, federalTaxDue: makeFromInt 5920, stateTaxDue: makeFromInt 3489 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3175, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15842, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21931, ordinaryIncomeNonSS: makeFromInt 131477, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40660, stateTaxDue: makeFromInt 11319 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48573, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85832, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42682, stateTaxDue: makeFromInt 11477 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2836, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26733, stateTaxDue: makeFromInt 7187 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29601, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37982, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50, stateTaxDue: makeFromInt 1509 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3221, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95923, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7335, stateTaxDue: makeFromInt 4341 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40869, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26436, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8123, ordinaryIncomeNonSS: makeFromInt 71595, qualifiedIncome: makeFromInt 66589, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15036, stateTaxDue: makeFromInt 6701 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27890, ordinaryIncomeNonSS: makeFromInt 3755, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59789, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37317, ordinaryIncomeNonSS: makeFromInt 31229, qualifiedIncome: makeFromInt 95757, itemizedDeductions: makeFromInt 27603, federalTaxDue: makeFromInt 6842, stateTaxDue: makeFromInt 5823 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42143, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23639, ordinaryIncomeNonSS: makeFromInt 125473, qualifiedIncome: makeFromInt 82913, itemizedDeductions: makeFromInt 2599, federalTaxDue: makeFromInt 37005, stateTaxDue: makeFromInt 10164 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39985, qualifiedIncome: makeFromInt 79592, itemizedDeductions: makeFromInt 5360, federalTaxDue: makeFromInt 22699, stateTaxDue: makeFromInt 5724 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5418, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100543, qualifiedIncome: makeFromInt 95114, itemizedDeductions: makeFromInt 17370, federalTaxDue: makeFromInt 21754, stateTaxDue: makeFromInt 9108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83049, itemizedDeductions: makeFromInt 26737, federalTaxDue: makeFromInt 4897, stateTaxDue: makeFromInt 3685 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128561, qualifiedIncome: makeFromInt 85347, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28273, stateTaxDue: makeFromInt 10257 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15137, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37314, itemizedDeductions: makeFromInt 273, federalTaxDue: makeFromInt 24769, stateTaxDue: makeFromInt 8691 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41781, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15975, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5017, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39674, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28444, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41629, itemizedDeductions: makeFromInt 145, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1606 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11086, ordinaryIncomeNonSS: makeFromInt 65963, qualifiedIncome: makeFromInt 28403, itemizedDeductions: makeFromInt 17117, federalTaxDue: makeFromInt 12133, stateTaxDue: makeFromInt 4263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3919, ordinaryIncomeNonSS: makeFromInt 106409, qualifiedIncome: makeFromInt 66458, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19314, stateTaxDue: makeFromInt 8168 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11298, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31149, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31555, stateTaxDue: makeFromInt 8688 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13898, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20241, federalTaxDue: makeFromInt 36277, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52316, qualifiedIncome: makeFromInt 49880, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 439, stateTaxDue: makeFromInt 4661 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11712, ordinaryIncomeNonSS: makeFromInt 56453, qualifiedIncome: makeFromInt 83074, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7517, stateTaxDue: makeFromInt 6501 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18427, itemizedDeductions: makeFromInt 1890, federalTaxDue: makeFromInt 20835, stateTaxDue: makeFromInt 7946 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87732, qualifiedIncome: makeFromInt 26605, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23596, stateTaxDue: makeFromInt 5431 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12615, ordinaryIncomeNonSS: makeFromInt 140074, qualifiedIncome: makeFromInt 58728, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29748, stateTaxDue: makeFromInt 9486 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115064, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11152, stateTaxDue: makeFromInt 5278 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10567, ordinaryIncomeNonSS: makeFromInt 26971, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1702, stateTaxDue: makeFromInt 894 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12290, federalTaxDue: makeFromInt 17308, stateTaxDue: makeFromInt 5657 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43920, ordinaryIncomeNonSS: makeFromInt 41665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9643, federalTaxDue: makeFromInt 4461, stateTaxDue: makeFromInt 1472 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24967, federalTaxDue: makeFromInt 24182, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24980, ordinaryIncomeNonSS: makeFromInt 53624, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18991, stateTaxDue: makeFromInt 7306 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15898, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23003, itemizedDeductions: makeFromInt 14663, federalTaxDue: makeFromInt 27078, stateTaxDue: makeFromInt 8170 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2442, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28931, stateTaxDue: makeFromInt 7428 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12946, ordinaryIncomeNonSS: makeFromInt 94511, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20114, federalTaxDue: makeFromInt 20615, stateTaxDue: makeFromInt 9251 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44395, itemizedDeductions: makeFromInt 5965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1845 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2941, ordinaryIncomeNonSS: makeFromInt 40164, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3236, stateTaxDue: makeFromInt 1553 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81578, qualifiedIncome: makeFromInt 74285, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13539, stateTaxDue: makeFromInt 7296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19730, ordinaryIncomeNonSS: makeFromInt 8396, qualifiedIncome: makeFromInt 88135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4054, stateTaxDue: makeFromInt 4474 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17914, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10922, ordinaryIncomeNonSS: makeFromInt 80132, qualifiedIncome: makeFromInt 23598, itemizedDeductions: makeFromInt 29603, federalTaxDue: makeFromInt 11751, stateTaxDue: makeFromInt 4932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143542, qualifiedIncome: makeFromInt 9485, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25117, stateTaxDue: makeFromInt 7580 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70047, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4478, federalTaxDue: makeFromInt 19039, stateTaxDue: makeFromInt 3226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53376, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4401, stateTaxDue: makeFromInt 2498 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7805, qualifiedIncome: makeFromInt 54672, itemizedDeductions: makeFromInt 5863, federalTaxDue: makeFromInt 8896, stateTaxDue: makeFromInt 2840 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38692, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77897, itemizedDeductions: makeFromInt 3023, federalTaxDue: makeFromInt 6037, stateTaxDue: makeFromInt 3748 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8394, ordinaryIncomeNonSS: makeFromInt 4481, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2233, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62208, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1291, stateTaxDue: makeFromInt 2735 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32262, qualifiedIncome: makeFromInt 46672, itemizedDeductions: makeFromInt 17222, federalTaxDue: makeFromInt 4961, stateTaxDue: makeFromInt 3562 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61568, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2603 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40070, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21416, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28911, ordinaryIncomeNonSS: makeFromInt 54745, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6325, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59645, itemizedDeductions: makeFromInt 24842, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21366, ordinaryIncomeNonSS: makeFromInt 68668, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8402, federalTaxDue: makeFromInt 9599, stateTaxDue: makeFromInt 3053 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87629, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3707 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12278, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18857, stateTaxDue: makeFromInt 7439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22608, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25607, federalTaxDue: makeFromInt 25138, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47273, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1689 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13300, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121594, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14273, federalTaxDue: makeFromInt 33253, stateTaxDue: makeFromInt 10825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18567, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46796, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24117, federalTaxDue: makeFromInt 5196, stateTaxDue: makeFromInt 1836 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95630, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1842, stateTaxDue: makeFromInt 4307 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73198, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24457, federalTaxDue: makeFromInt 3810, stateTaxDue: makeFromInt 3305 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43820, qualifiedIncome: makeFromInt 6736, itemizedDeductions: makeFromInt 5068, federalTaxDue: makeFromInt 2226, stateTaxDue: makeFromInt 2153 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30755, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3956, stateTaxDue: makeFromInt 5863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128587, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8540, federalTaxDue: makeFromInt 32880, stateTaxDue: makeFromInt 6130 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10922, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23263, stateTaxDue: makeFromInt 7671 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 445, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40831, qualifiedIncome: makeFromInt 55159, itemizedDeductions: makeFromInt 21004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4243 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43067, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14176, federalTaxDue: makeFromInt 1232, stateTaxDue: makeFromInt 1478 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16021, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49935, ordinaryIncomeNonSS: makeFromInt 58044, qualifiedIncome: makeFromInt 78722, itemizedDeductions: makeFromInt 28151, federalTaxDue: makeFromInt 18821, stateTaxDue: makeFromInt 6363 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32401, ordinaryIncomeNonSS: makeFromInt 79610, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24922, stateTaxDue: makeFromInt 8626 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8112, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36112, ordinaryIncomeNonSS: makeFromInt 36042, qualifiedIncome: makeFromInt 39965, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7793, stateTaxDue: makeFromInt 3425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42974, ordinaryIncomeNonSS: makeFromInt 81260, qualifiedIncome: makeFromInt 7313, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18437, stateTaxDue: makeFromInt 4174 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4449, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47600, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1080, stateTaxDue: makeFromInt 2125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13196, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7936, ordinaryIncomeNonSS: makeFromInt 3268, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3939, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59422, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34416, stateTaxDue: makeFromInt 10456 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13677, ordinaryIncomeNonSS: makeFromInt 123908, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25844, federalTaxDue: makeFromInt 15849, stateTaxDue: makeFromInt 5611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19606, federalTaxDue: makeFromInt 238, stateTaxDue: makeFromInt 1501 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2004, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6164, qualifiedIncome: makeFromInt 51014, itemizedDeductions: makeFromInt 23742, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2263 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2541, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22001, federalTaxDue: makeFromInt 19824, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37599, ordinaryIncomeNonSS: makeFromInt 30914, qualifiedIncome: makeFromInt 13152, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4001, stateTaxDue: makeFromInt 1828 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24358, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68162, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14325, stateTaxDue: makeFromInt 2833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40039, qualifiedIncome: makeFromInt 60177, itemizedDeductions: makeFromInt 21915, federalTaxDue: makeFromInt 7137, stateTaxDue: makeFromInt 4887 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27024, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 88, federalTaxDue: makeFromInt 27138, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45089, ordinaryIncomeNonSS: makeFromInt 21267, qualifiedIncome: makeFromInt 94219, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9573, stateTaxDue: makeFromInt 5441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96112, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3122, stateTaxDue: makeFromInt 4453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25516, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18188, itemizedDeductions: makeFromInt 3161, federalTaxDue: makeFromInt 40940, stateTaxDue: makeFromInt 8353 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28449, ordinaryIncomeNonSS: makeFromInt 59454, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3012, federalTaxDue: makeFromInt 21361, stateTaxDue: makeFromInt 7398 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38897, ordinaryIncomeNonSS: makeFromInt 102154, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30426, stateTaxDue: makeFromInt 9633 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13755, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25442, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118617, qualifiedIncome: makeFromInt 73325, itemizedDeductions: makeFromInt 13333, federalTaxDue: makeFromInt 20151, stateTaxDue: makeFromInt 8922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42286, ordinaryIncomeNonSS: makeFromInt 14572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 90 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147904, qualifiedIncome: makeFromInt 23142, itemizedDeductions: makeFromInt 27854, federalTaxDue: makeFromInt 24452, stateTaxDue: makeFromInt 8295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39577, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74040, itemizedDeductions: makeFromInt 29202, federalTaxDue: makeFromInt 3546, stateTaxDue: makeFromInt 3225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6088, ordinaryIncomeNonSS: makeFromInt 114260, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2773, federalTaxDue: makeFromInt 23580, stateTaxDue: makeFromInt 5603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5270, federalTaxDue: makeFromInt 9203, stateTaxDue: makeFromInt 3911 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33136, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35489, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10259, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30383, itemizedDeductions: makeFromInt 4749, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38985, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49113, itemizedDeductions: makeFromInt 27897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2056 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65626, qualifiedIncome: makeFromInt 43031, itemizedDeductions: makeFromInt 16534, federalTaxDue: makeFromInt 5733, stateTaxDue: makeFromInt 4889 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11367, ordinaryIncomeNonSS: makeFromInt 14920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 371 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15952, ordinaryIncomeNonSS: makeFromInt 25928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 670 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10773, stateTaxDue: makeFromInt 4312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11224, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147162, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39390, stateTaxDue: makeFromInt 11903 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24197, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29069, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19288, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1857, federalTaxDue: makeFromInt 22285, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28875, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 989 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101236, qualifiedIncome: makeFromInt 84004, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27564, stateTaxDue: makeFromInt 8787 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25716, qualifiedIncome: makeFromInt 86057, itemizedDeductions: makeFromInt 9011, federalTaxDue: makeFromInt 16206, stateTaxDue: makeFromInt 5150 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95323, qualifiedIncome: makeFromInt 10235, itemizedDeductions: makeFromInt 5534, federalTaxDue: makeFromInt 23683, stateTaxDue: makeFromInt 5023 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34008, itemizedDeductions: makeFromInt 27559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1172 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133020, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3621, federalTaxDue: makeFromInt 37805, stateTaxDue: makeFromInt 10976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45150, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1752 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32379, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9406, itemizedDeductions: makeFromInt 12412, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 95 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26646, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18948, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17222, ordinaryIncomeNonSS: makeFromInt 97728, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28909, federalTaxDue: makeFromInt 9330, stateTaxDue: makeFromInt 4211 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5924, qualifiedIncome: makeFromInt 85242, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11502, stateTaxDue: makeFromInt 4103 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36981, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58656, itemizedDeductions: makeFromInt 23965, federalTaxDue: makeFromInt 1216, stateTaxDue: makeFromInt 2358 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17780, itemizedDeductions: makeFromInt 26526, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 514 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35889, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56412, itemizedDeductions: makeFromInt 27385, federalTaxDue: makeFromInt 872, stateTaxDue: makeFromInt 2246 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15765, ordinaryIncomeNonSS: makeFromInt 106737, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31093, stateTaxDue: makeFromInt 9962 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50258, qualifiedIncome: makeFromInt 1470, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3813, stateTaxDue: makeFromInt 2131 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28600, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52097, itemizedDeductions: makeFromInt 17759, federalTaxDue: makeFromInt 2167, stateTaxDue: makeFromInt 2229 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6545, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1815, stateTaxDue: makeFromInt 1793 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93349, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1882, stateTaxDue: makeFromInt 4192 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87922, qualifiedIncome: makeFromInt 96200, itemizedDeductions: makeFromInt 4478, federalTaxDue: makeFromInt 25185, stateTaxDue: makeFromInt 8751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4556, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87667, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6096, stateTaxDue: makeFromInt 3928 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107648, qualifiedIncome: makeFromInt 6089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17287, stateTaxDue: makeFromInt 5212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5561, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47897, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58504, itemizedDeductions: makeFromInt 8462, federalTaxDue: makeFromInt 43617, stateTaxDue: makeFromInt 10170 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94830, itemizedDeductions: makeFromInt 2331, federalTaxDue: makeFromInt 6185, stateTaxDue: makeFromInt 4367 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26190, federalTaxDue: makeFromInt 5865, stateTaxDue: makeFromInt 3362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24676, ordinaryIncomeNonSS: makeFromInt 116094, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13089, federalTaxDue: makeFromInt 39280, stateTaxDue: makeFromInt 10674 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69039, qualifiedIncome: makeFromInt 90070, itemizedDeductions: makeFromInt 12363, federalTaxDue: makeFromInt 22438, stateTaxDue: makeFromInt 7890 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33031, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5591, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22925, ordinaryIncomeNonSS: makeFromInt 148044, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22628, federalTaxDue: makeFromInt 28612, stateTaxDue: makeFromInt 6947 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93843, qualifiedIncome: makeFromInt 336, itemizedDeductions: makeFromInt 24167, federalTaxDue: makeFromInt 9727, stateTaxDue: makeFromInt 4334 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20178, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60162, itemizedDeductions: makeFromInt 21014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2533 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36871, itemizedDeductions: makeFromInt 25896, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1228 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62619, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26145, federalTaxDue: makeFromInt 15067, stateTaxDue: makeFromInt 7556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25615, ordinaryIncomeNonSS: makeFromInt 6399, qualifiedIncome: makeFromInt 35446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1481 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130639, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22988, stateTaxDue: makeFromInt 5857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33795, ordinaryIncomeNonSS: makeFromInt 140676, qualifiedIncome: makeFromInt 33519, itemizedDeductions: makeFromInt 4697, federalTaxDue: makeFromInt 34579, stateTaxDue: makeFromInt 8333 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27406, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 5895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35896, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38251, stateTaxDue: makeFromInt 9052 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97165, itemizedDeductions: makeFromInt 15941, federalTaxDue: makeFromInt 9829, stateTaxDue: makeFromInt 4283 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14728, qualifiedIncome: makeFromInt 99057, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6946, stateTaxDue: makeFromInt 5403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42184, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5296, stateTaxDue: makeFromInt 4277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37736, ordinaryIncomeNonSS: makeFromInt 28751, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 498, stateTaxDue: makeFromInt 814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21378, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 100, stateTaxDue: makeFromInt 866 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42430, ordinaryIncomeNonSS: makeFromInt 107299, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8935, federalTaxDue: makeFromInt 23131, stateTaxDue: makeFromInt 5023 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63294, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2440, stateTaxDue: makeFromInt 2910 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23659, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52519, itemizedDeductions: makeFromInt 22998, federalTaxDue: makeFromInt 34979, stateTaxDue: makeFromInt 9751 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4812, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16972, qualifiedIncome: makeFromInt 93051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2573, stateTaxDue: makeFromInt 5162 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24317, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15654, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36183, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 619, federalTaxDue: makeFromInt 2663, stateTaxDue: makeFromInt 1193 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26558, ordinaryIncomeNonSS: makeFromInt 60912, qualifiedIncome: makeFromInt 35590, itemizedDeductions: makeFromInt 21463, federalTaxDue: makeFromInt 11521, stateTaxDue: makeFromInt 4493 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88017, itemizedDeductions: makeFromInt 20137, federalTaxDue: makeFromInt 8457, stateTaxDue: makeFromInt 4026 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16172, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39678, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87091, itemizedDeductions: makeFromInt 7878, federalTaxDue: makeFromInt 9264, stateTaxDue: makeFromInt 4013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1091, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23900, federalTaxDue: makeFromInt 20992, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92923, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3151, stateTaxDue: makeFromInt 4290 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47630, itemizedDeductions: makeFromInt 11762, federalTaxDue: makeFromInt 1349, stateTaxDue: makeFromInt 2007 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37288, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17818, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11220, stateTaxDue: makeFromInt 5784 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132940, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23577, stateTaxDue: makeFromInt 6172 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29686, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69259, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32281, stateTaxDue: makeFromInt 10488 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31353, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23309, federalTaxDue: makeFromInt 34838, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90010, qualifiedIncome: makeFromInt 28006, itemizedDeductions: makeFromInt 6193, federalTaxDue: makeFromInt 12115, stateTaxDue: makeFromInt 5326 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84543, qualifiedIncome: makeFromInt 21594, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19929, stateTaxDue: makeFromInt 4852 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25980, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1881, stateTaxDue: makeFromInt 1101 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44563, ordinaryIncomeNonSS: makeFromInt 138704, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28005, stateTaxDue: makeFromInt 6360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16508, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38051, itemizedDeductions: makeFromInt 1430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1428 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108173, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29302, stateTaxDue: makeFromInt 10392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5655, itemizedDeductions: makeFromInt 21625, federalTaxDue: makeFromInt 34545, stateTaxDue: makeFromInt 7490 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31067, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23580, federalTaxDue: makeFromInt 34694, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1289, qualifiedIncome: makeFromInt 83233, itemizedDeductions: makeFromInt 29252, federalTaxDue: makeFromInt 6669, stateTaxDue: makeFromInt 3651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123088, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25659, federalTaxDue: makeFromInt 41152, stateTaxDue: makeFromInt 10579 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33100, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21133, itemizedDeductions: makeFromInt 12068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 482 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53163, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1974, stateTaxDue: makeFromInt 2403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1183, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16090, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32744, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23873, itemizedDeductions: makeFromInt 3725, federalTaxDue: makeFromInt 37007, stateTaxDue: makeFromInt 8439 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25070, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37755, ordinaryIncomeNonSS: makeFromInt 4186, qualifiedIncome: makeFromInt 60483, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3194, stateTaxDue: makeFromInt 2747 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43230, itemizedDeductions: makeFromInt 21945, federalTaxDue: makeFromInt 1642, stateTaxDue: makeFromInt 1654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100803, qualifiedIncome: makeFromInt 44278, itemizedDeductions: makeFromInt 14406, federalTaxDue: makeFromInt 20230, stateTaxDue: makeFromInt 6799 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60093, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3895, stateTaxDue: makeFromInt 2590 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49487, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78545, itemizedDeductions: makeFromInt 28640, federalTaxDue: makeFromInt 6565, stateTaxDue: makeFromInt 3659 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38674, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1509 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121759, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10457, stateTaxDue: makeFromInt 5613 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37790, ordinaryIncomeNonSS: makeFromInt 99980, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9813, federalTaxDue: makeFromInt 20775, stateTaxDue: makeFromInt 4744 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7243, ordinaryIncomeNonSS: makeFromInt 100125, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8600, stateTaxDue: makeFromInt 4531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86472, qualifiedIncome: makeFromInt 57179, itemizedDeductions: makeFromInt 17962, federalTaxDue: makeFromInt 14833, stateTaxDue: makeFromInt 6775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16066, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20769, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98189, itemizedDeductions: makeFromInt 20265, federalTaxDue: makeFromInt 43502, stateTaxDue: makeFromInt 12154 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4877, qualifiedIncome: makeFromInt 2366, itemizedDeductions: makeFromInt 11639, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1690, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6983, stateTaxDue: makeFromInt 3011 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19428, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19283, federalTaxDue: makeFromInt 27612, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99336, qualifiedIncome: makeFromInt 46146, itemizedDeductions: makeFromInt 171, federalTaxDue: makeFromInt 18666, stateTaxDue: makeFromInt 6869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53037, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23410, federalTaxDue: makeFromInt 6464, stateTaxDue: makeFromInt 7177 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19623, ordinaryIncomeNonSS: makeFromInt 54908, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19973, federalTaxDue: makeFromInt 5330, stateTaxDue: makeFromInt 2352 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59479, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2499 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43036, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16723, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10309, ordinaryIncomeNonSS: makeFromInt 100669, qualifiedIncome: makeFromInt 69370, itemizedDeductions: makeFromInt 9883, federalTaxDue: makeFromInt 25892, stateTaxDue: makeFromInt 8247 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26979, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44988, ordinaryIncomeNonSS: makeFromInt 6785, qualifiedIncome: makeFromInt 52957, itemizedDeductions: makeFromInt 25754, federalTaxDue: makeFromInt 5861, stateTaxDue: makeFromInt 2532 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7877, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73240, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35396, stateTaxDue: makeFromInt 10834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3614, itemizedDeductions: makeFromInt 22069, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26156, ordinaryIncomeNonSS: makeFromInt 36580, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21690, federalTaxDue: makeFromInt 16699, stateTaxDue: makeFromInt 6619 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93002, qualifiedIncome: makeFromInt 32839, itemizedDeductions: makeFromInt 21719, federalTaxDue: makeFromInt 13498, stateTaxDue: makeFromInt 5717 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24938, ordinaryIncomeNonSS: makeFromInt 70628, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27815, stateTaxDue: makeFromInt 8076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1188, ordinaryIncomeNonSS: makeFromInt 75310, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26679, federalTaxDue: makeFromInt 6176, stateTaxDue: makeFromInt 3494 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4159, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42894, ordinaryIncomeNonSS: makeFromInt 139206, qualifiedIncome: makeFromInt 3853, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30623, stateTaxDue: makeFromInt 6949 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143797, qualifiedIncome: makeFromInt 8848, itemizedDeductions: makeFromInt 4125, federalTaxDue: makeFromInt 27991, stateTaxDue: makeFromInt 6957 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73303, itemizedDeductions: makeFromInt 4495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3290 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55908, itemizedDeductions: makeFromInt 6445, federalTaxDue: makeFromInt 2694, stateTaxDue: makeFromInt 2627 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5134, stateTaxDue: makeFromInt 2918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94602, qualifiedIncome: makeFromInt 48823, itemizedDeductions: makeFromInt 14971, federalTaxDue: makeFromInt 17940, stateTaxDue: makeFromInt 6886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22151, ordinaryIncomeNonSS: makeFromInt 75069, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14729, federalTaxDue: makeFromInt 29551, stateTaxDue: makeFromInt 8704 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37150, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7041, stateTaxDue: makeFromInt 1603 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17412, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 616 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46032, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20843, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36625, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32398, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26325, federalTaxDue: makeFromInt 24218, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7227, itemizedDeductions: makeFromInt 19648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66144, itemizedDeductions: makeFromInt 804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2721 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9666, federalTaxDue: makeFromInt 42246, stateTaxDue: makeFromInt 12201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33568, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27004, itemizedDeductions: makeFromInt 6087, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1030 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20571, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20184, federalTaxDue: makeFromInt 44527, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28589, ordinaryIncomeNonSS: makeFromInt 100742, qualifiedIncome: makeFromInt 26882, itemizedDeductions: makeFromInt 29797, federalTaxDue: makeFromInt 16566, stateTaxDue: makeFromInt 5906 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6861, stateTaxDue: makeFromInt 3814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63112, itemizedDeductions: makeFromInt 26624, federalTaxDue: makeFromInt 6793, stateTaxDue: makeFromInt 2994 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13119, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62706, itemizedDeductions: makeFromInt 15997, federalTaxDue: makeFromInt 3346, stateTaxDue: makeFromInt 2680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149930, qualifiedIncome: makeFromInt 59423, itemizedDeductions: makeFromInt 27987, federalTaxDue: makeFromInt 39680, stateTaxDue: makeFromInt 10126 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133862, qualifiedIncome: makeFromInt 50694, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28801, stateTaxDue: makeFromInt 8773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21940, ordinaryIncomeNonSS: makeFromInt 129578, qualifiedIncome: makeFromInt 82050, itemizedDeductions: makeFromInt 7345, federalTaxDue: makeFromInt 43657, stateTaxDue: makeFromInt 10569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19391, ordinaryIncomeNonSS: makeFromInt 92611, qualifiedIncome: makeFromInt 26049, itemizedDeductions: makeFromInt 3959, federalTaxDue: makeFromInt 22141, stateTaxDue: makeFromInt 5705 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20255, ordinaryIncomeNonSS: makeFromInt 41605, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28190, federalTaxDue: makeFromInt 10876, stateTaxDue: makeFromInt 6605 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32043, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28371, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22328, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100770, qualifiedIncome: makeFromInt 60533, itemizedDeductions: makeFromInt 3385, federalTaxDue: makeFromInt 32535, stateTaxDue: makeFromInt 7810 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27411, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90065, itemizedDeductions: makeFromInt 14134, federalTaxDue: makeFromInt 1390, stateTaxDue: makeFromInt 3828 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16585, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59738, itemizedDeductions: makeFromInt 14671, federalTaxDue: makeFromInt 1907, stateTaxDue: makeFromInt 2532 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140948, qualifiedIncome: makeFromInt 282, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25111, stateTaxDue: makeFromInt 6774 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21517, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17147, itemizedDeductions: makeFromInt 24815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 324 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62837, qualifiedIncome: makeFromInt 7275, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6001, stateTaxDue: makeFromInt 3127 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26741, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47543, itemizedDeductions: makeFromInt 12430, federalTaxDue: makeFromInt 1439, stateTaxDue: makeFromInt 1996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2618, ordinaryIncomeNonSS: makeFromInt 34440, qualifiedIncome: makeFromInt 17466, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4403, stateTaxDue: makeFromInt 2423 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21502, ordinaryIncomeNonSS: makeFromInt 142987, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42774, stateTaxDue: makeFromInt 11694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13648, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4380, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39202, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49867, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45465, stateTaxDue: makeFromInt 9846 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10147, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23912, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75876, itemizedDeductions: makeFromInt 6074, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3421 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109601, qualifiedIncome: makeFromInt 46743, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20965, stateTaxDue: makeFromInt 7442 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16904, ordinaryIncomeNonSS: makeFromInt 96283, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4830, federalTaxDue: makeFromInt 10942, stateTaxDue: makeFromInt 4258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28377, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31859, stateTaxDue: makeFromInt 8669 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26079, ordinaryIncomeNonSS: makeFromInt 25029, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2834, federalTaxDue: makeFromInt 1854, stateTaxDue: makeFromInt 996 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40590, ordinaryIncomeNonSS: makeFromInt 85762, qualifiedIncome: makeFromInt 87835, itemizedDeductions: makeFromInt 12772, federalTaxDue: makeFromInt 25311, stateTaxDue: makeFromInt 8005 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9774, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135872, qualifiedIncome: makeFromInt 27552, itemizedDeductions: makeFromInt 4119, federalTaxDue: makeFromInt 29061, stateTaxDue: makeFromInt 7988 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57894, itemizedDeductions: makeFromInt 1651, federalTaxDue: makeFromInt 3037, stateTaxDue: makeFromInt 2524 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38480, ordinaryIncomeNonSS: makeFromInt 95726, qualifiedIncome: makeFromInt 39541, itemizedDeductions: makeFromInt 25686, federalTaxDue: makeFromInt 19865, stateTaxDue: makeFromInt 6088 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51884, itemizedDeductions: makeFromInt 1642, federalTaxDue: makeFromInt 34384, stateTaxDue: makeFromInt 9839 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5920, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128127, qualifiedIncome: makeFromInt 71785, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30096, stateTaxDue: makeFromInt 9849 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140343, qualifiedIncome: makeFromInt 23519, itemizedDeductions: makeFromInt 28558, federalTaxDue: makeFromInt 23254, stateTaxDue: makeFromInt 7806 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13666, ordinaryIncomeNonSS: makeFromInt 23449, qualifiedIncome: makeFromInt 17647, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 547, stateTaxDue: makeFromInt 1545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143426, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15727, federalTaxDue: makeFromInt 14895, stateTaxDue: makeFromInt 6496 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46941, itemizedDeductions: makeFromInt 461, federalTaxDue: makeFromInt 32112, stateTaxDue: makeFromInt 9592 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46658, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 747, stateTaxDue: makeFromInt 2078 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3950, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83637, qualifiedIncome: makeFromInt 52837, itemizedDeductions: makeFromInt 4661, federalTaxDue: makeFromInt 22019, stateTaxDue: makeFromInt 6736 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12525, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12899, federalTaxDue: makeFromInt 12707, stateTaxDue: makeFromInt 4312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6360, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46152, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5099, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35302, qualifiedIncome: makeFromInt 70153, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8300, stateTaxDue: makeFromInt 5018 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38244, ordinaryIncomeNonSS: makeFromInt 123126, qualifiedIncome: makeFromInt 71643, itemizedDeductions: makeFromInt 23008, federalTaxDue: makeFromInt 35977, stateTaxDue: makeFromInt 9483 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49512, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36107, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4161, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26216, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1166 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126568, qualifiedIncome: makeFromInt 14312, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13333, stateTaxDue: makeFromInt 6369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19687, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86037, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7258, stateTaxDue: makeFromInt 3959 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53645, itemizedDeductions: makeFromInt 19552, federalTaxDue: makeFromInt 36075, stateTaxDue: makeFromInt 9507 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21308, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15639, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18831, qualifiedIncome: makeFromInt 30595, itemizedDeductions: makeFromInt 1630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1970 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39911, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9601, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 54012, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30164, qualifiedIncome: makeFromInt 98722, itemizedDeductions: makeFromInt 26227, federalTaxDue: makeFromInt 7678, stateTaxDue: makeFromInt 6069 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25532, ordinaryIncomeNonSS: makeFromInt 33165, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 813, federalTaxDue: makeFromInt 3519, stateTaxDue: makeFromInt 1403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8445, ordinaryIncomeNonSS: makeFromInt 138140, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24484, federalTaxDue: makeFromInt 25736, stateTaxDue: makeFromInt 6821 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124255, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19602, federalTaxDue: makeFromInt 10757, stateTaxDue: makeFromInt 5738 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70046, qualifiedIncome: makeFromInt 19711, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4879, stateTaxDue: makeFromInt 4013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70634, qualifiedIncome: makeFromInt 1952, itemizedDeductions: makeFromInt 14066, federalTaxDue: makeFromInt 19935, stateTaxDue: makeFromInt 3477 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6400, stateTaxDue: makeFromInt 2892 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12616, ordinaryIncomeNonSS: makeFromInt 111892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13984, stateTaxDue: makeFromInt 5054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36880, ordinaryIncomeNonSS: makeFromInt 13767, qualifiedIncome: makeFromInt 64708, itemizedDeductions: makeFromInt 25929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3349 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48186, ordinaryIncomeNonSS: makeFromInt 111501, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10479, federalTaxDue: makeFromInt 22215, stateTaxDue: makeFromInt 5000 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19112, ordinaryIncomeNonSS: makeFromInt 100750, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13256, stateTaxDue: makeFromInt 4663 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17145, ordinaryIncomeNonSS: makeFromInt 35468, qualifiedIncome: makeFromInt 93432, itemizedDeductions: makeFromInt 22471, federalTaxDue: makeFromInt 14173, stateTaxDue: makeFromInt 5990 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12394, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43735, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92235, itemizedDeductions: makeFromInt 13701, federalTaxDue: makeFromInt 12118, stateTaxDue: makeFromInt 4157 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61868, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11073, stateTaxDue: makeFromInt 2718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10347, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15804, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95002, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4800, stateTaxDue: makeFromInt 4175 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48002, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86506, itemizedDeductions: makeFromInt 5010, federalTaxDue: makeFromInt 14025, stateTaxDue: makeFromInt 4070 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19600, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76341, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3342 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126261, qualifiedIncome: makeFromInt 56006, itemizedDeductions: makeFromInt 12047, federalTaxDue: makeFromInt 27774, stateTaxDue: makeFromInt 8858 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13066, ordinaryIncomeNonSS: makeFromInt 90234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3177, federalTaxDue: makeFromInt 10407, stateTaxDue: makeFromInt 3937 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33024, ordinaryIncomeNonSS: makeFromInt 99392, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14831, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24116, ordinaryIncomeNonSS: makeFromInt 59167, qualifiedIncome: makeFromInt 23273, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10048, stateTaxDue: makeFromInt 3756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8647, ordinaryIncomeNonSS: makeFromInt 1697, qualifiedIncome: makeFromInt 72989, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3360 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19887, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57689, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24994, stateTaxDue: makeFromInt 9909 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6901, ordinaryIncomeNonSS: makeFromInt 85623, qualifiedIncome: makeFromInt 71151, itemizedDeductions: makeFromInt 13091, federalTaxDue: makeFromInt 12501, stateTaxDue: makeFromInt 7164 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22183, ordinaryIncomeNonSS: makeFromInt 144309, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31289, stateTaxDue: makeFromInt 6931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25245, ordinaryIncomeNonSS: makeFromInt 78741, qualifiedIncome: makeFromInt 24195, itemizedDeductions: makeFromInt 10100, federalTaxDue: makeFromInt 18056, stateTaxDue: makeFromInt 4892 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31819, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28485, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 394, ordinaryIncomeNonSS: makeFromInt 29000, qualifiedIncome: makeFromInt 59983, itemizedDeductions: makeFromInt 20122, federalTaxDue: makeFromInt 4247, stateTaxDue: makeFromInt 4194 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21370, ordinaryIncomeNonSS: makeFromInt 116143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8039, federalTaxDue: makeFromInt 21304, stateTaxDue: makeFromInt 5352 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30669, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1058 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13277, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31083, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9974, federalTaxDue: makeFromInt 843, stateTaxDue: makeFromInt 1179 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6985, qualifiedIncome: makeFromInt 54638, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2406 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75971, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3392 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40054, ordinaryIncomeNonSS: makeFromInt 43522, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2199, federalTaxDue: makeFromInt 9265, stateTaxDue: makeFromInt 1774 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23233, ordinaryIncomeNonSS: makeFromInt 88429, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11911, stateTaxDue: makeFromInt 3847 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2548, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11828, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47976, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88978, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1747, stateTaxDue: makeFromInt 3974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4590, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23218, ordinaryIncomeNonSS: makeFromInt 20751, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22349, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 5730 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12833, qualifiedIncome: makeFromInt 63284, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6552, stateTaxDue: makeFromInt 3431 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7293, ordinaryIncomeNonSS: makeFromInt 91330, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15342, stateTaxDue: makeFromInt 4311 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120793, qualifiedIncome: makeFromInt 73249, itemizedDeductions: makeFromInt 18430, federalTaxDue: makeFromInt 28955, stateTaxDue: makeFromInt 9447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20456, federalTaxDue: makeFromInt 16494, stateTaxDue: makeFromInt 5488 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32056, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9016, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95715, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15535, federalTaxDue: makeFromInt 8062, stateTaxDue: makeFromInt 4229 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6961, ordinaryIncomeNonSS: makeFromInt 49647, qualifiedIncome: makeFromInt 24658, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2673, stateTaxDue: makeFromInt 3040 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22987, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14181, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27842, stateTaxDue: makeFromInt 7720 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22597, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109143, qualifiedIncome: makeFromInt 74504, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24651, stateTaxDue: makeFromInt 8807 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6262, ordinaryIncomeNonSS: makeFromInt 90786, qualifiedIncome: makeFromInt 43682, itemizedDeductions: makeFromInt 5237, federalTaxDue: makeFromInt 15808, stateTaxDue: makeFromInt 6348 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4374, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37717, ordinaryIncomeNonSS: makeFromInt 65868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18340, federalTaxDue: makeFromInt 26330, stateTaxDue: makeFromInt 7918 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43019, ordinaryIncomeNonSS: makeFromInt 81653, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27767, stateTaxDue: makeFromInt 8708 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48921, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124095, qualifiedIncome: makeFromInt 16432, itemizedDeductions: makeFromInt 26690, federalTaxDue: makeFromInt 13096, stateTaxDue: makeFromInt 6351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23350, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45764, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1681 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43779, ordinaryIncomeNonSS: makeFromInt 69066, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34897, stateTaxDue: makeFromInt 8398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100022, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8968, stateTaxDue: makeFromInt 4652 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48989, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65520, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2658, stateTaxDue: makeFromInt 2689 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40604, stateTaxDue: makeFromInt 10051 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10068, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8166, itemizedDeductions: makeFromInt 5701, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18847, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23245, federalTaxDue: makeFromInt 297, stateTaxDue: makeFromInt 966 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91629, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26570, stateTaxDue: makeFromInt 9326 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66527, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10089, stateTaxDue: makeFromInt 7851 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7266, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28030, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49131, ordinaryIncomeNonSS: makeFromInt 15734, qualifiedIncome: makeFromInt 48359, itemizedDeductions: makeFromInt 23777, federalTaxDue: makeFromInt 10258, stateTaxDue: makeFromInt 2812 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6359, ordinaryIncomeNonSS: makeFromInt 37540, qualifiedIncome: makeFromInt 18793, itemizedDeductions: makeFromInt 22958, federalTaxDue: makeFromInt 1220, stateTaxDue: makeFromInt 2142 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94541, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16774, stateTaxDue: makeFromInt 4597 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58275, qualifiedIncome: makeFromInt 62154, itemizedDeductions: makeFromInt 19780, federalTaxDue: makeFromInt 13519, stateTaxDue: makeFromInt 5566 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34670, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72608, itemizedDeductions: makeFromInt 17323, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2955 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74289, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20208, federalTaxDue: makeFromInt 28806, stateTaxDue: makeFromInt 8139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27696, federalTaxDue: makeFromInt 16059, stateTaxDue: makeFromInt 4166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9144, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19138, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15020, federalTaxDue: makeFromInt 44536, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36887, ordinaryIncomeNonSS: makeFromInt 69889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15708, stateTaxDue: makeFromInt 3136 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48785, ordinaryIncomeNonSS: makeFromInt 46749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22673, federalTaxDue: makeFromInt 7780, stateTaxDue: makeFromInt 2037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32788, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8383, itemizedDeductions: makeFromInt 9475, federalTaxDue: makeFromInt 32507, stateTaxDue: makeFromInt 7853 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115573, qualifiedIncome: makeFromInt 8334, itemizedDeductions: makeFromInt 18899, federalTaxDue: makeFromInt 17350, stateTaxDue: makeFromInt 5972 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40263, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52185, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39674, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35029, stateTaxDue: makeFromInt 7667 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11947, ordinaryIncomeNonSS: makeFromInt 137122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25621, federalTaxDue: makeFromInt 16592, stateTaxDue: makeFromInt 6181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45747, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11276, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23136, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30762, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1761 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67094, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5370, federalTaxDue: makeFromInt 4209, stateTaxDue: makeFromInt 2769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43856, ordinaryIncomeNonSS: makeFromInt 17035, qualifiedIncome: makeFromInt 71035, itemizedDeductions: makeFromInt 27389, federalTaxDue: makeFromInt 11406, stateTaxDue: makeFromInt 4267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8679, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21248, itemizedDeductions: makeFromInt 6899, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 859 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120238, qualifiedIncome: makeFromInt 51669, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27854, stateTaxDue: makeFromInt 8459 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55244, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26573, federalTaxDue: makeFromInt 2475, stateTaxDue: makeFromInt 2287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1024, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22750, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46738, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33596, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1061 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138828, qualifiedIncome: makeFromInt 66384, itemizedDeductions: makeFromInt 6198, federalTaxDue: makeFromInt 38968, stateTaxDue: makeFromInt 10241 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29011, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9842, federalTaxDue: makeFromInt 3844, stateTaxDue: makeFromInt 1196 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46937, ordinaryIncomeNonSS: makeFromInt 91243, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26858, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144549, qualifiedIncome: makeFromInt 55690, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29681, stateTaxDue: makeFromInt 9557 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2491, itemizedDeductions: makeFromInt 12170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76191, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5781, stateTaxDue: makeFromInt 3457 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115362, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16792, stateTaxDue: makeFromInt 5513 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140622, qualifiedIncome: makeFromInt 37141, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24945, stateTaxDue: makeFromInt 8313 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19262, ordinaryIncomeNonSS: makeFromInt 116731, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20656, stateTaxDue: makeFromInt 5504 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 298, ordinaryIncomeNonSS: makeFromInt 99649, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9130, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1183, ordinaryIncomeNonSS: makeFromInt 134539, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32216, stateTaxDue: makeFromInt 11309 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148216, qualifiedIncome: makeFromInt 43330, itemizedDeductions: makeFromInt 24058, federalTaxDue: makeFromInt 30472, stateTaxDue: makeFromInt 9249 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15753, ordinaryIncomeNonSS: makeFromInt 144799, qualifiedIncome: makeFromInt 65152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33363, stateTaxDue: makeFromInt 9923 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13081, ordinaryIncomeNonSS: makeFromInt 23303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 737, stateTaxDue: makeFromInt 833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22244, qualifiedIncome: makeFromInt 47250, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3000 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15583, ordinaryIncomeNonSS: makeFromInt 136817, qualifiedIncome: makeFromInt 62659, itemizedDeductions: makeFromInt 19850, federalTaxDue: makeFromInt 28762, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45990, itemizedDeductions: makeFromInt 305, federalTaxDue: makeFromInt 25737, stateTaxDue: makeFromInt 9325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16496, ordinaryIncomeNonSS: makeFromInt 143320, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2748, federalTaxDue: makeFromInt 34195, stateTaxDue: makeFromInt 7085 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136649, qualifiedIncome: makeFromInt 48292, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30946, stateTaxDue: makeFromInt 8779 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17047, ordinaryIncomeNonSS: makeFromInt 92432, qualifiedIncome: makeFromInt 46865, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18665, stateTaxDue: makeFromInt 6590 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18702, federalTaxDue: makeFromInt 4538, stateTaxDue: makeFromInt 2570 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25241, federalTaxDue: makeFromInt 6759, stateTaxDue: makeFromInt 1865 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64740, itemizedDeductions: makeFromInt 11300, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2562 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24313, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60235, itemizedDeductions: makeFromInt 5833, federalTaxDue: makeFromInt 4689, stateTaxDue: makeFromInt 2557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34907, ordinaryIncomeNonSS: makeFromInt 113312, qualifiedIncome: makeFromInt 51047, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22383, stateTaxDue: makeFromInt 7730 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35071, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82900, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11603, stateTaxDue: makeFromInt 3670 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23518, ordinaryIncomeNonSS: makeFromInt 106751, qualifiedIncome: makeFromInt 95282, itemizedDeductions: makeFromInt 29144, federalTaxDue: makeFromInt 30614, stateTaxDue: makeFromInt 9753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143732, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34132, stateTaxDue: makeFromInt 6780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15118, federalTaxDue: makeFromInt 34390, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31490, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4670, stateTaxDue: makeFromInt 2601 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96360, itemizedDeductions: makeFromInt 18093, federalTaxDue: makeFromInt 7760, stateTaxDue: makeFromInt 4363 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45821, ordinaryIncomeNonSS: makeFromInt 78161, qualifiedIncome: makeFromInt 54868, itemizedDeductions: makeFromInt 3610, federalTaxDue: makeFromInt 24797, stateTaxDue: makeFromInt 6336 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28680, ordinaryIncomeNonSS: makeFromInt 7945, qualifiedIncome: makeFromInt 60663, itemizedDeductions: makeFromInt 9767, federalTaxDue: makeFromInt 587, stateTaxDue: makeFromInt 2955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14520, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6048, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20818, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7955, ordinaryIncomeNonSS: makeFromInt 119509, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16233, stateTaxDue: makeFromInt 5521 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13810, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39479, ordinaryIncomeNonSS: makeFromInt 44827, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23129, federalTaxDue: makeFromInt 17279, stateTaxDue: makeFromInt 6835 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30368, ordinaryIncomeNonSS: makeFromInt 145095, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24199, stateTaxDue: makeFromInt 6747 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10284, qualifiedIncome: makeFromInt 81060, itemizedDeductions: makeFromInt 2992, federalTaxDue: makeFromInt 16946, stateTaxDue: makeFromInt 4189 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47139, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1518, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13079, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8353, ordinaryIncomeNonSS: makeFromInt 131565, qualifiedIncome: makeFromInt 36792, itemizedDeductions: makeFromInt 5083, federalTaxDue: makeFromInt 34484, stateTaxDue: makeFromInt 8362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33757, ordinaryIncomeNonSS: makeFromInt 136443, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17996, federalTaxDue: makeFromInt 33102, stateTaxDue: makeFromInt 6734 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12163, ordinaryIncomeNonSS: makeFromInt 139127, qualifiedIncome: makeFromInt 5935, itemizedDeductions: makeFromInt 2573, federalTaxDue: makeFromInt 22387, stateTaxDue: makeFromInt 6878 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69247, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9771, federalTaxDue: makeFromInt 13572, stateTaxDue: makeFromInt 7979 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14098, ordinaryIncomeNonSS: makeFromInt 114171, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24934, federalTaxDue: makeFromInt 29540, stateTaxDue: makeFromInt 10372 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107469, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8742, stateTaxDue: makeFromInt 4698 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19100, itemizedDeductions: makeFromInt 4223, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 280 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90314, itemizedDeductions: makeFromInt 18757, federalTaxDue: makeFromInt 38446, stateTaxDue: makeFromInt 11561 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47564, ordinaryIncomeNonSS: makeFromInt 72451, qualifiedIncome: makeFromInt 39072, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27606, stateTaxDue: makeFromInt 5463 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108527, qualifiedIncome: makeFromInt 68098, itemizedDeductions: makeFromInt 6434, federalTaxDue: makeFromInt 39067, stateTaxDue: makeFromInt 8661 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107380, qualifiedIncome: makeFromInt 49449, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21767, stateTaxDue: makeFromInt 7651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55644, itemizedDeductions: makeFromInt 10687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2389 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27828, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61231, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3907, stateTaxDue: makeFromInt 2607 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1729, stateTaxDue: makeFromInt 2098 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62775, qualifiedIncome: makeFromInt 87266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14705, stateTaxDue: makeFromInt 7203 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95962, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9224, stateTaxDue: makeFromInt 4423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124335, qualifiedIncome: makeFromInt 93540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38984, stateTaxDue: makeFromInt 10887 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53561, itemizedDeductions: makeFromInt 21690, federalTaxDue: makeFromInt 2496, stateTaxDue: makeFromInt 2303 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2315, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26888, stateTaxDue: makeFromInt 7141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42321, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3070, federalTaxDue: makeFromInt 11970, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23372, ordinaryIncomeNonSS: makeFromInt 127376, qualifiedIncome: makeFromInt 82430, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32205, stateTaxDue: makeFromInt 10251 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131627, qualifiedIncome: makeFromInt 95210, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34222, stateTaxDue: makeFromInt 10910 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75798, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1920, stateTaxDue: makeFromInt 3415 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16969, stateTaxDue: makeFromInt 5250 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9130, federalTaxDue: makeFromInt 39578, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27926, federalTaxDue: makeFromInt 35647, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34914, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11193, federalTaxDue: makeFromInt 43249, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14578, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29012, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10232, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98029, qualifiedIncome: makeFromInt 84511, itemizedDeductions: makeFromInt 7648, federalTaxDue: makeFromInt 37005, stateTaxDue: makeFromInt 8872 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72194, itemizedDeductions: makeFromInt 12312, federalTaxDue: makeFromInt 1379, stateTaxDue: makeFromInt 3035 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17877, itemizedDeductions: makeFromInt 15928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22625, ordinaryIncomeNonSS: makeFromInt 91576, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25732, stateTaxDue: makeFromInt 9322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19131, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49793, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14263, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21538, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5175 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27770, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83796, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3119, stateTaxDue: makeFromInt 3615 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122710, qualifiedIncome: makeFromInt 50271, itemizedDeductions: makeFromInt 16348, federalTaxDue: makeFromInt 17798, stateTaxDue: makeFromInt 7974 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1095, ordinaryIncomeNonSS: makeFromInt 83710, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7095, federalTaxDue: makeFromInt 6964, stateTaxDue: makeFromInt 3811 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30929, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12929, federalTaxDue: makeFromInt 9072, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11058, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120369, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17889, federalTaxDue: makeFromInt 15247, stateTaxDue: makeFromInt 5444 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71146, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2976 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24689, ordinaryIncomeNonSS: makeFromInt 70106, qualifiedIncome: makeFromInt 57666, itemizedDeductions: makeFromInt 14726, federalTaxDue: makeFromInt 11533, stateTaxDue: makeFromInt 5914 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133268, qualifiedIncome: makeFromInt 70018, itemizedDeductions: makeFromInt 25370, federalTaxDue: makeFromInt 30478, stateTaxDue: makeFromInt 9709 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47505, qualifiedIncome: makeFromInt 88545, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14354, stateTaxDue: makeFromInt 6348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1315, ordinaryIncomeNonSS: makeFromInt 3486, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17572, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44941, ordinaryIncomeNonSS: makeFromInt 133871, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16650, federalTaxDue: makeFromInt 39205, stateTaxDue: makeFromInt 11164 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72814, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7698, stateTaxDue: makeFromInt 3266 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117410, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42449, stateTaxDue: makeFromInt 10616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36996, ordinaryIncomeNonSS: makeFromInt 57139, qualifiedIncome: makeFromInt 48442, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10544, stateTaxDue: makeFromInt 4834 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34942, ordinaryIncomeNonSS: makeFromInt 69520, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29574, federalTaxDue: makeFromInt 25375, stateTaxDue: makeFromInt 8021 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1040, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3797, federalTaxDue: makeFromInt 16535, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35856, itemizedDeductions: makeFromInt 15621, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30696, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1015 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9593, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5995, federalTaxDue: makeFromInt 42027, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17712, ordinaryIncomeNonSS: makeFromInt 136621, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25972, stateTaxDue: makeFromInt 6743 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49116, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23860, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23657, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28761, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31341, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58694, itemizedDeductions: makeFromInt 18092, federalTaxDue: makeFromInt 764, stateTaxDue: makeFromInt 2360 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83862, qualifiedIncome: makeFromInt 15730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11210, stateTaxDue: makeFromInt 4686 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23020, ordinaryIncomeNonSS: makeFromInt 94929, qualifiedIncome: makeFromInt 33584, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19402, stateTaxDue: makeFromInt 6207 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47227, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70367, itemizedDeductions: makeFromInt 27951, federalTaxDue: makeFromInt 7866, stateTaxDue: makeFromInt 3364 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4430, itemizedDeductions: makeFromInt 25349, federalTaxDue: makeFromInt 17855, stateTaxDue: makeFromInt 7047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34599, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26326, stateTaxDue: makeFromInt 8855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37027, ordinaryIncomeNonSS: makeFromInt 115017, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42672, stateTaxDue: makeFromInt 10619 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17819, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7925, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106905, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20451, stateTaxDue: makeFromInt 4770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4916, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21938, itemizedDeductions: makeFromInt 27252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 894 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33772, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1264, federalTaxDue: makeFromInt 2144, stateTaxDue: makeFromInt 1234 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53730, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15573, stateTaxDue: makeFromInt 7312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27957, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1030 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19864, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41133, itemizedDeductions: makeFromInt 24027, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1633 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65006, qualifiedIncome: makeFromInt 18883, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3917, stateTaxDue: makeFromInt 3819 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44617, ordinaryIncomeNonSS: makeFromInt 39129, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7672, federalTaxDue: makeFromInt 23364, stateTaxDue: makeFromInt 6701 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41472, qualifiedIncome: makeFromInt 93, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6007, stateTaxDue: makeFromInt 1703 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15755, ordinaryIncomeNonSS: makeFromInt 78055, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26530, stateTaxDue: makeFromInt 8648 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32443, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68214, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33314, stateTaxDue: makeFromInt 10236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3339, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 496, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23729, ordinaryIncomeNonSS: makeFromInt 80449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11180, federalTaxDue: makeFromInt 8502, stateTaxDue: makeFromInt 3347 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26574, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20327, stateTaxDue: makeFromInt 8354 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29723, itemizedDeductions: makeFromInt 17437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12362, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 80 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21232, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41798, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21040, ordinaryIncomeNonSS: makeFromInt 67292, qualifiedIncome: makeFromInt 97382, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24758, stateTaxDue: makeFromInt 7779 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18873, ordinaryIncomeNonSS: makeFromInt 58382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 173, federalTaxDue: makeFromInt 11790, stateTaxDue: makeFromInt 2753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30479, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14600, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3832, federalTaxDue: makeFromInt 28611, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13814, ordinaryIncomeNonSS: makeFromInt 31487, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3293, stateTaxDue: makeFromInt 1259 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24352, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 835, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24636, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18919, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23499, itemizedDeductions: makeFromInt 1005, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15048, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56900, itemizedDeductions: makeFromInt 16394, federalTaxDue: makeFromInt 34369, stateTaxDue: makeFromInt 10001 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35587, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57293, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8390, stateTaxDue: makeFromInt 2698 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105170, qualifiedIncome: makeFromInt 85791, itemizedDeductions: makeFromInt 28179, federalTaxDue: makeFromInt 28697, stateTaxDue: makeFromInt 9073 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 732, stateTaxDue: makeFromInt 955 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43699, ordinaryIncomeNonSS: makeFromInt 27643, qualifiedIncome: makeFromInt 41871, itemizedDeductions: makeFromInt 14362, federalTaxDue: makeFromInt 10629, stateTaxDue: makeFromInt 3167 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32781, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1184 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42737, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3663, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3199, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125624, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4863, federalTaxDue: makeFromInt 17916, stateTaxDue: makeFromInt 5706 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4233, itemizedDeductions: makeFromInt 6378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40655, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25054, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91077, qualifiedIncome: makeFromInt 51364, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12854, stateTaxDue: makeFromInt 6647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47761, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 283, federalTaxDue: makeFromInt 4499, stateTaxDue: makeFromInt 2089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25954, ordinaryIncomeNonSS: makeFromInt 89784, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18921, stateTaxDue: makeFromInt 4232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48631, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43644, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2891, itemizedDeductions: makeFromInt 9288, federalTaxDue: makeFromInt 19112, stateTaxDue: makeFromInt 6970 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66337, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13109, federalTaxDue: makeFromInt 7569, stateTaxDue: makeFromInt 2926 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 507, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4575 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40748, itemizedDeductions: makeFromInt 1028, federalTaxDue: makeFromInt 52, stateTaxDue: makeFromInt 1782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50400, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15375, federalTaxDue: makeFromInt 5817, stateTaxDue: makeFromInt 2045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39430, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92191, itemizedDeductions: makeFromInt 27454, federalTaxDue: makeFromInt 8291, stateTaxDue: makeFromInt 4355 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139457, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21775, stateTaxDue: makeFromInt 6562 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10795, ordinaryIncomeNonSS: makeFromInt 146314, qualifiedIncome: makeFromInt 47873, itemizedDeductions: makeFromInt 10588, federalTaxDue: makeFromInt 35065, stateTaxDue: makeFromInt 9475 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37737, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25900, itemizedDeductions: makeFromInt 25514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95282, qualifiedIncome: makeFromInt 10382, itemizedDeductions: makeFromInt 9125, federalTaxDue: makeFromInt 8437, stateTaxDue: makeFromInt 4736 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44172, ordinaryIncomeNonSS: makeFromInt 86365, qualifiedIncome: makeFromInt 78534, itemizedDeductions: makeFromInt 28101, federalTaxDue: makeFromInt 26217, stateTaxDue: makeFromInt 7870 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142805, qualifiedIncome: makeFromInt 17852, itemizedDeductions: makeFromInt 20118, federalTaxDue: makeFromInt 19773, stateTaxDue: makeFromInt 7358 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6449, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27428, ordinaryIncomeNonSS: makeFromInt 64922, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9198, stateTaxDue: makeFromInt 2671 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149979, qualifiedIncome: makeFromInt 11420, itemizedDeductions: makeFromInt 20577, federalTaxDue: makeFromInt 20386, stateTaxDue: makeFromInt 7595 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24687, qualifiedIncome: makeFromInt 53767, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9985, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31922, ordinaryIncomeNonSS: makeFromInt 66518, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29691, federalTaxDue: makeFromInt 6699, stateTaxDue: makeFromInt 2964 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24416, federalTaxDue: makeFromInt 31689, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29958, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28932, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16759, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 48 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26935, ordinaryIncomeNonSS: makeFromInt 148300, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9139, federalTaxDue: makeFromInt 41712, stateTaxDue: makeFromInt 12040 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38344, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26343, itemizedDeductions: makeFromInt 20160, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 742 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24386, ordinaryIncomeNonSS: makeFromInt 26513, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13365, federalTaxDue: makeFromInt 11535, stateTaxDue: makeFromInt 5951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36726, qualifiedIncome: makeFromInt 72698, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17970, stateTaxDue: makeFromInt 5356 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45069, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 416, stateTaxDue: makeFromInt 1850 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22710, ordinaryIncomeNonSS: makeFromInt 26122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 698, stateTaxDue: makeFromInt 904 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23944, federalTaxDue: makeFromInt 21055, stateTaxDue: makeFromInt 6539 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3203, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14826, qualifiedIncome: makeFromInt 36019, itemizedDeductions: makeFromInt 29162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2224 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12808, federalTaxDue: makeFromInt 41708, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39658, ordinaryIncomeNonSS: makeFromInt 140480, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21663, stateTaxDue: makeFromInt 6549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43852, ordinaryIncomeNonSS: makeFromInt 136958, qualifiedIncome: makeFromInt 82276, itemizedDeductions: makeFromInt 15496, federalTaxDue: makeFromInt 46047, stateTaxDue: makeFromInt 10834 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16033, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39333, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1512 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34568, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1881, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66143, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10491, stateTaxDue: makeFromInt 2721 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25323, federalTaxDue: makeFromInt 8434, stateTaxDue: makeFromInt 3960 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40734, ordinaryIncomeNonSS: makeFromInt 40015, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14868, stateTaxDue: makeFromInt 6326 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92541, qualifiedIncome: makeFromInt 35149, itemizedDeductions: makeFromInt 18321, federalTaxDue: makeFromInt 13062, stateTaxDue: makeFromInt 5961 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23248, ordinaryIncomeNonSS: makeFromInt 43537, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26800, federalTaxDue: makeFromInt 4049, stateTaxDue: makeFromInt 1802 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127360, qualifiedIncome: makeFromInt 78478, itemizedDeductions: makeFromInt 160, federalTaxDue: makeFromInt 35490, stateTaxDue: makeFromInt 9950 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25292, ordinaryIncomeNonSS: makeFromInt 83194, qualifiedIncome: makeFromInt 26018, itemizedDeductions: makeFromInt 8806, federalTaxDue: makeFromInt 17379, stateTaxDue: makeFromInt 5172 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63385, itemizedDeductions: makeFromInt 11272, federalTaxDue: makeFromInt 3860, stateTaxDue: makeFromInt 2804 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35529, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99706, itemizedDeductions: makeFromInt 3117, federalTaxDue: makeFromInt 12684, stateTaxDue: makeFromInt 4530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106204, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24760, stateTaxDue: makeFromInt 5055 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8739, ordinaryIncomeNonSS: makeFromInt 73426, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6130, stateTaxDue: makeFromInt 3196 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2832, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89967, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4533, stateTaxDue: makeFromInt 3923 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46847, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1667 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45921, ordinaryIncomeNonSS: makeFromInt 15493, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20718, federalTaxDue: makeFromInt 306, stateTaxDue: makeFromInt 520 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16066, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24177, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46611, qualifiedIncome: makeFromInt 68048, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12556, stateTaxDue: makeFromInt 5258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27377, qualifiedIncome: makeFromInt 96347, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5839, stateTaxDue: makeFromInt 5861 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20632, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12031, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51393, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4274, stateTaxDue: makeFromInt 1968 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24638, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27216, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28977, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 6039 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28637, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22524, stateTaxDue: makeFromInt 8457 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3408, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19475, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23285, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5457, ordinaryIncomeNonSS: makeFromInt 130683, qualifiedIncome: makeFromInt 48164, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35253, stateTaxDue: makeFromInt 8897 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47285, ordinaryIncomeNonSS: makeFromInt 31578, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1417, stateTaxDue: makeFromInt 958 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16733, federalTaxDue: makeFromInt 35227, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3024, itemizedDeductions: makeFromInt 6430, federalTaxDue: makeFromInt 16795, stateTaxDue: makeFromInt 7176 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33881, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45891, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67869, itemizedDeductions: makeFromInt 8062, federalTaxDue: makeFromInt 7568, stateTaxDue: makeFromInt 2882 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 201 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99558, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12779, federalTaxDue: makeFromInt 15444, stateTaxDue: makeFromInt 4303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30627, itemizedDeductions: makeFromInt 19714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 909 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81782, qualifiedIncome: makeFromInt 2459, itemizedDeductions: makeFromInt 15415, federalTaxDue: makeFromInt 5660, stateTaxDue: makeFromInt 3737 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2930, ordinaryIncomeNonSS: makeFromInt 106631, qualifiedIncome: makeFromInt 16186, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12948, stateTaxDue: makeFromInt 5611 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22210, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25114, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34446, itemizedDeductions: makeFromInt 18494, federalTaxDue: makeFromInt 30177, stateTaxDue: makeFromInt 8967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85461, qualifiedIncome: makeFromInt 41689, itemizedDeductions: makeFromInt 17856, federalTaxDue: makeFromInt 9043, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131250, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17858, stateTaxDue: makeFromInt 5988 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115667, qualifiedIncome: makeFromInt 92173, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37629, stateTaxDue: makeFromInt 9937 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9225, ordinaryIncomeNonSS: makeFromInt 128923, qualifiedIncome: makeFromInt 42021, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27477, stateTaxDue: makeFromInt 8087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112224, qualifiedIncome: makeFromInt 1239, itemizedDeductions: makeFromInt 27667, federalTaxDue: makeFromInt 27665, stateTaxDue: makeFromInt 5562 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15504, ordinaryIncomeNonSS: makeFromInt 52970, qualifiedIncome: makeFromInt 79088, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10521, stateTaxDue: makeFromInt 6307 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47181, ordinaryIncomeNonSS: makeFromInt 112401, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26909, stateTaxDue: makeFromInt 5365 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13912, qualifiedIncome: makeFromInt 69048, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3673 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27004, ordinaryIncomeNonSS: makeFromInt 122267, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20695, stateTaxDue: makeFromInt 5858 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4046, ordinaryIncomeNonSS: makeFromInt 134912, qualifiedIncome: makeFromInt 55812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32284, stateTaxDue: makeFromInt 9281 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23522, ordinaryIncomeNonSS: makeFromInt 42646, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15354, stateTaxDue: makeFromInt 6928 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38658, ordinaryIncomeNonSS: makeFromInt 149165, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34470, stateTaxDue: makeFromInt 7383 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7647, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28420, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85811, itemizedDeductions: makeFromInt 29521, federalTaxDue: makeFromInt 4502, stateTaxDue: makeFromInt 3916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28029, ordinaryIncomeNonSS: makeFromInt 146224, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26644, federalTaxDue: makeFromInt 22331, stateTaxDue: makeFromInt 6805 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40378, ordinaryIncomeNonSS: makeFromInt 139480, qualifiedIncome: makeFromInt 64033, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36942, stateTaxDue: makeFromInt 9601 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95167, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7581, stateTaxDue: makeFromInt 4503 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143144, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 789, federalTaxDue: makeFromInt 19980, stateTaxDue: makeFromInt 6782 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60496, itemizedDeductions: makeFromInt 21456, federalTaxDue: makeFromInt 2021, stateTaxDue: makeFromInt 2770 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17043, ordinaryIncomeNonSS: makeFromInt 49590, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6676, federalTaxDue: makeFromInt 4002, stateTaxDue: makeFromInt 1805 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6007, itemizedDeductions: makeFromInt 14415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39781, qualifiedIncome: makeFromInt 1902, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 978, stateTaxDue: makeFromInt 1509 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1162, federalTaxDue: makeFromInt 28999, stateTaxDue: makeFromInt 10952 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51196, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1885 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3830, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41279, ordinaryIncomeNonSS: makeFromInt 84430, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19875, federalTaxDue: makeFromInt 15944, stateTaxDue: makeFromInt 3847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19591, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12433, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70116, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24314, federalTaxDue: makeFromInt 20935, stateTaxDue: makeFromInt 8369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7822, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36465, ordinaryIncomeNonSS: makeFromInt 55413, qualifiedIncome: makeFromInt 97594, itemizedDeductions: makeFromInt 28704, federalTaxDue: makeFromInt 15095, stateTaxDue: makeFromInt 7175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15300, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 434 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27435, ordinaryIncomeNonSS: makeFromInt 111745, qualifiedIncome: makeFromInt 53966, itemizedDeductions: makeFromInt 7900, federalTaxDue: makeFromInt 31013, stateTaxDue: makeFromInt 8023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41526, itemizedDeductions: makeFromInt 26958, federalTaxDue: makeFromInt 581, stateTaxDue: makeFromInt 1893 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76250, qualifiedIncome: makeFromInt 95848, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22529, stateTaxDue: makeFromInt 8349 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31480, itemizedDeductions: makeFromInt 5299, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27223, ordinaryIncomeNonSS: makeFromInt 123591, qualifiedIncome: makeFromInt 69504, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34488, stateTaxDue: makeFromInt 9399 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3020, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22964, ordinaryIncomeNonSS: makeFromInt 132320, qualifiedIncome: makeFromInt 37997, itemizedDeductions: makeFromInt 28441, federalTaxDue: makeFromInt 29789, stateTaxDue: makeFromInt 8339 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36639, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82622, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4767, stateTaxDue: makeFromInt 3756 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8276, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12402, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48392, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3032, federalTaxDue: makeFromInt 3488, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5625, ordinaryIncomeNonSS: makeFromInt 49149, qualifiedIncome: makeFromInt 56046, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2318, stateTaxDue: makeFromInt 4585 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31098, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26658, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 707 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20443, ordinaryIncomeNonSS: makeFromInt 59565, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9391, federalTaxDue: makeFromInt 5972, stateTaxDue: makeFromInt 2385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18239, ordinaryIncomeNonSS: makeFromInt 28371, qualifiedIncome: makeFromInt 23438, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2434, stateTaxDue: makeFromInt 2015 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48356, ordinaryIncomeNonSS: makeFromInt 23057, qualifiedIncome: makeFromInt 10691, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2738, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43188, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149419, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5540, federalTaxDue: makeFromInt 43493, stateTaxDue: makeFromInt 12374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141915, qualifiedIncome: makeFromInt 86770, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31824, stateTaxDue: makeFromInt 11010 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23023, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98013, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4137, stateTaxDue: makeFromInt 4550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24951, ordinaryIncomeNonSS: makeFromInt 98738, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38724, stateTaxDue: makeFromInt 9911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48915, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98063, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9966, stateTaxDue: makeFromInt 4552 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26599, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19262, federalTaxDue: makeFromInt 29846, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43833, ordinaryIncomeNonSS: makeFromInt 24352, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21854, stateTaxDue: makeFromInt 6118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72263, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13715, federalTaxDue: makeFromInt 15971, stateTaxDue: makeFromInt 3257 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94349, qualifiedIncome: makeFromInt 30441, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12424, stateTaxDue: makeFromInt 5865 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67882, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5523, federalTaxDue: makeFromInt 29975, stateTaxDue: makeFromInt 8113 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48965, itemizedDeductions: makeFromInt 8494, federalTaxDue: makeFromInt 41762, stateTaxDue: makeFromInt 9573 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43154, qualifiedIncome: makeFromInt 49537, itemizedDeductions: makeFromInt 24370, federalTaxDue: makeFromInt 12283, stateTaxDue: makeFromInt 4278 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6654, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8563, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47895, ordinaryIncomeNonSS: makeFromInt 35731, qualifiedIncome: makeFromInt 65087, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17168, stateTaxDue: makeFromInt 4795 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11279, ordinaryIncomeNonSS: makeFromInt 124345, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12276, federalTaxDue: makeFromInt 30303, stateTaxDue: makeFromInt 10742 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103784, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17162, stateTaxDue: makeFromInt 4514 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22514, ordinaryIncomeNonSS: makeFromInt 37521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2752, stateTaxDue: makeFromInt 1421 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25617, qualifiedIncome: makeFromInt 28242, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 762, stateTaxDue: makeFromInt 2196 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68554, itemizedDeductions: makeFromInt 26402, federalTaxDue: makeFromInt 3724, stateTaxDue: makeFromInt 2917 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30903, qualifiedIncome: makeFromInt 76667, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6111, stateTaxDue: makeFromInt 5004 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48109, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45008, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1737, itemizedDeductions: makeFromInt 21914, federalTaxDue: makeFromInt 33225, stateTaxDue: makeFromInt 7332 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38470, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23535, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19985, itemizedDeductions: makeFromInt 17237, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 464 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117530, qualifiedIncome: makeFromInt 32124, itemizedDeductions: makeFromInt 7003, federalTaxDue: makeFromInt 22096, stateTaxDue: makeFromInt 7228 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83180, itemizedDeductions: makeFromInt 7925, federalTaxDue: makeFromInt 5423, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19366, itemizedDeductions: makeFromInt 11394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 559 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1818, ordinaryIncomeNonSS: makeFromInt 39748, qualifiedIncome: makeFromInt 57969, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11867, stateTaxDue: makeFromInt 4759 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120282, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10021, federalTaxDue: makeFromInt 17446, stateTaxDue: makeFromInt 5584 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40697, ordinaryIncomeNonSS: makeFromInt 77363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13338, stateTaxDue: makeFromInt 3413 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87898, qualifiedIncome: makeFromInt 17660, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10408, stateTaxDue: makeFromInt 5037 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40533, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5055, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11290, itemizedDeductions: makeFromInt 7136, federalTaxDue: makeFromInt 27178, stateTaxDue: makeFromInt 7675 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34281, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14403, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103220, qualifiedIncome: makeFromInt 11862, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7018, stateTaxDue: makeFromInt 5216 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46806, ordinaryIncomeNonSS: makeFromInt 128038, qualifiedIncome: makeFromInt 47188, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32492, stateTaxDue: makeFromInt 8186 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40827, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22465, stateTaxDue: makeFromInt 9066 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42304, ordinaryIncomeNonSS: makeFromInt 102217, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3341, federalTaxDue: makeFromInt 20928, stateTaxDue: makeFromInt 4736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9899, ordinaryIncomeNonSS: makeFromInt 67486, qualifiedIncome: makeFromInt 31129, itemizedDeductions: makeFromInt 6738, federalTaxDue: makeFromInt 10352, stateTaxDue: makeFromInt 4479 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33487, ordinaryIncomeNonSS: makeFromInt 63718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10746, federalTaxDue: makeFromInt 7490, stateTaxDue: makeFromInt 2711 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59016, itemizedDeductions: makeFromInt 20961, federalTaxDue: makeFromInt 2792, stateTaxDue: makeFromInt 2496 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59693, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2313, federalTaxDue: makeFromInt 4445, stateTaxDue: makeFromInt 2610 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55878, qualifiedIncome: makeFromInt 49622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8233, stateTaxDue: makeFromInt 4820 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1886, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1029, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11761, ordinaryIncomeNonSS: makeFromInt 135030, qualifiedIncome: makeFromInt 92482, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44619, stateTaxDue: makeFromInt 11379 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113123, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15728, stateTaxDue: makeFromInt 5218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11083, federalTaxDue: makeFromInt 19128, stateTaxDue: makeFromInt 5300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11325, ordinaryIncomeNonSS: makeFromInt 44299, qualifiedIncome: makeFromInt 31630, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11410, stateTaxDue: makeFromInt 3648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9771, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13195, itemizedDeductions: makeFromInt 14404, federalTaxDue: makeFromInt 34174, stateTaxDue: makeFromInt 8099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30350, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1063 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39772, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76842, qualifiedIncome: makeFromInt 26306, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5534, stateTaxDue: makeFromInt 4682 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47059, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16007, federalTaxDue: makeFromInt 8376, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6421, ordinaryIncomeNonSS: makeFromInt 44368, qualifiedIncome: makeFromInt 4105, itemizedDeductions: makeFromInt 15077, federalTaxDue: makeFromInt 1512, stateTaxDue: makeFromInt 1921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23356, ordinaryIncomeNonSS: makeFromInt 45505, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9523, stateTaxDue: makeFromInt 2096 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20835, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38970, ordinaryIncomeNonSS: makeFromInt 99603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29180, stateTaxDue: makeFromInt 9305 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17283, ordinaryIncomeNonSS: makeFromInt 12468, qualifiedIncome: makeFromInt 63600, itemizedDeductions: makeFromInt 14096, federalTaxDue: makeFromInt 7086, stateTaxDue: makeFromInt 3451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22648, ordinaryIncomeNonSS: makeFromInt 59204, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8672, stateTaxDue: makeFromInt 2505 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19042, itemizedDeductions: makeFromInt 40, federalTaxDue: makeFromInt 25214, stateTaxDue: makeFromInt 7877 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27053, ordinaryIncomeNonSS: makeFromInt 110967, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16300, stateTaxDue: makeFromInt 5173 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35650, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43835, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43715, stateTaxDue: makeFromInt 9539 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43342, qualifiedIncome: makeFromInt 34762, itemizedDeductions: makeFromInt 9292, federalTaxDue: makeFromInt 1724, stateTaxDue: makeFromInt 3430 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83240, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17351, federalTaxDue: makeFromInt 35382, stateTaxDue: makeFromInt 8998 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23254, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8750, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46589, itemizedDeductions: makeFromInt 4459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1654 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5996, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107610, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8759, stateTaxDue: makeFromInt 4906 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21315, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35336, stateTaxDue: makeFromInt 8513 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82841, qualifiedIncome: makeFromInt 9059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12972, stateTaxDue: makeFromInt 4340 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13116, stateTaxDue: makeFromInt 5939 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17307, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55085, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35180, stateTaxDue: makeFromInt 10113 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14134, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110515, qualifiedIncome: makeFromInt 95481, itemizedDeductions: makeFromInt 8084, federalTaxDue: makeFromInt 21287, stateTaxDue: makeFromInt 9825 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11381, stateTaxDue: makeFromInt 4943 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36571, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36959, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 421, stateTaxDue: makeFromInt 1321 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5987, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33415, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21635, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35694, stateTaxDue: makeFromInt 8127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6468, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148711, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28163, federalTaxDue: makeFromInt 34913, stateTaxDue: makeFromInt 7238 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41895, ordinaryIncomeNonSS: makeFromInt 29492, qualifiedIncome: makeFromInt 81090, itemizedDeductions: makeFromInt 7417, federalTaxDue: makeFromInt 21311, stateTaxDue: makeFromInt 5415 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8443, ordinaryIncomeNonSS: makeFromInt 44284, qualifiedIncome: makeFromInt 83255, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7594, stateTaxDue: makeFromInt 5794 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2044, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26521, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131006, qualifiedIncome: makeFromInt 41078, itemizedDeductions: makeFromInt 15742, federalTaxDue: makeFromInt 24863, stateTaxDue: makeFromInt 8029 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15200, stateTaxDue: makeFromInt 6114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 859, stateTaxDue: makeFromInt 1532 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2143, qualifiedIncome: makeFromInt 8370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 108 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21842, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15360, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23440, stateTaxDue: makeFromInt 7893 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37946, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12490, ordinaryIncomeNonSS: makeFromInt 122369, qualifiedIncome: makeFromInt 43917, itemizedDeductions: makeFromInt 13193, federalTaxDue: makeFromInt 32032, stateTaxDue: makeFromInt 8256 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4503, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30525, itemizedDeductions: makeFromInt 2776, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1051 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27891, ordinaryIncomeNonSS: makeFromInt 140470, qualifiedIncome: makeFromInt 1641, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30250, stateTaxDue: makeFromInt 6851 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45004, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9259, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46578, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30537, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96637, qualifiedIncome: makeFromInt 45422, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14832, stateTaxDue: makeFromInt 6528 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3008, ordinaryIncomeNonSS: makeFromInt 90018, qualifiedIncome: makeFromInt 14744, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11286, stateTaxDue: makeFromInt 4783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44132, itemizedDeductions: makeFromInt 23459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1700 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122244, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21521, stateTaxDue: makeFromInt 5888 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34290, ordinaryIncomeNonSS: makeFromInt 55490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29912, federalTaxDue: makeFromInt 7092, stateTaxDue: makeFromInt 2520 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20911, qualifiedIncome: makeFromInt 3342, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 538 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71105, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3994, federalTaxDue: makeFromInt 4811, stateTaxDue: makeFromInt 2974 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48810, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73410, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43790, stateTaxDue: makeFromInt 10716 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49415, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4969, itemizedDeductions: makeFromInt 21771, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54088, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4387, stateTaxDue: makeFromInt 2449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32991, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32520, itemizedDeductions: makeFromInt 13034, federalTaxDue: makeFromInt 36932, stateTaxDue: makeFromInt 8860 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10131, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37965, ordinaryIncomeNonSS: makeFromInt 55091, qualifiedIncome: makeFromInt 67339, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17432, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5914, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4953 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72590, qualifiedIncome: makeFromInt 90495, itemizedDeductions: makeFromInt 10365, federalTaxDue: makeFromInt 10300, stateTaxDue: makeFromInt 7679 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41954, ordinaryIncomeNonSS: makeFromInt 38719, qualifiedIncome: makeFromInt 94641, itemizedDeductions: makeFromInt 25996, federalTaxDue: makeFromInt 17479, stateTaxDue: makeFromInt 6093 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17233, ordinaryIncomeNonSS: makeFromInt 96619, qualifiedIncome: makeFromInt 13547, itemizedDeductions: makeFromInt 22023, federalTaxDue: makeFromInt 14873, stateTaxDue: makeFromInt 5170 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 568, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94748, itemizedDeductions: makeFromInt 20543, federalTaxDue: makeFromInt 2917, stateTaxDue: makeFromInt 4383 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27694, ordinaryIncomeNonSS: makeFromInt 76237, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14581, federalTaxDue: makeFromInt 8809, stateTaxDue: makeFromInt 3235 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93358, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1712, stateTaxDue: makeFromInt 3993 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64244, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18508, federalTaxDue: makeFromInt 15198, stateTaxDue: makeFromInt 2757 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18197, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27224, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80800, qualifiedIncome: makeFromInt 72743, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20099, stateTaxDue: makeFromInt 7422 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4966, federalTaxDue: makeFromInt 27409, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38285, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5102, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27133, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72624, qualifiedIncome: makeFromInt 12047, itemizedDeductions: makeFromInt 13360, federalTaxDue: makeFromInt 5522, stateTaxDue: makeFromInt 3859 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61879, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2419 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24714, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55169, itemizedDeductions: makeFromInt 21628, federalTaxDue: makeFromInt 36462, stateTaxDue: makeFromInt 9683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34898, stateTaxDue: makeFromInt 9457 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26071, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32114, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 975 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31667, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28461, federalTaxDue: makeFromInt 28268, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64918, itemizedDeductions: makeFromInt 24211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2771 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92389, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49996, stateTaxDue: makeFromInt 12015 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85684, itemizedDeductions: makeFromInt 12147, federalTaxDue: makeFromInt 12977, stateTaxDue: makeFromInt 4145 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6842, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22472, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54239, itemizedDeductions: makeFromInt 21405, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2317 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13663, ordinaryIncomeNonSS: makeFromInt 119957, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26991, federalTaxDue: makeFromInt 33142, stateTaxDue: makeFromInt 10543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140823, qualifiedIncome: makeFromInt 83205, itemizedDeductions: makeFromInt 19880, federalTaxDue: makeFromInt 29131, stateTaxDue: makeFromInt 10773 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23585, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8327, federalTaxDue: makeFromInt 10390, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9982, ordinaryIncomeNonSS: makeFromInt 141761, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16402, federalTaxDue: makeFromInt 23926, stateTaxDue: makeFromInt 6781 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58728, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2681, federalTaxDue: makeFromInt 10382, stateTaxDue: makeFromInt 2361 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15673, federalTaxDue: makeFromInt 24047, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15628, qualifiedIncome: makeFromInt 81446, itemizedDeductions: makeFromInt 6681, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 4502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6294, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7638, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26893, stateTaxDue: makeFromInt 7489 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1273, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2098, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24725, stateTaxDue: makeFromInt 7206 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43089, itemizedDeductions: makeFromInt 18180, federalTaxDue: makeFromInt 463, stateTaxDue: makeFromInt 1699 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67241, qualifiedIncome: makeFromInt 55740, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10296, stateTaxDue: makeFromInt 5774 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22531, ordinaryIncomeNonSS: makeFromInt 146981, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28406, federalTaxDue: makeFromInt 39403, stateTaxDue: makeFromInt 11974 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119052, qualifiedIncome: makeFromInt 6391, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12378, stateTaxDue: makeFromInt 5597 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143623, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19159, federalTaxDue: makeFromInt 24288, stateTaxDue: makeFromInt 6506 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10192, ordinaryIncomeNonSS: makeFromInt 43341, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10253, stateTaxDue: makeFromInt 6592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7999, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2390, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146459, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39912, stateTaxDue: makeFromInt 11848 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25621, itemizedDeductions: makeFromInt 14348, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 826 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27904, ordinaryIncomeNonSS: makeFromInt 145934, qualifiedIncome: makeFromInt 98163, itemizedDeductions: makeFromInt 3473, federalTaxDue: makeFromInt 47761, stateTaxDue: makeFromInt 12021 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5721, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1501, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49474, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18552, federalTaxDue: makeFromInt 15148, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4984, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21889, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4672, ordinaryIncomeNonSS: makeFromInt 30691, qualifiedIncome: makeFromInt 78009, itemizedDeductions: makeFromInt 21985, federalTaxDue: makeFromInt 1634, stateTaxDue: makeFromInt 4960 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8750, ordinaryIncomeNonSS: makeFromInt 10749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7069, ordinaryIncomeNonSS: makeFromInt 38491, qualifiedIncome: makeFromInt 12960, itemizedDeductions: makeFromInt 5642, federalTaxDue: makeFromInt 2147, stateTaxDue: makeFromInt 1998 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23945, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92797, itemizedDeductions: makeFromInt 19943, federalTaxDue: makeFromInt 43061, stateTaxDue: makeFromInt 11885 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29318, ordinaryIncomeNonSS: makeFromInt 87594, qualifiedIncome: makeFromInt 99949, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26344, stateTaxDue: makeFromInt 9116 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85998, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5846, stateTaxDue: makeFromInt 3845 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31364, qualifiedIncome: makeFromInt 72370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3284, stateTaxDue: makeFromInt 4612 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7165, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55180, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2184 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56772, itemizedDeductions: makeFromInt 11160, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2264 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128919, qualifiedIncome: makeFromInt 66647, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31539, stateTaxDue: makeFromInt 9523 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43924, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1635, stateTaxDue: makeFromInt 1741 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5832, stateTaxDue: makeFromInt 3679 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8097, ordinaryIncomeNonSS: makeFromInt 23828, qualifiedIncome: makeFromInt 28072, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 151, stateTaxDue: makeFromInt 1920 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12719, federalTaxDue: makeFromInt 10959, stateTaxDue: makeFromInt 5271 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20228, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 82, stateTaxDue: makeFromInt 336 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138921, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15680, stateTaxDue: makeFromInt 6369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48935, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12593, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105606, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3261, federalTaxDue: makeFromInt 24072, stateTaxDue: makeFromInt 9605 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30220, ordinaryIncomeNonSS: makeFromInt 141411, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2702, federalTaxDue: makeFromInt 23361, stateTaxDue: makeFromInt 6559 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10593, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73153, itemizedDeductions: makeFromInt 11831, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3282 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65223, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5083, stateTaxDue: makeFromInt 2686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87976, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11128, stateTaxDue: makeFromInt 4058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2388, federalTaxDue: makeFromInt 36224, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47246, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4076, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82066, qualifiedIncome: makeFromInt 6819, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13061, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14343, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79691, itemizedDeductions: makeFromInt 15123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3510 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22932, ordinaryIncomeNonSS: makeFromInt 9803, qualifiedIncome: makeFromInt 72820, itemizedDeductions: makeFromInt 20165, federalTaxDue: makeFromInt 5132, stateTaxDue: makeFromInt 3756 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21461, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3658, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2694, ordinaryIncomeNonSS: makeFromInt 116675, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14435, federalTaxDue: makeFromInt 15367, stateTaxDue: makeFromInt 5400 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42748, ordinaryIncomeNonSS: makeFromInt 2577, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 297, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9266, ordinaryIncomeNonSS: makeFromInt 42084, qualifiedIncome: makeFromInt 97482, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10231, stateTaxDue: makeFromInt 6403 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56765, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13250, stateTaxDue: makeFromInt 2583 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11701, stateTaxDue: makeFromInt 4302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48017, itemizedDeductions: makeFromInt 56, federalTaxDue: makeFromInt 1555, stateTaxDue: makeFromInt 2021 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22880, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123300, qualifiedIncome: makeFromInt 6220, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21060, stateTaxDue: makeFromInt 6177 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11372, ordinaryIncomeNonSS: makeFromInt 4487, qualifiedIncome: makeFromInt 32944, itemizedDeductions: makeFromInt 1389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24817, ordinaryIncomeNonSS: makeFromInt 45054, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3074, federalTaxDue: makeFromInt 7497, stateTaxDue: makeFromInt 1951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48493, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24973, itemizedDeductions: makeFromInt 9455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33586, itemizedDeductions: makeFromInt 3508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1366 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17145, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27426, itemizedDeductions: makeFromInt 22796, federalTaxDue: makeFromInt 30476, stateTaxDue: makeFromInt 8496 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38899, ordinaryIncomeNonSS: makeFromInt 14282, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6108, federalTaxDue: makeFromInt 18389, stateTaxDue: makeFromInt 5347 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30407, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25557, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42331, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50944, itemizedDeductions: makeFromInt 15017, federalTaxDue: makeFromInt 39973, stateTaxDue: makeFromInt 9672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25351, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4713, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6197, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46669, ordinaryIncomeNonSS: makeFromInt 85452, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1714, federalTaxDue: makeFromInt 20637, stateTaxDue: makeFromInt 3930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66308, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4299, stateTaxDue: makeFromInt 3157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48118, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64803, itemizedDeductions: makeFromInt 23120, federalTaxDue: makeFromInt 42550, stateTaxDue: makeFromInt 10506 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25858, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 666 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 641, ordinaryIncomeNonSS: makeFromInt 137550, qualifiedIncome: makeFromInt 9745, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14965, stateTaxDue: makeFromInt 6859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46226, itemizedDeductions: makeFromInt 7209, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22593, ordinaryIncomeNonSS: makeFromInt 79778, qualifiedIncome: makeFromInt 62812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21547, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15308, qualifiedIncome: makeFromInt 51308, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 136, stateTaxDue: makeFromInt 2847 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26329, federalTaxDue: makeFromInt 21995, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2277, stateTaxDue: makeFromInt 4166 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34716, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34488, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22859, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32476, ordinaryIncomeNonSS: makeFromInt 49969, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 54, federalTaxDue: makeFromInt 21055, stateTaxDue: makeFromInt 7200 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45659, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50190, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6610, stateTaxDue: makeFromInt 2710 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36709, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42699, itemizedDeductions: makeFromInt 15855, federalTaxDue: makeFromInt 2088, stateTaxDue: makeFromInt 1680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53043, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 396, stateTaxDue: makeFromInt 2358 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16942, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73442, itemizedDeductions: makeFromInt 22825, federalTaxDue: makeFromInt 30525, stateTaxDue: makeFromInt 10497 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9945, ordinaryIncomeNonSS: makeFromInt 4372, qualifiedIncome: makeFromInt 75717, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1908, stateTaxDue: makeFromInt 3429 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46556, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28609, stateTaxDue: makeFromInt 9453 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26171, ordinaryIncomeNonSS: makeFromInt 143422, qualifiedIncome: makeFromInt 19505, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28311, stateTaxDue: makeFromInt 7771 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9063, ordinaryIncomeNonSS: makeFromInt 60913, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9333, federalTaxDue: makeFromInt 4080, stateTaxDue: makeFromInt 2371 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47110, ordinaryIncomeNonSS: makeFromInt 51003, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6696, stateTaxDue: makeFromInt 1948 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6444, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17373, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126226, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26337, stateTaxDue: makeFromInt 6056 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42614, ordinaryIncomeNonSS: makeFromInt 46983, qualifiedIncome: makeFromInt 50218, itemizedDeductions: makeFromInt 25512, federalTaxDue: makeFromInt 10543, stateTaxDue: makeFromInt 4406 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64901, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4794, stateTaxDue: makeFromInt 2790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6160, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143995, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1799, federalTaxDue: makeFromInt 17357, stateTaxDue: makeFromInt 6725 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89705, qualifiedIncome: makeFromInt 12707, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6754, stateTaxDue: makeFromInt 4646 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41115, ordinaryIncomeNonSS: makeFromInt 1854, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46564, ordinaryIncomeNonSS: makeFromInt 110983, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9699, federalTaxDue: makeFromInt 21760, stateTaxDue: makeFromInt 4974 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24396, ordinaryIncomeNonSS: makeFromInt 48547, qualifiedIncome: makeFromInt 114, itemizedDeductions: makeFromInt 8556, federalTaxDue: makeFromInt 5596, stateTaxDue: makeFromInt 1858 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21554, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126655, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16317, stateTaxDue: makeFromInt 6078 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28261, itemizedDeductions: makeFromInt 29685, federalTaxDue: makeFromInt 24848, stateTaxDue: makeFromInt 8643 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6807, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33354, ordinaryIncomeNonSS: makeFromInt 61388, qualifiedIncome: makeFromInt 53550, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19187, stateTaxDue: makeFromInt 5492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25981, ordinaryIncomeNonSS: makeFromInt 116196, qualifiedIncome: makeFromInt 64426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33985, stateTaxDue: makeFromInt 8783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36229, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17532, qualifiedIncome: makeFromInt 4214, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 553, stateTaxDue: makeFromInt 885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 332, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15359, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 393 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25845, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41156, itemizedDeductions: makeFromInt 8928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17103, ordinaryIncomeNonSS: makeFromInt 287, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4564 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5363, stateTaxDue: makeFromInt 2936 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89826, itemizedDeductions: makeFromInt 20306, federalTaxDue: makeFromInt 6420, stateTaxDue: makeFromInt 4236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17311, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36285, ordinaryIncomeNonSS: makeFromInt 137710, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44523, stateTaxDue: makeFromInt 11431 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22394, federalTaxDue: makeFromInt 8112, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13613, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133001, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11286, federalTaxDue: makeFromInt 32428, stateTaxDue: makeFromInt 6195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48957, ordinaryIncomeNonSS: makeFromInt 117825, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34782, stateTaxDue: makeFromInt 5785 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43610, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8774, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45624, ordinaryIncomeNonSS: makeFromInt 139738, qualifiedIncome: makeFromInt 37199, itemizedDeductions: makeFromInt 22335, federalTaxDue: makeFromInt 36899, stateTaxDue: makeFromInt 8592 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13418, ordinaryIncomeNonSS: makeFromInt 83437, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10563, stateTaxDue: makeFromInt 3705 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49553, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1763, stateTaxDue: makeFromInt 1903 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31387, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87039, itemizedDeductions: makeFromInt 23373, federalTaxDue: makeFromInt 5843, stateTaxDue: makeFromInt 3777 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23903, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12234, stateTaxDue: makeFromInt 6095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64990, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4101, stateTaxDue: makeFromInt 3090 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80500, qualifiedIncome: makeFromInt 14104, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9151, stateTaxDue: makeFromInt 4274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4060, ordinaryIncomeNonSS: makeFromInt 97126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9232, stateTaxDue: makeFromInt 4301 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88434, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40512, stateTaxDue: makeFromInt 11617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11038, ordinaryIncomeNonSS: makeFromInt 23404, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11317, ordinaryIncomeNonSS: makeFromInt 87202, qualifiedIncome: makeFromInt 63404, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24676, stateTaxDue: makeFromInt 7334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31480, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 318, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22886, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1632, ordinaryIncomeNonSS: makeFromInt 56751, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25061, federalTaxDue: makeFromInt 6912, stateTaxDue: makeFromInt 7342 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2524, stateTaxDue: makeFromInt 2463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2914, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1231, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57104, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33446, stateTaxDue: makeFromInt 10114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23559, federalTaxDue: makeFromInt 18090, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39997, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51586, itemizedDeductions: makeFromInt 6020, federalTaxDue: makeFromInt 33445, stateTaxDue: makeFromInt 9404 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1635, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56113, itemizedDeductions: makeFromInt 21469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118637, qualifiedIncome: makeFromInt 23793, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38826, stateTaxDue: makeFromInt 7040 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24264, ordinaryIncomeNonSS: makeFromInt 116610, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15870, stateTaxDue: makeFromInt 5156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65545, qualifiedIncome: makeFromInt 73537, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8257, stateTaxDue: makeFromInt 6644 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56385, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2810, stateTaxDue: makeFromInt 2447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25569, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24653, ordinaryIncomeNonSS: makeFromInt 36471, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1580, stateTaxDue: makeFromInt 1349 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46352, ordinaryIncomeNonSS: makeFromInt 128297, qualifiedIncome: makeFromInt 83246, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33571, stateTaxDue: makeFromInt 9902 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146317, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7332, federalTaxDue: makeFromInt 26283, stateTaxDue: makeFromInt 7034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45923, ordinaryIncomeNonSS: makeFromInt 86664, qualifiedIncome: makeFromInt 75620, itemizedDeductions: makeFromInt 24751, federalTaxDue: makeFromInt 31511, stateTaxDue: makeFromInt 8052 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33387, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41866, ordinaryIncomeNonSS: makeFromInt 81014, qualifiedIncome: makeFromInt 51739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18310, stateTaxDue: makeFromInt 6163 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32984, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79751, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36809, stateTaxDue: makeFromInt 10813 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18117, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138060, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23064, stateTaxDue: makeFromInt 6228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32978, ordinaryIncomeNonSS: makeFromInt 61894, qualifiedIncome: makeFromInt 34329, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10049, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21903, ordinaryIncomeNonSS: makeFromInt 77440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9181, federalTaxDue: makeFromInt 14463, stateTaxDue: makeFromInt 3521 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24819, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 367, stateTaxDue: makeFromInt 666 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45188, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6322, federalTaxDue: makeFromInt 16150, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12406, ordinaryIncomeNonSS: makeFromInt 44734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18171, stateTaxDue: makeFromInt 6782 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55229, itemizedDeductions: makeFromInt 22433, federalTaxDue: makeFromInt 562, stateTaxDue: makeFromInt 2286 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112111, qualifiedIncome: makeFromInt 18855, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18905, stateTaxDue: makeFromInt 6293 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99804, itemizedDeductions: makeFromInt 15957, federalTaxDue: makeFromInt 36596, stateTaxDue: makeFromInt 11915 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44216, itemizedDeductions: makeFromInt 24567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50064, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10115, stateTaxDue: makeFromInt 2329 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44363, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14399, itemizedDeductions: makeFromInt 14265, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 184 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16497, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 415 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124413, qualifiedIncome: makeFromInt 8739, itemizedDeductions: makeFromInt 20841, federalTaxDue: makeFromInt 24309, stateTaxDue: makeFromInt 6138 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29255, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3168, ordinaryIncomeNonSS: makeFromInt 79407, qualifiedIncome: makeFromInt 51636, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10470, stateTaxDue: makeFromInt 6077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8711, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26243, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13214, ordinaryIncomeNonSS: makeFromInt 9250, qualifiedIncome: makeFromInt 7027, itemizedDeductions: makeFromInt 4904, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 177 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97418, itemizedDeductions: makeFromInt 7013, federalTaxDue: makeFromInt 39493, stateTaxDue: makeFromInt 12170 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27465, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9645, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13304, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25233, itemizedDeductions: makeFromInt 14063, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 838 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20150, ordinaryIncomeNonSS: makeFromInt 121357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17635, federalTaxDue: makeFromInt 21814, stateTaxDue: makeFromInt 5842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78123, qualifiedIncome: makeFromInt 64478, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16021, stateTaxDue: makeFromInt 6722 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44813, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10841, stateTaxDue: makeFromInt 1939 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13741, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8377, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41660, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40140, stateTaxDue: makeFromInt 8299 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43985, ordinaryIncomeNonSS: makeFromInt 40857, qualifiedIncome: makeFromInt 51106, itemizedDeductions: makeFromInt 14014, federalTaxDue: makeFromInt 14344, stateTaxDue: makeFromInt 4223 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9279, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27699, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35607, ordinaryIncomeNonSS: makeFromInt 35965, qualifiedIncome: makeFromInt 85084, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17758, stateTaxDue: makeFromInt 5827 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36849, ordinaryIncomeNonSS: makeFromInt 102398, qualifiedIncome: makeFromInt 12627, itemizedDeductions: makeFromInt 6969, federalTaxDue: makeFromInt 29287, stateTaxDue: makeFromInt 5642 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55219, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4657, stateTaxDue: makeFromInt 2306 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111350, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22549, stateTaxDue: makeFromInt 5193 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131074, qualifiedIncome: makeFromInt 72239, itemizedDeductions: makeFromInt 21698, federalTaxDue: makeFromInt 28710, stateTaxDue: makeFromInt 9920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19841, ordinaryIncomeNonSS: makeFromInt 86313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10395, stateTaxDue: makeFromInt 3741 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78561, itemizedDeductions: makeFromInt 16386, federalTaxDue: makeFromInt 6092, stateTaxDue: makeFromInt 3578 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40025, qualifiedIncome: makeFromInt 26466, itemizedDeductions: makeFromInt 3382, federalTaxDue: makeFromInt 2324, stateTaxDue: makeFromInt 2812 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146873, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21092, stateTaxDue: makeFromInt 7089 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146894, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21096, federalTaxDue: makeFromInt 15658, stateTaxDue: makeFromInt 6870 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17988, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3137, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10482, qualifiedIncome: makeFromInt 73914, itemizedDeductions: makeFromInt 2604, federalTaxDue: makeFromInt 10000, stateTaxDue: makeFromInt 3645 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11271, ordinaryIncomeNonSS: makeFromInt 7944, qualifiedIncome: makeFromInt 43884, itemizedDeductions: makeFromInt 10625, federalTaxDue: makeFromInt 1341, stateTaxDue: makeFromInt 2136 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28981, ordinaryIncomeNonSS: makeFromInt 83219, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20338, stateTaxDue: makeFromInt 4020 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19575, federalTaxDue: makeFromInt 34545, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34155, ordinaryIncomeNonSS: makeFromInt 80802, qualifiedIncome: makeFromInt 75005, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26089, stateTaxDue: makeFromInt 7497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47754, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1490, stateTaxDue: makeFromInt 1783 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3815, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18056, federalTaxDue: makeFromInt 20312, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53720, itemizedDeductions: makeFromInt 11747, federalTaxDue: makeFromInt 18, stateTaxDue: makeFromInt 2111 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36521, ordinaryIncomeNonSS: makeFromInt 49128, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28333, federalTaxDue: makeFromInt 3031, stateTaxDue: makeFromInt 1853 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125124, qualifiedIncome: makeFromInt 87823, itemizedDeductions: makeFromInt 27688, federalTaxDue: makeFromInt 27968, stateTaxDue: makeFromInt 10072 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17737, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28649, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12210, ordinaryIncomeNonSS: makeFromInt 143489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17192, stateTaxDue: makeFromInt 6699 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82393, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7848, federalTaxDue: makeFromInt 18513, stateTaxDue: makeFromInt 3753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103694, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9572, stateTaxDue: makeFromInt 4810 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48117, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8260, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51303, itemizedDeductions: makeFromInt 10870, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1890 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29302, qualifiedIncome: makeFromInt 93909, itemizedDeductions: makeFromInt 19969, federalTaxDue: makeFromInt 10514, stateTaxDue: makeFromInt 5798 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26217, ordinaryIncomeNonSS: makeFromInt 125031, qualifiedIncome: makeFromInt 66616, itemizedDeductions: makeFromInt 3261, federalTaxDue: makeFromInt 33926, stateTaxDue: makeFromInt 9223 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46744, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11031, stateTaxDue: makeFromInt 1882 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29594, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9990, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 25 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17869, ordinaryIncomeNonSS: makeFromInt 140087, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26420, federalTaxDue: makeFromInt 23494, stateTaxDue: makeFromInt 6429 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9760, stateTaxDue: makeFromInt 2292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27833, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68027, itemizedDeductions: makeFromInt 5082, federalTaxDue: makeFromInt 48967, stateTaxDue: makeFromInt 10895 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26428, ordinaryIncomeNonSS: makeFromInt 143611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28620, federalTaxDue: makeFromInt 21737, stateTaxDue: makeFromInt 6506 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44723, qualifiedIncome: makeFromInt 22107, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12348, stateTaxDue: makeFromInt 3184 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124466, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33026, stateTaxDue: makeFromInt 10897 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3796, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48137, ordinaryIncomeNonSS: makeFromInt 69561, qualifiedIncome: makeFromInt 84965, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28462, stateTaxDue: makeFromInt 7271 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5268, ordinaryIncomeNonSS: makeFromInt 116496, qualifiedIncome: makeFromInt 36643, itemizedDeductions: makeFromInt 17531, federalTaxDue: makeFromInt 23365, stateTaxDue: makeFromInt 7202 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149396, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12577, federalTaxDue: makeFromInt 39926, stateTaxDue: makeFromInt 12215 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21899, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31789, itemizedDeductions: makeFromInt 8827, federalTaxDue: makeFromInt 27541, stateTaxDue: makeFromInt 8414 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69866, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1486, federalTaxDue: makeFromInt 22754, stateTaxDue: makeFromInt 8238 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35866, ordinaryIncomeNonSS: makeFromInt 47659, qualifiedIncome: makeFromInt 37544, itemizedDeductions: makeFromInt 25810, federalTaxDue: makeFromInt 6446, stateTaxDue: makeFromInt 3585 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16890, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18462, ordinaryIncomeNonSS: makeFromInt 70080, qualifiedIncome: makeFromInt 82165, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19913, stateTaxDue: makeFromInt 7237 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33782, ordinaryIncomeNonSS: makeFromInt 29025, qualifiedIncome: makeFromInt 11559, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3224, stateTaxDue: makeFromInt 1654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21723, ordinaryIncomeNonSS: makeFromInt 106092, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14469, stateTaxDue: makeFromInt 4758 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8931, qualifiedIncome: makeFromInt 68004, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4553, stateTaxDue: makeFromInt 3699 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46282, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2194, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70078, itemizedDeductions: makeFromInt 1178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3029 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 283 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32857, ordinaryIncomeNonSS: makeFromInt 104286, qualifiedIncome: makeFromInt 85352, itemizedDeductions: makeFromInt 29780, federalTaxDue: makeFromInt 30025, stateTaxDue: makeFromInt 8907 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126733, qualifiedIncome: makeFromInt 78833, itemizedDeductions: makeFromInt 27928, federalTaxDue: makeFromInt 28176, stateTaxDue: makeFromInt 9903 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2099, ordinaryIncomeNonSS: makeFromInt 91072, qualifiedIncome: makeFromInt 89535, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27604, stateTaxDue: makeFromInt 8864 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28183, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10812, ordinaryIncomeNonSS: makeFromInt 83979, qualifiedIncome: makeFromInt 184, itemizedDeductions: makeFromInt 26419, federalTaxDue: makeFromInt 6043, stateTaxDue: makeFromInt 3640 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9909, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104912, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13996, federalTaxDue: makeFromInt 17488, stateTaxDue: makeFromInt 5126 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19946, ordinaryIncomeNonSS: makeFromInt 130290, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2515, federalTaxDue: makeFromInt 40940, stateTaxDue: makeFromInt 11060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35039, ordinaryIncomeNonSS: makeFromInt 10587, qualifiedIncome: makeFromInt 25416, itemizedDeductions: makeFromInt 9602, federalTaxDue: makeFromInt 183, stateTaxDue: makeFromInt 1408 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37985, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57099, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3077, stateTaxDue: makeFromInt 2400 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93836, itemizedDeductions: makeFromInt 17643, federalTaxDue: makeFromInt 2906, stateTaxDue: makeFromInt 4017 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12419, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 185 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131173, qualifiedIncome: makeFromInt 34367, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28909, stateTaxDue: makeFromInt 8096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56793, qualifiedIncome: makeFromInt 33171, itemizedDeductions: makeFromInt 17196, federalTaxDue: makeFromInt 4405, stateTaxDue: makeFromInt 4139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16480, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48285, ordinaryIncomeNonSS: makeFromInt 100579, qualifiedIncome: makeFromInt 81684, itemizedDeductions: makeFromInt 719, federalTaxDue: makeFromInt 33502, stateTaxDue: makeFromInt 8738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87713, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23636, federalTaxDue: makeFromInt 6728, stateTaxDue: makeFromInt 4045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119232, qualifiedIncome: makeFromInt 47652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24113, stateTaxDue: makeFromInt 8084 }
  ]