module KnownYearsGoldenTestCasesFromScala
  ( TestCase(..)
  , cases
  ) where

import CommonTypes (FilingStatus(..))
import Data.Date (Date, Year)
import Moneys (Deduction, Income, TaxPayable, makeFromInt)
import Prelude (class Show, show)
import UnsafeDates (unsafeMakeDate, unsafeMakeYear)

newtype TestCase = TestCase
  { year :: Year
  , birthDate :: Date
  , personalExemptions :: Int
  , filingStatus :: FilingStatus
  , socSec :: Income
  , ordinaryIncomeNonSS :: Income
  , qualifiedIncome :: Income
  , itemizedDeductions :: Deduction
  , federalTaxDue :: TaxPayable
  , stateTaxDue :: TaxPayable
  }

instance showTestCase :: Show TestCase where
  show (TestCase tc) = show tc

cases :: Array TestCase
cases =
  [
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45837, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17446, itemizedDeductions: makeFromInt 18086, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 617 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125595, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44975, stateTaxDue: makeFromInt 10825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44089, itemizedDeductions: makeFromInt 17318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1750 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33948, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6095, federalTaxDue: makeFromInt 945, stateTaxDue: makeFromInt 1322 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2406, ordinaryIncomeNonSS: makeFromInt 99980, qualifiedIncome: makeFromInt 50983, itemizedDeductions: makeFromInt 1461, federalTaxDue: makeFromInt 17878, stateTaxDue: makeFromInt 7173 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9547, stateTaxDue: makeFromInt 7273 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8487, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17149, stateTaxDue: makeFromInt 7449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7102, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17080, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4809 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80348, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3342 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39444, ordinaryIncomeNonSS: makeFromInt 124451, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26682, stateTaxDue: makeFromInt 5968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75587, itemizedDeductions: makeFromInt 723, federalTaxDue: makeFromInt 32168, stateTaxDue: makeFromInt 10852 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19085, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25046, itemizedDeductions: makeFromInt 6124, federalTaxDue: makeFromInt 31360, stateTaxDue: makeFromInt 8499 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16173, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49904, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2120 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49701, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 588 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11722, qualifiedIncome: makeFromInt 89958, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1914, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43288, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8786, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13075, ordinaryIncomeNonSS: makeFromInt 74917, qualifiedIncome: makeFromInt 49168, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11107, stateTaxDue: makeFromInt 5676 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42368, ordinaryIncomeNonSS: makeFromInt 97333, qualifiedIncome: makeFromInt 2983, itemizedDeductions: makeFromInt 9650, federalTaxDue: makeFromInt 17114, stateTaxDue: makeFromInt 4463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17788, ordinaryIncomeNonSS: makeFromInt 93707, qualifiedIncome: makeFromInt 27970, itemizedDeductions: makeFromInt 17177, federalTaxDue: makeFromInt 20393, stateTaxDue: makeFromInt 5859 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26068, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98033, itemizedDeductions: makeFromInt 286, federalTaxDue: makeFromInt 9626, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43670, ordinaryIncomeNonSS: makeFromInt 46097, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26576, federalTaxDue: makeFromInt 6660, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119991, qualifiedIncome: makeFromInt 26431, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12848, stateTaxDue: makeFromInt 6646 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30727, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6515, federalTaxDue: makeFromInt 2057, stateTaxDue: makeFromInt 1139 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2043, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16743, federalTaxDue: makeFromInt 26688, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147435, qualifiedIncome: makeFromInt 46558, itemizedDeductions: makeFromInt 17864, federalTaxDue: makeFromInt 42530, stateTaxDue: makeFromInt 9465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31111, itemizedDeductions: makeFromInt 8548, federalTaxDue: makeFromInt 630, stateTaxDue: makeFromInt 1301 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48673, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27696, itemizedDeductions: makeFromInt 18382, federalTaxDue: makeFromInt 29132, stateTaxDue: makeFromInt 8410 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22425, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 491 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7741, itemizedDeductions: makeFromInt 7037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48414, ordinaryIncomeNonSS: makeFromInt 141340, qualifiedIncome: makeFromInt 24076, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41364, stateTaxDue: makeFromInt 8089 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37133, qualifiedIncome: makeFromInt 2917, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4286, stateTaxDue: makeFromInt 1679 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23713, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1172, federalTaxDue: makeFromInt 87, stateTaxDue: makeFromInt 557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37716, ordinaryIncomeNonSS: makeFromInt 46352, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3606, stateTaxDue: makeFromInt 1936 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33102, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12606, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148480, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22981, federalTaxDue: makeFromInt 42042, stateTaxDue: makeFromInt 12448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3914, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3147, stateTaxDue: makeFromInt 2251 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24940, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28508, stateTaxDue: makeFromInt 8492 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48564, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70087, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 801, stateTaxDue: makeFromInt 3129 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12562, ordinaryIncomeNonSS: makeFromInt 57239, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24611, federalTaxDue: makeFromInt 4857, stateTaxDue: makeFromInt 2287 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10654, itemizedDeductions: makeFromInt 27589, federalTaxDue: makeFromInt 34268, stateTaxDue: makeFromInt 7568 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24784, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9789, federalTaxDue: makeFromInt 32525, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28249, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7560, itemizedDeductions: makeFromInt 18332, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 161 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21536, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 480, stateTaxDue: makeFromInt 718 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8443, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3513, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5878, federalTaxDue: makeFromInt 15608, stateTaxDue: makeFromInt 5190 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 273, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102490, qualifiedIncome: makeFromInt 14238, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20841, stateTaxDue: makeFromInt 5461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34015, itemizedDeductions: makeFromInt 15139, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1388 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116705, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12776, stateTaxDue: makeFromInt 5260 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85659, qualifiedIncome: makeFromInt 66103, itemizedDeductions: makeFromInt 26137, federalTaxDue: makeFromInt 11332, stateTaxDue: makeFromInt 7113 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100032, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10313, federalTaxDue: makeFromInt 12388, stateTaxDue: makeFromInt 4653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22206, ordinaryIncomeNonSS: makeFromInt 28268, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7278, stateTaxDue: makeFromInt 5889 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44389, ordinaryIncomeNonSS: makeFromInt 123471, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27456, stateTaxDue: makeFromInt 5719 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26201, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102776, qualifiedIncome: makeFromInt 81410, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27048, stateTaxDue: makeFromInt 8734 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86976, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25577, federalTaxDue: makeFromInt 23056, stateTaxDue: makeFromInt 9189 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25114, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67094, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2161, stateTaxDue: makeFromInt 2780 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21785, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26069, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59878, qualifiedIncome: makeFromInt 23034, itemizedDeductions: makeFromInt 24816, federalTaxDue: makeFromInt 13694, stateTaxDue: makeFromInt 3571 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47153, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17431, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43656, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11081, federalTaxDue: makeFromInt 1721, stateTaxDue: makeFromInt 1508 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107796, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16406, stateTaxDue: makeFromInt 4715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2000, ordinaryIncomeNonSS: makeFromInt 114846, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5080, federalTaxDue: makeFromInt 16517, stateTaxDue: makeFromInt 5408 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12794, ordinaryIncomeNonSS: makeFromInt 74507, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15537, federalTaxDue: makeFromInt 24958, stateTaxDue: makeFromInt 8470 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82545, itemizedDeductions: makeFromInt 11247, federalTaxDue: makeFromInt 6592, stateTaxDue: makeFromInt 3985 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76303, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23209, stateTaxDue: makeFromInt 8563 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20601, federalTaxDue: makeFromInt 36228, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19626, ordinaryIncomeNonSS: makeFromInt 140827, qualifiedIncome: makeFromInt 81138, itemizedDeductions: makeFromInt 20329, federalTaxDue: makeFromInt 35656, stateTaxDue: makeFromInt 10769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39109, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8225, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49132, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2102, stateTaxDue: makeFromInt 2259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56029, itemizedDeductions: makeFromInt 20788, federalTaxDue: makeFromInt 7592, stateTaxDue: makeFromInt 2633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83228, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1189, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6299, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29420, ordinaryIncomeNonSS: makeFromInt 57511, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7366, federalTaxDue: makeFromInt 8953, stateTaxDue: makeFromInt 2484 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86931, qualifiedIncome: makeFromInt 10501, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8217, stateTaxDue: makeFromInt 4297 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138368, qualifiedIncome: makeFromInt 83331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41381, stateTaxDue: makeFromInt 11082 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59369, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2593 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1355, ordinaryIncomeNonSS: makeFromInt 10600, qualifiedIncome: makeFromInt 13179, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 814 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91551, qualifiedIncome: makeFromInt 54681, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16128, stateTaxDue: makeFromInt 6937 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55719, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1105, stateTaxDue: makeFromInt 2331 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5346, ordinaryIncomeNonSS: makeFromInt 52148, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14716, stateTaxDue: makeFromInt 7352 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73009, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2975 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45562, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33280, itemizedDeductions: makeFromInt 4525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1289 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35154, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41709, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37194, stateTaxDue: makeFromInt 9210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13478, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19656, stateTaxDue: makeFromInt 7499 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62262, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11444, federalTaxDue: makeFromInt 4192, stateTaxDue: makeFromInt 2538 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51600, itemizedDeductions: makeFromInt 17463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1905 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36091, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8873, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 189 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43158, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19818, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9069, stateTaxDue: makeFromInt 4421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140305, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25645, federalTaxDue: makeFromInt 19195, stateTaxDue: makeFromInt 6707 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1958, ordinaryIncomeNonSS: makeFromInt 47500, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16193, stateTaxDue: makeFromInt 6920 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22821, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55760, qualifiedIncome: makeFromInt 30652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2509, stateTaxDue: makeFromInt 3754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16701, ordinaryIncomeNonSS: makeFromInt 20416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1329, stateTaxDue: makeFromInt 817 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126758, qualifiedIncome: makeFromInt 7389, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30824, stateTaxDue: makeFromInt 6393 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45723, ordinaryIncomeNonSS: makeFromInt 1916, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14235, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43836, ordinaryIncomeNonSS: makeFromInt 95679, qualifiedIncome: makeFromInt 79335, itemizedDeductions: makeFromInt 3211, federalTaxDue: makeFromInt 24023, stateTaxDue: makeFromInt 8276 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43565, qualifiedIncome: makeFromInt 80002, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14620, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47417, itemizedDeductions: makeFromInt 600, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48499, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68878, itemizedDeductions: makeFromInt 11566, federalTaxDue: makeFromInt 1202, stateTaxDue: makeFromInt 2769 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 263, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18289, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24959, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35116, ordinaryIncomeNonSS: makeFromInt 8920, qualifiedIncome: makeFromInt 51814, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 592, stateTaxDue: makeFromInt 2445 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10611, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36915, ordinaryIncomeNonSS: makeFromInt 60817, qualifiedIncome: makeFromInt 68108, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12235, stateTaxDue: makeFromInt 5971 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98722, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23042, federalTaxDue: makeFromInt 24504, stateTaxDue: makeFromInt 9561 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24200, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24361, federalTaxDue: makeFromInt 1714, stateTaxDue: makeFromInt 635 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147016, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24968, federalTaxDue: makeFromInt 19747, stateTaxDue: makeFromInt 6947 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75914, itemizedDeductions: makeFromInt 9131, federalTaxDue: makeFromInt 1541, stateTaxDue: makeFromInt 3423 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8424, stateTaxDue: makeFromInt 4241 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31939, itemizedDeductions: makeFromInt 21856, federalTaxDue: makeFromInt 23019, stateTaxDue: makeFromInt 8422 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37511, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1566 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30396, ordinaryIncomeNonSS: makeFromInt 102681, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15460, stateTaxDue: makeFromInt 4584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72108, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39471, stateTaxDue: makeFromInt 10981 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23150, federalTaxDue: makeFromInt 22780, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1349, itemizedDeductions: makeFromInt 1030, federalTaxDue: makeFromInt 26910, stateTaxDue: makeFromInt 7312 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66400, itemizedDeductions: makeFromInt 15022, federalTaxDue: makeFromInt 45792, stateTaxDue: makeFromInt 10365 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45995, ordinaryIncomeNonSS: makeFromInt 98881, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18762, stateTaxDue: makeFromInt 4689 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8788, ordinaryIncomeNonSS: makeFromInt 117839, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8099, federalTaxDue: makeFromInt 33841, stateTaxDue: makeFromInt 10437 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67631, itemizedDeductions: makeFromInt 14466, federalTaxDue: makeFromInt 1182, stateTaxDue: makeFromInt 2807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4519, ordinaryIncomeNonSS: makeFromInt 139775, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16632, federalTaxDue: makeFromInt 25031, stateTaxDue: makeFromInt 6782 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103399, qualifiedIncome: makeFromInt 45273, itemizedDeductions: makeFromInt 28801, federalTaxDue: makeFromInt 15638, stateTaxDue: makeFromInt 7133 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39710, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25488, itemizedDeductions: makeFromInt 13155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 647 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36581, stateTaxDue: makeFromInt 11197 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28883, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48403, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1845 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58279, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 802, federalTaxDue: makeFromInt 11293, stateTaxDue: makeFromInt 7239 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98558, itemizedDeductions: makeFromInt 18519, federalTaxDue: makeFromInt 5071, stateTaxDue: makeFromInt 4353 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4958, ordinaryIncomeNonSS: makeFromInt 107906, qualifiedIncome: makeFromInt 59033, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20096, stateTaxDue: makeFromInt 7772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21218, federalTaxDue: makeFromInt 39862, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20188, ordinaryIncomeNonSS: makeFromInt 12941, qualifiedIncome: makeFromInt 92533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8905, stateTaxDue: makeFromInt 4781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97848, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15422, stateTaxDue: makeFromInt 4643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42819, ordinaryIncomeNonSS: makeFromInt 136829, qualifiedIncome: makeFromInt 36680, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36329, stateTaxDue: makeFromInt 8400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7205, ordinaryIncomeNonSS: makeFromInt 12727, qualifiedIncome: makeFromInt 26756, itemizedDeductions: makeFromInt 8450, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45754, ordinaryIncomeNonSS: makeFromInt 36778, qualifiedIncome: makeFromInt 82158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13838, stateTaxDue: makeFromInt 5637 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17886, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147798, qualifiedIncome: makeFromInt 59762, itemizedDeductions: makeFromInt 3149, federalTaxDue: makeFromInt 37003, stateTaxDue: makeFromInt 10239 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14797, qualifiedIncome: makeFromInt 20844, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147545, qualifiedIncome: makeFromInt 15152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45624, stateTaxDue: makeFromInt 8073 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128186, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29039, stateTaxDue: makeFromInt 10734 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60857, qualifiedIncome: makeFromInt 59785, itemizedDeductions: makeFromInt 2393, federalTaxDue: makeFromInt 3034, stateTaxDue: makeFromInt 5557 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39925, qualifiedIncome: makeFromInt 32084, itemizedDeductions: makeFromInt 16076, federalTaxDue: makeFromInt 3511, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30409, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29820, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 6202 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31086, ordinaryIncomeNonSS: makeFromInt 92493, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11328, federalTaxDue: makeFromInt 13059, stateTaxDue: makeFromInt 4064 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19220, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22490, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94046, qualifiedIncome: makeFromInt 30721, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21304, stateTaxDue: makeFromInt 6139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6934, ordinaryIncomeNonSS: makeFromInt 84407, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8360, stateTaxDue: makeFromInt 3958 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106751, qualifiedIncome: makeFromInt 91688, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29974, stateTaxDue: makeFromInt 9667 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3827, ordinaryIncomeNonSS: makeFromInt 62005, qualifiedIncome: makeFromInt 61507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14765, stateTaxDue: makeFromInt 5721 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93645, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6968, stateTaxDue: makeFromInt 4207 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29509, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142452, qualifiedIncome: makeFromInt 90101, itemizedDeductions: makeFromInt 8924, federalTaxDue: makeFromInt 32932, stateTaxDue: makeFromInt 11253 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23901, federalTaxDue: makeFromInt 13199, stateTaxDue: makeFromInt 6111 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18033, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 953, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23961, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62550, itemizedDeductions: makeFromInt 17589, federalTaxDue: makeFromInt 3323, stateTaxDue: makeFromInt 2873 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49806, ordinaryIncomeNonSS: makeFromInt 101348, qualifiedIncome: makeFromInt 71509, itemizedDeductions: makeFromInt 20915, federalTaxDue: makeFromInt 33038, stateTaxDue: makeFromInt 8388 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39020, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18995, itemizedDeductions: makeFromInt 9791, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 495 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32576, ordinaryIncomeNonSS: makeFromInt 87847, qualifiedIncome: makeFromInt 93375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21687, stateTaxDue: makeFromInt 8586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32960, stateTaxDue: makeFromInt 8767 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90055, itemizedDeductions: makeFromInt 11173, federalTaxDue: makeFromInt 11991, stateTaxDue: makeFromInt 4248 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18820, ordinaryIncomeNonSS: makeFromInt 52969, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6481, federalTaxDue: makeFromInt 4007, stateTaxDue: makeFromInt 1974 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20858, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65411, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4119, stateTaxDue: makeFromInt 2908 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30010, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79320, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41280, stateTaxDue: makeFromInt 11091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38102, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29558, federalTaxDue: makeFromInt 449, stateTaxDue: makeFromInt 1494 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9910, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38153, ordinaryIncomeNonSS: makeFromInt 12467, qualifiedIncome: makeFromInt 69284, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6774, stateTaxDue: makeFromInt 3619 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27252, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47160, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16349, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1365 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29817, federalTaxDue: makeFromInt 30152, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1613, ordinaryIncomeNonSS: makeFromInt 18905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 466, stateTaxDue: makeFromInt 690 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13960, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30094, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66396, itemizedDeductions: makeFromInt 2907, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43069, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 920, ordinaryIncomeNonSS: makeFromInt 88701, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9997, stateTaxDue: makeFromInt 4075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9868, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26977, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39543, qualifiedIncome: makeFromInt 55932, itemizedDeductions: makeFromInt 653, federalTaxDue: makeFromInt 794, stateTaxDue: makeFromInt 4299 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21883, ordinaryIncomeNonSS: makeFromInt 62958, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6359, stateTaxDue: makeFromInt 2558 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34432, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36282, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21146, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74028, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1392, stateTaxDue: makeFromInt 3326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27694, ordinaryIncomeNonSS: makeFromInt 54674, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27737, stateTaxDue: makeFromInt 7664 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31721, ordinaryIncomeNonSS: makeFromInt 70914, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27707, stateTaxDue: makeFromInt 8091 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25125, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9050, itemizedDeductions: makeFromInt 27607, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63836, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10524, stateTaxDue: makeFromInt 7517 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47103, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 497, stateTaxDue: makeFromInt 1851 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51223, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44347, ordinaryIncomeNonSS: makeFromInt 34687, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28818, federalTaxDue: makeFromInt 3304, stateTaxDue: makeFromInt 1218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3755, ordinaryIncomeNonSS: makeFromInt 48807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3321, federalTaxDue: makeFromInt 1945, stateTaxDue: makeFromInt 1836 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53683, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27482, federalTaxDue: makeFromInt 595, stateTaxDue: makeFromInt 2309 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25620, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37395, ordinaryIncomeNonSS: makeFromInt 91888, qualifiedIncome: makeFromInt 34364, itemizedDeductions: makeFromInt 1421, federalTaxDue: makeFromInt 23603, stateTaxDue: makeFromInt 5858 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 310, stateTaxDue: makeFromInt 1045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9847, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44534, itemizedDeductions: makeFromInt 19655, federalTaxDue: makeFromInt 26749, stateTaxDue: makeFromInt 9252 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15879, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83985, qualifiedIncome: makeFromInt 72110, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18723, stateTaxDue: makeFromInt 7410 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44690, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9607, qualifiedIncome: makeFromInt 54180, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2600 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10812, federalTaxDue: makeFromInt 26707, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25472, federalTaxDue: makeFromInt 13551, stateTaxDue: makeFromInt 5670 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15680, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45705, itemizedDeductions: makeFromInt 2940, federalTaxDue: makeFromInt 1895, stateTaxDue: makeFromInt 2107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27657, ordinaryIncomeNonSS: makeFromInt 49372, qualifiedIncome: makeFromInt 59479, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18102, stateTaxDue: makeFromInt 5205 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40740, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28630, ordinaryIncomeNonSS: makeFromInt 148469, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25785, federalTaxDue: makeFromInt 43685, stateTaxDue: makeFromInt 12168 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17968, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43569, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1671 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24924, qualifiedIncome: makeFromInt 39108, itemizedDeductions: makeFromInt 13398, federalTaxDue: makeFromInt 792, stateTaxDue: makeFromInt 2947 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118311, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16973, stateTaxDue: makeFromInt 5483 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107375, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16067, federalTaxDue: makeFromInt 34932, stateTaxDue: makeFromInt 9923 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36904, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1520 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17421, qualifiedIncome: makeFromInt 37613, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11980, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22764, stateTaxDue: makeFromInt 7833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79850, itemizedDeductions: makeFromInt 5110, federalTaxDue: makeFromInt 15511, stateTaxDue: makeFromInt 3848 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129005, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3067, federalTaxDue: makeFromInt 26257, stateTaxDue: makeFromInt 10975 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19521, ordinaryIncomeNonSS: makeFromInt 107055, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14242, stateTaxDue: makeFromInt 4807 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87022, qualifiedIncome: makeFromInt 85171, itemizedDeductions: makeFromInt 4086, federalTaxDue: makeFromInt 23094, stateTaxDue: makeFromInt 8355 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17769, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46534, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 579, itemizedDeductions: makeFromInt 11344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48184, ordinaryIncomeNonSS: makeFromInt 3511, qualifiedIncome: makeFromInt 21352, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97339, qualifiedIncome: makeFromInt 99892, itemizedDeductions: makeFromInt 5373, federalTaxDue: makeFromInt 22108, stateTaxDue: makeFromInt 9406 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14115, qualifiedIncome: makeFromInt 15418, itemizedDeductions: makeFromInt 21203, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1002 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17395, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118836, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39090, stateTaxDue: makeFromInt 10567 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131224, qualifiedIncome: makeFromInt 72856, itemizedDeductions: makeFromInt 21045, federalTaxDue: makeFromInt 28938, stateTaxDue: makeFromInt 9959 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9366, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7704, federalTaxDue: makeFromInt 17983, stateTaxDue: makeFromInt 5568 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27915, ordinaryIncomeNonSS: makeFromInt 93403, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24207, federalTaxDue: makeFromInt 24580, stateTaxDue: makeFromInt 9211 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73275, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29389, federalTaxDue: makeFromInt 12305, stateTaxDue: makeFromInt 3309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3544, federalTaxDue: makeFromInt 51180, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15520, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21361, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18464, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13089, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71169, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2977 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12595, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4958, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95784, qualifiedIncome: makeFromInt 71783, itemizedDeductions: makeFromInt 9363, federalTaxDue: makeFromInt 27131, stateTaxDue: makeFromInt 8322 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48354, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75199, itemizedDeductions: makeFromInt 1388, federalTaxDue: makeFromInt 48952, stateTaxDue: makeFromInt 10805 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17096, qualifiedIncome: makeFromInt 46723, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55666, itemizedDeductions: makeFromInt 15505, federalTaxDue: makeFromInt 213, stateTaxDue: makeFromInt 2390 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93276, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9395, federalTaxDue: makeFromInt 10307, stateTaxDue: makeFromInt 4289 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29554, ordinaryIncomeNonSS: makeFromInt 80815, qualifiedIncome: makeFromInt 36922, itemizedDeductions: makeFromInt 7274, federalTaxDue: makeFromInt 21270, stateTaxDue: makeFromInt 5632 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16149, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 332 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24311, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73334, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7210, stateTaxDue: makeFromInt 3279 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29549, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27999, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10704, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26832, stateTaxDue: makeFromInt 7360 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90608, qualifiedIncome: makeFromInt 92345, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25638, stateTaxDue: makeFromInt 8902 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26002, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40619, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1623 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131330, qualifiedIncome: makeFromInt 96866, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36757, stateTaxDue: makeFromInt 10955 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45376, ordinaryIncomeNonSS: makeFromInt 142077, qualifiedIncome: makeFromInt 73094, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43086, stateTaxDue: makeFromInt 10504 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1072, qualifiedIncome: makeFromInt 83512, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5507, stateTaxDue: makeFromInt 3625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139920, qualifiedIncome: makeFromInt 56536, itemizedDeductions: makeFromInt 22609, federalTaxDue: makeFromInt 22139, stateTaxDue: makeFromInt 9348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19008, qualifiedIncome: makeFromInt 14359, itemizedDeductions: makeFromInt 4328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1273 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23895, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18287, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114497, qualifiedIncome: makeFromInt 63322, itemizedDeductions: makeFromInt 24087, federalTaxDue: makeFromInt 26914, stateTaxDue: makeFromInt 8216 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99688, qualifiedIncome: makeFromInt 90099, itemizedDeductions: makeFromInt 10765, federalTaxDue: makeFromInt 26620, stateTaxDue: makeFromInt 9234 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29724, itemizedDeductions: makeFromInt 361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42363, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45608, itemizedDeductions: makeFromInt 6941, federalTaxDue: makeFromInt 282, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25384, ordinaryIncomeNonSS: makeFromInt 107238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16613, stateTaxDue: makeFromInt 5122 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26627, ordinaryIncomeNonSS: makeFromInt 35129, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15612, federalTaxDue: makeFromInt 3036, stateTaxDue: makeFromInt 1382 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2317, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23266, itemizedDeductions: makeFromInt 6413, federalTaxDue: makeFromInt 25191, stateTaxDue: makeFromInt 8088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80181, qualifiedIncome: makeFromInt 56659, itemizedDeductions: makeFromInt 27270, federalTaxDue: makeFromInt 16485, stateTaxDue: makeFromInt 6754 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84688, qualifiedIncome: makeFromInt 97238, itemizedDeductions: makeFromInt 17285, federalTaxDue: makeFromInt 20784, stateTaxDue: makeFromInt 8521 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4975, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133297, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27201, stateTaxDue: makeFromInt 10990 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46435, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34240, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98203, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 225, stateTaxDue: makeFromInt 4435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23436, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 975, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82613, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3304, federalTaxDue: makeFromInt 20566, stateTaxDue: makeFromInt 3785 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79572, qualifiedIncome: makeFromInt 51464, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19472, stateTaxDue: makeFromInt 5877 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94027, itemizedDeductions: makeFromInt 27778, federalTaxDue: makeFromInt 6544, stateTaxDue: makeFromInt 4449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35536, qualifiedIncome: makeFromInt 40221, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7478, stateTaxDue: makeFromInt 3639 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26443, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41581, ordinaryIncomeNonSS: makeFromInt 32208, qualifiedIncome: makeFromInt 49361, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10452, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68003, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25184, stateTaxDue: makeFromInt 8344 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32480, itemizedDeductions: makeFromInt 11255, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1981, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15860, ordinaryIncomeNonSS: makeFromInt 129330, qualifiedIncome: makeFromInt 25747, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21879, stateTaxDue: makeFromInt 7256 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49390, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1644, stateTaxDue: makeFromInt 1866 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12420, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86008, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146576, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35825, stateTaxDue: makeFromInt 11874 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12486, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22313, federalTaxDue: makeFromInt 25946, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50694, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1994, stateTaxDue: makeFromInt 2060 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29996, ordinaryIncomeNonSS: makeFromInt 5757, qualifiedIncome: makeFromInt 81275, itemizedDeductions: makeFromInt 26451, federalTaxDue: makeFromInt 3679, stateTaxDue: makeFromInt 3777 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15595, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 492, itemizedDeductions: makeFromInt 8768, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14798, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33767, ordinaryIncomeNonSS: makeFromInt 60918, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19731, federalTaxDue: makeFromInt 15683, stateTaxDue: makeFromInt 7571 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73651, qualifiedIncome: makeFromInt 50552, itemizedDeductions: makeFromInt 10588, federalTaxDue: makeFromInt 24310, stateTaxDue: makeFromInt 5955 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25805, ordinaryIncomeNonSS: makeFromInt 81952, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25350, federalTaxDue: makeFromInt 12192, stateTaxDue: makeFromInt 3643 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50014, itemizedDeductions: makeFromInt 3214, federalTaxDue: makeFromInt 250, stateTaxDue: makeFromInt 2046 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90502, qualifiedIncome: makeFromInt 86029, itemizedDeductions: makeFromInt 22064, federalTaxDue: makeFromInt 32376, stateTaxDue: makeFromInt 8572 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1452, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 403, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88196, itemizedDeductions: makeFromInt 997, federalTaxDue: makeFromInt 3517, stateTaxDue: makeFromInt 4035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8743, ordinaryIncomeNonSS: makeFromInt 78433, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7251, stateTaxDue: makeFromInt 3653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19958, ordinaryIncomeNonSS: makeFromInt 90900, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10325, stateTaxDue: makeFromInt 3983 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12895, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3565, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21373, ordinaryIncomeNonSS: makeFromInt 12493, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5637, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46035, itemizedDeductions: makeFromInt 9252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1880 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 101, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49764, itemizedDeductions: makeFromInt 26316, federalTaxDue: makeFromInt 31344, stateTaxDue: makeFromInt 9866 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56797, qualifiedIncome: makeFromInt 93282, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13864, stateTaxDue: makeFromInt 7103 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14232, ordinaryIncomeNonSS: makeFromInt 44345, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4495, stateTaxDue: makeFromInt 1762 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34641, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1338 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8421, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48059, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31060, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35691, stateTaxDue: makeFromInt 8478 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22142, ordinaryIncomeNonSS: makeFromInt 127377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22944, federalTaxDue: makeFromInt 23602, stateTaxDue: makeFromInt 6114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29655, ordinaryIncomeNonSS: makeFromInt 108561, qualifiedIncome: makeFromInt 3221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17255, stateTaxDue: makeFromInt 5048 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27448, itemizedDeductions: makeFromInt 20390, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 797 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8520, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58340, qualifiedIncome: makeFromInt 71577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16185, stateTaxDue: makeFromInt 6041 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58828, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8270, stateTaxDue: makeFromInt 2266 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45715, ordinaryIncomeNonSS: makeFromInt 86137, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18766, stateTaxDue: makeFromInt 3852 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33314, qualifiedIncome: makeFromInt 87235, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4464, stateTaxDue: makeFromInt 5452 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49253, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16259, stateTaxDue: makeFromInt 6788 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38747, ordinaryIncomeNonSS: makeFromInt 113895, qualifiedIncome: makeFromInt 45478, itemizedDeductions: makeFromInt 27143, federalTaxDue: makeFromInt 27341, stateTaxDue: makeFromInt 7394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14560, ordinaryIncomeNonSS: makeFromInt 59930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7210, stateTaxDue: makeFromInt 2628 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14396, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87514, qualifiedIncome: makeFromInt 67257, itemizedDeductions: makeFromInt 22131, federalTaxDue: makeFromInt 20412, stateTaxDue: makeFromInt 7465 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2636, ordinaryIncomeNonSS: makeFromInt 5036, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18805, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 216, stateTaxDue: makeFromInt 510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48246, ordinaryIncomeNonSS: makeFromInt 146540, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25932, federalTaxDue: makeFromInt 41884, stateTaxDue: makeFromInt 11921 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42162, ordinaryIncomeNonSS: makeFromInt 111342, qualifiedIncome: makeFromInt 37386, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26159, stateTaxDue: makeFromInt 7061 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97973, qualifiedIncome: makeFromInt 78368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14694, stateTaxDue: makeFromInt 8142 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13308, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113828, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9390, stateTaxDue: makeFromInt 5216 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115497, qualifiedIncome: makeFromInt 43778, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19672, stateTaxDue: makeFromInt 7589 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6809, ordinaryIncomeNonSS: makeFromInt 133148, qualifiedIncome: makeFromInt 85423, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29057, stateTaxDue: makeFromInt 10254 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100804, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9962, stateTaxDue: makeFromInt 4465 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75947, qualifiedIncome: makeFromInt 4697, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10758, stateTaxDue: makeFromInt 3357 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22781, itemizedDeductions: makeFromInt 14026, federalTaxDue: makeFromInt 38036, stateTaxDue: makeFromInt 8261 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105516, qualifiedIncome: makeFromInt 21574, itemizedDeductions: makeFromInt 24080, federalTaxDue: makeFromInt 8393, stateTaxDue: makeFromInt 5880 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77114, qualifiedIncome: makeFromInt 33409, itemizedDeductions: makeFromInt 24290, federalTaxDue: makeFromInt 12250, stateTaxDue: makeFromInt 5271 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24671, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28411, federalTaxDue: makeFromInt 8157, stateTaxDue: makeFromInt 4503 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1282, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59191, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24319, federalTaxDue: makeFromInt 3986, stateTaxDue: makeFromInt 2505 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26805, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45942, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77491, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12061, stateTaxDue: makeFromInt 3420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33707, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27635, federalTaxDue: makeFromInt 46543, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6102, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47927, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125875, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25638, stateTaxDue: makeFromInt 5719 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31428, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132562, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21738, federalTaxDue: makeFromInt 25113, stateTaxDue: makeFromInt 6108 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51015, qualifiedIncome: makeFromInt 75661, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8151, stateTaxDue: makeFromInt 6114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45428, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3395, stateTaxDue: makeFromInt 1888 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41890, itemizedDeductions: makeFromInt 25565, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9340, ordinaryIncomeNonSS: makeFromInt 42585, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1767, stateTaxDue: makeFromInt 1519 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46122, ordinaryIncomeNonSS: makeFromInt 75901, qualifiedIncome: makeFromInt 60021, itemizedDeductions: makeFromInt 12432, federalTaxDue: makeFromInt 25500, stateTaxDue: makeFromInt 6341 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46488, qualifiedIncome: makeFromInt 43349, itemizedDeductions: makeFromInt 210, federalTaxDue: makeFromInt 1489, stateTaxDue: makeFromInt 4017 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42182, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72932, itemizedDeductions: makeFromInt 27850, federalTaxDue: makeFromInt 510, stateTaxDue: makeFromInt 2972 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146628, qualifiedIncome: makeFromInt 28847, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20776, stateTaxDue: makeFromInt 8099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15363, ordinaryIncomeNonSS: makeFromInt 94262, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10394, federalTaxDue: makeFromInt 26723, stateTaxDue: makeFromInt 9338 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44762, ordinaryIncomeNonSS: makeFromInt 20816, qualifiedIncome: makeFromInt 65284, itemizedDeductions: makeFromInt 15553, federalTaxDue: makeFromInt 13605, stateTaxDue: makeFromInt 3850 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45315, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8917, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87635, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7085, stateTaxDue: makeFromInt 3927 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10298, ordinaryIncomeNonSS: makeFromInt 28618, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8728, stateTaxDue: makeFromInt 6056 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110888, qualifiedIncome: makeFromInt 35139, itemizedDeductions: makeFromInt 5526, federalTaxDue: makeFromInt 20840, stateTaxDue: makeFromInt 7046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29275, ordinaryIncomeNonSS: makeFromInt 101033, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14338, federalTaxDue: makeFromInt 12930, stateTaxDue: makeFromInt 4377 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43855, itemizedDeductions: makeFromInt 16611, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1788 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19854, ordinaryIncomeNonSS: makeFromInt 134773, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16649, federalTaxDue: makeFromInt 26990, stateTaxDue: makeFromInt 6527 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10139, qualifiedIncome: makeFromInt 38815, itemizedDeductions: makeFromInt 5719, federalTaxDue: makeFromInt 175, stateTaxDue: makeFromInt 2068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29671, qualifiedIncome: makeFromInt 3233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4799, ordinaryIncomeNonSS: makeFromInt 41528, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22791, federalTaxDue: makeFromInt 1663, stateTaxDue: makeFromInt 1601 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129640, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19320, stateTaxDue: makeFromInt 6061 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80544, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18367, federalTaxDue: makeFromInt 10611, stateTaxDue: makeFromInt 3352 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3965, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13282, ordinaryIncomeNonSS: makeFromInt 96372, qualifiedIncome: makeFromInt 26252, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11993, stateTaxDue: makeFromInt 5656 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43564, qualifiedIncome: makeFromInt 80387, itemizedDeductions: makeFromInt 18031, federalTaxDue: makeFromInt 5819, stateTaxDue: makeFromInt 5771 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11448, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 154 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16058, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60936, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1888, stateTaxDue: makeFromInt 2792 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54217, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3038, stateTaxDue: makeFromInt 2214 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12005, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23344, itemizedDeductions: makeFromInt 8549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 762 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24998, itemizedDeductions: makeFromInt 26473, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 775 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112924, qualifiedIncome: makeFromInt 85626, itemizedDeductions: makeFromInt 13547, federalTaxDue: makeFromInt 20460, stateTaxDue: makeFromInt 9453 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10453, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10057, federalTaxDue: makeFromInt 32831, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34399, qualifiedIncome: makeFromInt 64444, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5982, stateTaxDue: makeFromInt 4613 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58356, itemizedDeductions: makeFromInt 20470, federalTaxDue: makeFromInt 32403, stateTaxDue: makeFromInt 9843 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94010, itemizedDeductions: makeFromInt 16984, federalTaxDue: makeFromInt 8319, stateTaxDue: makeFromInt 4346 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32021, ordinaryIncomeNonSS: makeFromInt 983, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4594 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48986, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7721, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84464, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10113, federalTaxDue: makeFromInt 9297, stateTaxDue: makeFromInt 3879 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37231, ordinaryIncomeNonSS: makeFromInt 2498, qualifiedIncome: makeFromInt 22674, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 855 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14620, itemizedDeductions: makeFromInt 26629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 356 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29469, ordinaryIncomeNonSS: makeFromInt 41052, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11901, federalTaxDue: makeFromInt 2905, stateTaxDue: makeFromInt 1578 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36759, ordinaryIncomeNonSS: makeFromInt 110743, qualifiedIncome: makeFromInt 13918, itemizedDeductions: makeFromInt 24286, federalTaxDue: makeFromInt 26892, stateTaxDue: makeFromInt 6133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10612, ordinaryIncomeNonSS: makeFromInt 101147, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10872, stateTaxDue: makeFromInt 4506 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84984, qualifiedIncome: makeFromInt 36626, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15364, stateTaxDue: makeFromInt 5626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123471, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1797, federalTaxDue: makeFromInt 18248, stateTaxDue: makeFromInt 5848 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4045, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1779 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119833, qualifiedIncome: makeFromInt 3685, itemizedDeductions: makeFromInt 16850, federalTaxDue: makeFromInt 17891, stateTaxDue: makeFromInt 5749 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129313, qualifiedIncome: makeFromInt 44024, itemizedDeductions: makeFromInt 15242, federalTaxDue: makeFromInt 33464, stateTaxDue: makeFromInt 8292 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19398, ordinaryIncomeNonSS: makeFromInt 35509, qualifiedIncome: makeFromInt 1260, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1921, stateTaxDue: makeFromInt 1412 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3630, ordinaryIncomeNonSS: makeFromInt 90436, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17468, federalTaxDue: makeFromInt 11646, stateTaxDue: makeFromInt 4267 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42774, ordinaryIncomeNonSS: makeFromInt 66169, qualifiedIncome: makeFromInt 91033, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25027, stateTaxDue: makeFromInt 7671 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14284, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1187, itemizedDeductions: makeFromInt 28730, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20859, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4846, ordinaryIncomeNonSS: makeFromInt 60664, qualifiedIncome: makeFromInt 77580, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5614, stateTaxDue: makeFromInt 6237 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13278, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45236, itemizedDeductions: makeFromInt 11080, federalTaxDue: makeFromInt 1138, stateTaxDue: makeFromInt 2083 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28609, ordinaryIncomeNonSS: makeFromInt 72653, qualifiedIncome: makeFromInt 15788, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14876, stateTaxDue: makeFromInt 4167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36672, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 233 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12382, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13889, ordinaryIncomeNonSS: makeFromInt 79673, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15146, stateTaxDue: makeFromInt 8511 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76825, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28021, federalTaxDue: makeFromInt 5516, stateTaxDue: makeFromInt 3266 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25185, ordinaryIncomeNonSS: makeFromInt 19355, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21943, federalTaxDue: makeFromInt 7278, stateTaxDue: makeFromInt 5381 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34887, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23855, federalTaxDue: makeFromInt 1125, stateTaxDue: makeFromInt 1289 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33750, ordinaryIncomeNonSS: makeFromInt 97615, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10411, federalTaxDue: makeFromInt 15572, stateTaxDue: makeFromInt 4506 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25645, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9838, federalTaxDue: makeFromInt 865, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32114, qualifiedIncome: makeFromInt 38293, itemizedDeductions: makeFromInt 19543, federalTaxDue: makeFromInt 7101, stateTaxDue: makeFromInt 3111 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39015, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 485, federalTaxDue: makeFromInt 26895, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2305, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31774, stateTaxDue: makeFromInt 7040 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24729, ordinaryIncomeNonSS: makeFromInt 16859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21, stateTaxDue: makeFromInt 411 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7877, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105982, qualifiedIncome: makeFromInt 98494, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26404, stateTaxDue: makeFromInt 9769 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41586, qualifiedIncome: makeFromInt 59417, itemizedDeductions: makeFromInt 25477, federalTaxDue: makeFromInt 5072, stateTaxDue: makeFromInt 4555 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14600, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31428, itemizedDeductions: makeFromInt 28599, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1154 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21490, ordinaryIncomeNonSS: makeFromInt 136388, qualifiedIncome: makeFromInt 24293, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29528, stateTaxDue: makeFromInt 7779 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14862, federalTaxDue: makeFromInt 26608, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41914, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14588, federalTaxDue: makeFromInt 9550, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10481, ordinaryIncomeNonSS: makeFromInt 5622, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25410, ordinaryIncomeNonSS: makeFromInt 19396, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 715 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19687, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 309 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5635, ordinaryIncomeNonSS: makeFromInt 39403, qualifiedIncome: makeFromInt 44421, itemizedDeductions: makeFromInt 4581, federalTaxDue: makeFromInt 6514, stateTaxDue: makeFromInt 3936 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25214, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59641, itemizedDeductions: makeFromInt 20760, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2307 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 710, ordinaryIncomeNonSS: makeFromInt 115860, qualifiedIncome: makeFromInt 36180, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18834, stateTaxDue: makeFromInt 7027 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15538, ordinaryIncomeNonSS: makeFromInt 63352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8017, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53380, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2094 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66527, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5504, stateTaxDue: makeFromInt 3016 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108343, qualifiedIncome: makeFromInt 56039, itemizedDeductions: makeFromInt 17998, federalTaxDue: makeFromInt 14144, stateTaxDue: makeFromInt 7744 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29899, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122929, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43053, stateTaxDue: makeFromInt 10915 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28165, ordinaryIncomeNonSS: makeFromInt 90391, qualifiedIncome: makeFromInt 28701, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20632, stateTaxDue: makeFromInt 5700 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72898, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3065 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50949, qualifiedIncome: makeFromInt 68761, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17104, stateTaxDue: makeFromInt 5656 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46632, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18601, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78151, itemizedDeductions: makeFromInt 19722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11940, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82726, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34181, stateTaxDue: makeFromInt 11318 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39994, ordinaryIncomeNonSS: makeFromInt 21433, qualifiedIncome: makeFromInt 83379, itemizedDeductions: makeFromInt 18132, federalTaxDue: makeFromInt 3959, stateTaxDue: makeFromInt 4566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32171, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77506, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5, stateTaxDue: makeFromInt 3400 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137996, qualifiedIncome: makeFromInt 23992, itemizedDeductions: makeFromInt 29125, federalTaxDue: makeFromInt 22064, stateTaxDue: makeFromInt 7524 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45596, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29157, federalTaxDue: makeFromInt 30942, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128942, qualifiedIncome: makeFromInt 54359, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29701, stateTaxDue: makeFromInt 8910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32351, ordinaryIncomeNonSS: makeFromInt 33652, qualifiedIncome: makeFromInt 68111, itemizedDeductions: makeFromInt 26960, federalTaxDue: makeFromInt 2407, stateTaxDue: makeFromInt 4537 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1304, stateTaxDue: makeFromInt 3686 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10146, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1657, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14270, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18027, qualifiedIncome: makeFromInt 58802, itemizedDeductions: makeFromInt 2862, federalTaxDue: makeFromInt 2136, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70909, qualifiedIncome: makeFromInt 82884, itemizedDeductions: makeFromInt 4967, federalTaxDue: makeFromInt 8064, stateTaxDue: makeFromInt 7215 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81376, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17879, stateTaxDue: makeFromInt 3599 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18881, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64257, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3639, stateTaxDue: makeFromInt 2958 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41741, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17441, federalTaxDue: makeFromInt 1774, stateTaxDue: makeFromInt 1476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9188, federalTaxDue: makeFromInt 30469, stateTaxDue: makeFromInt 7269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64034, itemizedDeductions: makeFromInt 1475, federalTaxDue: makeFromInt 5138, stateTaxDue: makeFromInt 2817 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127476, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19361, stateTaxDue: makeFromInt 6119 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43564, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94391, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38561, stateTaxDue: makeFromInt 9465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119392, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14080, federalTaxDue: makeFromInt 27621, stateTaxDue: makeFromInt 5715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15804, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26990, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59772, qualifiedIncome: makeFromInt 90196, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15865, stateTaxDue: makeFromInt 6923 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68812, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23906, federalTaxDue: makeFromInt 14143, stateTaxDue: makeFromInt 3186 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136703, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9660, federalTaxDue: makeFromInt 21387, stateTaxDue: makeFromInt 6421 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13888, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16534, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32465, ordinaryIncomeNonSS: makeFromInt 80874, qualifiedIncome: makeFromInt 99608, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33019, stateTaxDue: makeFromInt 8858 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29254, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50736, itemizedDeductions: makeFromInt 29832, federalTaxDue: makeFromInt 1776, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 576, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14988, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22274, stateTaxDue: makeFromInt 7674 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149706, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15799, federalTaxDue: makeFromInt 38578, stateTaxDue: makeFromInt 12110 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34829, ordinaryIncomeNonSS: makeFromInt 20836, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9177, stateTaxDue: makeFromInt 5367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5166, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38556, itemizedDeductions: makeFromInt 25275, federalTaxDue: makeFromInt 136, stateTaxDue: makeFromInt 1742 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4646, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33267, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13675, itemizedDeductions: makeFromInt 22694, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 229 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42179, ordinaryIncomeNonSS: makeFromInt 34767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24, federalTaxDue: makeFromInt 5109, stateTaxDue: makeFromInt 1283 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 334, stateTaxDue: makeFromInt 1620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21591, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19433, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25179, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43857, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32943, stateTaxDue: makeFromInt 9118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127790, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24593, federalTaxDue: makeFromInt 28162, stateTaxDue: makeFromInt 6089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31022, ordinaryIncomeNonSS: makeFromInt 67222, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6395, federalTaxDue: makeFromInt 25308, stateTaxDue: makeFromInt 7978 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25863, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6459, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12813, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4879 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33338, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30369, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18577, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38450, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10971, itemizedDeductions: makeFromInt 24369, federalTaxDue: makeFromInt 33340, stateTaxDue: makeFromInt 7781 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49430, itemizedDeductions: makeFromInt 23401, federalTaxDue: makeFromInt 193, stateTaxDue: makeFromInt 2097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79970, itemizedDeductions: makeFromInt 26157, federalTaxDue: makeFromInt 4436, stateTaxDue: makeFromInt 3528 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31172, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40055, ordinaryIncomeNonSS: makeFromInt 78445, qualifiedIncome: makeFromInt 14522, itemizedDeductions: makeFromInt 20251, federalTaxDue: makeFromInt 15768, stateTaxDue: makeFromInt 4293 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21595, stateTaxDue: makeFromInt 7288 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43944, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 914, stateTaxDue: makeFromInt 1832 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77658, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7524, federalTaxDue: makeFromInt 33904, stateTaxDue: makeFromInt 8632 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9484, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132289, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13010, federalTaxDue: makeFromInt 45527, stateTaxDue: makeFromInt 11500 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15088, federalTaxDue: makeFromInt 24969, stateTaxDue: makeFromInt 5051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23057, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93712, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6976, stateTaxDue: makeFromInt 4011 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59444, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1004, stateTaxDue: makeFromInt 2457 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19938, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27746, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 864 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21051, ordinaryIncomeNonSS: makeFromInt 88163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15648, stateTaxDue: makeFromInt 4068 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93413, itemizedDeductions: makeFromInt 1529, federalTaxDue: makeFromInt 8819, stateTaxDue: makeFromInt 4296 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59432, qualifiedIncome: makeFromInt 69214, itemizedDeductions: makeFromInt 922, federalTaxDue: makeFromInt 12626, stateTaxDue: makeFromInt 6057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26636, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12267, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46972, itemizedDeductions: makeFromInt 27161, federalTaxDue: makeFromInt 25274, stateTaxDue: makeFromInt 9374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7480, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6625, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1484, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52810, itemizedDeductions: makeFromInt 20419, federalTaxDue: makeFromInt 33159, stateTaxDue: makeFromInt 9886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38591, ordinaryIncomeNonSS: makeFromInt 81126, qualifiedIncome: makeFromInt 19073, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18253, stateTaxDue: makeFromInt 4559 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22467, itemizedDeductions: makeFromInt 27855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31863, ordinaryIncomeNonSS: makeFromInt 131847, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11131, federalTaxDue: makeFromInt 26721, stateTaxDue: makeFromInt 6173 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15307, ordinaryIncomeNonSS: makeFromInt 101777, qualifiedIncome: makeFromInt 42174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22403, stateTaxDue: makeFromInt 6893 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35065, ordinaryIncomeNonSS: makeFromInt 56775, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26941, federalTaxDue: makeFromInt 18902, stateTaxDue: makeFromInt 7271 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10631, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 193 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3244, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9154, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121609, qualifiedIncome: makeFromInt 77070, itemizedDeductions: makeFromInt 1545, federalTaxDue: makeFromInt 39540, stateTaxDue: makeFromInt 9582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47280, ordinaryIncomeNonSS: makeFromInt 57191, qualifiedIncome: makeFromInt 58115, itemizedDeductions: makeFromInt 13304, federalTaxDue: makeFromInt 20266, stateTaxDue: makeFromInt 5432 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34574, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5469, ordinaryIncomeNonSS: makeFromInt 3329, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22826, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69285, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5298, stateTaxDue: makeFromInt 2983 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21076, federalTaxDue: makeFromInt 29596, stateTaxDue: makeFromInt 6530 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96936, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9111, stateTaxDue: makeFromInt 4472 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3219, ordinaryIncomeNonSS: makeFromInt 59029, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4581, stateTaxDue: makeFromInt 2377 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63388, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17687, federalTaxDue: makeFromInt 5246, stateTaxDue: makeFromInt 2914 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4281, federalTaxDue: makeFromInt 32399, stateTaxDue: makeFromInt 7092 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52554, qualifiedIncome: makeFromInt 58040, itemizedDeductions: makeFromInt 15311, federalTaxDue: makeFromInt 10815, stateTaxDue: makeFromInt 5275 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3837, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6629, ordinaryIncomeNonSS: makeFromInt 58592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3438, stateTaxDue: makeFromInt 2255 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13947, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8982, federalTaxDue: makeFromInt 27612, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45218, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53630, itemizedDeductions: makeFromInt 9779, federalTaxDue: makeFromInt 43130, stateTaxDue: makeFromInt 9936 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31362, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21649, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36246, stateTaxDue: makeFromInt 8327 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1866, federalTaxDue: makeFromInt 22291, stateTaxDue: makeFromInt 5632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46523, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83704, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7494, stateTaxDue: makeFromInt 3718 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68994, itemizedDeductions: makeFromInt 5885, federalTaxDue: makeFromInt 899, stateTaxDue: makeFromInt 3075 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48978, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12756, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46416, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47470, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36497, stateTaxDue: makeFromInt 9299 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15836, ordinaryIncomeNonSS: makeFromInt 52693, qualifiedIncome: makeFromInt 30028, itemizedDeductions: makeFromInt 26102, federalTaxDue: makeFromInt 4418, stateTaxDue: makeFromInt 3531 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12886, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49379, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34611, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40357, ordinaryIncomeNonSS: makeFromInt 85852, qualifiedIncome: makeFromInt 37591, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19008, stateTaxDue: makeFromInt 5643 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49256, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28089, federalTaxDue: makeFromInt 2341, stateTaxDue: makeFromInt 2208 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14187, qualifiedIncome: makeFromInt 59509, itemizedDeductions: makeFromInt 22489, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3010 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22828, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58984, itemizedDeductions: makeFromInt 27321, federalTaxDue: makeFromInt 30783, stateTaxDue: makeFromInt 10005 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44060, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30734, itemizedDeductions: makeFromInt 12976, federalTaxDue: makeFromInt 575, stateTaxDue: makeFromInt 1082 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102862, qualifiedIncome: makeFromInt 28128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29814, stateTaxDue: makeFromInt 6295 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1948, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15122, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22489, ordinaryIncomeNonSS: makeFromInt 89138, qualifiedIncome: makeFromInt 64562, itemizedDeductions: makeFromInt 5400, federalTaxDue: makeFromInt 20078, stateTaxDue: makeFromInt 7186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5948, federalTaxDue: makeFromInt 36228, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6815, itemizedDeductions: makeFromInt 4373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9956, ordinaryIncomeNonSS: makeFromInt 119706, qualifiedIncome: makeFromInt 24856, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18524, stateTaxDue: makeFromInt 6924 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19976, ordinaryIncomeNonSS: makeFromInt 111868, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26320, federalTaxDue: makeFromInt 11223, stateTaxDue: makeFromInt 5118 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84742, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36478, stateTaxDue: makeFromInt 11162 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15460, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14090, ordinaryIncomeNonSS: makeFromInt 126440, qualifiedIncome: makeFromInt 85141, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34228, stateTaxDue: makeFromInt 10240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34177, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12054, itemizedDeductions: makeFromInt 25460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32185, ordinaryIncomeNonSS: makeFromInt 8862, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31901, qualifiedIncome: makeFromInt 79117, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11087, stateTaxDue: makeFromInt 5182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13413, ordinaryIncomeNonSS: makeFromInt 70644, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12859, federalTaxDue: makeFromInt 10582, stateTaxDue: makeFromInt 3256 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15581, itemizedDeductions: makeFromInt 8639, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 204 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18316, itemizedDeductions: makeFromInt 1765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26679, qualifiedIncome: makeFromInt 84902, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11411, stateTaxDue: makeFromInt 5038 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36616, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28698, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 87 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43844, ordinaryIncomeNonSS: makeFromInt 126139, qualifiedIncome: makeFromInt 64617, itemizedDeductions: makeFromInt 25665, federalTaxDue: makeFromInt 33858, stateTaxDue: makeFromInt 9163 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17692, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57376, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30753, stateTaxDue: makeFromInt 9894 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51358, qualifiedIncome: makeFromInt 36328, itemizedDeductions: makeFromInt 5311, federalTaxDue: makeFromInt 7235, stateTaxDue: makeFromInt 4129 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100343, qualifiedIncome: makeFromInt 51240, itemizedDeductions: makeFromInt 17318, federalTaxDue: makeFromInt 28302, stateTaxDue: makeFromInt 7180 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95714, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12374, federalTaxDue: makeFromInt 20558, stateTaxDue: makeFromInt 9311 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25310, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9015, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40422, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61324, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3036, stateTaxDue: makeFromInt 2811 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58144, itemizedDeductions: makeFromInt 8949, federalTaxDue: makeFromInt 1469, stateTaxDue: makeFromInt 2652 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47969, qualifiedIncome: makeFromInt 81563, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9408, stateTaxDue: makeFromInt 6157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117537, qualifiedIncome: makeFromInt 79384, itemizedDeductions: makeFromInt 9848, federalTaxDue: makeFromInt 28065, stateTaxDue: makeFromInt 9492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110030, qualifiedIncome: makeFromInt 78970, itemizedDeductions: makeFromInt 15545, federalTaxDue: makeFromInt 24702, stateTaxDue: makeFromInt 9088 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16713, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142125, qualifiedIncome: makeFromInt 3894, itemizedDeductions: makeFromInt 14224, federalTaxDue: makeFromInt 23765, stateTaxDue: makeFromInt 7046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 582, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3281, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 449, qualifiedIncome: makeFromInt 6509, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39519, ordinaryIncomeNonSS: makeFromInt 99136, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14878, stateTaxDue: makeFromInt 4282 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69832, qualifiedIncome: makeFromInt 11417, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9211, stateTaxDue: makeFromInt 3587 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86855, itemizedDeductions: makeFromInt 11812, federalTaxDue: makeFromInt 4921, stateTaxDue: makeFromInt 3668 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41168, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1507, stateTaxDue: makeFromInt 1583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38166, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28402, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1518 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7935, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13101, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7794, ordinaryIncomeNonSS: makeFromInt 92680, qualifiedIncome: makeFromInt 7309, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14355, stateTaxDue: makeFromInt 4744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19727, stateTaxDue: makeFromInt 6996 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9082, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41211, ordinaryIncomeNonSS: makeFromInt 119093, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33293, stateTaxDue: makeFromInt 5849 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14620, ordinaryIncomeNonSS: makeFromInt 30452, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25132, federalTaxDue: makeFromInt 1302, stateTaxDue: makeFromInt 1148 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11778, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23272, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5946, itemizedDeductions: makeFromInt 27693, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32280, ordinaryIncomeNonSS: makeFromInt 92202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12504, federalTaxDue: makeFromInt 12159, stateTaxDue: makeFromInt 3935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23795, ordinaryIncomeNonSS: makeFromInt 30763, qualifiedIncome: makeFromInt 18422, itemizedDeductions: makeFromInt 7737, federalTaxDue: makeFromInt 8335, stateTaxDue: makeFromInt 2284 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18477, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 284, itemizedDeductions: makeFromInt 22451, federalTaxDue: makeFromInt 32002, stateTaxDue: makeFromInt 7440 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39969, ordinaryIncomeNonSS: makeFromInt 69419, qualifiedIncome: makeFromInt 73383, itemizedDeductions: makeFromInt 25240, federalTaxDue: makeFromInt 21902, stateTaxDue: makeFromInt 6765 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103716, qualifiedIncome: makeFromInt 46048, itemizedDeductions: makeFromInt 22297, federalTaxDue: makeFromInt 13035, stateTaxDue: makeFromInt 6985 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100714, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11603, federalTaxDue: makeFromInt 9942, stateTaxDue: makeFromInt 4461 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38245, itemizedDeductions: makeFromInt 13653, federalTaxDue: makeFromInt 486, stateTaxDue: makeFromInt 1337 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102259, qualifiedIncome: makeFromInt 29962, itemizedDeductions: makeFromInt 20154, federalTaxDue: makeFromInt 12662, stateTaxDue: makeFromInt 5936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11272, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15077, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32952, qualifiedIncome: makeFromInt 7220, itemizedDeductions: makeFromInt 71, federalTaxDue: makeFromInt 2278, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48302, ordinaryIncomeNonSS: makeFromInt 120450, qualifiedIncome: makeFromInt 79061, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39199, stateTaxDue: makeFromInt 9624 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2574, ordinaryIncomeNonSS: makeFromInt 31314, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14714, federalTaxDue: makeFromInt 995, stateTaxDue: makeFromInt 991 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27001, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15577, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23242, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10203, ordinaryIncomeNonSS: makeFromInt 18730, qualifiedIncome: makeFromInt 21692, itemizedDeductions: makeFromInt 1709, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1346 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21858, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49383, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 183, stateTaxDue: makeFromInt 1794 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4426, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72563, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39541, stateTaxDue: makeFromInt 10922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22433, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39706, itemizedDeductions: makeFromInt 7289, federalTaxDue: makeFromInt 35618, stateTaxDue: makeFromInt 9226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23324, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96043, itemizedDeductions: makeFromInt 8554, federalTaxDue: makeFromInt 8759, stateTaxDue: makeFromInt 4674 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56886, itemizedDeductions: makeFromInt 5861, federalTaxDue: makeFromInt 1839, stateTaxDue: makeFromInt 2389 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64078, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2359, stateTaxDue: makeFromInt 2949 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46392, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40951, itemizedDeductions: makeFromInt 2247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1640 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47035, ordinaryIncomeNonSS: makeFromInt 143362, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13156, federalTaxDue: makeFromInt 47769, stateTaxDue: makeFromInt 11713 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41100, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9830, ordinaryIncomeNonSS: makeFromInt 23045, qualifiedIncome: makeFromInt 79622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5600, stateTaxDue: makeFromInt 4878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 808, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40464, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30656, qualifiedIncome: makeFromInt 31424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4694, stateTaxDue: makeFromInt 2942 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5195, stateTaxDue: makeFromInt 3890 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45966, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14790, itemizedDeductions: makeFromInt 29920, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 65 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133845, qualifiedIncome: makeFromInt 88184, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33116, stateTaxDue: makeFromInt 10526 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18606, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29715, federalTaxDue: makeFromInt 156, stateTaxDue: makeFromInt 398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122693, qualifiedIncome: makeFromInt 47715, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24740, stateTaxDue: makeFromInt 8140 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29676, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64269, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13701, federalTaxDue: makeFromInt 29663, stateTaxDue: makeFromInt 7758 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26155, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69764, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13642, federalTaxDue: makeFromInt 4800, stateTaxDue: makeFromInt 3013 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67157, itemizedDeductions: makeFromInt 20960, federalTaxDue: makeFromInt 2821, stateTaxDue: makeFromInt 3103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44763, qualifiedIncome: makeFromInt 93428, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18227, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31616, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27678, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11176, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59082, itemizedDeductions: makeFromInt 1257, federalTaxDue: makeFromInt 35647, stateTaxDue: makeFromInt 10112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14365, stateTaxDue: makeFromInt 5484 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21150, qualifiedIncome: makeFromInt 28241, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2095 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16907, itemizedDeductions: makeFromInt 851, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 638 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4396, ordinaryIncomeNonSS: makeFromInt 73746, qualifiedIncome: makeFromInt 22268, itemizedDeductions: makeFromInt 12745, federalTaxDue: makeFromInt 8869, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13358, itemizedDeductions: makeFromInt 19398, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 334 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19872, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94401, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33752, stateTaxDue: makeFromInt 11745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48787, ordinaryIncomeNonSS: makeFromInt 139634, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2286, federalTaxDue: makeFromInt 32232, stateTaxDue: makeFromInt 6527 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3636, ordinaryIncomeNonSS: makeFromInt 130442, qualifiedIncome: makeFromInt 14950, itemizedDeductions: makeFromInt 6578, federalTaxDue: makeFromInt 23057, stateTaxDue: makeFromInt 6815 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11013, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 296 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25269, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69815, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35535, stateTaxDue: makeFromInt 10416 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35921, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16597, federalTaxDue: makeFromInt 2488, stateTaxDue: makeFromInt 1121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72022, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3243, stateTaxDue: makeFromInt 3326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83604, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6289, stateTaxDue: makeFromInt 3925 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48457, itemizedDeductions: makeFromInt 4765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1748 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9129, ordinaryIncomeNonSS: makeFromInt 100113, qualifiedIncome: makeFromInt 38492, itemizedDeductions: makeFromInt 28447, federalTaxDue: makeFromInt 19037, stateTaxDue: makeFromInt 6675 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83968, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6008, stateTaxDue: makeFromInt 3823 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75985, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27274, stateTaxDue: makeFromInt 10824 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51568, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2248, stateTaxDue: makeFromInt 2203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18963, ordinaryIncomeNonSS: makeFromInt 31549, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29130, federalTaxDue: makeFromInt 13235, stateTaxDue: makeFromInt 6485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30978, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48076, ordinaryIncomeNonSS: makeFromInt 91394, qualifiedIncome: makeFromInt 80284, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34678, stateTaxDue: makeFromInt 8327 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114699, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9578, federalTaxDue: makeFromInt 26495, stateTaxDue: makeFromInt 5480 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20736, ordinaryIncomeNonSS: makeFromInt 55530, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5499, stateTaxDue: makeFromInt 2402 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9988, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16167, itemizedDeductions: makeFromInt 29083, federalTaxDue: makeFromInt 25277, stateTaxDue: makeFromInt 7733 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88941, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24340, stateTaxDue: makeFromInt 9187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11922, ordinaryIncomeNonSS: makeFromInt 120616, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8082, federalTaxDue: makeFromInt 34597, stateTaxDue: makeFromInt 10701 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121162, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13256, stateTaxDue: makeFromInt 5730 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22265, federalTaxDue: makeFromInt 36228, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35945, qualifiedIncome: makeFromInt 40730, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 462, stateTaxDue: makeFromInt 3482 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42516, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67328, itemizedDeductions: makeFromInt 5206, federalTaxDue: makeFromInt 9431, stateTaxDue: makeFromInt 3111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 59039, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14575, ordinaryIncomeNonSS: makeFromInt 43264, qualifiedIncome: makeFromInt 93334, itemizedDeductions: makeFromInt 1682, federalTaxDue: makeFromInt 14653, stateTaxDue: makeFromInt 6455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60663, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10043, stateTaxDue: makeFromInt 7643 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6768, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40102, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92569, itemizedDeductions: makeFromInt 17771, federalTaxDue: makeFromInt 11454, stateTaxDue: makeFromInt 4497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44854, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43242, itemizedDeductions: makeFromInt 3149, federalTaxDue: makeFromInt 41281, stateTaxDue: makeFromInt 9305 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21613, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22514, ordinaryIncomeNonSS: makeFromInt 126186, qualifiedIncome: makeFromInt 96504, itemizedDeductions: makeFromInt 4834, federalTaxDue: makeFromInt 34136, stateTaxDue: makeFromInt 10704 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3253, ordinaryIncomeNonSS: makeFromInt 70362, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7262, stateTaxDue: makeFromInt 3263 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2833, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84641, qualifiedIncome: makeFromInt 30506, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23857, stateTaxDue: makeFromInt 5302 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143758, qualifiedIncome: makeFromInt 98892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30652, stateTaxDue: makeFromInt 11458 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49656, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2387, stateTaxDue: makeFromInt 2008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24521, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145568, qualifiedIncome: makeFromInt 1130, itemizedDeductions: makeFromInt 20001, federalTaxDue: makeFromInt 15071, stateTaxDue: makeFromInt 6660 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27285, ordinaryIncomeNonSS: makeFromInt 22048, qualifiedIncome: makeFromInt 71106, itemizedDeductions: makeFromInt 19257, federalTaxDue: makeFromInt 10190, stateTaxDue: makeFromInt 4403 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31613, stateTaxDue: makeFromInt 6346 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40371, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23953, stateTaxDue: makeFromInt 8844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17049, federalTaxDue: makeFromInt 24593, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33314, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8493, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5307, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18252, ordinaryIncomeNonSS: makeFromInt 65792, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19552, federalTaxDue: makeFromInt 14079, stateTaxDue: makeFromInt 7815 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 539 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99214, qualifiedIncome: makeFromInt 55628, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29558, stateTaxDue: makeFromInt 7550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28711, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13105, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9235, federalTaxDue: makeFromInt 22152, stateTaxDue: makeFromInt 6567 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39404, ordinaryIncomeNonSS: makeFromInt 143987, qualifiedIncome: makeFromInt 68562, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32206, stateTaxDue: makeFromInt 10152 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39604, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1011, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41122, ordinaryIncomeNonSS: makeFromInt 97764, qualifiedIncome: makeFromInt 334, itemizedDeductions: makeFromInt 24371, federalTaxDue: makeFromInt 19889, stateTaxDue: makeFromInt 4450 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28645, ordinaryIncomeNonSS: makeFromInt 100180, qualifiedIncome: makeFromInt 10183, itemizedDeductions: makeFromInt 10152, federalTaxDue: makeFromInt 20181, stateTaxDue: makeFromInt 5263 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147255, qualifiedIncome: makeFromInt 76514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35585, stateTaxDue: makeFromInt 10933 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29300, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 833 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43699, itemizedDeductions: makeFromInt 26141, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 1930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80611, qualifiedIncome: makeFromInt 60061, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22996, stateTaxDue: makeFromInt 6746 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31212, ordinaryIncomeNonSS: makeFromInt 46997, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5449, federalTaxDue: makeFromInt 22350, stateTaxDue: makeFromInt 7095 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40350, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29870, federalTaxDue: makeFromInt 9505, stateTaxDue: makeFromInt 6643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45184, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143271, qualifiedIncome: makeFromInt 71421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26424, stateTaxDue: makeFromInt 10260 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15407, ordinaryIncomeNonSS: makeFromInt 109947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10496, stateTaxDue: makeFromInt 5022 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24327, itemizedDeductions: makeFromInt 29227, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 761 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32719, ordinaryIncomeNonSS: makeFromInt 65536, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8850, stateTaxDue: makeFromInt 2822 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26979, ordinaryIncomeNonSS: makeFromInt 56871, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17105, stateTaxDue: makeFromInt 7369 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8949, qualifiedIncome: makeFromInt 77894, itemizedDeductions: makeFromInt 24168, federalTaxDue: makeFromInt 5778, stateTaxDue: makeFromInt 3961 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20913, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2242, stateTaxDue: makeFromInt 2844 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66300, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5125, stateTaxDue: makeFromInt 2940 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20560, stateTaxDue: makeFromInt 6188 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37532, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53120, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2056 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62572, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3670, stateTaxDue: makeFromInt 2674 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38830, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 846, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37291, qualifiedIncome: makeFromInt 59084, itemizedDeductions: makeFromInt 874, federalTaxDue: makeFromInt 10834, stateTaxDue: makeFromInt 4691 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2093, ordinaryIncomeNonSS: makeFromInt 134650, qualifiedIncome: makeFromInt 63592, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31049, stateTaxDue: makeFromInt 9657 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39458, ordinaryIncomeNonSS: makeFromInt 1715, qualifiedIncome: makeFromInt 30367, itemizedDeductions: makeFromInt 5700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47651, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21047, federalTaxDue: makeFromInt 13544, stateTaxDue: makeFromInt 7183 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3503, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51240, itemizedDeductions: makeFromInt 26169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1987 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53620, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10147, stateTaxDue: makeFromInt 2426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23805, qualifiedIncome: makeFromInt 6061, itemizedDeductions: makeFromInt 1593, federalTaxDue: makeFromInt 744, stateTaxDue: makeFromInt 818 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15123, ordinaryIncomeNonSS: makeFromInt 84532, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8146, federalTaxDue: makeFromInt 12599, stateTaxDue: makeFromInt 3772 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97283, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7539, stateTaxDue: makeFromInt 4609 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11229, ordinaryIncomeNonSS: makeFromInt 139641, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 909, federalTaxDue: makeFromInt 21033, stateTaxDue: makeFromInt 6607 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35707, ordinaryIncomeNonSS: makeFromInt 6996, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10737, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86481, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8043, stateTaxDue: makeFromInt 3869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38638, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28741, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44997, ordinaryIncomeNonSS: makeFromInt 15179, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 121 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114913, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7153, federalTaxDue: makeFromInt 15228, stateTaxDue: makeFromInt 5171 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44965, itemizedDeductions: makeFromInt 28804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48713, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27801, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57413, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4156, stateTaxDue: makeFromInt 2500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62534, qualifiedIncome: makeFromInt 97869, itemizedDeductions: makeFromInt 17139, federalTaxDue: makeFromInt 14862, stateTaxDue: makeFromInt 7732 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21422, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2062, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1846, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7075, ordinaryIncomeNonSS: makeFromInt 29352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 289, stateTaxDue: makeFromInt 1093 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22879, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2572, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13230, federalTaxDue: makeFromInt 4168, stateTaxDue: makeFromInt 2080 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103079, qualifiedIncome: makeFromInt 47244, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16339, stateTaxDue: makeFromInt 6941 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142517, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21415, stateTaxDue: makeFromInt 6922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2383, ordinaryIncomeNonSS: makeFromInt 136364, qualifiedIncome: makeFromInt 25182, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22219, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6731, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28943, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1072 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11119, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109624, qualifiedIncome: makeFromInt 35838, itemizedDeductions: makeFromInt 4126, federalTaxDue: makeFromInt 20162, stateTaxDue: makeFromInt 6970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22986, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23377, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70102, itemizedDeductions: makeFromInt 15398, federalTaxDue: makeFromInt 42, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16539, itemizedDeductions: makeFromInt 25654, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 415 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41909, qualifiedIncome: makeFromInt 82314, itemizedDeductions: makeFromInt 29905, federalTaxDue: makeFromInt 1031, stateTaxDue: makeFromInt 5536 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3469, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50350, qualifiedIncome: makeFromInt 3340, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10, stateTaxDue: makeFromInt 2187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2575, ordinaryIncomeNonSS: makeFromInt 19893, qualifiedIncome: makeFromInt 30993, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120251, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15621, federalTaxDue: makeFromInt 12638, stateTaxDue: makeFromInt 5480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13032, stateTaxDue: makeFromInt 5406 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20514, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97553, itemizedDeductions: makeFromInt 23567, federalTaxDue: makeFromInt 8573, stateTaxDue: makeFromInt 4423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1989, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41094, ordinaryIncomeNonSS: makeFromInt 12312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 41 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19510, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7179, itemizedDeductions: makeFromInt 5671, federalTaxDue: makeFromInt 30103, stateTaxDue: makeFromInt 7567 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68477, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7425, stateTaxDue: makeFromInt 2849 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42623, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11065, ordinaryIncomeNonSS: makeFromInt 57201, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11684, stateTaxDue: makeFromInt 7466 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16626, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44113, ordinaryIncomeNonSS: makeFromInt 130565, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25563, stateTaxDue: makeFromInt 5953 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11418, ordinaryIncomeNonSS: makeFromInt 62087, qualifiedIncome: makeFromInt 13227, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6795, stateTaxDue: makeFromInt 3511 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25825, ordinaryIncomeNonSS: makeFromInt 78394, qualifiedIncome: makeFromInt 53867, itemizedDeductions: makeFromInt 28930, federalTaxDue: makeFromInt 11659, stateTaxDue: makeFromInt 6138 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19198, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19915, itemizedDeductions: makeFromInt 23929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 741 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17539, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 446 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20775, ordinaryIncomeNonSS: makeFromInt 42035, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2359, stateTaxDue: makeFromInt 1427 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64378, itemizedDeductions: makeFromInt 7000, federalTaxDue: makeFromInt 10706, stateTaxDue: makeFromInt 2764 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6117, ordinaryIncomeNonSS: makeFromInt 143375, qualifiedIncome: makeFromInt 61059, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24721, stateTaxDue: makeFromInt 9547 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37824, itemizedDeductions: makeFromInt 28807, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1436 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16817, ordinaryIncomeNonSS: makeFromInt 78671, qualifiedIncome: makeFromInt 97720, itemizedDeductions: makeFromInt 14857, federalTaxDue: makeFromInt 20970, stateTaxDue: makeFromInt 8261 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29041, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15852, federalTaxDue: makeFromInt 1206, stateTaxDue: makeFromInt 997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17498, ordinaryIncomeNonSS: makeFromInt 136571, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29059, stateTaxDue: makeFromInt 6618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16480, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48999, ordinaryIncomeNonSS: makeFromInt 113922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26104, stateTaxDue: makeFromInt 5441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48833, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26857, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38083, ordinaryIncomeNonSS: makeFromInt 122753, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27586, federalTaxDue: makeFromInt 24689, stateTaxDue: makeFromInt 5883 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10210, ordinaryIncomeNonSS: makeFromInt 109952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26305, federalTaxDue: makeFromInt 15226, stateTaxDue: makeFromInt 5243 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29249, qualifiedIncome: makeFromInt 73170, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4646 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31194, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3083, federalTaxDue: makeFromInt 7341, stateTaxDue: makeFromInt 6242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96281, qualifiedIncome: makeFromInt 20027, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5977, stateTaxDue: makeFromInt 5279 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21443, ordinaryIncomeNonSS: makeFromInt 24132, qualifiedIncome: makeFromInt 93101, itemizedDeductions: makeFromInt 3011, federalTaxDue: makeFromInt 2150, stateTaxDue: makeFromInt 5387 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84256, itemizedDeductions: makeFromInt 25523, federalTaxDue: makeFromInt 9037, stateTaxDue: makeFromInt 3758 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1196 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18266, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49602, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38224, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25098, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39759, ordinaryIncomeNonSS: makeFromInt 70743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14172, stateTaxDue: makeFromInt 3282 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1800, ordinaryIncomeNonSS: makeFromInt 129747, qualifiedIncome: makeFromInt 23011, itemizedDeductions: makeFromInt 22589, federalTaxDue: makeFromInt 15209, stateTaxDue: makeFromInt 7163 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19439, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32326, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70494, itemizedDeductions: makeFromInt 22512, federalTaxDue: makeFromInt 5564, stateTaxDue: makeFromInt 3270 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21621, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22840, federalTaxDue: makeFromInt 26036, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16838, ordinaryIncomeNonSS: makeFromInt 77839, qualifiedIncome: makeFromInt 37884, itemizedDeductions: makeFromInt 18374, federalTaxDue: makeFromInt 16352, stateTaxDue: makeFromInt 5299 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14157, federalTaxDue: makeFromInt 15876, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50850, itemizedDeductions: makeFromInt 6522, federalTaxDue: makeFromInt 1809, stateTaxDue: makeFromInt 1968 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5264, federalTaxDue: makeFromInt 25632, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30444, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25891, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21987, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94371, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34143, stateTaxDue: makeFromInt 11544 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8745, ordinaryIncomeNonSS: makeFromInt 43397, qualifiedIncome: makeFromInt 79175, itemizedDeductions: makeFromInt 3480, federalTaxDue: makeFromInt 9908, stateTaxDue: makeFromInt 5802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14417, itemizedDeductions: makeFromInt 14939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 185 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21635, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 675 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33964, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51224, itemizedDeductions: makeFromInt 17662, federalTaxDue: makeFromInt 29911, stateTaxDue: makeFromInt 9386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34351, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1607, federalTaxDue: makeFromInt 32295, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24931, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2759, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121358, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14495, stateTaxDue: makeFromInt 5493 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12327, ordinaryIncomeNonSS: makeFromInt 9434, qualifiedIncome: makeFromInt 47656, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3170, stateTaxDue: makeFromInt 2459 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45543, ordinaryIncomeNonSS: makeFromInt 26901, qualifiedIncome: makeFromInt 7431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3846, stateTaxDue: makeFromInt 1462 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8894, ordinaryIncomeNonSS: makeFromInt 98521, qualifiedIncome: makeFromInt 39389, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20420, stateTaxDue: makeFromInt 6441 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44030, itemizedDeductions: makeFromInt 7910, federalTaxDue: makeFromInt 545, stateTaxDue: makeFromInt 1947 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24822, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48053, ordinaryIncomeNonSS: makeFromInt 85546, qualifiedIncome: makeFromInt 2692, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22147, stateTaxDue: makeFromInt 4072 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80573, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2636, stateTaxDue: makeFromInt 3654 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23951, ordinaryIncomeNonSS: makeFromInt 9904, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 40 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16164, itemizedDeductions: makeFromInt 1014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127005, qualifiedIncome: makeFromInt 10350, itemizedDeductions: makeFromInt 5452, federalTaxDue: makeFromInt 39153, stateTaxDue: makeFromInt 6781 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133898, qualifiedIncome: makeFromInt 72087, itemizedDeductions: makeFromInt 29371, federalTaxDue: makeFromInt 40274, stateTaxDue: makeFromInt 9978 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99040, itemizedDeductions: makeFromInt 18517, federalTaxDue: makeFromInt 6816, stateTaxDue: makeFromInt 4577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32675, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10884, stateTaxDue: makeFromInt 6338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75182, qualifiedIncome: makeFromInt 55481, itemizedDeductions: makeFromInt 6022, federalTaxDue: makeFromInt 8799, stateTaxDue: makeFromInt 6011 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5607, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2695, federalTaxDue: makeFromInt 19727, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25247, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 34078, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6319, stateTaxDue: makeFromInt 1391 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26626, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 293, stateTaxDue: makeFromInt 1076 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5958, federalTaxDue: makeFromInt 29019, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130245, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20026, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12097, ordinaryIncomeNonSS: makeFromInt 137657, qualifiedIncome: makeFromInt 8274, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28267, stateTaxDue: makeFromInt 7014 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38057, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20652, federalTaxDue: makeFromInt 1898, stateTaxDue: makeFromInt 1717 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26325, ordinaryIncomeNonSS: makeFromInt 19119, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10106, stateTaxDue: makeFromInt 5626 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91780, itemizedDeductions: makeFromInt 22321, federalTaxDue: makeFromInt 4055, stateTaxDue: makeFromInt 4014 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53309, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22365, federalTaxDue: makeFromInt 10632, stateTaxDue: makeFromInt 2372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46763, ordinaryIncomeNonSS: makeFromInt 39911, qualifiedIncome: makeFromInt 64739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6311, stateTaxDue: makeFromInt 4684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27564, qualifiedIncome: makeFromInt 61815, itemizedDeductions: makeFromInt 8461, federalTaxDue: makeFromInt 5314, stateTaxDue: makeFromInt 4212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72936, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5846, stateTaxDue: makeFromInt 3169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20494, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37016, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15146, federalTaxDue: makeFromInt 4089, stateTaxDue: makeFromInt 6624 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21434, itemizedDeductions: makeFromInt 4714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 817 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95812, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18423, stateTaxDue: makeFromInt 4216 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25614, itemizedDeductions: makeFromInt 25031, federalTaxDue: makeFromInt 19718, stateTaxDue: makeFromInt 8106 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39745, ordinaryIncomeNonSS: makeFromInt 93328, qualifiedIncome: makeFromInt 35749, itemizedDeductions: makeFromInt 5634, federalTaxDue: makeFromInt 16168, stateTaxDue: makeFromInt 5779 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40394, ordinaryIncomeNonSS: makeFromInt 125990, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27245, stateTaxDue: makeFromInt 6045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7768, itemizedDeductions: makeFromInt 20971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 13 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30945, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40917, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1638 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15483, ordinaryIncomeNonSS: makeFromInt 117680, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22447, federalTaxDue: makeFromInt 16630, stateTaxDue: makeFromInt 5509 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27409, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23196, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 685 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67210, qualifiedIncome: makeFromInt 42078, itemizedDeductions: makeFromInt 2743, federalTaxDue: makeFromInt 11572, stateTaxDue: makeFromInt 5023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38294, ordinaryIncomeNonSS: makeFromInt 147755, qualifiedIncome: makeFromInt 77219, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48723, stateTaxDue: makeFromInt 11127 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85209, qualifiedIncome: makeFromInt 66821, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16607, stateTaxDue: makeFromInt 7132 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24606, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 602 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10830, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19897, ordinaryIncomeNonSS: makeFromInt 122592, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29032, stateTaxDue: makeFromInt 10455 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25848, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 885, stateTaxDue: makeFromInt 1037 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22133, ordinaryIncomeNonSS: makeFromInt 67941, qualifiedIncome: makeFromInt 69383, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17946, stateTaxDue: makeFromInt 6411 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25065, ordinaryIncomeNonSS: makeFromInt 91949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12701, stateTaxDue: makeFromInt 4023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17431, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34556, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69934, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4594, stateTaxDue: makeFromInt 3122 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31780, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 886, federalTaxDue: makeFromInt 29743, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21357, itemizedDeductions: makeFromInt 23136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 493 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41725, ordinaryIncomeNonSS: makeFromInt 131769, qualifiedIncome: makeFromInt 8271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30186, stateTaxDue: makeFromInt 6591 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60991, qualifiedIncome: makeFromInt 79141, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17861, stateTaxDue: makeFromInt 6800 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16147, qualifiedIncome: makeFromInt 77451, itemizedDeductions: makeFromInt 20301, federalTaxDue: makeFromInt 13782, stateTaxDue: makeFromInt 4383 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66585, itemizedDeductions: makeFromInt 9642, federalTaxDue: makeFromInt 2735, stateTaxDue: makeFromInt 2874 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31475, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27494, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145468, qualifiedIncome: makeFromInt 33015, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24649, stateTaxDue: makeFromInt 8450 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17494, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90544, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7998, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32233, qualifiedIncome: makeFromInt 86647, itemizedDeductions: makeFromInt 10760, federalTaxDue: makeFromInt 12113, stateTaxDue: makeFromInt 5838 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29402, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37870, ordinaryIncomeNonSS: makeFromInt 5821, qualifiedIncome: makeFromInt 63695, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1156, stateTaxDue: makeFromInt 2801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6280, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22551, qualifiedIncome: makeFromInt 34774, itemizedDeductions: makeFromInt 9224, federalTaxDue: makeFromInt 225, stateTaxDue: makeFromInt 2291 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36803, ordinaryIncomeNonSS: makeFromInt 12716, qualifiedIncome: makeFromInt 77320, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11397, stateTaxDue: makeFromInt 4047 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81359, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11598, stateTaxDue: makeFromInt 3813 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 531, ordinaryIncomeNonSS: makeFromInt 37572, qualifiedIncome: makeFromInt 56821, itemizedDeductions: makeFromInt 6466, federalTaxDue: makeFromInt 9395, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44560, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30318, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48914, ordinaryIncomeNonSS: makeFromInt 99153, qualifiedIncome: makeFromInt 48757, itemizedDeductions: makeFromInt 18434, federalTaxDue: makeFromInt 24368, stateTaxDue: makeFromInt 6891 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128257, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43748, stateTaxDue: makeFromInt 11038 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19758, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81294, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40849, stateTaxDue: makeFromInt 11449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3604, qualifiedIncome: makeFromInt 22172, itemizedDeductions: makeFromInt 16939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30538, qualifiedIncome: makeFromInt 75453, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3495, stateTaxDue: makeFromInt 4957 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26569, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19938, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46376, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1077, stateTaxDue: makeFromInt 1814 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31817, ordinaryIncomeNonSS: makeFromInt 30866, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26327, federalTaxDue: makeFromInt 2156, stateTaxDue: makeFromInt 1288 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29258, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 876, stateTaxDue: makeFromInt 888 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35801, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98657, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14712, stateTaxDue: makeFromInt 4807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53504, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33522, stateTaxDue: makeFromInt 9950 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36736, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8717, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139572, qualifiedIncome: makeFromInt 78701, itemizedDeductions: makeFromInt 2189, federalTaxDue: makeFromInt 25387, stateTaxDue: makeFromInt 10239 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 864 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29491, ordinaryIncomeNonSS: makeFromInt 30681, qualifiedIncome: makeFromInt 36320, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6127, stateTaxDue: makeFromInt 2975 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2616, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19719, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24260, ordinaryIncomeNonSS: makeFromInt 2853, qualifiedIncome: makeFromInt 48480, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1965 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41408, ordinaryIncomeNonSS: makeFromInt 33434, qualifiedIncome: makeFromInt 7217, itemizedDeductions: makeFromInt 25390, federalTaxDue: makeFromInt 3964, stateTaxDue: makeFromInt 1458 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29326, ordinaryIncomeNonSS: makeFromInt 69089, qualifiedIncome: makeFromInt 6475, itemizedDeductions: makeFromInt 6400, federalTaxDue: makeFromInt 12829, stateTaxDue: makeFromInt 3523 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92106, qualifiedIncome: makeFromInt 65048, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10091, stateTaxDue: makeFromInt 7362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15306, federalTaxDue: makeFromInt 15832, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127414, qualifiedIncome: makeFromInt 98202, itemizedDeductions: makeFromInt 26955, federalTaxDue: makeFromInt 35452, stateTaxDue: makeFromInt 10806 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46532, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84489, itemizedDeductions: makeFromInt 15721, federalTaxDue: makeFromInt 5421, stateTaxDue: makeFromInt 3969 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27052, itemizedDeductions: makeFromInt 1151, federalTaxDue: makeFromInt 30765, stateTaxDue: makeFromInt 8598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25746, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51971, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34890, stateTaxDue: makeFromInt 9872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70872, itemizedDeductions: makeFromInt 1370, federalTaxDue: makeFromInt 38234, stateTaxDue: makeFromInt 10836 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95550, itemizedDeductions: makeFromInt 7053, federalTaxDue: makeFromInt 30208, stateTaxDue: makeFromInt 11803 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13681, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14047, federalTaxDue: makeFromInt 26557, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6960, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44152, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 563, stateTaxDue: makeFromInt 1753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26664, ordinaryIncomeNonSS: makeFromInt 111576, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24557, federalTaxDue: makeFromInt 35404, stateTaxDue: makeFromInt 10124 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32002, ordinaryIncomeNonSS: makeFromInt 19080, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5617, federalTaxDue: makeFromInt 980, stateTaxDue: makeFromInt 699 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98634, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29587, stateTaxDue: makeFromInt 4806 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8282, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17890, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24451, ordinaryIncomeNonSS: makeFromInt 20371, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 762, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34690, ordinaryIncomeNonSS: makeFromInt 127215, qualifiedIncome: makeFromInt 53595, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28863, stateTaxDue: makeFromInt 8687 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9896, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3102, itemizedDeductions: makeFromInt 28917, federalTaxDue: makeFromInt 25719, stateTaxDue: makeFromInt 7509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60632, itemizedDeductions: makeFromInt 15089, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99467, qualifiedIncome: makeFromInt 24651, itemizedDeductions: makeFromInt 27333, federalTaxDue: makeFromInt 15016, stateTaxDue: makeFromInt 5983 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110472, qualifiedIncome: makeFromInt 82264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37403, stateTaxDue: makeFromInt 9390 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59139, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 501, stateTaxDue: makeFromInt 2382 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12698, ordinaryIncomeNonSS: makeFromInt 105334, qualifiedIncome: makeFromInt 16618, itemizedDeductions: makeFromInt 12066, federalTaxDue: makeFromInt 10333, stateTaxDue: makeFromInt 5423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12201, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82594, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42896, stateTaxDue: makeFromInt 11434 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39018, ordinaryIncomeNonSS: makeFromInt 59855, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14158, stateTaxDue: makeFromInt 2706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25795, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 969 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128141, qualifiedIncome: makeFromInt 79587, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38120, stateTaxDue: makeFromInt 10011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16281, itemizedDeductions: makeFromInt 20156, federalTaxDue: makeFromInt 24138, stateTaxDue: makeFromInt 7930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28660, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 270, federalTaxDue: makeFromInt 6708, stateTaxDue: makeFromInt 6113 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10263, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15884, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67154, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46092, stateTaxDue: makeFromInt 10524 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82609, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21420, federalTaxDue: makeFromInt 5644, stateTaxDue: makeFromInt 3456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40295, ordinaryIncomeNonSS: makeFromInt 139154, qualifiedIncome: makeFromInt 83815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51264, stateTaxDue: makeFromInt 11147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12577, federalTaxDue: makeFromInt 27404, stateTaxDue: makeFromInt 7242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7610, ordinaryIncomeNonSS: makeFromInt 94643, qualifiedIncome: makeFromInt 7707, itemizedDeductions: makeFromInt 2864, federalTaxDue: makeFromInt 19618, stateTaxDue: makeFromInt 4995 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2297, qualifiedIncome: makeFromInt 8117, itemizedDeductions: makeFromInt 1647, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46706, qualifiedIncome: makeFromInt 84089, itemizedDeductions: makeFromInt 24918, federalTaxDue: makeFromInt 21671, stateTaxDue: makeFromInt 6085 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16730, ordinaryIncomeNonSS: makeFromInt 23329, qualifiedIncome: makeFromInt 32364, itemizedDeductions: makeFromInt 11746, federalTaxDue: makeFromInt 3239, stateTaxDue: makeFromInt 2330 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19748, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102482, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18245, stateTaxDue: makeFromInt 4731 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100154, qualifiedIncome: makeFromInt 98319, itemizedDeductions: makeFromInt 21928, federalTaxDue: makeFromInt 27544, stateTaxDue: makeFromInt 9775 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46489, qualifiedIncome: makeFromInt 33913, itemizedDeductions: makeFromInt 1316, federalTaxDue: makeFromInt 5558, stateTaxDue: makeFromInt 3565 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138635, qualifiedIncome: makeFromInt 36960, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18920, stateTaxDue: makeFromInt 8105 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10689, ordinaryIncomeNonSS: makeFromInt 129762, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24733, stateTaxDue: makeFromInt 6190 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11771, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 808 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71136, qualifiedIncome: makeFromInt 30924, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4793, stateTaxDue: makeFromInt 4777 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149243, qualifiedIncome: makeFromInt 66243, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29663, stateTaxDue: makeFromInt 10399 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140457, qualifiedIncome: makeFromInt 80729, itemizedDeductions: makeFromInt 17804, federalTaxDue: makeFromInt 34397, stateTaxDue: makeFromInt 10730 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33949, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1693, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17269, stateTaxDue: makeFromInt 7110 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15678, ordinaryIncomeNonSS: makeFromInt 59975, qualifiedIncome: makeFromInt 45303, itemizedDeductions: makeFromInt 9552, federalTaxDue: makeFromInt 15305, stateTaxDue: makeFromInt 5009 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87978, itemizedDeductions: makeFromInt 17154, federalTaxDue: makeFromInt 37760, stateTaxDue: makeFromInt 11708 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45582, itemizedDeductions: makeFromInt 25593, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1804 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40038, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5125, stateTaxDue: makeFromInt 2152 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16134, itemizedDeductions: makeFromInt 19447, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 465, ordinaryIncomeNonSS: makeFromInt 95441, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8869, stateTaxDue: makeFromInt 4397 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110495, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22715, federalTaxDue: makeFromInt 28821, stateTaxDue: makeFromInt 10287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6051, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 64, federalTaxDue: makeFromInt 29043, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46565, itemizedDeductions: makeFromInt 21010, federalTaxDue: makeFromInt 22861, stateTaxDue: makeFromInt 9153 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104929, qualifiedIncome: makeFromInt 37948, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10509, stateTaxDue: makeFromInt 6469 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32752, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7078, stateTaxDue: makeFromInt 4145 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89758, qualifiedIncome: makeFromInt 65834, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22796, stateTaxDue: makeFromInt 7635 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14035, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25626, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85060, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37169, stateTaxDue: makeFromInt 11437 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53548, qualifiedIncome: makeFromInt 89749, itemizedDeductions: makeFromInt 17033, federalTaxDue: makeFromInt 15033, stateTaxDue: makeFromInt 6757 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6369, stateTaxDue: makeFromInt 4465 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47256, ordinaryIncomeNonSS: makeFromInt 118007, qualifiedIncome: makeFromInt 7562, itemizedDeductions: makeFromInt 21841, federalTaxDue: makeFromInt 25454, stateTaxDue: makeFromInt 5703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13459, ordinaryIncomeNonSS: makeFromInt 30930, qualifiedIncome: makeFromInt 8230, itemizedDeductions: makeFromInt 13907, federalTaxDue: makeFromInt 2806, stateTaxDue: makeFromInt 1503 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76795, qualifiedIncome: makeFromInt 88830, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13775, stateTaxDue: makeFromInt 7606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 595, ordinaryIncomeNonSS: makeFromInt 63963, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12186, federalTaxDue: makeFromInt 4341, stateTaxDue: makeFromInt 2834 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16981, federalTaxDue: makeFromInt 12715, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64724, qualifiedIncome: makeFromInt 51430, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8694, stateTaxDue: makeFromInt 5577 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 111, federalTaxDue: makeFromInt 34967, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15320, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26238, ordinaryIncomeNonSS: makeFromInt 35381, qualifiedIncome: makeFromInt 92971, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6006, stateTaxDue: makeFromInt 5943 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11680, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 145 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37648, ordinaryIncomeNonSS: makeFromInt 118234, qualifiedIncome: makeFromInt 35775, itemizedDeductions: makeFromInt 22291, federalTaxDue: makeFromInt 22609, stateTaxDue: makeFromInt 7225 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107800, qualifiedIncome: makeFromInt 77643, itemizedDeductions: makeFromInt 15026, federalTaxDue: makeFromInt 24826, stateTaxDue: makeFromInt 8897 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20736, ordinaryIncomeNonSS: makeFromInt 43297, qualifiedIncome: makeFromInt 79783, itemizedDeductions: makeFromInt 27808, federalTaxDue: makeFromInt 10856, stateTaxDue: makeFromInt 5579 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43272, ordinaryIncomeNonSS: makeFromInt 31678, qualifiedIncome: makeFromInt 84205, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7601, stateTaxDue: makeFromInt 5119 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46209, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20668, ordinaryIncomeNonSS: makeFromInt 46223, qualifiedIncome: makeFromInt 59716, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7392, stateTaxDue: makeFromInt 4704 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21863, ordinaryIncomeNonSS: makeFromInt 127220, qualifiedIncome: makeFromInt 21362, itemizedDeductions: makeFromInt 9852, federalTaxDue: makeFromInt 26964, stateTaxDue: makeFromInt 6974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10108, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10043, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33303, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28022, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29026, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96263, itemizedDeductions: makeFromInt 4830, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46269, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27406, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 995 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27879, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 919 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6777, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20167, federalTaxDue: makeFromInt 4781, stateTaxDue: makeFromInt 2597 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25458, ordinaryIncomeNonSS: makeFromInt 137828, qualifiedIncome: makeFromInt 30980, itemizedDeductions: makeFromInt 22329, federalTaxDue: makeFromInt 25412, stateTaxDue: makeFromInt 7956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15112, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29505, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 124 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42502, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77828, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45112, stateTaxDue: makeFromInt 10936 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108933, qualifiedIncome: makeFromInt 34644, itemizedDeductions: makeFromInt 8554, federalTaxDue: makeFromInt 11095, stateTaxDue: makeFromInt 6504 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50346, qualifiedIncome: makeFromInt 4815, itemizedDeductions: makeFromInt 942, federalTaxDue: makeFromInt 4325, stateTaxDue: makeFromInt 2503 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144365, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14636, stateTaxDue: makeFromInt 6743 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2072, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2802, qualifiedIncome: makeFromInt 13851, itemizedDeductions: makeFromInt 8280, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 358 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22636, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4400, ordinaryIncomeNonSS: makeFromInt 145203, qualifiedIncome: makeFromInt 65194, itemizedDeductions: makeFromInt 20753, federalTaxDue: makeFromInt 34380, stateTaxDue: makeFromInt 10065 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38110, ordinaryIncomeNonSS: makeFromInt 62811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26236, federalTaxDue: makeFromInt 7156, stateTaxDue: makeFromInt 2466 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43640, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28930, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9561, federalTaxDue: makeFromInt 9645, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29377, federalTaxDue: makeFromInt 5975, stateTaxDue: makeFromInt 3521 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115841, qualifiedIncome: makeFromInt 4440, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15728, stateTaxDue: makeFromInt 5439 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31992, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46313, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 689, stateTaxDue: makeFromInt 1741 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22823, ordinaryIncomeNonSS: makeFromInt 124546, qualifiedIncome: makeFromInt 58456, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28543, stateTaxDue: makeFromInt 8575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30899, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20020, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 6247 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36228, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49100, ordinaryIncomeNonSS: makeFromInt 81034, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14794, stateTaxDue: makeFromInt 3677 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15794, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5760, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59083, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3215, stateTaxDue: makeFromInt 2789 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17585, federalTaxDue: makeFromInt 34223, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119859, qualifiedIncome: makeFromInt 29211, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13870, stateTaxDue: makeFromInt 6779 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2891, ordinaryIncomeNonSS: makeFromInt 112451, qualifiedIncome: makeFromInt 57276, itemizedDeductions: makeFromInt 3650, federalTaxDue: makeFromInt 19709, stateTaxDue: makeFromInt 8011 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3038, federalTaxDue: makeFromInt 39353, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17239, ordinaryIncomeNonSS: makeFromInt 67795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27999, federalTaxDue: makeFromInt 20425, stateTaxDue: makeFromInt 8015 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4710, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32533, itemizedDeductions: makeFromInt 7728, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1152 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14898, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71438, itemizedDeductions: makeFromInt 14661, federalTaxDue: makeFromInt 2803, stateTaxDue: makeFromInt 3264 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132763, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4024, federalTaxDue: makeFromInt 12084, stateTaxDue: makeFromInt 5963 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12763, federalTaxDue: makeFromInt 36138, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12579, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17496, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9951, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4487, federalTaxDue: makeFromInt 41797, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45794, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48967, ordinaryIncomeNonSS: makeFromInt 39864, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21380, stateTaxDue: makeFromInt 6538 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10743, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8910, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34259, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47773, ordinaryIncomeNonSS: makeFromInt 131526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30316, stateTaxDue: makeFromInt 6157 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38617, ordinaryIncomeNonSS: makeFromInt 107355, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9849, federalTaxDue: makeFromInt 39890, stateTaxDue: makeFromInt 10249 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117560, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33524, stateTaxDue: makeFromInt 10667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57864, qualifiedIncome: makeFromInt 39162, itemizedDeductions: makeFromInt 21684, federalTaxDue: makeFromInt 2431, stateTaxDue: makeFromInt 4398 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1318, ordinaryIncomeNonSS: makeFromInt 25114, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7115, federalTaxDue: makeFromInt 1402, stateTaxDue: makeFromInt 1046 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1913, qualifiedIncome: makeFromInt 79656, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41427, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99706, itemizedDeductions: makeFromInt 13725, federalTaxDue: makeFromInt 45032, stateTaxDue: makeFromInt 11910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2032, itemizedDeductions: makeFromInt 15040, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28540, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33268, ordinaryIncomeNonSS: makeFromInt 30933, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10702, stateTaxDue: makeFromInt 5872 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18438, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65801, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3810, stateTaxDue: makeFromInt 2835 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38973, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67978, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5004, stateTaxDue: makeFromInt 2824 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18511, qualifiedIncome: makeFromInt 12534, itemizedDeductions: makeFromInt 3782, federalTaxDue: makeFromInt 1220, stateTaxDue: makeFromInt 1032 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27250, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53896, itemizedDeductions: makeFromInt 3053, federalTaxDue: makeFromInt 218, stateTaxDue: makeFromInt 2120 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35072, qualifiedIncome: makeFromInt 35943, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 507, stateTaxDue: makeFromInt 2976 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22880, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57972, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21527, federalTaxDue: makeFromInt 4135, stateTaxDue: makeFromInt 2644 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142817, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37854, stateTaxDue: makeFromInt 11833 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69149, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15518, stateTaxDue: makeFromInt 8082 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72972, qualifiedIncome: makeFromInt 70800, itemizedDeductions: makeFromInt 13935, federalTaxDue: makeFromInt 16520, stateTaxDue: makeFromInt 6814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142893, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34053, stateTaxDue: makeFromInt 11735 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74927, itemizedDeductions: makeFromInt 20984, federalTaxDue: makeFromInt 36224, stateTaxDue: makeFromInt 10791 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43191, qualifiedIncome: makeFromInt 89101, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12988, stateTaxDue: makeFromInt 6140 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118848, qualifiedIncome: makeFromInt 64391, itemizedDeductions: makeFromInt 7442, federalTaxDue: makeFromInt 23590, stateTaxDue: makeFromInt 8787 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5473, ordinaryIncomeNonSS: makeFromInt 86347, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20128, stateTaxDue: makeFromInt 8842 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45761, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24433, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20026, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 5326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92272, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28831, federalTaxDue: makeFromInt 5551, stateTaxDue: makeFromInt 4053 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64505, qualifiedIncome: makeFromInt 21761, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4548, stateTaxDue: makeFromInt 3938 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22006, ordinaryIncomeNonSS: makeFromInt 146199, qualifiedIncome: makeFromInt 32775, itemizedDeductions: makeFromInt 18941, federalTaxDue: makeFromInt 33153, stateTaxDue: makeFromInt 8699 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43323, ordinaryIncomeNonSS: makeFromInt 23993, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11886, federalTaxDue: makeFromInt 700, stateTaxDue: makeFromInt 767 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95020, qualifiedIncome: makeFromInt 21982, itemizedDeductions: makeFromInt 13447, federalTaxDue: makeFromInt 14790, stateTaxDue: makeFromInt 5416 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10803, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17080, federalTaxDue: makeFromInt 23432, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23823, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47255, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27865, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28892, stateTaxDue: makeFromInt 8218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34928, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29649, stateTaxDue: makeFromInt 8881 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57143, itemizedDeductions: makeFromInt 7527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2482 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45876, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7541, ordinaryIncomeNonSS: makeFromInt 95097, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10170, stateTaxDue: makeFromInt 4459 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31395, ordinaryIncomeNonSS: makeFromInt 53873, qualifiedIncome: makeFromInt 77180, itemizedDeductions: makeFromInt 9980, federalTaxDue: makeFromInt 20474, stateTaxDue: makeFromInt 6298 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21228, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19593, ordinaryIncomeNonSS: makeFromInt 103605, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17445, stateTaxDue: makeFromInt 4835 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33229, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3673, itemizedDeductions: makeFromInt 11008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27867, federalTaxDue: makeFromInt 31557, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16982, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 474 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6538, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1984, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39777, ordinaryIncomeNonSS: makeFromInt 77294, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9064, stateTaxDue: makeFromInt 3390 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47838, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27964, itemizedDeductions: makeFromInt 9439, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 923 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40442, ordinaryIncomeNonSS: makeFromInt 62988, qualifiedIncome: makeFromInt 97566, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27229, stateTaxDue: makeFromInt 7573 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9053, qualifiedIncome: makeFromInt 42427, itemizedDeductions: makeFromInt 14922, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2319 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60346, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1799, stateTaxDue: makeFromInt 2762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8971, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86440, itemizedDeductions: makeFromInt 11289, federalTaxDue: makeFromInt 464, stateTaxDue: makeFromInt 3647 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55535, qualifiedIncome: makeFromInt 38122, itemizedDeductions: makeFromInt 4413, federalTaxDue: makeFromInt 3137, stateTaxDue: makeFromInt 4008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110306, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21025, stateTaxDue: makeFromInt 5401 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33957, ordinaryIncomeNonSS: makeFromInt 109779, qualifiedIncome: makeFromInt 29078, itemizedDeductions: makeFromInt 26969, federalTaxDue: makeFromInt 22271, stateTaxDue: makeFromInt 6568 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14020, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5996, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 5126 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38534, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97726, itemizedDeductions: makeFromInt 4609, federalTaxDue: makeFromInt 8222, stateTaxDue: makeFromInt 4511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21886, qualifiedIncome: makeFromInt 77929, itemizedDeductions: makeFromInt 24128, federalTaxDue: makeFromInt 6042, stateTaxDue: makeFromInt 4866 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43042, ordinaryIncomeNonSS: makeFromInt 33912, qualifiedIncome: makeFromInt 48503, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13959, stateTaxDue: makeFromInt 3666 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6835, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108635, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8894, stateTaxDue: makeFromInt 4990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52481, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 223, stateTaxDue: makeFromInt 2126 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27213, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 986 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10489, itemizedDeductions: makeFromInt 19789, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 107 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19867, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44613, itemizedDeductions: makeFromInt 6297, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1856 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4841, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10748, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140979, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16057, federalTaxDue: makeFromInt 24156, stateTaxDue: makeFromInt 6695 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13388, ordinaryIncomeNonSS: makeFromInt 73295, qualifiedIncome: makeFromInt 77849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17872, stateTaxDue: makeFromInt 7182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47225, ordinaryIncomeNonSS: makeFromInt 83147, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17732, stateTaxDue: makeFromInt 3690 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1060, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63693, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4048, ordinaryIncomeNonSS: makeFromInt 138930, qualifiedIncome: makeFromInt 38063, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20282, stateTaxDue: makeFromInt 8374 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47635, ordinaryIncomeNonSS: makeFromInt 86101, qualifiedIncome: makeFromInt 35316, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24446, stateTaxDue: makeFromInt 5816 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4985, ordinaryIncomeNonSS: makeFromInt 128053, qualifiedIncome: makeFromInt 33205, itemizedDeductions: makeFromInt 6257, federalTaxDue: makeFromInt 21958, stateTaxDue: makeFromInt 7688 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66452, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13611, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 2648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116814, qualifiedIncome: makeFromInt 7520, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17711, stateTaxDue: makeFromInt 5892 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12568, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9087, itemizedDeductions: makeFromInt 24125, federalTaxDue: makeFromInt 24737, stateTaxDue: makeFromInt 7563 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26996, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21484, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24451, stateTaxDue: makeFromInt 8199 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28430, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129367, qualifiedIncome: makeFromInt 35039, itemizedDeductions: makeFromInt 26359, federalTaxDue: makeFromInt 26001, stateTaxDue: makeFromInt 8160 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28427, ordinaryIncomeNonSS: makeFromInt 67816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18802, federalTaxDue: makeFromInt 6768, stateTaxDue: makeFromInt 2716 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149885, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47107, stateTaxDue: makeFromInt 12520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70827, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28124, federalTaxDue: makeFromInt 4810, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22134, ordinaryIncomeNonSS: makeFromInt 11647, qualifiedIncome: makeFromInt 26245, itemizedDeductions: makeFromInt 14338, federalTaxDue: makeFromInt 1758, stateTaxDue: makeFromInt 1691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30881, ordinaryIncomeNonSS: makeFromInt 101714, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25968, stateTaxDue: makeFromInt 4963 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22321, ordinaryIncomeNonSS: makeFromInt 84016, qualifiedIncome: makeFromInt 51780, itemizedDeductions: makeFromInt 8672, federalTaxDue: makeFromInt 20211, stateTaxDue: makeFromInt 6415 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89318, itemizedDeductions: makeFromInt 12957, federalTaxDue: makeFromInt 2103, stateTaxDue: makeFromInt 3902 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34165, ordinaryIncomeNonSS: makeFromInt 16834, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 267 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13938, itemizedDeductions: makeFromInt 25937, federalTaxDue: makeFromInt 26346, stateTaxDue: makeFromInt 8014 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48511, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35507, stateTaxDue: makeFromInt 10106 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20365, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6854, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69746, itemizedDeductions: makeFromInt 20451, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3012 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34970, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90130, itemizedDeductions: makeFromInt 20059, federalTaxDue: makeFromInt 8024, stateTaxDue: makeFromInt 4208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 55555, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47941, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1894 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143249, qualifiedIncome: makeFromInt 80797, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42899, stateTaxDue: makeFromInt 10747 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72438, itemizedDeductions: makeFromInt 3748, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25046, ordinaryIncomeNonSS: makeFromInt 42720, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1600, stateTaxDue: makeFromInt 1750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120584, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17526, stateTaxDue: makeFromInt 5701 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106660, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26413, stateTaxDue: makeFromInt 9989 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14355, ordinaryIncomeNonSS: makeFromInt 60887, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23779, stateTaxDue: makeFromInt 7589 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71466, itemizedDeductions: makeFromInt 19066, federalTaxDue: makeFromInt 2350, stateTaxDue: makeFromInt 2998 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31572, ordinaryIncomeNonSS: makeFromInt 107616, qualifiedIncome: makeFromInt 2063, itemizedDeductions: makeFromInt 22822, federalTaxDue: makeFromInt 19855, stateTaxDue: makeFromInt 5195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14242, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 74 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91646, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20916, stateTaxDue: makeFromInt 4225 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32768, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83301, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20961, federalTaxDue: makeFromInt 8870, stateTaxDue: makeFromInt 3902 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11705, qualifiedIncome: makeFromInt 35356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2098 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20234, ordinaryIncomeNonSS: makeFromInt 2018, qualifiedIncome: makeFromInt 38331, itemizedDeductions: makeFromInt 26707, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1442 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14776, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25118, ordinaryIncomeNonSS: makeFromInt 137166, qualifiedIncome: makeFromInt 53155, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28075, stateTaxDue: makeFromInt 9041 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9871, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13652, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19744, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4191, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1832, ordinaryIncomeNonSS: makeFromInt 105680, qualifiedIncome: makeFromInt 14935, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19224, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1529, stateTaxDue: makeFromInt 867 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6757, ordinaryIncomeNonSS: makeFromInt 89030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29554, federalTaxDue: makeFromInt 7104, stateTaxDue: makeFromInt 3777 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13414, federalTaxDue: makeFromInt 34967, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32236, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1137 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44734, ordinaryIncomeNonSS: makeFromInt 14764, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15536, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119094, qualifiedIncome: makeFromInt 17768, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15769, stateTaxDue: makeFromInt 6327 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33157, ordinaryIncomeNonSS: makeFromInt 117090, qualifiedIncome: makeFromInt 99682, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29788, stateTaxDue: makeFromInt 10164 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32919, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47401, itemizedDeductions: makeFromInt 14814, federalTaxDue: makeFromInt 990, stateTaxDue: makeFromInt 1795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149346, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24246, stateTaxDue: makeFromInt 7066 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85818, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37943, stateTaxDue: makeFromInt 11536 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72755, qualifiedIncome: makeFromInt 63565, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5665, stateTaxDue: makeFromInt 6141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24984, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31948, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9831, federalTaxDue: makeFromInt 42745, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20836, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35504, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7597, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13474, ordinaryIncomeNonSS: makeFromInt 68969, qualifiedIncome: makeFromInt 8380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5382, stateTaxDue: makeFromInt 3192 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12662, ordinaryIncomeNonSS: makeFromInt 75399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12598, federalTaxDue: makeFromInt 7069, stateTaxDue: makeFromInt 3193 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18784, qualifiedIncome: makeFromInt 4675, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 658, stateTaxDue: makeFromInt 760 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24960, ordinaryIncomeNonSS: makeFromInt 98033, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8115, federalTaxDue: makeFromInt 14020, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31100, ordinaryIncomeNonSS: makeFromInt 143524, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26437, stateTaxDue: makeFromInt 6721 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19178, ordinaryIncomeNonSS: makeFromInt 3363, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4721 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43232, ordinaryIncomeNonSS: makeFromInt 99496, qualifiedIncome: makeFromInt 77156, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29500, stateTaxDue: makeFromInt 8258 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6544, ordinaryIncomeNonSS: makeFromInt 29451, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 272, stateTaxDue: makeFromInt 1098 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43164, ordinaryIncomeNonSS: makeFromInt 81747, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4591, federalTaxDue: makeFromInt 27939, stateTaxDue: makeFromInt 8616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45057, itemizedDeductions: makeFromInt 7841, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62791, qualifiedIncome: makeFromInt 69866, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15679, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5752, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97065, itemizedDeductions: makeFromInt 3011, federalTaxDue: makeFromInt 6190, stateTaxDue: makeFromInt 4478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40341, itemizedDeductions: makeFromInt 15327, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1762 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9121, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6406, federalTaxDue: makeFromInt 29270, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21762, qualifiedIncome: makeFromInt 80860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4455, stateTaxDue: makeFromInt 4756 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27083, ordinaryIncomeNonSS: makeFromInt 118817, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22391, stateTaxDue: makeFromInt 5657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35282, ordinaryIncomeNonSS: makeFromInt 135289, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32933, stateTaxDue: makeFromInt 6553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28446, ordinaryIncomeNonSS: makeFromInt 19303, qualifiedIncome: makeFromInt 15917, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2153, stateTaxDue: makeFromInt 1506 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29800, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67261, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40935, stateTaxDue: makeFromInt 10608 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36596, ordinaryIncomeNonSS: makeFromInt 63175, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27030, federalTaxDue: makeFromInt 11572, stateTaxDue: makeFromInt 2998 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144511, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29668, stateTaxDue: makeFromInt 11751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25918, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38307, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71847, itemizedDeductions: makeFromInt 17511, federalTaxDue: makeFromInt 10033, stateTaxDue: makeFromInt 3337 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37631, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22554, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44314, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29566, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16700, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10219, stateTaxDue: makeFromInt 5671 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34090, ordinaryIncomeNonSS: makeFromInt 87061, qualifiedIncome: makeFromInt 23745, itemizedDeductions: makeFromInt 13532, federalTaxDue: makeFromInt 20264, stateTaxDue: makeFromInt 5085 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12014, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8007, ordinaryIncomeNonSS: makeFromInt 43240, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4842, stateTaxDue: makeFromInt 1858 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21690, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87821, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3461, stateTaxDue: makeFromInt 4016 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34202, ordinaryIncomeNonSS: makeFromInt 95261, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17754, federalTaxDue: makeFromInt 15880, stateTaxDue: makeFromInt 4308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6787, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26068, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86363, itemizedDeductions: makeFromInt 14543, federalTaxDue: makeFromInt 3992, stateTaxDue: makeFromInt 3743 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121196, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17209, stateTaxDue: makeFromInt 5630 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31427, ordinaryIncomeNonSS: makeFromInt 56773, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16525, federalTaxDue: makeFromInt 5749, stateTaxDue: makeFromInt 2364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40671, ordinaryIncomeNonSS: makeFromInt 47750, qualifiedIncome: makeFromInt 29088, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5867, stateTaxDue: makeFromInt 3167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61188, itemizedDeductions: makeFromInt 27815, federalTaxDue: makeFromInt 3531, stateTaxDue: makeFromInt 2692 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122757, qualifiedIncome: makeFromInt 96189, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24059, stateTaxDue: makeFromInt 10272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30373, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 54368, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40127, ordinaryIncomeNonSS: makeFromInt 78515, qualifiedIncome: makeFromInt 27602, itemizedDeductions: makeFromInt 12508, federalTaxDue: makeFromInt 22454, stateTaxDue: makeFromInt 5065 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48614, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63835, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 727, stateTaxDue: makeFromInt 2807 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21778, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2893, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93410, itemizedDeductions: makeFromInt 20977, federalTaxDue: makeFromInt 6257, stateTaxDue: makeFromInt 4417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57007, itemizedDeductions: makeFromInt 20001, federalTaxDue: makeFromInt 36854, stateTaxDue: makeFromInt 10333 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65326, itemizedDeductions: makeFromInt 17670, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2883 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36938, itemizedDeductions: makeFromInt 368, federalTaxDue: makeFromInt 113, stateTaxDue: makeFromInt 1592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44393, ordinaryIncomeNonSS: makeFromInt 106409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19366, stateTaxDue: makeFromInt 4774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141228, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29064, federalTaxDue: makeFromInt 21326, stateTaxDue: makeFromInt 6856 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41258, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31349, itemizedDeductions: makeFromInt 6787, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1092 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36955, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35108, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45519, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95900, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9038, stateTaxDue: makeFromInt 4340 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19071, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32052, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1410 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43928, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11860, federalTaxDue: makeFromInt 8497, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23160, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27887, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 732 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38496, ordinaryIncomeNonSS: makeFromInt 36098, qualifiedIncome: makeFromInt 50433, itemizedDeductions: makeFromInt 9460, federalTaxDue: makeFromInt 4435, stateTaxDue: makeFromInt 3652 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68354, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15195, federalTaxDue: makeFromInt 3933, stateTaxDue: makeFromInt 2943 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47079, qualifiedIncome: makeFromInt 85642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5109, stateTaxDue: makeFromInt 6116 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30874, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26921, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 720 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 395, ordinaryIncomeNonSS: makeFromInt 21150, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 5954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68992, itemizedDeductions: makeFromInt 21735, federalTaxDue: makeFromInt 4830, stateTaxDue: makeFromInt 3090 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149966, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25012, federalTaxDue: makeFromInt 22836, stateTaxDue: makeFromInt 7243 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75259, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10674, federalTaxDue: makeFromInt 12506, stateTaxDue: makeFromInt 3185 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71041, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3404, stateTaxDue: makeFromInt 3297 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45290, qualifiedIncome: makeFromInt 25514, itemizedDeductions: makeFromInt 10655, federalTaxDue: makeFromInt 1369, stateTaxDue: makeFromInt 3065 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96844, itemizedDeductions: makeFromInt 26886, federalTaxDue: makeFromInt 11252, stateTaxDue: makeFromInt 4587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10713, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39997, itemizedDeductions: makeFromInt 20767, federalTaxDue: makeFromInt 27064, stateTaxDue: makeFromInt 9037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91061, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19730, federalTaxDue: makeFromInt 9165, stateTaxDue: makeFromInt 4195 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43757, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19157, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29284, stateTaxDue: makeFromInt 7983 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1549, ordinaryIncomeNonSS: makeFromInt 130429, qualifiedIncome: makeFromInt 77162, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31891, stateTaxDue: makeFromInt 10138 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17212, ordinaryIncomeNonSS: makeFromInt 71180, qualifiedIncome: makeFromInt 90345, itemizedDeductions: makeFromInt 15367, federalTaxDue: makeFromInt 23018, stateTaxDue: makeFromInt 7891 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1598, ordinaryIncomeNonSS: makeFromInt 111755, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17537, federalTaxDue: makeFromInt 17228, stateTaxDue: makeFromInt 5475 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7815, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19842, ordinaryIncomeNonSS: makeFromInt 30205, qualifiedIncome: makeFromInt 19902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1632, stateTaxDue: makeFromInt 1830 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111029, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11001, stateTaxDue: makeFromInt 5176 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15048, ordinaryIncomeNonSS: makeFromInt 46084, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2796, stateTaxDue: makeFromInt 1629 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2193 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27726, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 911 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37120, itemizedDeductions: makeFromInt 21381, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4346, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34598, ordinaryIncomeNonSS: makeFromInt 52093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13559, stateTaxDue: makeFromInt 2432 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41656, qualifiedIncome: makeFromInt 47077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10231, stateTaxDue: makeFromInt 3873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64545, itemizedDeductions: makeFromInt 12719, federalTaxDue: makeFromInt 3622, stateTaxDue: makeFromInt 2772 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32819, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7002, federalTaxDue: makeFromInt 45344, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18034, ordinaryIncomeNonSS: makeFromInt 101720, qualifiedIncome: makeFromInt 18722, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18666, stateTaxDue: makeFromInt 5647 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6940, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28043, federalTaxDue: makeFromInt 25204, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105720, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30974, stateTaxDue: makeFromInt 10031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17317, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 110, ordinaryIncomeNonSS: makeFromInt 50321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9365, federalTaxDue: makeFromInt 1881, stateTaxDue: makeFromInt 1841 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28804, ordinaryIncomeNonSS: makeFromInt 66342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26562, federalTaxDue: makeFromInt 6745, stateTaxDue: makeFromInt 2842 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38764, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24052, stateTaxDue: makeFromInt 6683 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95626, itemizedDeductions: makeFromInt 27786, federalTaxDue: makeFromInt 8438, stateTaxDue: makeFromInt 4405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 726, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5680, federalTaxDue: makeFromInt 25034, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8699, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 824 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15749, stateTaxDue: makeFromInt 3929 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12034, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88673, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26120, federalTaxDue: makeFromInt 5678, stateTaxDue: makeFromInt 3972 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22323, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46177, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1234, stateTaxDue: makeFromInt 1927 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3809, ordinaryIncomeNonSS: makeFromInt 90588, qualifiedIncome: makeFromInt 75707, itemizedDeductions: makeFromInt 29552, federalTaxDue: makeFromInt 16341, stateTaxDue: makeFromInt 7930 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40913, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1481, stateTaxDue: makeFromInt 1371 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95102, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2970, stateTaxDue: makeFromInt 4401 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11586, ordinaryIncomeNonSS: makeFromInt 129743, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3656, federalTaxDue: makeFromInt 44224, stateTaxDue: makeFromInt 11492 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21783, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7307, federalTaxDue: makeFromInt 503, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32483, ordinaryIncomeNonSS: makeFromInt 3102, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55933, qualifiedIncome: makeFromInt 28206, itemizedDeductions: makeFromInt 7918, federalTaxDue: makeFromInt 4965, stateTaxDue: makeFromInt 3842 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9782, federalTaxDue: makeFromInt 6260, stateTaxDue: makeFromInt 3577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27822, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85270, itemizedDeductions: makeFromInt 10295, federalTaxDue: makeFromInt 43736, stateTaxDue: makeFromInt 11550 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101053, qualifiedIncome: makeFromInt 25196, itemizedDeductions: makeFromInt 9314, federalTaxDue: makeFromInt 26999, stateTaxDue: makeFromInt 5857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15909, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52002, itemizedDeductions: makeFromInt 3829, federalTaxDue: makeFromInt 284, stateTaxDue: makeFromInt 2305 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111867, qualifiedIncome: makeFromInt 9846, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14402, stateTaxDue: makeFromInt 5631 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88919, qualifiedIncome: makeFromInt 74630, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21158, stateTaxDue: makeFromInt 7916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 785, ordinaryIncomeNonSS: makeFromInt 230, qualifiedIncome: makeFromInt 67795, itemizedDeductions: makeFromInt 5357, federalTaxDue: makeFromInt 2609, stateTaxDue: makeFromInt 2918 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48974, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34638, itemizedDeductions: makeFromInt 29547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1157 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9944, ordinaryIncomeNonSS: makeFromInt 13486, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16811, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 299 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38231, ordinaryIncomeNonSS: makeFromInt 5410, qualifiedIncome: makeFromInt 9441, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 268 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43864, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15754, federalTaxDue: makeFromInt 2071, stateTaxDue: makeFromInt 1818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48204, ordinaryIncomeNonSS: makeFromInt 40689, qualifiedIncome: makeFromInt 15756, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13739, stateTaxDue: makeFromInt 2532 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114480, qualifiedIncome: makeFromInt 51868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23021, stateTaxDue: makeFromInt 7742 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21287, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69747, itemizedDeductions: makeFromInt 7247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2812 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35001, ordinaryIncomeNonSS: makeFromInt 27451, qualifiedIncome: makeFromInt 9860, itemizedDeductions: makeFromInt 29123, federalTaxDue: makeFromInt 2272, stateTaxDue: makeFromInt 1474 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1976 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17424, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31476, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33043, stateTaxDue: makeFromInt 8819 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44920, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8688, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35359, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75417, itemizedDeductions: makeFromInt 3004, federalTaxDue: makeFromInt 361, stateTaxDue: makeFromInt 3296 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38092, itemizedDeductions: makeFromInt 23614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1650 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12999, ordinaryIncomeNonSS: makeFromInt 104651, qualifiedIncome: makeFromInt 70673, itemizedDeductions: makeFromInt 14809, federalTaxDue: makeFromInt 18326, stateTaxDue: makeFromInt 8291 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13588, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6124, qualifiedIncome: makeFromInt 57732, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3355, ordinaryIncomeNonSS: makeFromInt 69188, qualifiedIncome: makeFromInt 41378, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9381, stateTaxDue: makeFromInt 5292 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3631, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40152, itemizedDeductions: makeFromInt 13705, federalTaxDue: makeFromInt 330, stateTaxDue: makeFromInt 1823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83101, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18983, federalTaxDue: makeFromInt 34939, stateTaxDue: makeFromInt 8991 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22000, qualifiedIncome: makeFromInt 88318, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7789, stateTaxDue: makeFromInt 4841 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16767, qualifiedIncome: makeFromInt 73965, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3583, stateTaxDue: makeFromInt 3862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38519, ordinaryIncomeNonSS: makeFromInt 23950, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13389, federalTaxDue: makeFromInt 264, stateTaxDue: makeFromInt 671 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3100, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 680, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20301, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37612, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24073, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48897, ordinaryIncomeNonSS: makeFromInt 86460, qualifiedIncome: makeFromInt 21711, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14309, stateTaxDue: makeFromInt 4734 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39098, ordinaryIncomeNonSS: makeFromInt 133750, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19612, stateTaxDue: makeFromInt 6213 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6851, itemizedDeductions: makeFromInt 12679, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27360, federalTaxDue: makeFromInt 7281, stateTaxDue: makeFromInt 4091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13046, itemizedDeductions: makeFromInt 8196, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 237 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15855, ordinaryIncomeNonSS: makeFromInt 98372, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17551, stateTaxDue: makeFromInt 4464 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74228, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46101, stateTaxDue: makeFromInt 10956 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12010, itemizedDeductions: makeFromInt 4902, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48835, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24462, federalTaxDue: makeFromInt 2386, stateTaxDue: makeFromInt 2144 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37595, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26943, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 248, stateTaxDue: makeFromInt 946 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1833, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36869, ordinaryIncomeNonSS: makeFromInt 81986, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13858, federalTaxDue: makeFromInt 27716, stateTaxDue: makeFromInt 8724 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19908, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72440, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5958, stateTaxDue: makeFromInt 3234 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3289, federalTaxDue: makeFromInt 10652, stateTaxDue: makeFromInt 2407 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 272, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21532, federalTaxDue: makeFromInt 27939, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4829, ordinaryIncomeNonSS: makeFromInt 136138, qualifiedIncome: makeFromInt 54503, itemizedDeductions: makeFromInt 14041, federalTaxDue: makeFromInt 29094, stateTaxDue: makeFromInt 8957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38520, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19095, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3893, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7634, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29420, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2428, federalTaxDue: makeFromInt 26313, stateTaxDue: makeFromInt 6364 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20681, federalTaxDue: makeFromInt 23791, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39275, ordinaryIncomeNonSS: makeFromInt 116044, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15750, stateTaxDue: makeFromInt 5127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20046, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40785, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2143, stateTaxDue: makeFromInt 1856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14540, ordinaryIncomeNonSS: makeFromInt 104665, qualifiedIncome: makeFromInt 21061, itemizedDeductions: makeFromInt 7223, federalTaxDue: makeFromInt 19795, stateTaxDue: makeFromInt 5963 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48404, ordinaryIncomeNonSS: makeFromInt 95309, qualifiedIncome: makeFromInt 6009, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22720, stateTaxDue: makeFromInt 4611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11075, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13223, itemizedDeductions: makeFromInt 24608, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17922, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 363 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9124, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68634, qualifiedIncome: makeFromInt 26415, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4341, stateTaxDue: makeFromInt 4377 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36960, ordinaryIncomeNonSS: makeFromInt 121636, qualifiedIncome: makeFromInt 17878, itemizedDeductions: makeFromInt 21595, federalTaxDue: makeFromInt 27129, stateTaxDue: makeFromInt 6564 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19464, ordinaryIncomeNonSS: makeFromInt 105984, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15060, federalTaxDue: makeFromInt 17757, stateTaxDue: makeFromInt 4807 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47957, ordinaryIncomeNonSS: makeFromInt 143091, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23324, stateTaxDue: makeFromInt 6680 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 737, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22023, ordinaryIncomeNonSS: makeFromInt 60042, qualifiedIncome: makeFromInt 96583, itemizedDeductions: makeFromInt 14994, federalTaxDue: makeFromInt 23227, stateTaxDue: makeFromInt 7576 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120769, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 468, federalTaxDue: makeFromInt 12247, stateTaxDue: makeFromInt 5363 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89470, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6467, stateTaxDue: makeFromInt 3999 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32194, itemizedDeductions: makeFromInt 25493, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3166, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34348, itemizedDeductions: makeFromInt 6863, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1303 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11957, qualifiedIncome: makeFromInt 80031, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2555, stateTaxDue: makeFromInt 4224 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20829, stateTaxDue: makeFromInt 5115 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38365, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96429, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14049, stateTaxDue: makeFromInt 4489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38255, ordinaryIncomeNonSS: makeFromInt 142171, qualifiedIncome: makeFromInt 26175, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30628, stateTaxDue: makeFromInt 8137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107548, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17847, stateTaxDue: makeFromInt 5138 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48715, ordinaryIncomeNonSS: makeFromInt 118118, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18437, stateTaxDue: makeFromInt 5231 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80937, qualifiedIncome: makeFromInt 63527, itemizedDeductions: makeFromInt 12247, federalTaxDue: makeFromInt 27921, stateTaxDue: makeFromInt 6968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13309, ordinaryIncomeNonSS: makeFromInt 84769, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8942, federalTaxDue: makeFromInt 16544, stateTaxDue: makeFromInt 4099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42439, ordinaryIncomeNonSS: makeFromInt 57708, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8888, federalTaxDue: makeFromInt 26806, stateTaxDue: makeFromInt 7630 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98103, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26741, federalTaxDue: makeFromInt 26317, stateTaxDue: makeFromInt 9650 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23528, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 772 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16779, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27361, federalTaxDue: makeFromInt 23964, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36212, ordinaryIncomeNonSS: makeFromInt 75748, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23367, stateTaxDue: makeFromInt 8412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121439, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5208, federalTaxDue: makeFromInt 36042, stateTaxDue: makeFromInt 5969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20726, ordinaryIncomeNonSS: makeFromInt 16313, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17473, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29497, stateTaxDue: makeFromInt 8771 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30396, qualifiedIncome: makeFromInt 29129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 590, stateTaxDue: makeFromInt 2401 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27396, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1060, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2515, itemizedDeductions: makeFromInt 9787, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6590, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1734, itemizedDeductions: makeFromInt 9529, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22754, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70007, itemizedDeductions: makeFromInt 11671, federalTaxDue: makeFromInt 41450, stateTaxDue: makeFromInt 10545 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18261, stateTaxDue: makeFromInt 6071 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26420, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35333, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26116, stateTaxDue: makeFromInt 8592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84883, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28278, federalTaxDue: makeFromInt 33061, stateTaxDue: makeFromInt 9082 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97904, itemizedDeductions: makeFromInt 12074, federalTaxDue: makeFromInt 40993, stateTaxDue: makeFromInt 12140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27569, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30815, itemizedDeductions: makeFromInt 8433, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7596, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80867, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 835, stateTaxDue: makeFromInt 3471 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 309, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23407, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39756, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97190, itemizedDeductions: makeFromInt 11414, federalTaxDue: makeFromInt 43857, stateTaxDue: makeFromInt 11954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58983, qualifiedIncome: makeFromInt 14486, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5792, stateTaxDue: makeFromInt 3319 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41134, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74781, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8576, stateTaxDue: makeFromInt 3284 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91329, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6079, stateTaxDue: makeFromInt 4311 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26616, ordinaryIncomeNonSS: makeFromInt 80767, qualifiedIncome: makeFromInt 87557, itemizedDeductions: makeFromInt 8559, federalTaxDue: makeFromInt 24597, stateTaxDue: makeFromInt 8041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94120, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12664, stateTaxDue: makeFromInt 4372 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21971, ordinaryIncomeNonSS: makeFromInt 14491, qualifiedIncome: makeFromInt 85499, itemizedDeductions: makeFromInt 29940, federalTaxDue: makeFromInt 5719, stateTaxDue: makeFromInt 4504 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24012, ordinaryIncomeNonSS: makeFromInt 18775, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24753, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117695, qualifiedIncome: makeFromInt 74237, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39890, stateTaxDue: makeFromInt 9342 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27054, federalTaxDue: makeFromInt 14324, stateTaxDue: makeFromInt 5309 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37980, qualifiedIncome: makeFromInt 59929, itemizedDeductions: makeFromInt 6411, federalTaxDue: makeFromInt 5441, stateTaxDue: makeFromInt 4320 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9726, stateTaxDue: makeFromInt 5156 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10923, ordinaryIncomeNonSS: makeFromInt 105523, qualifiedIncome: makeFromInt 43098, itemizedDeductions: makeFromInt 6686, federalTaxDue: makeFromInt 13949, stateTaxDue: makeFromInt 6756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36714, ordinaryIncomeNonSS: makeFromInt 26479, qualifiedIncome: makeFromInt 24199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 351, stateTaxDue: makeFromInt 1932 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41808, ordinaryIncomeNonSS: makeFromInt 45441, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5352, stateTaxDue: makeFromInt 1897 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62890, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141321, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48793, stateTaxDue: makeFromInt 11859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39619, ordinaryIncomeNonSS: makeFromInt 111524, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22338, federalTaxDue: makeFromInt 19951, stateTaxDue: makeFromInt 5137 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15205, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37913, ordinaryIncomeNonSS: makeFromInt 60265, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2557, federalTaxDue: makeFromInt 11522, stateTaxDue: makeFromInt 2758 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47817, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11865, ordinaryIncomeNonSS: makeFromInt 22078, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22216, federalTaxDue: makeFromInt 636, stateTaxDue: makeFromInt 5629 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34372, ordinaryIncomeNonSS: makeFromInt 126880, qualifiedIncome: makeFromInt 65804, itemizedDeductions: makeFromInt 26789, federalTaxDue: makeFromInt 32012, stateTaxDue: makeFromInt 9259 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31592, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61178, itemizedDeductions: makeFromInt 17427, federalTaxDue: makeFromInt 2233, stateTaxDue: makeFromInt 2484 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16849, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20994, itemizedDeductions: makeFromInt 13541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 595 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89112, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3654, stateTaxDue: makeFromInt 4081 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45367, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5074, itemizedDeductions: makeFromInt 12826, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7030, ordinaryIncomeNonSS: makeFromInt 144487, qualifiedIncome: makeFromInt 66020, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34364, stateTaxDue: makeFromInt 10287 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62105, itemizedDeductions: makeFromInt 27040, federalTaxDue: makeFromInt 353, stateTaxDue: makeFromInt 2730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25211, federalTaxDue: makeFromInt 4309, stateTaxDue: makeFromInt 1460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21235, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128488, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41662, stateTaxDue: makeFromInt 10849 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95864, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6760, stateTaxDue: makeFromInt 4338 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79283, qualifiedIncome: makeFromInt 36426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8429, stateTaxDue: makeFromInt 5248 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21228, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25432, ordinaryIncomeNonSS: makeFromInt 9935, qualifiedIncome: makeFromInt 70277, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3482, stateTaxDue: makeFromInt 3540 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101654, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12957, federalTaxDue: makeFromInt 23005, stateTaxDue: makeFromInt 9408 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81946, itemizedDeductions: makeFromInt 18879, federalTaxDue: makeFromInt 33520, stateTaxDue: makeFromInt 11222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36142, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48402, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38399, stateTaxDue: makeFromInt 9545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4439, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22698, itemizedDeductions: makeFromInt 6640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 933 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34815, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12508, federalTaxDue: makeFromInt 22386, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 511 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74326, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12822, federalTaxDue: makeFromInt 7526, stateTaxDue: makeFromInt 3261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6258, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22160, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 680, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36625, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95208, qualifiedIncome: makeFromInt 8700, itemizedDeductions: makeFromInt 2058, federalTaxDue: makeFromInt 10969, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30848, ordinaryIncomeNonSS: makeFromInt 129873, qualifiedIncome: makeFromInt 73571, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33726, stateTaxDue: makeFromInt 9797 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29784, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92790, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41222, stateTaxDue: makeFromInt 11765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29472, itemizedDeductions: makeFromInt 8101, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1279 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99535, itemizedDeductions: makeFromInt 15790, federalTaxDue: makeFromInt 6815, stateTaxDue: makeFromInt 4402 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99619, qualifiedIncome: makeFromInt 47141, itemizedDeductions: makeFromInt 25287, federalTaxDue: makeFromInt 26460, stateTaxDue: makeFromInt 6963 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27078, itemizedDeductions: makeFromInt 26905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3305, ordinaryIncomeNonSS: makeFromInt 32894, qualifiedIncome: makeFromInt 55555, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3508, stateTaxDue: makeFromInt 4167 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68231, qualifiedIncome: makeFromInt 88696, itemizedDeductions: makeFromInt 2697, federalTaxDue: makeFromInt 19489, stateTaxDue: makeFromInt 7391 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75700, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 60, stateTaxDue: makeFromInt 3208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21551, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14536, federalTaxDue: makeFromInt 45426, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12473, ordinaryIncomeNonSS: makeFromInt 62223, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4597, federalTaxDue: makeFromInt 7499, stateTaxDue: makeFromInt 2725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27463, ordinaryIncomeNonSS: makeFromInt 6971, qualifiedIncome: makeFromInt 96175, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11293, stateTaxDue: makeFromInt 4914 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53313, qualifiedIncome: makeFromInt 28280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2826, stateTaxDue: makeFromInt 3405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13324, ordinaryIncomeNonSS: makeFromInt 102716, qualifiedIncome: makeFromInt 51656, itemizedDeductions: makeFromInt 24759, federalTaxDue: makeFromInt 20778, stateTaxDue: makeFromInt 7445 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3943, ordinaryIncomeNonSS: makeFromInt 48344, qualifiedIncome: makeFromInt 60038, itemizedDeductions: makeFromInt 16102, federalTaxDue: makeFromInt 6296, stateTaxDue: makeFromInt 5044 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37428, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4428, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6994, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49850, ordinaryIncomeNonSS: makeFromInt 70202, qualifiedIncome: makeFromInt 4740, itemizedDeductions: makeFromInt 16457, federalTaxDue: makeFromInt 17859, stateTaxDue: makeFromInt 3492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18602, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33300, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9586, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38276, ordinaryIncomeNonSS: makeFromInt 128039, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23927, stateTaxDue: makeFromInt 6102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43649, ordinaryIncomeNonSS: makeFromInt 75836, qualifiedIncome: makeFromInt 19095, itemizedDeductions: makeFromInt 22515, federalTaxDue: makeFromInt 18755, stateTaxDue: makeFromInt 4495 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25534, federalTaxDue: makeFromInt 1431, stateTaxDue: makeFromInt 787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15111, ordinaryIncomeNonSS: makeFromInt 1694, qualifiedIncome: makeFromInt 10208, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 56 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2794, qualifiedIncome: makeFromInt 23490, itemizedDeductions: makeFromInt 18236, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 639 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55273, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22254, stateTaxDue: makeFromInt 7266 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2344, ordinaryIncomeNonSS: makeFromInt 38106, qualifiedIncome: makeFromInt 96077, itemizedDeductions: makeFromInt 20799, federalTaxDue: makeFromInt 5911, stateTaxDue: makeFromInt 6234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18117, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2537, itemizedDeductions: makeFromInt 13130, federalTaxDue: makeFromInt 16257, stateTaxDue: makeFromInt 6952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43873, ordinaryIncomeNonSS: makeFromInt 92746, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14481, federalTaxDue: makeFromInt 37174, stateTaxDue: makeFromInt 9483 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16898, ordinaryIncomeNonSS: makeFromInt 3216, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18858, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63446, itemizedDeductions: makeFromInt 6797, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2787 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21682, ordinaryIncomeNonSS: makeFromInt 76935, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27028, federalTaxDue: makeFromInt 10324, stateTaxDue: makeFromInt 3577 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28919, ordinaryIncomeNonSS: makeFromInt 29874, qualifiedIncome: makeFromInt 5171, itemizedDeductions: makeFromInt 6014, federalTaxDue: makeFromInt 3227, stateTaxDue: makeFromInt 1426 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20529, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85067, itemizedDeductions: makeFromInt 25003, federalTaxDue: makeFromInt 5005, stateTaxDue: makeFromInt 3992 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37841, itemizedDeductions: makeFromInt 2813, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134421, qualifiedIncome: makeFromInt 24115, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35479, stateTaxDue: makeFromInt 7637 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19029, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44013, itemizedDeductions: makeFromInt 21988, federalTaxDue: makeFromInt 34054, stateTaxDue: makeFromInt 9446 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97755, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20015, federalTaxDue: makeFromInt 29194, stateTaxDue: makeFromInt 9861 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35812, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13150, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7652, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6309, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 8 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22465, ordinaryIncomeNonSS: makeFromInt 75961, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7487, stateTaxDue: makeFromInt 3223 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12368, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25621, ordinaryIncomeNonSS: makeFromInt 123404, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8921, federalTaxDue: makeFromInt 23206, stateTaxDue: makeFromInt 5743 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6523, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1800, itemizedDeductions: makeFromInt 16234, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18921, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19179, stateTaxDue: makeFromInt 7971 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6372, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13767, ordinaryIncomeNonSS: makeFromInt 71185, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5911, federalTaxDue: makeFromInt 6666, stateTaxDue: makeFromInt 2984 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49932, ordinaryIncomeNonSS: makeFromInt 66155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28622, federalTaxDue: makeFromInt 14753, stateTaxDue: makeFromInt 3150 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28136, ordinaryIncomeNonSS: makeFromInt 46216, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1581, stateTaxDue: makeFromInt 1704 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7294, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18495, itemizedDeductions: makeFromInt 10497, federalTaxDue: makeFromInt 25490, stateTaxDue: makeFromInt 8050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47663, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74305, itemizedDeductions: makeFromInt 10344, federalTaxDue: makeFromInt 46813, stateTaxDue: makeFromInt 10991 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79009, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3736, stateTaxDue: makeFromInt 3576 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77496, qualifiedIncome: makeFromInt 85113, itemizedDeductions: makeFromInt 7040, federalTaxDue: makeFromInt 18848, stateTaxDue: makeFromInt 7742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96362, itemizedDeductions: makeFromInt 3847, federalTaxDue: makeFromInt 6894, stateTaxDue: makeFromInt 4364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48837, ordinaryIncomeNonSS: makeFromInt 117486, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30122, stateTaxDue: makeFromInt 5563 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56822, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28105, federalTaxDue: makeFromInt 16297, stateTaxDue: makeFromInt 7586 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21620, ordinaryIncomeNonSS: makeFromInt 26703, qualifiedIncome: makeFromInt 88925, itemizedDeductions: makeFromInt 16078, federalTaxDue: makeFromInt 12537, stateTaxDue: makeFromInt 5550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28045, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81793, itemizedDeductions: makeFromInt 13399, federalTaxDue: makeFromInt 6621, stateTaxDue: makeFromInt 3743 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27740, ordinaryIncomeNonSS: makeFromInt 91509, qualifiedIncome: makeFromInt 68367, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22149, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33882, ordinaryIncomeNonSS: makeFromInt 74595, qualifiedIncome: makeFromInt 37681, itemizedDeductions: makeFromInt 21405, federalTaxDue: makeFromInt 14998, stateTaxDue: makeFromInt 5073 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13225, itemizedDeductions: makeFromInt 16471, federalTaxDue: makeFromInt 26739, stateTaxDue: makeFromInt 7896 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 851, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97367, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39357, stateTaxDue: makeFromInt 12065 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83299, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37262, stateTaxDue: makeFromInt 11410 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37979, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6962, ordinaryIncomeNonSS: makeFromInt 120547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23395, federalTaxDue: makeFromInt 15002, stateTaxDue: makeFromInt 5597 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35177, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3541, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7133, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19712, stateTaxDue: makeFromInt 7382 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4980, qualifiedIncome: makeFromInt 4901, itemizedDeductions: makeFromInt 22702, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99156, itemizedDeductions: makeFromInt 4958, federalTaxDue: makeFromInt 50892, stateTaxDue: makeFromInt 12156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37272, qualifiedIncome: makeFromInt 21660, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5214, stateTaxDue: makeFromInt 2781 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29908, ordinaryIncomeNonSS: makeFromInt 44562, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8436, federalTaxDue: makeFromInt 14454, stateTaxDue: makeFromInt 6553 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16338, ordinaryIncomeNonSS: makeFromInt 52617, qualifiedIncome: makeFromInt 17789, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10254, stateTaxDue: makeFromInt 3244 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29856, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44895, ordinaryIncomeNonSS: makeFromInt 93239, qualifiedIncome: makeFromInt 26550, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21876, stateTaxDue: makeFromInt 5414 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52337, qualifiedIncome: makeFromInt 305, itemizedDeductions: makeFromInt 3602, federalTaxDue: makeFromInt 3020, stateTaxDue: makeFromInt 2236 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1307, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46207, ordinaryIncomeNonSS: makeFromInt 50734, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15458, stateTaxDue: makeFromInt 2363 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33072, itemizedDeductions: makeFromInt 24839, federalTaxDue: makeFromInt 12, stateTaxDue: makeFromInt 1399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12523, ordinaryIncomeNonSS: makeFromInt 20466, qualifiedIncome: makeFromInt 21675, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2002, stateTaxDue: makeFromInt 1802 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38221, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33125, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12528, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33345, itemizedDeductions: makeFromInt 14712, federalTaxDue: makeFromInt 33231, stateTaxDue: makeFromInt 8922 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23966, ordinaryIncomeNonSS: makeFromInt 111994, qualifiedIncome: makeFromInt 4026, itemizedDeductions: makeFromInt 4456, federalTaxDue: makeFromInt 18730, stateTaxDue: makeFromInt 5226 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46491, ordinaryIncomeNonSS: makeFromInt 14333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20144, federalTaxDue: makeFromInt 173, stateTaxDue: makeFromInt 380 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103442, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14983, stateTaxDue: makeFromInt 4497 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84337, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 651, stateTaxDue: makeFromInt 3542 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35018, ordinaryIncomeNonSS: makeFromInt 86835, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12390, stateTaxDue: makeFromInt 3776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59341, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23884, federalTaxDue: makeFromInt 1521, stateTaxDue: makeFromInt 2374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23992, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83788, itemizedDeductions: makeFromInt 22902, federalTaxDue: makeFromInt 1273, stateTaxDue: makeFromInt 3824 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49761, ordinaryIncomeNonSS: makeFromInt 21469, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23949, federalTaxDue: makeFromInt 1303, stateTaxDue: makeFromInt 618 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20086, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 295, itemizedDeductions: makeFromInt 568, federalTaxDue: makeFromInt 30849, stateTaxDue: makeFromInt 7060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49330, itemizedDeductions: makeFromInt 7517, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46205, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46700, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5257, stateTaxDue: makeFromInt 2035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33245, ordinaryIncomeNonSS: makeFromInt 12319, qualifiedIncome: makeFromInt 89916, itemizedDeductions: makeFromInt 12704, federalTaxDue: makeFromInt 12412, stateTaxDue: makeFromInt 4867 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19287, ordinaryIncomeNonSS: makeFromInt 111817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15907, stateTaxDue: makeFromInt 5016 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9597, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6593, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 225 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20543, federalTaxDue: makeFromInt 49312, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99457, itemizedDeductions: makeFromInt 11622, federalTaxDue: makeFromInt 3624, stateTaxDue: makeFromInt 4420 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16454, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28223, ordinaryIncomeNonSS: makeFromInt 140176, qualifiedIncome: makeFromInt 81745, itemizedDeductions: makeFromInt 29891, federalTaxDue: makeFromInt 36282, stateTaxDue: makeFromInt 10721 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5941, federalTaxDue: makeFromInt 9808, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43773, ordinaryIncomeNonSS: makeFromInt 120329, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12008, federalTaxDue: makeFromInt 30007, stateTaxDue: makeFromInt 5790 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47235, ordinaryIncomeNonSS: makeFromInt 52841, qualifiedIncome: makeFromInt 75929, itemizedDeductions: makeFromInt 17925, federalTaxDue: makeFromInt 19632, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59737, qualifiedIncome: makeFromInt 22115, itemizedDeductions: makeFromInt 13858, federalTaxDue: makeFromInt 16088, stateTaxDue: makeFromInt 3746 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16095, ordinaryIncomeNonSS: makeFromInt 68382, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14719, federalTaxDue: makeFromInt 24907, stateTaxDue: makeFromInt 7964 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18147, itemizedDeductions: makeFromInt 27691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 701 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37028, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24310, federalTaxDue: makeFromInt 1253, stateTaxDue: makeFromInt 1276 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3760, ordinaryIncomeNonSS: makeFromInt 10802, qualifiedIncome: makeFromInt 75761, itemizedDeductions: makeFromInt 29887, federalTaxDue: makeFromInt 3804, stateTaxDue: makeFromInt 4068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7257, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99332, itemizedDeductions: makeFromInt 29509, federalTaxDue: makeFromInt 39850, stateTaxDue: makeFromInt 12369 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4532, ordinaryIncomeNonSS: makeFromInt 27928, qualifiedIncome: makeFromInt 60676, itemizedDeductions: makeFromInt 23414, federalTaxDue: makeFromInt 1209, stateTaxDue: makeFromInt 4055 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11599, ordinaryIncomeNonSS: makeFromInt 20783, qualifiedIncome: makeFromInt 53218, itemizedDeductions: makeFromInt 5126, federalTaxDue: makeFromInt 4175, stateTaxDue: makeFromInt 3245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62354, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3706, stateTaxDue: makeFromInt 2956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57320, itemizedDeductions: makeFromInt 17936, federalTaxDue: makeFromInt 28094, stateTaxDue: makeFromInt 9921 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104394, qualifiedIncome: makeFromInt 44659, itemizedDeductions: makeFromInt 27665, federalTaxDue: makeFromInt 15455, stateTaxDue: makeFromInt 7153 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27292, qualifiedIncome: makeFromInt 7308, itemizedDeductions: makeFromInt 15034, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1336 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20682, ordinaryIncomeNonSS: makeFromInt 23252, qualifiedIncome: makeFromInt 21371, itemizedDeductions: makeFromInt 28661, federalTaxDue: makeFromInt 1222, stateTaxDue: makeFromInt 1776 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24299, ordinaryIncomeNonSS: makeFromInt 48507, qualifiedIncome: makeFromInt 73647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14329, stateTaxDue: makeFromInt 5533 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36399, ordinaryIncomeNonSS: makeFromInt 2095, qualifiedIncome: makeFromInt 84102, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5854, stateTaxDue: makeFromInt 3845 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36022, ordinaryIncomeNonSS: makeFromInt 145417, qualifiedIncome: makeFromInt 13218, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25939, stateTaxDue: makeFromInt 7257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18453, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12142, ordinaryIncomeNonSS: makeFromInt 52237, qualifiedIncome: makeFromInt 74711, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16343, stateTaxDue: makeFromInt 6092 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62521, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1090, stateTaxDue: makeFromInt 2451 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46843, ordinaryIncomeNonSS: makeFromInt 10321, qualifiedIncome: makeFromInt 36624, itemizedDeductions: makeFromInt 24659, federalTaxDue: makeFromInt 2520, stateTaxDue: makeFromInt 1972 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88216, qualifiedIncome: makeFromInt 28862, itemizedDeductions: makeFromInt 23340, federalTaxDue: makeFromInt 9359, stateTaxDue: makeFromInt 5468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57732, qualifiedIncome: makeFromInt 25853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8970, stateTaxDue: makeFromInt 3916 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24706, federalTaxDue: makeFromInt 21179, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67090, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2811, stateTaxDue: makeFromInt 3100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32806, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1075, federalTaxDue: makeFromInt 326, stateTaxDue: makeFromInt 1122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9641, itemizedDeductions: makeFromInt 23547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 145 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40712, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36850, itemizedDeductions: makeFromInt 29193, federalTaxDue: makeFromInt 36662, stateTaxDue: makeFromInt 8888 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 964, federalTaxDue: makeFromInt 13756, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17886, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96828, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19, stateTaxDue: makeFromInt 4166 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27030, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39338, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13609, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 206 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14616, ordinaryIncomeNonSS: makeFromInt 35756, qualifiedIncome: makeFromInt 99230, itemizedDeductions: makeFromInt 9774, federalTaxDue: makeFromInt 16969, stateTaxDue: makeFromInt 6537 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36489, qualifiedIncome: makeFromInt 70195, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10987, stateTaxDue: makeFromInt 5165 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25002, ordinaryIncomeNonSS: makeFromInt 69256, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22697, stateTaxDue: makeFromInt 7888 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117382, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22635, federalTaxDue: makeFromInt 14542, stateTaxDue: makeFromInt 5294 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37925, itemizedDeductions: makeFromInt 17847, federalTaxDue: makeFromInt 26917, stateTaxDue: makeFromInt 8821 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100838, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28358, stateTaxDue: makeFromInt 9587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21240, ordinaryIncomeNonSS: makeFromInt 121770, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13936, stateTaxDue: makeFromInt 5558 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39478, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 274, stateTaxDue: makeFromInt 1585 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6877, qualifiedIncome: makeFromInt 63892, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2530, stateTaxDue: makeFromInt 3083 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68294, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2740 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24374, ordinaryIncomeNonSS: makeFromInt 133638, qualifiedIncome: makeFromInt 55672, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33045, stateTaxDue: makeFromInt 9091 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25353, ordinaryIncomeNonSS: makeFromInt 144567, qualifiedIncome: makeFromInt 82130, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40538, stateTaxDue: makeFromInt 11105 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37575, ordinaryIncomeNonSS: makeFromInt 89969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16541, federalTaxDue: makeFromInt 19309, stateTaxDue: makeFromInt 4043 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76009, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1250, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20985, ordinaryIncomeNonSS: makeFromInt 130253, qualifiedIncome: makeFromInt 72545, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31559, stateTaxDue: makeFromInt 9765 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19428, ordinaryIncomeNonSS: makeFromInt 88865, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25700, stateTaxDue: makeFromInt 8868 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4256, ordinaryIncomeNonSS: makeFromInt 30494, qualifiedIncome: makeFromInt 71814, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7015, stateTaxDue: makeFromInt 4789 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26004, federalTaxDue: makeFromInt 22606, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20803, federalTaxDue: makeFromInt 18779, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130127, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30198, stateTaxDue: makeFromInt 6251 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137484, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28634, stateTaxDue: makeFromInt 6787 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21981, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51934, qualifiedIncome: makeFromInt 57177, itemizedDeductions: makeFromInt 29728, federalTaxDue: makeFromInt 4520, stateTaxDue: makeFromInt 4881 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1104, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31442, stateTaxDue: makeFromInt 7180 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16513, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71872, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61710, qualifiedIncome: makeFromInt 40612, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8279, stateTaxDue: makeFromInt 4994 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112569, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14783, stateTaxDue: makeFromInt 5253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23080, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6137, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 476, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55626, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17715, stateTaxDue: makeFromInt 2613 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26012, ordinaryIncomeNonSS: makeFromInt 1900, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15246, federalTaxDue: makeFromInt 6809, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63300, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2590 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5365, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138464, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13338, stateTaxDue: makeFromInt 6448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147210, qualifiedIncome: makeFromInt 49710, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36898, stateTaxDue: makeFromInt 9492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39124, ordinaryIncomeNonSS: makeFromInt 15719, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12605, stateTaxDue: makeFromInt 5351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3958, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25251, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37437, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40300, ordinaryIncomeNonSS: makeFromInt 109641, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33443, stateTaxDue: makeFromInt 10107 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83015, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6646, stateTaxDue: makeFromInt 3748 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77291, qualifiedIncome: makeFromInt 70729, itemizedDeductions: makeFromInt 9513, federalTaxDue: makeFromInt 14810, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118718, qualifiedIncome: makeFromInt 98616, itemizedDeductions: makeFromInt 23497, federalTaxDue: makeFromInt 23332, stateTaxDue: makeFromInt 10192 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25386, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63175, itemizedDeductions: makeFromInt 18165, federalTaxDue: makeFromInt 1916, stateTaxDue: makeFromInt 2671 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40435, ordinaryIncomeNonSS: makeFromInt 122252, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26535, stateTaxDue: makeFromInt 5786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 920, ordinaryIncomeNonSS: makeFromInt 67954, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18884, federalTaxDue: makeFromInt 16518, stateTaxDue: makeFromInt 8117 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48186, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40810, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1631, stateTaxDue: makeFromInt 1466 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1745, qualifiedIncome: makeFromInt 10144, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57951, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12812, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23509, itemizedDeductions: makeFromInt 10907, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 600 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21595, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26864, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1907 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84589, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3554 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4704, qualifiedIncome: makeFromInt 53769, itemizedDeductions: makeFromInt 29819, federalTaxDue: makeFromInt 505, stateTaxDue: makeFromInt 2635 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28115, ordinaryIncomeNonSS: makeFromInt 26007, qualifiedIncome: makeFromInt 34110, itemizedDeductions: makeFromInt 4788, federalTaxDue: makeFromInt 3199, stateTaxDue: makeFromInt 2631 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7406, ordinaryIncomeNonSS: makeFromInt 40116, qualifiedIncome: makeFromInt 76197, itemizedDeductions: makeFromInt 24676, federalTaxDue: makeFromInt 9807, stateTaxDue: makeFromInt 5561 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69831, itemizedDeductions: makeFromInt 29210, federalTaxDue: makeFromInt 32311, stateTaxDue: makeFromInt 10737 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28975, ordinaryIncomeNonSS: makeFromInt 98892, qualifiedIncome: makeFromInt 37328, itemizedDeductions: makeFromInt 29556, federalTaxDue: makeFromInt 17768, stateTaxDue: makeFromInt 6336 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46332, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1842 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149562, qualifiedIncome: makeFromInt 94220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35653, stateTaxDue: makeFromInt 11814 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25953, ordinaryIncomeNonSS: makeFromInt 53265, qualifiedIncome: makeFromInt 57434, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5439, stateTaxDue: makeFromInt 4860 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21848, federalTaxDue: makeFromInt 25300, stateTaxDue: makeFromInt 5428 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28518, stateTaxDue: makeFromInt 11239 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33209, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91383, itemizedDeductions: makeFromInt 27986, federalTaxDue: makeFromInt 1956, stateTaxDue: makeFromInt 4170 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18599, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23913, ordinaryIncomeNonSS: makeFromInt 28319, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3058, stateTaxDue: makeFromInt 1097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17723, itemizedDeductions: makeFromInt 28882, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 353 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141052, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47819, stateTaxDue: makeFromInt 11598 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40138, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28938, stateTaxDue: makeFromInt 9032 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35678, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17530, ordinaryIncomeNonSS: makeFromInt 96480, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12680, federalTaxDue: makeFromInt 11155, stateTaxDue: makeFromInt 4268 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6163, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32607, ordinaryIncomeNonSS: makeFromInt 144786, qualifiedIncome: makeFromInt 42672, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38402, stateTaxDue: makeFromInt 9118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17426, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34629, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29639, ordinaryIncomeNonSS: makeFromInt 82550, qualifiedIncome: makeFromInt 9920, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8889, stateTaxDue: makeFromInt 4149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44767, ordinaryIncomeNonSS: makeFromInt 71939, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10706, stateTaxDue: makeFromInt 3240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61394, itemizedDeductions: makeFromInt 23024, federalTaxDue: makeFromInt 1649, stateTaxDue: makeFromInt 2784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34124, ordinaryIncomeNonSS: makeFromInt 26513, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1427, stateTaxDue: makeFromInt 924 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64758, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2763 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39026, ordinaryIncomeNonSS: makeFromInt 73172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13771, federalTaxDue: makeFromInt 24995, stateTaxDue: makeFromInt 8179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14217, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51028, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2441, stateTaxDue: makeFromInt 2378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103924, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20840, stateTaxDue: makeFromInt 4749 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30599, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1342 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34252, ordinaryIncomeNonSS: makeFromInt 70394, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18892, federalTaxDue: makeFromInt 9677, stateTaxDue: makeFromInt 3145 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24794, itemizedDeductions: makeFromInt 18013, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 665 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47185, ordinaryIncomeNonSS: makeFromInt 116638, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45544, stateTaxDue: makeFromInt 10702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43242, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67634, itemizedDeductions: makeFromInt 5409, federalTaxDue: makeFromInt 49092, stateTaxDue: makeFromInt 10753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56161, itemizedDeductions: makeFromInt 17710, federalTaxDue: makeFromInt 3232, stateTaxDue: makeFromInt 2433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25563, qualifiedIncome: makeFromInt 84769, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3649, stateTaxDue: makeFromInt 5178 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21455, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24102, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34101, itemizedDeductions: makeFromInt 13319, federalTaxDue: makeFromInt 38381, stateTaxDue: makeFromInt 9042 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13538, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10632, itemizedDeductions: makeFromInt 14793, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 93 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13485, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27518, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46409, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34908, itemizedDeductions: makeFromInt 7253, federalTaxDue: makeFromInt 1560, stateTaxDue: makeFromInt 1490 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2175, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49042, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16692, federalTaxDue: makeFromInt 3054, stateTaxDue: makeFromInt 1877 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97726, qualifiedIncome: makeFromInt 30184, itemizedDeductions: makeFromInt 3835, federalTaxDue: makeFromInt 19919, stateTaxDue: makeFromInt 6177 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21836, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36238, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49407, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1867 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22876, ordinaryIncomeNonSS: makeFromInt 42148, qualifiedIncome: makeFromInt 45114, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6975, stateTaxDue: makeFromInt 3988 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8747, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2413, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2511, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29513, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1056 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40328, ordinaryIncomeNonSS: makeFromInt 34012, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23323, stateTaxDue: makeFromInt 6406 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136114, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1434, federalTaxDue: makeFromInt 32131, stateTaxDue: makeFromInt 6391 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4893, ordinaryIncomeNonSS: makeFromInt 43521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2150, stateTaxDue: makeFromInt 1701 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5408, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99012, itemizedDeductions: makeFromInt 17963, federalTaxDue: makeFromInt 7599, stateTaxDue: makeFromInt 4696 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11188, ordinaryIncomeNonSS: makeFromInt 74243, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15523, federalTaxDue: makeFromInt 25950, stateTaxDue: makeFromInt 8662 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77715, itemizedDeductions: makeFromInt 25586, federalTaxDue: makeFromInt 44345, stateTaxDue: makeFromInt 11389 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58407, qualifiedIncome: makeFromInt 24380, itemizedDeductions: makeFromInt 5289, federalTaxDue: makeFromInt 9206, stateTaxDue: makeFromInt 3884 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18379, ordinaryIncomeNonSS: makeFromInt 56948, qualifiedIncome: makeFromInt 76052, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14741, stateTaxDue: makeFromInt 6436 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28876, ordinaryIncomeNonSS: makeFromInt 110372, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27709, stateTaxDue: makeFromInt 10076 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85208, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14271, federalTaxDue: makeFromInt 11546, stateTaxDue: makeFromInt 3917 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11576, ordinaryIncomeNonSS: makeFromInt 127594, qualifiedIncome: makeFromInt 23637, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21666, stateTaxDue: makeFromInt 6987 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16097, federalTaxDue: makeFromInt 31825, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34529, ordinaryIncomeNonSS: makeFromInt 139641, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4092, federalTaxDue: makeFromInt 29325, stateTaxDue: makeFromInt 6727 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10340, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23779, ordinaryIncomeNonSS: makeFromInt 2870, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 324, federalTaxDue: makeFromInt 7531, stateTaxDue: makeFromInt 4569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25001, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39403, ordinaryIncomeNonSS: makeFromInt 123639, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1146, federalTaxDue: makeFromInt 30652, stateTaxDue: makeFromInt 5959 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33677, itemizedDeductions: makeFromInt 21207, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1229 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33282, qualifiedIncome: makeFromInt 13831, itemizedDeductions: makeFromInt 2183, federalTaxDue: makeFromInt 2085, stateTaxDue: makeFromInt 1901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5077, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9806, itemizedDeductions: makeFromInt 14988, federalTaxDue: makeFromInt 27162, stateTaxDue: makeFromInt 7515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66236, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25514, stateTaxDue: makeFromInt 7825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43641, ordinaryIncomeNonSS: makeFromInt 132008, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19097, federalTaxDue: makeFromInt 29044, stateTaxDue: makeFromInt 6145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23083, ordinaryIncomeNonSS: makeFromInt 75416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12272, federalTaxDue: makeFromInt 13976, stateTaxDue: makeFromInt 3499 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39192, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92615, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39899, stateTaxDue: makeFromInt 11456 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71820, itemizedDeductions: makeFromInt 15934, federalTaxDue: makeFromInt 29001, stateTaxDue: makeFromInt 10616 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29022, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20042, federalTaxDue: makeFromInt 36303, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18123, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36136, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90003, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7249, stateTaxDue: makeFromInt 4045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9507, ordinaryIncomeNonSS: makeFromInt 34632, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25698, federalTaxDue: makeFromInt 858, stateTaxDue: makeFromInt 1317 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87457, qualifiedIncome: makeFromInt 51562, itemizedDeductions: makeFromInt 664, federalTaxDue: makeFromInt 11906, stateTaxDue: makeFromInt 6276 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48711, ordinaryIncomeNonSS: makeFromInt 76611, qualifiedIncome: makeFromInt 8809, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15070, stateTaxDue: makeFromInt 3896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65663, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144162, qualifiedIncome: makeFromInt 13548, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29053, stateTaxDue: makeFromInt 7696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133258, qualifiedIncome: makeFromInt 10768, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25890, stateTaxDue: makeFromInt 6999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24616, qualifiedIncome: makeFromInt 41434, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 568, stateTaxDue: makeFromInt 2940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116606, qualifiedIncome: makeFromInt 78337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41903, stateTaxDue: makeFromInt 9514 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97588, qualifiedIncome: makeFromInt 61078, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18469, stateTaxDue: makeFromInt 7467 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12041, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34888, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32040, stateTaxDue: makeFromInt 8791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51240, itemizedDeductions: makeFromInt 752, federalTaxDue: makeFromInt 126, stateTaxDue: makeFromInt 2266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24332, ordinaryIncomeNonSS: makeFromInt 51785, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28939, federalTaxDue: makeFromInt 20641, stateTaxDue: makeFromInt 7517 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29879, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25669, itemizedDeductions: makeFromInt 3247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 829 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39771, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21842, stateTaxDue: makeFromInt 8814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11064, ordinaryIncomeNonSS: makeFromInt 30675, qualifiedIncome: makeFromInt 15175, itemizedDeductions: makeFromInt 10620, federalTaxDue: makeFromInt 3149, stateTaxDue: makeFromInt 1992 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25848, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78147, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15847, federalTaxDue: makeFromInt 17311, stateTaxDue: makeFromInt 8552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15969, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3440, ordinaryIncomeNonSS: makeFromInt 115042, qualifiedIncome: makeFromInt 87198, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28356, stateTaxDue: makeFromInt 9967 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3339, ordinaryIncomeNonSS: makeFromInt 68220, qualifiedIncome: makeFromInt 95439, itemizedDeductions: makeFromInt 21032, federalTaxDue: makeFromInt 13842, stateTaxDue: makeFromInt 7508 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9871, itemizedDeductions: makeFromInt 22116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 39 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7909, ordinaryIncomeNonSS: makeFromInt 13243, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 227 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45870, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56261, itemizedDeductions: makeFromInt 18052, federalTaxDue: makeFromInt 1192, stateTaxDue: makeFromInt 2217 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30985, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87115, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44765, stateTaxDue: makeFromInt 11644 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64639, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2443, stateTaxDue: makeFromInt 2977 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1818 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24008, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12604, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83646, itemizedDeductions: makeFromInt 10573, federalTaxDue: makeFromInt 4987, stateTaxDue: makeFromInt 3919 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101513, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28505, federalTaxDue: makeFromInt 21801, stateTaxDue: makeFromInt 4621 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4052, ordinaryIncomeNonSS: makeFromInt 71291, qualifiedIncome: makeFromInt 22797, itemizedDeductions: makeFromInt 11969, federalTaxDue: makeFromInt 11035, stateTaxDue: makeFromInt 4249 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27697, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 385, stateTaxDue: makeFromInt 810 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2195, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33252, ordinaryIncomeNonSS: makeFromInt 98812, qualifiedIncome: makeFromInt 55154, itemizedDeductions: makeFromInt 27695, federalTaxDue: makeFromInt 23583, stateTaxDue: makeFromInt 7403 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48155, itemizedDeductions: makeFromInt 3803, federalTaxDue: makeFromInt 1531, stateTaxDue: makeFromInt 2232 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14798, ordinaryIncomeNonSS: makeFromInt 53140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14537, federalTaxDue: makeFromInt 6142, stateTaxDue: makeFromInt 2261 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74392, itemizedDeductions: makeFromInt 16525, federalTaxDue: makeFromInt 6876, stateTaxDue: makeFromInt 3447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19116, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 481 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76532, qualifiedIncome: makeFromInt 16514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10488, stateTaxDue: makeFromInt 4397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24365, itemizedDeductions: makeFromInt 8785, federalTaxDue: makeFromInt 30562, stateTaxDue: makeFromInt 8464 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32798, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31627, stateTaxDue: makeFromInt 8885 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41050, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 66, federalTaxDue: makeFromInt 2858, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80767, itemizedDeductions: makeFromInt 10691, federalTaxDue: makeFromInt 820, stateTaxDue: makeFromInt 3670 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9418, itemizedDeductions: makeFromInt 21423, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 649, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53079, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2079 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48909, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65499, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1157, stateTaxDue: makeFromInt 2800 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35922, ordinaryIncomeNonSS: makeFromInt 67488, qualifiedIncome: makeFromInt 36616, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18231, stateTaxDue: makeFromInt 4950 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13021, ordinaryIncomeNonSS: makeFromInt 149677, qualifiedIncome: makeFromInt 174, itemizedDeductions: makeFromInt 5404, federalTaxDue: makeFromInt 26955, stateTaxDue: makeFromInt 7224 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43458, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28932, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42286, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58042, itemizedDeductions: makeFromInt 23942, federalTaxDue: makeFromInt 32490, stateTaxDue: makeFromInt 9727 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2046, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15584, itemizedDeductions: makeFromInt 25542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 448 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97335, itemizedDeductions: makeFromInt 22567, federalTaxDue: makeFromInt 38031, stateTaxDue: makeFromInt 11912 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20310, qualifiedIncome: makeFromInt 78914, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13782, stateTaxDue: makeFromInt 4706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120658, qualifiedIncome: makeFromInt 1374, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17751, stateTaxDue: makeFromInt 5775 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25006, ordinaryIncomeNonSS: makeFromInt 90035, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15658, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2240, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30719, qualifiedIncome: makeFromInt 17905, itemizedDeductions: makeFromInt 28110, federalTaxDue: makeFromInt 6413, stateTaxDue: makeFromInt 1976 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14561, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49874, itemizedDeductions: makeFromInt 10745, federalTaxDue: makeFromInt 1230, stateTaxDue: makeFromInt 2239 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42467, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82778, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10082, stateTaxDue: makeFromInt 3684 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5110, ordinaryIncomeNonSS: makeFromInt 84639, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15511, stateTaxDue: makeFromInt 8757 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60031, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2945, stateTaxDue: makeFromInt 2747 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 99, federalTaxDue: makeFromInt 27246, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31709, ordinaryIncomeNonSS: makeFromInt 52368, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5206, stateTaxDue: makeFromInt 1943 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32539, ordinaryIncomeNonSS: makeFromInt 93482, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17652, stateTaxDue: makeFromInt 4421 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24348, qualifiedIncome: makeFromInt 41330, itemizedDeductions: makeFromInt 27428, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40980, ordinaryIncomeNonSS: makeFromInt 31760, qualifiedIncome: makeFromInt 52558, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13666, stateTaxDue: makeFromInt 3872 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23520, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49960, ordinaryIncomeNonSS: makeFromInt 52322, qualifiedIncome: makeFromInt 8800, itemizedDeductions: makeFromInt 20046, federalTaxDue: makeFromInt 13290, stateTaxDue: makeFromInt 2770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11534, federalTaxDue: makeFromInt 27737, stateTaxDue: makeFromInt 5617 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3245, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148436, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 579, federalTaxDue: makeFromInt 35853, stateTaxDue: makeFromInt 12047 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9411, ordinaryIncomeNonSS: makeFromInt 82304, qualifiedIncome: makeFromInt 14264, itemizedDeductions: makeFromInt 5622, federalTaxDue: makeFromInt 13180, stateTaxDue: makeFromInt 4373 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38632, ordinaryIncomeNonSS: makeFromInt 65188, qualifiedIncome: makeFromInt 40878, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15809, stateTaxDue: makeFromInt 4728 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76672, itemizedDeductions: makeFromInt 17812, federalTaxDue: makeFromInt 3746, stateTaxDue: makeFromInt 3360 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21065, itemizedDeductions: makeFromInt 6155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 678 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38392, ordinaryIncomeNonSS: makeFromInt 147826, qualifiedIncome: makeFromInt 71228, itemizedDeductions: makeFromInt 26014, federalTaxDue: makeFromInt 38652, stateTaxDue: makeFromInt 10621 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106914, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13371, federalTaxDue: makeFromInt 14695, stateTaxDue: makeFromInt 5091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48673, itemizedDeductions: makeFromInt 9991, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1959 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9158, ordinaryIncomeNonSS: makeFromInt 65618, qualifiedIncome: makeFromInt 40076, itemizedDeductions: makeFromInt 25303, federalTaxDue: makeFromInt 3250, stateTaxDue: makeFromInt 4738 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19163, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33477, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1246 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 429, ordinaryIncomeNonSS: makeFromInt 43124, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1689, stateTaxDue: makeFromInt 1681 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12329, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4670, ordinaryIncomeNonSS: makeFromInt 31233, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10394, stateTaxDue: makeFromInt 6203 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46839, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28726, stateTaxDue: makeFromInt 7750 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57820, qualifiedIncome: makeFromInt 32195, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8402, stateTaxDue: makeFromInt 4026 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108196, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2309, federalTaxDue: makeFromInt 29977, stateTaxDue: makeFromInt 9955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11924, ordinaryIncomeNonSS: makeFromInt 4900, qualifiedIncome: makeFromInt 64212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2872 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23740, ordinaryIncomeNonSS: makeFromInt 86140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9071, stateTaxDue: makeFromInt 3832 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123613, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17826, federalTaxDue: makeFromInt 33236, stateTaxDue: makeFromInt 10926 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82203, itemizedDeductions: makeFromInt 17140, federalTaxDue: makeFromInt 7138, stateTaxDue: makeFromInt 3535 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2791, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20013, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22750, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32262, stateTaxDue: makeFromInt 8183 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20117, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3217, federalTaxDue: makeFromInt 28454, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28838, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25937, itemizedDeductions: makeFromInt 28141, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 722 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20167, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68045, itemizedDeductions: makeFromInt 9975, federalTaxDue: makeFromInt 494, stateTaxDue: makeFromInt 2827 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6108, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18323, itemizedDeductions: makeFromInt 26237, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 661 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100874, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17295, federalTaxDue: makeFromInt 10085, stateTaxDue: makeFromInt 4594 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52084, itemizedDeductions: makeFromInt 21499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2003 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56038, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4981, stateTaxDue: makeFromInt 2409 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2042, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41416, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1696 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78390, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6566, stateTaxDue: makeFromInt 3545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133145, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21427, federalTaxDue: makeFromInt 34660, stateTaxDue: makeFromInt 11402 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11842, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95430, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7298, stateTaxDue: makeFromInt 4297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39460, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64700, qualifiedIncome: makeFromInt 43610, itemizedDeductions: makeFromInt 16036, federalTaxDue: makeFromInt 3495, stateTaxDue: makeFromInt 4941 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7342, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36841, itemizedDeductions: makeFromInt 23178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49646, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84633, itemizedDeductions: makeFromInt 26394, federalTaxDue: makeFromInt 10765, stateTaxDue: makeFromInt 3977 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44912, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90698, itemizedDeductions: makeFromInt 18447, federalTaxDue: makeFromInt 43995, stateTaxDue: makeFromInt 11660 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1210, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1794, itemizedDeductions: makeFromInt 25606, federalTaxDue: makeFromInt 20860, stateTaxDue: makeFromInt 7191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69331, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16495, federalTaxDue: makeFromInt 21413, stateTaxDue: makeFromInt 8289 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46222, ordinaryIncomeNonSS: makeFromInt 55603, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6664, stateTaxDue: makeFromInt 2105 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1582 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54663, qualifiedIncome: makeFromInt 16584, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4103, stateTaxDue: makeFromInt 3053 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98806, qualifiedIncome: makeFromInt 25929, itemizedDeductions: makeFromInt 16284, federalTaxDue: makeFromInt 28430, stateTaxDue: makeFromInt 6015 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49941, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43896, itemizedDeductions: makeFromInt 26709, federalTaxDue: makeFromInt 743, stateTaxDue: makeFromInt 1620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31814, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15998, federalTaxDue: makeFromInt 26741, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38052, ordinaryIncomeNonSS: makeFromInt 55991, qualifiedIncome: makeFromInt 1375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6331, stateTaxDue: makeFromInt 2393 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23578, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17034, federalTaxDue: makeFromInt 26038, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28310, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20588, stateTaxDue: makeFromInt 8241 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31402, qualifiedIncome: makeFromInt 1396, itemizedDeductions: makeFromInt 16870, federalTaxDue: makeFromInt 3456, stateTaxDue: makeFromInt 1065 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1576, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29217, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15622, itemizedDeductions: makeFromInt 5919, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 406 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14721, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42529, itemizedDeductions: makeFromInt 5456, federalTaxDue: makeFromInt 5183, stateTaxDue: makeFromInt 1671 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15710, ordinaryIncomeNonSS: makeFromInt 90255, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13444, stateTaxDue: makeFromInt 4052 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8375, ordinaryIncomeNonSS: makeFromInt 17685, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33998, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26460, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4985, ordinaryIncomeNonSS: makeFromInt 74642, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9967, stateTaxDue: makeFromInt 3277 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33885, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8902, federalTaxDue: makeFromInt 2183, stateTaxDue: makeFromInt 1439 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9371, ordinaryIncomeNonSS: makeFromInt 87854, qualifiedIncome: makeFromInt 20257, itemizedDeductions: makeFromInt 12747, federalTaxDue: makeFromInt 10469, stateTaxDue: makeFromInt 4861 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33209, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7103, federalTaxDue: makeFromInt 21442, stateTaxDue: makeFromInt 6285 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43016, ordinaryIncomeNonSS: makeFromInt 43630, qualifiedIncome: makeFromInt 55523, itemizedDeductions: makeFromInt 27899, federalTaxDue: makeFromInt 14747, stateTaxDue: makeFromInt 4703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5419, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24293, itemizedDeductions: makeFromInt 13079, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1015 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8493, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25218, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41769, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20892, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19783, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87188, qualifiedIncome: makeFromInt 69716, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19397, stateTaxDue: makeFromInt 7553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29514, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99738, itemizedDeductions: makeFromInt 28712, federalTaxDue: makeFromInt 41199, stateTaxDue: makeFromInt 11912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17065, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6226, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25036, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139329, qualifiedIncome: makeFromInt 20713, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19039, stateTaxDue: makeFromInt 7509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12897, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 311 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27484, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8156, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32462, stateTaxDue: makeFromInt 7453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13015, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29354, itemizedDeductions: makeFromInt 21359, federalTaxDue: makeFromInt 26028, stateTaxDue: makeFromInt 8593 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2809, ordinaryIncomeNonSS: makeFromInt 81603, qualifiedIncome: makeFromInt 62485, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12391, stateTaxDue: makeFromInt 6529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59298, itemizedDeductions: makeFromInt 19878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2575 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40649, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1371, stateTaxDue: makeFromInt 2282 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48320, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93770, itemizedDeductions: makeFromInt 26293, federalTaxDue: makeFromInt 10565, stateTaxDue: makeFromInt 4234 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97911, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25089, federalTaxDue: makeFromInt 21698, stateTaxDue: makeFromInt 4641 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46719, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28204, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14015, itemizedDeductions: makeFromInt 4074, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 446 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23151, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9052, ordinaryIncomeNonSS: makeFromInt 43957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3719, stateTaxDue: makeFromInt 1876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1276 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20603, qualifiedIncome: makeFromInt 73361, itemizedDeductions: makeFromInt 19663, federalTaxDue: makeFromInt 3987, stateTaxDue: makeFromInt 4243 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98145, qualifiedIncome: makeFromInt 24410, itemizedDeductions: makeFromInt 22288, federalTaxDue: makeFromInt 13039, stateTaxDue: makeFromInt 5553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20155, ordinaryIncomeNonSS: makeFromInt 114100, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17185, stateTaxDue: makeFromInt 5450 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85679, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15106, stateTaxDue: makeFromInt 4145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31623, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91176, itemizedDeductions: makeFromInt 19498, federalTaxDue: makeFromInt 45110, stateTaxDue: makeFromInt 11872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47835, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 205, federalTaxDue: makeFromInt 50504, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27629, ordinaryIncomeNonSS: makeFromInt 79428, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29498, federalTaxDue: makeFromInt 11594, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49047, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3627, stateTaxDue: makeFromInt 2073 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47654, ordinaryIncomeNonSS: makeFromInt 50463, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17165, federalTaxDue: makeFromInt 5596, stateTaxDue: makeFromInt 1848 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80557, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20241, stateTaxDue: makeFromInt 3773 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20622, ordinaryIncomeNonSS: makeFromInt 93651, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12245, stateTaxDue: makeFromInt 4108 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 595, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30171, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27005, stateTaxDue: makeFromInt 8434 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84736, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21682, federalTaxDue: makeFromInt 5899, stateTaxDue: makeFromInt 3562 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98295, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27213, stateTaxDue: makeFromInt 9766 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27862, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36499, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89016, itemizedDeductions: makeFromInt 26745, federalTaxDue: makeFromInt 48453, stateTaxDue: makeFromInt 11965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14434, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18587, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 287 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21030, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35720, itemizedDeductions: makeFromInt 29648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1271 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2898, ordinaryIncomeNonSS: makeFromInt 11951, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 123 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7693, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39814, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28295, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30234, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34073, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14861, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26300, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99174, itemizedDeductions: makeFromInt 15665, federalTaxDue: makeFromInt 16141, stateTaxDue: makeFromInt 4630 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49317, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26131, federalTaxDue: makeFromInt 35680, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63062, qualifiedIncome: makeFromInt 77285, itemizedDeductions: makeFromInt 28543, federalTaxDue: makeFromInt 13422, stateTaxDue: makeFromInt 6562 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46674, ordinaryIncomeNonSS: makeFromInt 116759, qualifiedIncome: makeFromInt 81597, itemizedDeductions: makeFromInt 8624, federalTaxDue: makeFromInt 45529, stateTaxDue: makeFromInt 9892 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2868, ordinaryIncomeNonSS: makeFromInt 100500, qualifiedIncome: makeFromInt 65126, itemizedDeductions: makeFromInt 24295, federalTaxDue: makeFromInt 20138, stateTaxDue: makeFromInt 8019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16595, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5182, itemizedDeductions: makeFromInt 195, federalTaxDue: makeFromInt 36866, stateTaxDue: makeFromInt 7690 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38076, itemizedDeductions: makeFromInt 11635, federalTaxDue: makeFromInt 37399, stateTaxDue: makeFromInt 8939 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15030, ordinaryIncomeNonSS: makeFromInt 11525, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 5101 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5032, ordinaryIncomeNonSS: makeFromInt 121571, qualifiedIncome: makeFromInt 31365, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23258, stateTaxDue: makeFromInt 7178 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3325, ordinaryIncomeNonSS: makeFromInt 103267, qualifiedIncome: makeFromInt 21015, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10086, stateTaxDue: makeFromInt 5539 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49555, ordinaryIncomeNonSS: makeFromInt 69890, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10048, federalTaxDue: makeFromInt 15383, stateTaxDue: makeFromInt 3116 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135702, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19648, federalTaxDue: makeFromInt 22080, stateTaxDue: makeFromInt 6310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90182, itemizedDeductions: makeFromInt 22056, federalTaxDue: makeFromInt 34748, stateTaxDue: makeFromInt 11698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71166, qualifiedIncome: makeFromInt 5029, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6035, stateTaxDue: makeFromInt 3235 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21014, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36396, itemizedDeductions: makeFromInt 2458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49102, ordinaryIncomeNonSS: makeFromInt 138907, qualifiedIncome: makeFromInt 89154, itemizedDeductions: makeFromInt 8127, federalTaxDue: makeFromInt 46277, stateTaxDue: makeFromInt 11182 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129672, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24227, stateTaxDue: makeFromInt 5902 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11861, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 258 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4904, ordinaryIncomeNonSS: makeFromInt 48836, qualifiedIncome: makeFromInt 62894, itemizedDeductions: makeFromInt 1529, federalTaxDue: makeFromInt 7525, stateTaxDue: makeFromInt 5012 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66291, itemizedDeductions: makeFromInt 29797, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2640 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8174, ordinaryIncomeNonSS: makeFromInt 53938, qualifiedIncome: makeFromInt 40266, itemizedDeductions: makeFromInt 2650, federalTaxDue: makeFromInt 11998, stateTaxDue: makeFromInt 4458 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44323, qualifiedIncome: makeFromInt 87836, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15748, stateTaxDue: makeFromInt 6250 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70883, itemizedDeductions: makeFromInt 1317, federalTaxDue: makeFromInt 920, stateTaxDue: makeFromInt 2969 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28134, itemizedDeductions: makeFromInt 26604, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 952 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47802, ordinaryIncomeNonSS: makeFromInt 29525, qualifiedIncome: makeFromInt 85188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19451, stateTaxDue: makeFromInt 5422 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64132, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34846, stateTaxDue: makeFromInt 10032 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 229, itemizedDeductions: makeFromInt 29213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 542, itemizedDeductions: makeFromInt 14017, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17917, ordinaryIncomeNonSS: makeFromInt 72636, qualifiedIncome: makeFromInt 62469, itemizedDeductions: makeFromInt 28460, federalTaxDue: makeFromInt 8894, stateTaxDue: makeFromInt 6238 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26160, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22549, federalTaxDue: makeFromInt 2161, stateTaxDue: makeFromInt 2186 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23181, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78330, itemizedDeductions: makeFromInt 25117, federalTaxDue: makeFromInt 5960, stateTaxDue: makeFromInt 3770 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29885, ordinaryIncomeNonSS: makeFromInt 96084, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8818, federalTaxDue: makeFromInt 17735, stateTaxDue: makeFromInt 4349 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47283, ordinaryIncomeNonSS: makeFromInt 284, qualifiedIncome: makeFromInt 48001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1810 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8272, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4459, ordinaryIncomeNonSS: makeFromInt 3491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116548, qualifiedIncome: makeFromInt 88278, itemizedDeductions: makeFromInt 23357, federalTaxDue: makeFromInt 36641, stateTaxDue: makeFromInt 9866 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27729, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83506, itemizedDeductions: makeFromInt 21379, federalTaxDue: makeFromInt 42506, stateTaxDue: makeFromInt 11480 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90572, itemizedDeductions: makeFromInt 7445, federalTaxDue: makeFromInt 6333, stateTaxDue: makeFromInt 4274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27897, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20465, ordinaryIncomeNonSS: makeFromInt 61181, qualifiedIncome: makeFromInt 30774, itemizedDeductions: makeFromInt 3198, federalTaxDue: makeFromInt 5160, stateTaxDue: makeFromInt 4123 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49668, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9930, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20740, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57581, qualifiedIncome: makeFromInt 75496, itemizedDeductions: makeFromInt 892, federalTaxDue: makeFromInt 14832, stateTaxDue: makeFromInt 6179 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4421, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13234, ordinaryIncomeNonSS: makeFromInt 65707, qualifiedIncome: makeFromInt 59323, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9392, stateTaxDue: makeFromInt 5577 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24586, ordinaryIncomeNonSS: makeFromInt 82168, qualifiedIncome: makeFromInt 57800, itemizedDeductions: makeFromInt 17423, federalTaxDue: makeFromInt 23304, stateTaxDue: makeFromInt 6743 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23266, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24406, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 788 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 696, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136076, qualifiedIncome: makeFromInt 49643, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25730, stateTaxDue: makeFromInt 8911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92202, qualifiedIncome: makeFromInt 51501, itemizedDeductions: makeFromInt 4326, federalTaxDue: makeFromInt 13308, stateTaxDue: makeFromInt 6676 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29070, ordinaryIncomeNonSS: makeFromInt 126938, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10776, federalTaxDue: makeFromInt 36623, stateTaxDue: makeFromInt 10772 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20816, ordinaryIncomeNonSS: makeFromInt 78752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13601, stateTaxDue: makeFromInt 3683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42031, ordinaryIncomeNonSS: makeFromInt 24387, qualifiedIncome: makeFromInt 76326, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12395, stateTaxDue: makeFromInt 4586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35884, ordinaryIncomeNonSS: makeFromInt 1957, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2777, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1661, stateTaxDue: makeFromInt 1656 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76243, qualifiedIncome: makeFromInt 56097, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19766, stateTaxDue: makeFromInt 6142 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44076, qualifiedIncome: makeFromInt 29938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5238, stateTaxDue: makeFromInt 3246 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97884, qualifiedIncome: makeFromInt 45611, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17094, stateTaxDue: makeFromInt 6800 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40838, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29559, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38805, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1365 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21369, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91603, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38151, stateTaxDue: makeFromInt 11771 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52092, qualifiedIncome: makeFromInt 7165, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6923, stateTaxDue: makeFromInt 2488 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128810, qualifiedIncome: makeFromInt 30607, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42697, stateTaxDue: makeFromInt 7906 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130270, qualifiedIncome: makeFromInt 68472, itemizedDeductions: makeFromInt 1739, federalTaxDue: makeFromInt 30114, stateTaxDue: makeFromInt 9789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34348, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26536, federalTaxDue: makeFromInt 24645, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6276, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14125, itemizedDeductions: makeFromInt 969, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6494, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64384, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4010, stateTaxDue: makeFromInt 2855 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7840, ordinaryIncomeNonSS: makeFromInt 64616, qualifiedIncome: makeFromInt 11739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4285, stateTaxDue: makeFromInt 3143 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22395, ordinaryIncomeNonSS: makeFromInt 74517, qualifiedIncome: makeFromInt 52315, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9592, stateTaxDue: makeFromInt 5867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36392, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30802, stateTaxDue: makeFromInt 9057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48816, ordinaryIncomeNonSS: makeFromInt 44374, qualifiedIncome: makeFromInt 49008, itemizedDeductions: makeFromInt 22975, federalTaxDue: makeFromInt 12781, stateTaxDue: makeFromInt 4314 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 469, ordinaryIncomeNonSS: makeFromInt 335, qualifiedIncome: makeFromInt 91233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2390, stateTaxDue: makeFromInt 4221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144960, qualifiedIncome: makeFromInt 89921, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40732, stateTaxDue: makeFromInt 11632 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21777, itemizedDeductions: makeFromInt 9045, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 714 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3531, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130496, qualifiedIncome: makeFromInt 43354, itemizedDeductions: makeFromInt 24245, federalTaxDue: makeFromInt 29790, stateTaxDue: makeFromInt 8218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95090, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2969, stateTaxDue: makeFromInt 4401 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19884, itemizedDeductions: makeFromInt 17345, federalTaxDue: makeFromInt 29387, stateTaxDue: makeFromInt 8317 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34529, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99783, itemizedDeductions: makeFromInt 21491, federalTaxDue: makeFromInt 8562, stateTaxDue: makeFromInt 4414 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5086, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17148, federalTaxDue: makeFromInt 51465, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32159, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13160, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14229, ordinaryIncomeNonSS: makeFromInt 54342, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21104, federalTaxDue: makeFromInt 14302, stateTaxDue: makeFromInt 7321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16484, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11255, qualifiedIncome: makeFromInt 60602, itemizedDeductions: makeFromInt 9, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3018 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43371, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22922, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38900, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1331 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62786, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1890, stateTaxDue: makeFromInt 2564 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20138, ordinaryIncomeNonSS: makeFromInt 149189, qualifiedIncome: makeFromInt 12342, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26993, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17552, ordinaryIncomeNonSS: makeFromInt 26622, qualifiedIncome: makeFromInt 552, itemizedDeductions: makeFromInt 6811, federalTaxDue: makeFromInt 1964, stateTaxDue: makeFromInt 904 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3091, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58326, itemizedDeductions: makeFromInt 3528, federalTaxDue: makeFromInt 34146, stateTaxDue: makeFromInt 10161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17191, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6794, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6262, ordinaryIncomeNonSS: makeFromInt 35950, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18166, stateTaxDue: makeFromInt 6709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1770, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12140, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131744, qualifiedIncome: makeFromInt 15428, itemizedDeductions: makeFromInt 5053, federalTaxDue: makeFromInt 21582, stateTaxDue: makeFromInt 6784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33132, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22424, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47059, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20201, federalTaxDue: makeFromInt 11005, stateTaxDue: makeFromInt 7072 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7663, ordinaryIncomeNonSS: makeFromInt 128283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6018, federalTaxDue: makeFromInt 17579, stateTaxDue: makeFromInt 5839 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7541, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3947, ordinaryIncomeNonSS: makeFromInt 133701, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13244, stateTaxDue: makeFromInt 6166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21126, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3226, federalTaxDue: makeFromInt 4032, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121109, qualifiedIncome: makeFromInt 64592, itemizedDeductions: makeFromInt 13907, federalTaxDue: makeFromInt 29874, stateTaxDue: makeFromInt 8810 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35572, ordinaryIncomeNonSS: makeFromInt 114512, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42094, stateTaxDue: makeFromInt 10593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25995, ordinaryIncomeNonSS: makeFromInt 110251, qualifiedIncome: makeFromInt 67650, itemizedDeductions: makeFromInt 23574, federalTaxDue: makeFromInt 26576, stateTaxDue: makeFromInt 8522 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60102, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2412 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28191, federalTaxDue: makeFromInt 43027, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19604, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9805, federalTaxDue: makeFromInt 15743, stateTaxDue: makeFromInt 4783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 479, ordinaryIncomeNonSS: makeFromInt 28709, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28215, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12478, ordinaryIncomeNonSS: makeFromInt 147420, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15090, federalTaxDue: makeFromInt 29281, stateTaxDue: makeFromInt 7172 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 223, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137197, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22428, federalTaxDue: makeFromInt 13059, stateTaxDue: makeFromInt 6185 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29721, ordinaryIncomeNonSS: makeFromInt 113055, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21963, stateTaxDue: makeFromInt 5398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60153, itemizedDeductions: makeFromInt 14595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4705, itemizedDeductions: makeFromInt 28840, federalTaxDue: makeFromInt 20231, stateTaxDue: makeFromInt 7339 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66778, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10626, federalTaxDue: makeFromInt 16363, stateTaxDue: makeFromInt 7964 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53746, itemizedDeductions: makeFromInt 10226, federalTaxDue: makeFromInt 943, stateTaxDue: makeFromInt 2212 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19588, ordinaryIncomeNonSS: makeFromInt 99140, qualifiedIncome: makeFromInt 87826, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20923, stateTaxDue: makeFromInt 8673 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36842, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15074, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 337 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30043, itemizedDeductions: makeFromInt 25180, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29607, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86282, itemizedDeductions: makeFromInt 29484, federalTaxDue: makeFromInt 3230, stateTaxDue: makeFromInt 3739 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33111, ordinaryIncomeNonSS: makeFromInt 102832, qualifiedIncome: makeFromInt 27372, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19496, stateTaxDue: makeFromInt 5935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95788, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20492, federalTaxDue: makeFromInt 10538, stateTaxDue: makeFromInt 4214 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107439, qualifiedIncome: makeFromInt 86777, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30048, stateTaxDue: makeFromInt 9384 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84583, itemizedDeductions: makeFromInt 18095, federalTaxDue: makeFromInt 1392, stateTaxDue: makeFromInt 3661 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38021, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22516, itemizedDeductions: makeFromInt 16568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 451 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5771, ordinaryIncomeNonSS: makeFromInt 77668, qualifiedIncome: makeFromInt 12092, itemizedDeductions: makeFromInt 11288, federalTaxDue: makeFromInt 9444, stateTaxDue: makeFromInt 4113 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26116, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3654, federalTaxDue: makeFromInt 6872, stateTaxDue: makeFromInt 3190 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49845, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3187, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92215, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5792, stateTaxDue: makeFromInt 4236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32833, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46172, itemizedDeductions: makeFromInt 10240, federalTaxDue: makeFromInt 406, stateTaxDue: makeFromInt 1734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23832, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66909, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2476, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140706, qualifiedIncome: makeFromInt 44400, itemizedDeductions: makeFromInt 19754, federalTaxDue: makeFromInt 26787, stateTaxDue: makeFromInt 8680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36417, ordinaryIncomeNonSS: makeFromInt 136349, qualifiedIncome: makeFromInt 51679, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32908, stateTaxDue: makeFromInt 8937 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39711, ordinaryIncomeNonSS: makeFromInt 50801, qualifiedIncome: makeFromInt 52406, itemizedDeductions: makeFromInt 16533, federalTaxDue: makeFromInt 19625, stateTaxDue: makeFromInt 5039 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135744, qualifiedIncome: makeFromInt 11433, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25703, stateTaxDue: makeFromInt 7282 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92188, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34585, stateTaxDue: makeFromInt 9034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26951, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46846, qualifiedIncome: makeFromInt 21987, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2095, stateTaxDue: makeFromInt 2967 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5944, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139324, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13527, stateTaxDue: makeFromInt 6291 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101421, qualifiedIncome: makeFromInt 92624, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26101, stateTaxDue: makeFromInt 9345 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47199, ordinaryIncomeNonSS: makeFromInt 136895, qualifiedIncome: makeFromInt 93563, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40426, stateTaxDue: makeFromInt 11148 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17869, itemizedDeductions: makeFromInt 25933, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 638 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49235, ordinaryIncomeNonSS: makeFromInt 2387, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45753, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1012, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38644, stateTaxDue: makeFromInt 7273 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88644, itemizedDeductions: makeFromInt 29938, federalTaxDue: makeFromInt 3584, stateTaxDue: makeFromInt 3857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1354, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89416, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34701, stateTaxDue: makeFromInt 11782 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12805, itemizedDeductions: makeFromInt 5015, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 185 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 398, ordinaryIncomeNonSS: makeFromInt 9608, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28165, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24492, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19085, itemizedDeductions: makeFromInt 24331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14361, ordinaryIncomeNonSS: makeFromInt 32434, qualifiedIncome: makeFromInt 75562, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9014, stateTaxDue: makeFromInt 5025 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105467, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8027, federalTaxDue: makeFromInt 14615, stateTaxDue: makeFromInt 4818 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19305, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29385, qualifiedIncome: makeFromInt 73654, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5894, stateTaxDue: makeFromInt 4658 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39325, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56157, qualifiedIncome: makeFromInt 40615, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2728, stateTaxDue: makeFromInt 4364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24529, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3913, itemizedDeductions: makeFromInt 26031, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34716, ordinaryIncomeNonSS: makeFromInt 55933, qualifiedIncome: makeFromInt 31912, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17107, stateTaxDue: makeFromInt 4133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41456, ordinaryIncomeNonSS: makeFromInt 112661, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15173, federalTaxDue: makeFromInt 26467, stateTaxDue: makeFromInt 5399 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38670, ordinaryIncomeNonSS: makeFromInt 143809, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43028, stateTaxDue: makeFromInt 11615 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77472, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10944, stateTaxDue: makeFromInt 8398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5589, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22438, ordinaryIncomeNonSS: makeFromInt 96063, qualifiedIncome: makeFromInt 81145, itemizedDeductions: makeFromInt 16440, federalTaxDue: makeFromInt 30033, stateTaxDue: makeFromInt 8525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64598, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8928, stateTaxDue: makeFromInt 7755 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72270, qualifiedIncome: makeFromInt 41667, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14763, stateTaxDue: makeFromInt 5242 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35964, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17957, federalTaxDue: makeFromInt 28565, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72265, qualifiedIncome: makeFromInt 19169, itemizedDeductions: makeFromInt 19587, federalTaxDue: makeFromInt 5719, stateTaxDue: makeFromInt 3997 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21735, ordinaryIncomeNonSS: makeFromInt 126432, qualifiedIncome: makeFromInt 17954, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26049, stateTaxDue: makeFromInt 7017 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30574, ordinaryIncomeNonSS: makeFromInt 115938, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25452, federalTaxDue: makeFromInt 14100, stateTaxDue: makeFromInt 5322 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31770, qualifiedIncome: makeFromInt 23267, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3805, stateTaxDue: makeFromInt 2582 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21647, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 47400, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119418, qualifiedIncome: makeFromInt 30467, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21580, stateTaxDue: makeFromInt 7226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40161, ordinaryIncomeNonSS: makeFromInt 76674, qualifiedIncome: makeFromInt 81465, itemizedDeductions: makeFromInt 6854, federalTaxDue: makeFromInt 28918, stateTaxDue: makeFromInt 7637 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64370, itemizedDeductions: makeFromInt 21002, federalTaxDue: makeFromInt 1743, stateTaxDue: makeFromInt 2705 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62705, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5641, federalTaxDue: makeFromInt 3256, stateTaxDue: makeFromInt 2460 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61662, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19568, stateTaxDue: makeFromInt 7628 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79827, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 679, stateTaxDue: makeFromInt 3622 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44452, ordinaryIncomeNonSS: makeFromInt 134041, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23464, federalTaxDue: makeFromInt 26325, stateTaxDue: makeFromInt 6285 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98738, qualifiedIncome: makeFromInt 51043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19193, stateTaxDue: makeFromInt 7088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49972, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44032, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49667, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50873, itemizedDeductions: makeFromInt 48, federalTaxDue: makeFromInt 42530, stateTaxDue: makeFromInt 9589 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30656, qualifiedIncome: makeFromInt 66443, itemizedDeductions: makeFromInt 20981, federalTaxDue: makeFromInt 4345, stateTaxDue: makeFromInt 4480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14678, qualifiedIncome: makeFromInt 86598, itemizedDeductions: makeFromInt 25921, federalTaxDue: makeFromInt 1695, stateTaxDue: makeFromInt 4512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27524, ordinaryIncomeNonSS: makeFromInt 54449, qualifiedIncome: makeFromInt 89478, itemizedDeductions: makeFromInt 25036, federalTaxDue: makeFromInt 17078, stateTaxDue: makeFromInt 6912 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22127, ordinaryIncomeNonSS: makeFromInt 142965, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13129, federalTaxDue: makeFromInt 24451, stateTaxDue: makeFromInt 6573 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6182, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5543, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13169, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91095, itemizedDeductions: makeFromInt 12492, federalTaxDue: makeFromInt 33318, stateTaxDue: makeFromInt 11380 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16148, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24024, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6027, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41316, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21178, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21843, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23548, ordinaryIncomeNonSS: makeFromInt 93574, qualifiedIncome: makeFromInt 47384, itemizedDeductions: makeFromInt 18385, federalTaxDue: makeFromInt 14263, stateTaxDue: makeFromInt 6373 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71062, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4258, stateTaxDue: makeFromInt 2878 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3274, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24742, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22906, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116331, qualifiedIncome: makeFromInt 77198, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29796, stateTaxDue: makeFromInt 9442 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2097, ordinaryIncomeNonSS: makeFromInt 24503, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15382, federalTaxDue: makeFromInt 28, stateTaxDue: makeFromInt 850 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 475 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 501, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24842, stateTaxDue: makeFromInt 7070 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31772, ordinaryIncomeNonSS: makeFromInt 24041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 727 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49968, ordinaryIncomeNonSS: makeFromInt 119778, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5411, federalTaxDue: makeFromInt 36373, stateTaxDue: makeFromInt 10314 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89610, qualifiedIncome: makeFromInt 65429, itemizedDeductions: makeFromInt 6039, federalTaxDue: makeFromInt 21755, stateTaxDue: makeFromInt 7277 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60759, qualifiedIncome: makeFromInt 80169, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25158, stateTaxDue: makeFromInt 6571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12760, ordinaryIncomeNonSS: makeFromInt 72015, qualifiedIncome: makeFromInt 4489, itemizedDeductions: makeFromInt 29566, federalTaxDue: makeFromInt 5674, stateTaxDue: makeFromInt 3350 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23510, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24654, federalTaxDue: makeFromInt 43959, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3080, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1916, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78853, itemizedDeductions: makeFromInt 24980, federalTaxDue: makeFromInt 533, stateTaxDue: makeFromInt 3573 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69546, itemizedDeductions: makeFromInt 6417, federalTaxDue: makeFromInt 35658, stateTaxDue: makeFromInt 10302 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44148, ordinaryIncomeNonSS: makeFromInt 98871, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24362, federalTaxDue: makeFromInt 16527, stateTaxDue: makeFromInt 4390 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23343, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15993, federalTaxDue: makeFromInt 23203, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61443, qualifiedIncome: makeFromInt 10842, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4629, stateTaxDue: makeFromInt 3039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4081, ordinaryIncomeNonSS: makeFromInt 98039, qualifiedIncome: makeFromInt 49816, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15847, stateTaxDue: makeFromInt 6888 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20350, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3414, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 385 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26997, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14973, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 724 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3028, stateTaxDue: makeFromInt 2774 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25017, ordinaryIncomeNonSS: makeFromInt 6861, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36965, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21502, ordinaryIncomeNonSS: makeFromInt 146575, qualifiedIncome: makeFromInt 21104, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31759, stateTaxDue: makeFromInt 8103 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16271, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45284, itemizedDeductions: makeFromInt 7800, federalTaxDue: makeFromInt 1460, stateTaxDue: makeFromInt 2085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19235, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76472, itemizedDeductions: makeFromInt 24551, federalTaxDue: makeFromInt 46230, stateTaxDue: makeFromInt 10869 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26921, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24933, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 872 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67376, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4145, stateTaxDue: makeFromInt 2994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34133, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27857, federalTaxDue: makeFromInt 29691, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2464, ordinaryIncomeNonSS: makeFromInt 38085, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10063, federalTaxDue: makeFromInt 11801, stateTaxDue: makeFromInt 6614 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33219, qualifiedIncome: makeFromInt 58126, itemizedDeductions: makeFromInt 16274, federalTaxDue: makeFromInt 402, stateTaxDue: makeFromInt 4092 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24045, ordinaryIncomeNonSS: makeFromInt 31561, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16053, federalTaxDue: makeFromInt 5595, stateTaxDue: makeFromInt 6103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8272, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 616, itemizedDeductions: makeFromInt 10927, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56037, qualifiedIncome: makeFromInt 36612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2455, stateTaxDue: makeFromInt 4157 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7173, ordinaryIncomeNonSS: makeFromInt 26491, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1514, stateTaxDue: makeFromInt 1070 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88676, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1489, stateTaxDue: makeFromInt 3832 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49281, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22933, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35579, stateTaxDue: makeFromInt 8595 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17387, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92341, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29314, ordinaryIncomeNonSS: makeFromInt 5289, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12134, ordinaryIncomeNonSS: makeFromInt 8611, qualifiedIncome: makeFromInt 42375, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2174 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17113, ordinaryIncomeNonSS: makeFromInt 77162, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9780, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140647, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14283, stateTaxDue: makeFromInt 6357 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35434, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10233, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21775, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10069, federalTaxDue: makeFromInt 2547, stateTaxDue: makeFromInt 634 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94388, itemizedDeductions: makeFromInt 28614, federalTaxDue: makeFromInt 6906, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15317, itemizedDeductions: makeFromInt 54, federalTaxDue: makeFromInt 30953, stateTaxDue: makeFromInt 8084 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59524, qualifiedIncome: makeFromInt 56404, itemizedDeductions: makeFromInt 19640, federalTaxDue: makeFromInt 6129, stateTaxDue: makeFromInt 5362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38121, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5978, stateTaxDue: makeFromInt 1516 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61826, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6112, federalTaxDue: makeFromInt 4226, stateTaxDue: makeFromInt 2716 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9067, itemizedDeductions: makeFromInt 20262, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 78 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132187, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19957, stateTaxDue: makeFromInt 6191 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19998, ordinaryIncomeNonSS: makeFromInt 111758, qualifiedIncome: makeFromInt 34118, itemizedDeductions: makeFromInt 21573, federalTaxDue: makeFromInt 23689, stateTaxDue: makeFromInt 6839 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122951, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8849, federalTaxDue: makeFromInt 20918, stateTaxDue: makeFromInt 6046 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55721, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6528, stateTaxDue: makeFromInt 2291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48573, ordinaryIncomeNonSS: makeFromInt 4572, qualifiedIncome: makeFromInt 25107, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 861 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8052, ordinaryIncomeNonSS: makeFromInt 125483, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2545, federalTaxDue: makeFromInt 15711, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57139, itemizedDeductions: makeFromInt 14970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2182 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8792, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75941, itemizedDeductions: makeFromInt 22815, federalTaxDue: makeFromInt 30990, stateTaxDue: makeFromInt 10870 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29222, ordinaryIncomeNonSS: makeFromInt 148807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10107, federalTaxDue: makeFromInt 26903, stateTaxDue: makeFromInt 7065 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82092, qualifiedIncome: makeFromInt 20236, itemizedDeductions: makeFromInt 28408, federalTaxDue: makeFromInt 6047, stateTaxDue: makeFromInt 4441 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31522, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83265, itemizedDeductions: makeFromInt 13004, federalTaxDue: makeFromInt 5531, stateTaxDue: makeFromInt 3588 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15445, federalTaxDue: makeFromInt 26314, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35627, ordinaryIncomeNonSS: makeFromInt 28642, qualifiedIncome: makeFromInt 36963, itemizedDeductions: makeFromInt 18115, federalTaxDue: makeFromInt 9072, stateTaxDue: makeFromInt 3025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5201, ordinaryIncomeNonSS: makeFromInt 120887, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18377, federalTaxDue: makeFromInt 32263, stateTaxDue: makeFromInt 10816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26123, ordinaryIncomeNonSS: makeFromInt 6584, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23417, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27894, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70365, itemizedDeductions: makeFromInt 11544, federalTaxDue: makeFromInt 4907, stateTaxDue: makeFromInt 3160 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26060, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38210, ordinaryIncomeNonSS: makeFromInt 87067, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14412, stateTaxDue: makeFromInt 3778 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25204, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21383, ordinaryIncomeNonSS: makeFromInt 113360, qualifiedIncome: makeFromInt 9105, itemizedDeductions: makeFromInt 28993, federalTaxDue: makeFromInt 20150, stateTaxDue: makeFromInt 5962 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5784, stateTaxDue: makeFromInt 3662 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32745, qualifiedIncome: makeFromInt 33629, itemizedDeductions: makeFromInt 3720, federalTaxDue: makeFromInt 825, stateTaxDue: makeFromInt 2744 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8642, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1314, itemizedDeductions: makeFromInt 19775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47079, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1979, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31847, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27897, ordinaryIncomeNonSS: makeFromInt 116794, qualifiedIncome: makeFromInt 346, itemizedDeductions: makeFromInt 10992, federalTaxDue: makeFromInt 23405, stateTaxDue: makeFromInt 5402 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 830 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99721, itemizedDeductions: makeFromInt 5283, federalTaxDue: makeFromInt 5246, stateTaxDue: makeFromInt 4411 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24887, ordinaryIncomeNonSS: makeFromInt 74739, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16710, federalTaxDue: makeFromInt 17377, stateTaxDue: makeFromInt 8062 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47792, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97551, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13520, stateTaxDue: makeFromInt 4423 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12709, ordinaryIncomeNonSS: makeFromInt 35962, qualifiedIncome: makeFromInt 25761, itemizedDeductions: makeFromInt 13841, federalTaxDue: makeFromInt 4410, stateTaxDue: makeFromInt 2631 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18733, ordinaryIncomeNonSS: makeFromInt 60277, qualifiedIncome: makeFromInt 61143, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13456, stateTaxDue: makeFromInt 5586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10939, federalTaxDue: makeFromInt 38204, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7696, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122993, qualifiedIncome: makeFromInt 71708, itemizedDeductions: makeFromInt 13669, federalTaxDue: makeFromInt 21090, stateTaxDue: makeFromInt 9260 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28419, ordinaryIncomeNonSS: makeFromInt 3606, qualifiedIncome: makeFromInt 60174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6415, stateTaxDue: makeFromInt 2934 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48421, ordinaryIncomeNonSS: makeFromInt 109665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3528, federalTaxDue: makeFromInt 24547, stateTaxDue: makeFromInt 5195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46152, ordinaryIncomeNonSS: makeFromInt 30739, qualifiedIncome: makeFromInt 84453, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15221, stateTaxDue: makeFromInt 5528 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40902, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91953, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7918, stateTaxDue: makeFromInt 4037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21313, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22448, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25654, ordinaryIncomeNonSS: makeFromInt 111377, qualifiedIncome: makeFromInt 34053, itemizedDeductions: makeFromInt 8784, federalTaxDue: makeFromInt 25784, stateTaxDue: makeFromInt 6968 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33713, ordinaryIncomeNonSS: makeFromInt 11681, qualifiedIncome: makeFromInt 15957, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1007 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13612, ordinaryIncomeNonSS: makeFromInt 102943, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12114, federalTaxDue: makeFromInt 12978, stateTaxDue: makeFromInt 4572 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35844, stateTaxDue: makeFromInt 10024 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39560, ordinaryIncomeNonSS: makeFromInt 138908, qualifiedIncome: makeFromInt 28277, itemizedDeductions: makeFromInt 14070, federalTaxDue: makeFromInt 28548, stateTaxDue: makeFromInt 7998 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77195, qualifiedIncome: makeFromInt 27668, itemizedDeductions: makeFromInt 24626, federalTaxDue: makeFromInt 9945, stateTaxDue: makeFromInt 4668 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99243, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7921, stateTaxDue: makeFromInt 4365 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45396, qualifiedIncome: makeFromInt 77901, itemizedDeductions: makeFromInt 4485, federalTaxDue: makeFromInt 13951, stateTaxDue: makeFromInt 5910 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75243, itemizedDeductions: makeFromInt 25274, federalTaxDue: makeFromInt 27162, stateTaxDue: makeFromInt 10787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13308, stateTaxDue: makeFromInt 3881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34633, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31869, qualifiedIncome: makeFromInt 70949, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7166, stateTaxDue: makeFromInt 4886 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13793, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7323, stateTaxDue: makeFromInt 4006 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39809, ordinaryIncomeNonSS: makeFromInt 26752, qualifiedIncome: makeFromInt 59624, itemizedDeductions: makeFromInt 5961, federalTaxDue: makeFromInt 8635, stateTaxDue: makeFromInt 3744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31915, ordinaryIncomeNonSS: makeFromInt 15623, qualifiedIncome: makeFromInt 1120, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31407, itemizedDeductions: makeFromInt 18613, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1315 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49960, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1923 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50103, itemizedDeductions: makeFromInt 25522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80566, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4084, stateTaxDue: makeFromInt 3680 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36717, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21964, federalTaxDue: makeFromInt 11060, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37582, itemizedDeductions: makeFromInt 13700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42147, ordinaryIncomeNonSS: makeFromInt 74232, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29894, stateTaxDue: makeFromInt 8437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46871, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27342, federalTaxDue: makeFromInt 32866, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106902, qualifiedIncome: makeFromInt 64884, itemizedDeductions: makeFromInt 24048, federalTaxDue: makeFromInt 21155, stateTaxDue: makeFromInt 8333 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41226, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7078, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36542, stateTaxDue: makeFromInt 7599 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2902, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20386, ordinaryIncomeNonSS: makeFromInt 43112, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3973, stateTaxDue: makeFromInt 1581 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8993, stateTaxDue: makeFromInt 3080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43362, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23125, ordinaryIncomeNonSS: makeFromInt 17405, qualifiedIncome: makeFromInt 69206, itemizedDeductions: makeFromInt 20219, federalTaxDue: makeFromInt 8107, stateTaxDue: makeFromInt 4193 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2655, stateTaxDue: makeFromInt 2630 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109121, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27126, federalTaxDue: makeFromInt 35359, stateTaxDue: makeFromInt 10114 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25031, itemizedDeductions: makeFromInt 29622, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 828 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24773, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28775, itemizedDeductions: makeFromInt 15620, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 908 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13136, ordinaryIncomeNonSS: makeFromInt 128484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20490, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147459, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22650, stateTaxDue: makeFromInt 7174 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82511, qualifiedIncome: makeFromInt 30086, itemizedDeductions: makeFromInt 25276, federalTaxDue: makeFromInt 4620, stateTaxDue: makeFromInt 5090 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35482, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24037, federalTaxDue: makeFromInt 30367, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145361, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13180, federalTaxDue: makeFromInt 22236, stateTaxDue: makeFromInt 6863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13520, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 139 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10639, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2532, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19698, ordinaryIncomeNonSS: makeFromInt 58015, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23300, stateTaxDue: makeFromInt 7646 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30129, ordinaryIncomeNonSS: makeFromInt 85111, qualifiedIncome: makeFromInt 79829, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26565, stateTaxDue: makeFromInt 7861 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102283, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24197, federalTaxDue: makeFromInt 8005, stateTaxDue: makeFromInt 4439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14800, ordinaryIncomeNonSS: makeFromInt 26794, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11675, federalTaxDue: makeFromInt 9302, stateTaxDue: makeFromInt 5916 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55886, itemizedDeductions: makeFromInt 14518, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2319 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5555, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17825, ordinaryIncomeNonSS: makeFromInt 84878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10724, stateTaxDue: makeFromInt 3669 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62509, qualifiedIncome: makeFromInt 17772, itemizedDeductions: makeFromInt 4270, federalTaxDue: makeFromInt 16298, stateTaxDue: makeFromInt 3646 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127136, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28485, federalTaxDue: makeFromInt 15470, stateTaxDue: makeFromInt 5782 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27812, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23990, federalTaxDue: makeFromInt 28763, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5463, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32641, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23203, ordinaryIncomeNonSS: makeFromInt 138404, qualifiedIncome: makeFromInt 91039, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36217, stateTaxDue: makeFromInt 11253 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3644, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23440, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18446, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14549, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18198, federalTaxDue: makeFromInt 39196, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7930, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29449, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31638, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42663, ordinaryIncomeNonSS: makeFromInt 47087, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7064, stateTaxDue: makeFromInt 1851 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40768, ordinaryIncomeNonSS: makeFromInt 128583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27944, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3056, stateTaxDue: makeFromInt 1560 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96329, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2637, stateTaxDue: makeFromInt 4420 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5116, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12512, federalTaxDue: makeFromInt 42299, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40145, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 414, federalTaxDue: makeFromInt 8583, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20633, ordinaryIncomeNonSS: makeFromInt 117355, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29349, federalTaxDue: makeFromInt 14454, stateTaxDue: makeFromInt 5393 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30664, ordinaryIncomeNonSS: makeFromInt 135611, qualifiedIncome: makeFromInt 16083, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33284, stateTaxDue: makeFromInt 7308 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5156, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21471, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4812 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48229, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4565, stateTaxDue: makeFromInt 2113 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9832, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31513, stateTaxDue: makeFromInt 7537 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2142, ordinaryIncomeNonSS: makeFromInt 72983, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5104, stateTaxDue: makeFromInt 3375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9553, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23241, ordinaryIncomeNonSS: makeFromInt 64462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8410, stateTaxDue: makeFromInt 2648 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35149, itemizedDeductions: makeFromInt 632, federalTaxDue: makeFromInt 26501, stateTaxDue: makeFromInt 8882 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22287, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10079, federalTaxDue: makeFromInt 26172, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58183, qualifiedIncome: makeFromInt 91438, itemizedDeductions: makeFromInt 21014, federalTaxDue: makeFromInt 18026, stateTaxDue: makeFromInt 6806 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14711, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61945, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3280, stateTaxDue: makeFromInt 2422 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2088, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39463, ordinaryIncomeNonSS: makeFromInt 108538, qualifiedIncome: makeFromInt 59220, itemizedDeductions: makeFromInt 480, federalTaxDue: makeFromInt 31313, stateTaxDue: makeFromInt 8005 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94997, itemizedDeductions: makeFromInt 2491, federalTaxDue: makeFromInt 7556, stateTaxDue: makeFromInt 4495 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44544, ordinaryIncomeNonSS: makeFromInt 139794, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34263, stateTaxDue: makeFromInt 6635 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22916, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21853, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47925, itemizedDeductions: makeFromInt 24664, federalTaxDue: makeFromInt 39387, stateTaxDue: makeFromInt 9870 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9351, ordinaryIncomeNonSS: makeFromInt 13681, qualifiedIncome: makeFromInt 43198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 463, stateTaxDue: makeFromInt 2389 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83411, qualifiedIncome: makeFromInt 22768, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22401, stateTaxDue: makeFromInt 5054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39413, ordinaryIncomeNonSS: makeFromInt 19299, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8763, stateTaxDue: makeFromInt 5431 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56509, itemizedDeductions: makeFromInt 22443, federalTaxDue: makeFromInt 856, stateTaxDue: makeFromInt 2331 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20793, ordinaryIncomeNonSS: makeFromInt 128501, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23849, stateTaxDue: makeFromInt 5970 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88343, qualifiedIncome: makeFromInt 96297, itemizedDeductions: makeFromInt 23317, federalTaxDue: makeFromInt 24058, stateTaxDue: makeFromInt 8977 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28065, itemizedDeductions: makeFromInt 10820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 993 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29852, ordinaryIncomeNonSS: makeFromInt 145957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22555, federalTaxDue: makeFromInt 29881, stateTaxDue: makeFromInt 6947 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9986, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88170, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7578, stateTaxDue: makeFromInt 4068 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33420, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44695, itemizedDeductions: makeFromInt 4137, federalTaxDue: makeFromInt 35880, stateTaxDue: makeFromInt 9160 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15283, federalTaxDue: makeFromInt 7259, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86093, itemizedDeductions: makeFromInt 13695, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3630 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4569, ordinaryIncomeNonSS: makeFromInt 52133, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3442, stateTaxDue: makeFromInt 2232 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37102, qualifiedIncome: makeFromInt 40656, itemizedDeductions: makeFromInt 23842, federalTaxDue: makeFromInt 12914, stateTaxDue: makeFromInt 3415 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70647, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22755, federalTaxDue: makeFromInt 5509, stateTaxDue: makeFromInt 3077 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37962, ordinaryIncomeNonSS: makeFromInt 148895, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24490, stateTaxDue: makeFromInt 6770 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59464, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1667, stateTaxDue: makeFromInt 2518 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17092, federalTaxDue: makeFromInt 26512, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1504, ordinaryIncomeNonSS: makeFromInt 89283, qualifiedIncome: makeFromInt 37302, itemizedDeductions: makeFromInt 29014, federalTaxDue: makeFromInt 12161, stateTaxDue: makeFromInt 5754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148564, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24096, federalTaxDue: makeFromInt 22218, stateTaxDue: makeFromInt 7148 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87380, itemizedDeductions: makeFromInt 6730, federalTaxDue: makeFromInt 5487, stateTaxDue: makeFromInt 4110 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44882, ordinaryIncomeNonSS: makeFromInt 36105, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2849, stateTaxDue: makeFromInt 1330 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43790, qualifiedIncome: makeFromInt 96948, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10592, stateTaxDue: makeFromInt 6627 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97875, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21464, federalTaxDue: makeFromInt 9317, stateTaxDue: makeFromInt 4319 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9723, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13179, ordinaryIncomeNonSS: makeFromInt 12349, qualifiedIncome: makeFromInt 90389, itemizedDeductions: makeFromInt 21580, federalTaxDue: makeFromInt 6799, stateTaxDue: makeFromInt 4682 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6171, itemizedDeductions: makeFromInt 24343, federalTaxDue: makeFromInt 16802, stateTaxDue: makeFromInt 7134 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15420, ordinaryIncomeNonSS: makeFromInt 31222, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5003, federalTaxDue: makeFromInt 2511, stateTaxDue: makeFromInt 1106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7943, ordinaryIncomeNonSS: makeFromInt 16976, qualifiedIncome: makeFromInt 23394, itemizedDeductions: makeFromInt 2468, federalTaxDue: makeFromInt 903, stateTaxDue: makeFromInt 1564 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101593, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3916, federalTaxDue: makeFromInt 7922, stateTaxDue: makeFromInt 4405 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74765, qualifiedIncome: makeFromInt 72022, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24387, stateTaxDue: makeFromInt 6764 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35227, ordinaryIncomeNonSS: makeFromInt 44073, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5373, stateTaxDue: makeFromInt 1829 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15547, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9221, federalTaxDue: makeFromInt 19248, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67184, qualifiedIncome: makeFromInt 66077, itemizedDeductions: makeFromInt 18108, federalTaxDue: makeFromInt 27564, stateTaxDue: makeFromInt 6572 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5367, ordinaryIncomeNonSS: makeFromInt 117895, qualifiedIncome: makeFromInt 46567, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17174, stateTaxDue: makeFromInt 7548 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49433, ordinaryIncomeNonSS: makeFromInt 65943, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20299, stateTaxDue: makeFromInt 3139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5808, ordinaryIncomeNonSS: makeFromInt 23497, qualifiedIncome: makeFromInt 76795, itemizedDeductions: makeFromInt 11667, federalTaxDue: makeFromInt 7138, stateTaxDue: makeFromInt 4768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7472, ordinaryIncomeNonSS: makeFromInt 18615, qualifiedIncome: makeFromInt 91722, itemizedDeductions: makeFromInt 24352, federalTaxDue: makeFromInt 8111, stateTaxDue: makeFromInt 5199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10535, ordinaryIncomeNonSS: makeFromInt 924, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4494 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28741, ordinaryIncomeNonSS: makeFromInt 68914, qualifiedIncome: makeFromInt 12315, itemizedDeductions: makeFromInt 17362, federalTaxDue: makeFromInt 6932, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7123, stateTaxDue: makeFromInt 3282 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28184, itemizedDeductions: makeFromInt 21178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 954 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20511, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15005, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90831, qualifiedIncome: makeFromInt 82509, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26044, stateTaxDue: makeFromInt 8494 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122050, qualifiedIncome: makeFromInt 61225, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29183, stateTaxDue: makeFromInt 8909 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6021, ordinaryIncomeNonSS: makeFromInt 49886, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18849, federalTaxDue: makeFromInt 4148, stateTaxDue: makeFromInt 2320 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83626, itemizedDeductions: makeFromInt 1761, federalTaxDue: makeFromInt 33772, stateTaxDue: makeFromInt 11106 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16636, itemizedDeductions: makeFromInt 535, federalTaxDue: makeFromInt 19686, stateTaxDue: makeFromInt 7857 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5766, qualifiedIncome: makeFromInt 89404, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14361, stateTaxDue: makeFromInt 4304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3236, itemizedDeductions: makeFromInt 10943, federalTaxDue: makeFromInt 25366, stateTaxDue: makeFromInt 7366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19563, ordinaryIncomeNonSS: makeFromInt 31338, qualifiedIncome: makeFromInt 26394, itemizedDeductions: makeFromInt 600, federalTaxDue: makeFromInt 2100, stateTaxDue: makeFromInt 2394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29086, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23598, stateTaxDue: makeFromInt 8583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28486, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39076, stateTaxDue: makeFromInt 11173 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14842, qualifiedIncome: makeFromInt 14124, itemizedDeductions: makeFromInt 7989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1073 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12019, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86522, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6114, stateTaxDue: makeFromInt 3851 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13096, ordinaryIncomeNonSS: makeFromInt 68380, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21190, federalTaxDue: makeFromInt 6014, stateTaxDue: makeFromInt 2744 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4878, ordinaryIncomeNonSS: makeFromInt 32186, qualifiedIncome: makeFromInt 79621, itemizedDeductions: makeFromInt 29640, federalTaxDue: makeFromInt 473, stateTaxDue: makeFromInt 5115 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46489, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65800, itemizedDeductions: makeFromInt 14027, federalTaxDue: makeFromInt 3911, stateTaxDue: makeFromInt 2715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30689, qualifiedIncome: makeFromInt 17280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 114, stateTaxDue: makeFromInt 1896 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7473, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22302, ordinaryIncomeNonSS: makeFromInt 27524, qualifiedIncome: makeFromInt 43930, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2137, stateTaxDue: makeFromInt 3297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134853, qualifiedIncome: makeFromInt 34326, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41463, stateTaxDue: makeFromInt 8281 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71941, itemizedDeductions: makeFromInt 8263, federalTaxDue: makeFromInt 3504, stateTaxDue: makeFromInt 2987 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28260, itemizedDeductions: makeFromInt 27764, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37170, ordinaryIncomeNonSS: makeFromInt 112359, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20268, federalTaxDue: makeFromInt 35156, stateTaxDue: makeFromInt 10280 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117848, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26132, federalTaxDue: makeFromInt 13459, stateTaxDue: makeFromInt 5561 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7993, ordinaryIncomeNonSS: makeFromInt 47262, qualifiedIncome: makeFromInt 84999, itemizedDeductions: makeFromInt 6986, federalTaxDue: makeFromInt 3859, stateTaxDue: makeFromInt 6138 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72339, itemizedDeductions: makeFromInt 7297, federalTaxDue: makeFromInt 3598, stateTaxDue: makeFromInt 3362 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27279, ordinaryIncomeNonSS: makeFromInt 80309, qualifiedIncome: makeFromInt 53795, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12499, stateTaxDue: makeFromInt 6030 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6040, ordinaryIncomeNonSS: makeFromInt 71914, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10250, stateTaxDue: makeFromInt 3443 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22276, stateTaxDue: makeFromInt 6664 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30794, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9382, itemizedDeductions: makeFromInt 28589, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 30 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42550, ordinaryIncomeNonSS: makeFromInt 89719, qualifiedIncome: makeFromInt 18645, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17598, stateTaxDue: makeFromInt 4874 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8727, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146944, qualifiedIncome: makeFromInt 38433, itemizedDeductions: makeFromInt 23412, federalTaxDue: makeFromInt 41513, stateTaxDue: makeFromInt 9107 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17515, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95270, itemizedDeductions: makeFromInt 2130, federalTaxDue: makeFromInt 30631, stateTaxDue: makeFromInt 11589 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31723, ordinaryIncomeNonSS: makeFromInt 60159, qualifiedIncome: makeFromInt 48948, itemizedDeductions: makeFromInt 23084, federalTaxDue: makeFromInt 15779, stateTaxDue: makeFromInt 5080 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141710, qualifiedIncome: makeFromInt 75070, itemizedDeductions: makeFromInt 6720, federalTaxDue: makeFromInt 25313, stateTaxDue: makeFromInt 10164 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59977, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3098, federalTaxDue: makeFromInt 3253, stateTaxDue: makeFromInt 2524 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28597, qualifiedIncome: makeFromInt 81653, itemizedDeductions: makeFromInt 15978, federalTaxDue: makeFromInt 7895, stateTaxDue: makeFromInt 5058 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9681, ordinaryIncomeNonSS: makeFromInt 32235, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29329, federalTaxDue: makeFromInt 1002, stateTaxDue: makeFromInt 1357 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25553, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4435, federalTaxDue: makeFromInt 880, stateTaxDue: makeFromInt 854 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48089, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2940, stateTaxDue: makeFromInt 1830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77626, qualifiedIncome: makeFromInt 38530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23191, stateTaxDue: makeFromInt 5475 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21671, ordinaryIncomeNonSS: makeFromInt 10228, qualifiedIncome: makeFromInt 88521, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1278, stateTaxDue: makeFromInt 4462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12333, federalTaxDue: makeFromInt 23652, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123008, qualifiedIncome: makeFromInt 57342, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30256, stateTaxDue: makeFromInt 8851 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7869, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 177 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136328, qualifiedIncome: makeFromInt 12845, itemizedDeductions: makeFromInt 26445, federalTaxDue: makeFromInt 20074, stateTaxDue: makeFromInt 7179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131434, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8552, federalTaxDue: makeFromInt 18804, stateTaxDue: makeFromInt 5997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34951, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31897, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32318, ordinaryIncomeNonSS: makeFromInt 38123, qualifiedIncome: makeFromInt 16686, itemizedDeductions: makeFromInt 16456, federalTaxDue: makeFromInt 7326, stateTaxDue: makeFromInt 2448 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37026, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8844, stateTaxDue: makeFromInt 6476 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16756, ordinaryIncomeNonSS: makeFromInt 90423, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5227, federalTaxDue: makeFromInt 19746, stateTaxDue: makeFromInt 9046 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142136, qualifiedIncome: makeFromInt 53151, itemizedDeductions: makeFromInt 21982, federalTaxDue: makeFromInt 31099, stateTaxDue: makeFromInt 9531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38774, ordinaryIncomeNonSS: makeFromInt 50732, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11883, stateTaxDue: makeFromInt 2241 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48419, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17643, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8189, ordinaryIncomeNonSS: makeFromInt 29694, qualifiedIncome: makeFromInt 15931, itemizedDeductions: makeFromInt 12922, federalTaxDue: makeFromInt 2515, stateTaxDue: makeFromInt 2026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29240, ordinaryIncomeNonSS: makeFromInt 19416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1576, stateTaxDue: makeFromInt 766 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4752, ordinaryIncomeNonSS: makeFromInt 143655, qualifiedIncome: makeFromInt 23564, itemizedDeductions: makeFromInt 25537, federalTaxDue: makeFromInt 24604, stateTaxDue: makeFromInt 8079 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22622, ordinaryIncomeNonSS: makeFromInt 18179, qualifiedIncome: makeFromInt 88343, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12246, stateTaxDue: makeFromInt 5086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3526, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9937, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41948, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18900, federalTaxDue: makeFromInt 6881, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18420, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15249, itemizedDeductions: makeFromInt 13231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 227 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134347, qualifiedIncome: makeFromInt 71739, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31258, stateTaxDue: makeFromInt 9960 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87597, itemizedDeductions: makeFromInt 13828, federalTaxDue: makeFromInt 36906, stateTaxDue: makeFromInt 11305 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18372, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 244 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33084, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44270, ordinaryIncomeNonSS: makeFromInt 32779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1464, federalTaxDue: makeFromInt 3889, stateTaxDue: makeFromInt 1064 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47089, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98395, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45593, stateTaxDue: makeFromInt 11845 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17023, federalTaxDue: makeFromInt 41120, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28571, ordinaryIncomeNonSS: makeFromInt 32725, qualifiedIncome: makeFromInt 4795, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5538, stateTaxDue: makeFromInt 1689 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79069, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23007, federalTaxDue: makeFromInt 7301, stateTaxDue: makeFromInt 3686 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10884, qualifiedIncome: makeFromInt 79400, itemizedDeductions: makeFromInt 16736, federalTaxDue: makeFromInt 6882, stateTaxDue: makeFromInt 4039 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64136, itemizedDeductions: makeFromInt 19872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2832 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48331, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41720, itemizedDeductions: makeFromInt 27537, federalTaxDue: makeFromInt 36617, stateTaxDue: makeFromInt 9211 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89051, qualifiedIncome: makeFromInt 34854, itemizedDeductions: makeFromInt 5507, federalTaxDue: makeFromInt 12604, stateTaxDue: makeFromInt 5620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37221, qualifiedIncome: makeFromInt 9423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2858, stateTaxDue: makeFromInt 1828 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130689, qualifiedIncome: makeFromInt 18919, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18687, stateTaxDue: makeFromInt 7202 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36446, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5950, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35665, ordinaryIncomeNonSS: makeFromInt 30749, qualifiedIncome: makeFromInt 50327, itemizedDeductions: makeFromInt 15425, federalTaxDue: makeFromInt 6943, stateTaxDue: makeFromInt 3584 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15980, ordinaryIncomeNonSS: makeFromInt 125954, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6397, federalTaxDue: makeFromInt 22067, stateTaxDue: makeFromInt 6077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45641, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60654, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26388, federalTaxDue: makeFromInt 1402, stateTaxDue: makeFromInt 2441 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27527, ordinaryIncomeNonSS: makeFromInt 42860, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26480, federalTaxDue: makeFromInt 15688, stateTaxDue: makeFromInt 6568 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2288, ordinaryIncomeNonSS: makeFromInt 75791, qualifiedIncome: makeFromInt 19985, itemizedDeductions: makeFromInt 7065, federalTaxDue: makeFromInt 5059, stateTaxDue: makeFromInt 4114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8769, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71283, itemizedDeductions: makeFromInt 22467, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2983 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107951, qualifiedIncome: makeFromInt 92393, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34561, stateTaxDue: makeFromInt 9442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121370, qualifiedIncome: makeFromInt 89944, itemizedDeductions: makeFromInt 16620, federalTaxDue: makeFromInt 32964, stateTaxDue: makeFromInt 10430 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8279, qualifiedIncome: makeFromInt 86017, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5849, stateTaxDue: makeFromInt 4460 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29694, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9924, stateTaxDue: makeFromInt 6004 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40493, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5739, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84401, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 848, stateTaxDue: makeFromInt 3616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4047, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56260, itemizedDeductions: makeFromInt 27973, federalTaxDue: makeFromInt 33091, stateTaxDue: makeFromInt 10172 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6314, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141853, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14084, stateTaxDue: makeFromInt 6618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1716, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86737, itemizedDeductions: makeFromInt 7022, federalTaxDue: makeFromInt 5451, stateTaxDue: makeFromInt 4077 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70525, qualifiedIncome: makeFromInt 69947, itemizedDeductions: makeFromInt 18661, federalTaxDue: makeFromInt 14142, stateTaxDue: makeFromInt 6649 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3586, ordinaryIncomeNonSS: makeFromInt 145169, qualifiedIncome: makeFromInt 40967, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30484, stateTaxDue: makeFromInt 9052 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18314, federalTaxDue: makeFromInt 33622, stateTaxDue: makeFromInt 6625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87857, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37589, stateTaxDue: makeFromInt 11580 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77495, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3419, stateTaxDue: makeFromInt 3401 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12421, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78272, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15230, ordinaryIncomeNonSS: makeFromInt 85947, qualifiedIncome: makeFromInt 27098, itemizedDeductions: makeFromInt 6584, federalTaxDue: makeFromInt 19748, stateTaxDue: makeFromInt 5418 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24092, ordinaryIncomeNonSS: makeFromInt 76141, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26157, federalTaxDue: makeFromInt 10901, stateTaxDue: makeFromInt 3536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28785, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6150, stateTaxDue: makeFromInt 2505 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52029, itemizedDeductions: makeFromInt 497, federalTaxDue: makeFromInt 27403, stateTaxDue: makeFromInt 9855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13142, itemizedDeductions: makeFromInt 16346, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 119 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19473, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17180, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79696, itemizedDeductions: makeFromInt 19497, federalTaxDue: makeFromInt 659, stateTaxDue: makeFromInt 3412 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22656, ordinaryIncomeNonSS: makeFromInt 56935, qualifiedIncome: makeFromInt 47667, itemizedDeductions: makeFromInt 22234, federalTaxDue: makeFromInt 4874, stateTaxDue: makeFromInt 4555 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25285, ordinaryIncomeNonSS: makeFromInt 17500, qualifiedIncome: makeFromInt 33679, itemizedDeductions: makeFromInt 13702, federalTaxDue: makeFromInt 3499, stateTaxDue: makeFromInt 2104 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32714, ordinaryIncomeNonSS: makeFromInt 111316, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28761, stateTaxDue: makeFromInt 10124 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18064, ordinaryIncomeNonSS: makeFromInt 23689, qualifiedIncome: makeFromInt 69540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11578, stateTaxDue: makeFromInt 4284 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14977, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20781, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51141, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1982 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24418, qualifiedIncome: makeFromInt 73301, itemizedDeductions: makeFromInt 9127, federalTaxDue: makeFromInt 17129, stateTaxDue: makeFromInt 4631 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127684, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6398, federalTaxDue: makeFromInt 33831, stateTaxDue: makeFromInt 11061 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20787, federalTaxDue: makeFromInt 485, stateTaxDue: makeFromInt 1000 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61338, itemizedDeductions: makeFromInt 25553, federalTaxDue: makeFromInt 29547, stateTaxDue: makeFromInt 10227 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25584, stateTaxDue: makeFromInt 8292 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46621, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19708, stateTaxDue: makeFromInt 7253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19137, federalTaxDue: makeFromInt 40444, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5095, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62681, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32089, stateTaxDue: makeFromInt 10179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32153, ordinaryIncomeNonSS: makeFromInt 128090, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20590, stateTaxDue: makeFromInt 5982 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45375, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32309, stateTaxDue: makeFromInt 9740 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1024, ordinaryIncomeNonSS: makeFromInt 107269, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19806, federalTaxDue: makeFromInt 29741, stateTaxDue: makeFromInt 10108 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6944, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1523 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31966, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21182, federalTaxDue: makeFromInt 12688, stateTaxDue: makeFromInt 6077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111478, qualifiedIncome: makeFromInt 93713, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28837, stateTaxDue: makeFromInt 9914 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28173, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4111, itemizedDeductions: makeFromInt 9327, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16213, ordinaryIncomeNonSS: makeFromInt 20099, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 330 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29291, qualifiedIncome: makeFromInt 90623, itemizedDeductions: makeFromInt 18139, federalTaxDue: makeFromInt 4074, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5899, ordinaryIncomeNonSS: makeFromInt 12455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 369, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51983, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29520, stateTaxDue: makeFromInt 9844 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 482, ordinaryIncomeNonSS: makeFromInt 28357, qualifiedIncome: makeFromInt 32070, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2766 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34899, ordinaryIncomeNonSS: makeFromInt 125353, qualifiedIncome: makeFromInt 66050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26887, stateTaxDue: makeFromInt 8895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72520, qualifiedIncome: makeFromInt 59907, itemizedDeductions: makeFromInt 15129, federalTaxDue: makeFromInt 12766, stateTaxDue: makeFromInt 6305 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26935, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 972 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133041, qualifiedIncome: makeFromInt 47917, itemizedDeductions: makeFromInt 5839, federalTaxDue: makeFromInt 23056, stateTaxDue: makeFromInt 8780 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19842, ordinaryIncomeNonSS: makeFromInt 2647, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21229, ordinaryIncomeNonSS: makeFromInt 31963, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9114, federalTaxDue: makeFromInt 565, stateTaxDue: makeFromInt 923 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5463, federalTaxDue: makeFromInt 32558, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7022, ordinaryIncomeNonSS: makeFromInt 37484, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14886, federalTaxDue: makeFromInt 1934, stateTaxDue: makeFromInt 1499 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88246, itemizedDeductions: makeFromInt 23842, federalTaxDue: makeFromInt 3524, stateTaxDue: makeFromInt 4037 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 499, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21330, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44774, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5661, ordinaryIncomeNonSS: makeFromInt 43815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17966, federalTaxDue: makeFromInt 17019, stateTaxDue: makeFromInt 6736 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4217, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13508, itemizedDeductions: makeFromInt 22485, federalTaxDue: makeFromInt 18691, stateTaxDue: makeFromInt 7700 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123544, qualifiedIncome: makeFromInt 74468, itemizedDeductions: makeFromInt 22617, federalTaxDue: makeFromInt 27962, stateTaxDue: makeFromInt 9526 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14609, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41633, ordinaryIncomeNonSS: makeFromInt 88927, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 863, federalTaxDue: makeFromInt 18603, stateTaxDue: makeFromInt 4191 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13196, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12576, ordinaryIncomeNonSS: makeFromInt 16804, qualifiedIncome: makeFromInt 85077, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4849 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21862, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13818, itemizedDeductions: makeFromInt 22204, federalTaxDue: makeFromInt 27761, stateTaxDue: makeFromInt 7616 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47511, ordinaryIncomeNonSS: makeFromInt 35874, qualifiedIncome: makeFromInt 86159, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17293, stateTaxDue: makeFromInt 5527 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80956, qualifiedIncome: makeFromInt 68256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17183, stateTaxDue: makeFromInt 7161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39410, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32700, ordinaryIncomeNonSS: makeFromInt 144099, qualifiedIncome: makeFromInt 67952, itemizedDeductions: makeFromInt 14274, federalTaxDue: makeFromInt 36078, stateTaxDue: makeFromInt 10162 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96714, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34415, stateTaxDue: makeFromInt 11961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9214, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1303, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62996, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3659, stateTaxDue: makeFromInt 2784 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28814, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96146, itemizedDeductions: makeFromInt 24224, federalTaxDue: makeFromInt 1919, stateTaxDue: makeFromInt 4332 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78143, itemizedDeductions: makeFromInt 9539, federalTaxDue: makeFromInt 32949, stateTaxDue: makeFromInt 10832 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 24592, ordinaryIncomeNonSS: makeFromInt 20791, qualifiedIncome: makeFromInt 43476, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1009, stateTaxDue: makeFromInt 2738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3476, ordinaryIncomeNonSS: makeFromInt 55065, qualifiedIncome: makeFromInt 36724, itemizedDeductions: makeFromInt 10826, federalTaxDue: makeFromInt 5697, stateTaxDue: makeFromInt 4232 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22392, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87420, itemizedDeductions: makeFromInt 28213, federalTaxDue: makeFromInt 7235, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137304, qualifiedIncome: makeFromInt 61338, itemizedDeductions: makeFromInt 6510, federalTaxDue: makeFromInt 22284, stateTaxDue: makeFromInt 9257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7554, federalTaxDue: makeFromInt 27252, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25218, federalTaxDue: makeFromInt 22795, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25775, itemizedDeductions: makeFromInt 11478, federalTaxDue: makeFromInt 28633, stateTaxDue: makeFromInt 8334 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117567, qualifiedIncome: makeFromInt 22052, itemizedDeductions: makeFromInt 289, federalTaxDue: makeFromInt 19173, stateTaxDue: makeFromInt 6606 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37881, ordinaryIncomeNonSS: makeFromInt 12911, qualifiedIncome: makeFromInt 71586, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1436, stateTaxDue: makeFromInt 3750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19146, ordinaryIncomeNonSS: makeFromInt 67786, qualifiedIncome: makeFromInt 35492, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13324, stateTaxDue: makeFromInt 4818 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22024, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2560, ordinaryIncomeNonSS: makeFromInt 4119, qualifiedIncome: makeFromInt 33074, itemizedDeductions: makeFromInt 7826, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1185 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4797, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47279, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49734, itemizedDeductions: makeFromInt 10075, federalTaxDue: makeFromInt 1539, stateTaxDue: makeFromInt 1912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5449, ordinaryIncomeNonSS: makeFromInt 115840, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17377, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141348, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5956, federalTaxDue: makeFromInt 21573, stateTaxDue: makeFromInt 6492 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27759, ordinaryIncomeNonSS: makeFromInt 109285, qualifiedIncome: makeFromInt 9463, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15881, stateTaxDue: makeFromInt 5262 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18859, itemizedDeductions: makeFromInt 1901, federalTaxDue: makeFromInt 24057, stateTaxDue: makeFromInt 8068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 296, ordinaryIncomeNonSS: makeFromInt 65471, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19361, federalTaxDue: makeFromInt 3453, stateTaxDue: makeFromInt 2911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41642, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3373, itemizedDeductions: makeFromInt 6119, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137787, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23715, federalTaxDue: makeFromInt 18983, stateTaxDue: makeFromInt 6578 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8129, ordinaryIncomeNonSS: makeFromInt 19697, qualifiedIncome: makeFromInt 56969, itemizedDeductions: makeFromInt 22676, federalTaxDue: makeFromInt 211, stateTaxDue: makeFromInt 3258 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12157, qualifiedIncome: makeFromInt 85000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6844, stateTaxDue: makeFromInt 4684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18604, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1114, federalTaxDue: makeFromInt 8754, stateTaxDue: makeFromInt 5702 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85760, itemizedDeductions: makeFromInt 18717, federalTaxDue: makeFromInt 37219, stateTaxDue: makeFromInt 11533 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15614, itemizedDeductions: makeFromInt 26213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 572 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40285, qualifiedIncome: makeFromInt 99188, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14602, stateTaxDue: makeFromInt 6519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37705, itemizedDeductions: makeFromInt 27495, federalTaxDue: makeFromInt 26812, stateTaxDue: makeFromInt 9124 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39309, ordinaryIncomeNonSS: makeFromInt 117519, qualifiedIncome: makeFromInt 84173, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40259, stateTaxDue: makeFromInt 10062 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16885, federalTaxDue: makeFromInt 7820, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98056, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19764, stateTaxDue: makeFromInt 9228 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73086, itemizedDeductions: makeFromInt 8104, federalTaxDue: makeFromInt 46795, stateTaxDue: makeFromInt 10699 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126361, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28624, federalTaxDue: makeFromInt 13082, stateTaxDue: makeFromInt 5843 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7287, ordinaryIncomeNonSS: makeFromInt 9527, qualifiedIncome: makeFromInt 51415, itemizedDeductions: makeFromInt 27239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18436, ordinaryIncomeNonSS: makeFromInt 116430, qualifiedIncome: makeFromInt 72622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31384, stateTaxDue: makeFromInt 9417 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148959, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7603, federalTaxDue: makeFromInt 37108, stateTaxDue: makeFromInt 11873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42295, ordinaryIncomeNonSS: makeFromInt 89248, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13035, stateTaxDue: makeFromInt 4001 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41197, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22795, federalTaxDue: makeFromInt 960, stateTaxDue: makeFromInt 1585 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34626, ordinaryIncomeNonSS: makeFromInt 27439, qualifiedIncome: makeFromInt 76363, itemizedDeductions: makeFromInt 1584, federalTaxDue: makeFromInt 17141, stateTaxDue: makeFromInt 4818 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32102, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33185, stateTaxDue: makeFromInt 9063 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13365, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 5413 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68910, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31370, stateTaxDue: makeFromInt 7991 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27660, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47936, stateTaxDue: makeFromInt 12201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68436, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 553, stateTaxDue: makeFromInt 2847 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 232, ordinaryIncomeNonSS: makeFromInt 54993, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3171, stateTaxDue: makeFromInt 2254 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62523, qualifiedIncome: makeFromInt 96130, itemizedDeductions: makeFromInt 13495, federalTaxDue: makeFromInt 7787, stateTaxDue: makeFromInt 7258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29984, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 251, federalTaxDue: makeFromInt 31255, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26126, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107251, qualifiedIncome: makeFromInt 93910, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21117, stateTaxDue: makeFromInt 9383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38474, ordinaryIncomeNonSS: makeFromInt 53285, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6355, federalTaxDue: makeFromInt 8407, stateTaxDue: makeFromInt 2167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27334, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61980, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4208, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61320, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2475 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22710, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19192, ordinaryIncomeNonSS: makeFromInt 17093, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10237, stateTaxDue: makeFromInt 5480 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44993, ordinaryIncomeNonSS: makeFromInt 98036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20473, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24458, ordinaryIncomeNonSS: makeFromInt 117870, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28964, stateTaxDue: makeFromInt 5787 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56377, itemizedDeductions: makeFromInt 20881, federalTaxDue: makeFromInt 1204, stateTaxDue: makeFromInt 2364 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144140, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8197, federalTaxDue: makeFromInt 33060, stateTaxDue: makeFromInt 11683 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45808, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78880, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9437, stateTaxDue: makeFromInt 3595 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39802, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11229, itemizedDeductions: makeFromInt 22138, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92162, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13450, stateTaxDue: makeFromInt 4432 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47493, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27559, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39719, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2753, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21198, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69955, itemizedDeductions: makeFromInt 4241, federalTaxDue: makeFromInt 29970, stateTaxDue: makeFromInt 10323 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34782, ordinaryIncomeNonSS: makeFromInt 19130, qualifiedIncome: makeFromInt 25093, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1712, stateTaxDue: makeFromInt 1636 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29655, ordinaryIncomeNonSS: makeFromInt 72495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10684, stateTaxDue: makeFromInt 3170 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29951, ordinaryIncomeNonSS: makeFromInt 49618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4684, federalTaxDue: makeFromInt 7929, stateTaxDue: makeFromInt 2226 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28538, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63585, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4100, stateTaxDue: makeFromInt 2924 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30335, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80695, qualifiedIncome: makeFromInt 34291, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20561, stateTaxDue: makeFromInt 5494 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3354, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13398, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4191, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42876, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45496, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40338, stateTaxDue: makeFromInt 9320 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17141, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68609, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29292, federalTaxDue: makeFromInt 11175, stateTaxDue: makeFromInt 2855 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43659, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11192, federalTaxDue: makeFromInt 1873, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36875, ordinaryIncomeNonSS: makeFromInt 109258, qualifiedIncome: makeFromInt 94521, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27987, stateTaxDue: makeFromInt 9514 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3638, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50055, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2028 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5243, ordinaryIncomeNonSS: makeFromInt 16502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20784, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37764, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33380, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1274 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34678, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36162, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87910, itemizedDeductions: makeFromInt 28990, federalTaxDue: makeFromInt 7717, stateTaxDue: makeFromInt 4217 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88994, qualifiedIncome: makeFromInt 60984, itemizedDeductions: makeFromInt 3652, federalTaxDue: makeFromInt 9662, stateTaxDue: makeFromInt 7024 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22021, ordinaryIncomeNonSS: makeFromInt 30560, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9517, stateTaxDue: makeFromInt 6149 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3762, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74644, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19563, stateTaxDue: makeFromInt 8477 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25639, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19368, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6490, federalTaxDue: makeFromInt 33265, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10097, qualifiedIncome: makeFromInt 92977, itemizedDeductions: makeFromInt 2197, federalTaxDue: makeFromInt 7253, stateTaxDue: makeFromInt 4699 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14523, ordinaryIncomeNonSS: makeFromInt 58679, qualifiedIncome: makeFromInt 42255, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13137, stateTaxDue: makeFromInt 4792 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47336, qualifiedIncome: makeFromInt 70796, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11319, stateTaxDue: makeFromInt 5452 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20119, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 512 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86975, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12403, federalTaxDue: makeFromInt 17432, stateTaxDue: makeFromInt 3974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144366, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2758, federalTaxDue: makeFromInt 26025, stateTaxDue: makeFromInt 6934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26843, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80877, itemizedDeductions: makeFromInt 11634, federalTaxDue: makeFromInt 6333, stateTaxDue: makeFromInt 3789 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21880, ordinaryIncomeNonSS: makeFromInt 65227, qualifiedIncome: makeFromInt 95820, itemizedDeductions: makeFromInt 4515, federalTaxDue: makeFromInt 13492, stateTaxDue: makeFromInt 7577 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33497, ordinaryIncomeNonSS: makeFromInt 92111, qualifiedIncome: makeFromInt 16346, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17294, stateTaxDue: makeFromInt 5168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64972, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2865 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 964, ordinaryIncomeNonSS: makeFromInt 87447, qualifiedIncome: makeFromInt 14620, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9724, stateTaxDue: makeFromInt 4728 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14484, ordinaryIncomeNonSS: makeFromInt 20886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28854, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 789 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55388, qualifiedIncome: makeFromInt 72455, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5523, stateTaxDue: makeFromInt 5810 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46729, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20544, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6801, ordinaryIncomeNonSS: makeFromInt 56869, qualifiedIncome: makeFromInt 35592, itemizedDeductions: makeFromInt 1090, federalTaxDue: makeFromInt 11906, stateTaxDue: makeFromInt 4369 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61525, qualifiedIncome: makeFromInt 28037, itemizedDeductions: makeFromInt 8557, federalTaxDue: makeFromInt 12850, stateTaxDue: makeFromInt 4003 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11400, itemizedDeductions: makeFromInt 26102, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 195 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39767, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8887, ordinaryIncomeNonSS: makeFromInt 39565, qualifiedIncome: makeFromInt 80637, itemizedDeductions: makeFromInt 24024, federalTaxDue: makeFromInt 1552, stateTaxDue: makeFromInt 5535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38502, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92182, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51646, stateTaxDue: makeFromInt 12004 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48083, ordinaryIncomeNonSS: makeFromInt 35526, qualifiedIncome: makeFromInt 64319, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13607, stateTaxDue: makeFromInt 4617 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24441, federalTaxDue: makeFromInt 3220, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10130, qualifiedIncome: makeFromInt 17135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 988 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5072, qualifiedIncome: makeFromInt 67810, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3169 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13060, ordinaryIncomeNonSS: makeFromInt 95595, qualifiedIncome: makeFromInt 66219, itemizedDeductions: makeFromInt 6263, federalTaxDue: makeFromInt 19864, stateTaxDue: makeFromInt 7600 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111063, qualifiedIncome: makeFromInt 29730, itemizedDeductions: makeFromInt 19228, federalTaxDue: makeFromInt 14571, stateTaxDue: makeFromInt 6565 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76980, qualifiedIncome: makeFromInt 95992, itemizedDeductions: makeFromInt 2131, federalTaxDue: makeFromInt 18516, stateTaxDue: makeFromInt 8274 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3367, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90770, itemizedDeductions: makeFromInt 29780, federalTaxDue: makeFromInt 34949, stateTaxDue: makeFromInt 11464 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118594, qualifiedIncome: makeFromInt 35704, itemizedDeductions: makeFromInt 16213, federalTaxDue: makeFromInt 33963, stateTaxDue: makeFromInt 7460 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142348, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14193, stateTaxDue: makeFromInt 6642 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15050, ordinaryIncomeNonSS: makeFromInt 100029, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11535, stateTaxDue: makeFromInt 4449 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42966, ordinaryIncomeNonSS: makeFromInt 56716, qualifiedIncome: makeFromInt 90369, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20577, stateTaxDue: makeFromInt 6979 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39811, itemizedDeductions: makeFromInt 904, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16445, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24849, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 492 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63410, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34279, stateTaxDue: makeFromInt 10416 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8264, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26756, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44022, ordinaryIncomeNonSS: makeFromInt 115930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20175, federalTaxDue: makeFromInt 16613, stateTaxDue: makeFromInt 5322 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18639, ordinaryIncomeNonSS: makeFromInt 116373, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14205, stateTaxDue: makeFromInt 5432 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26256, ordinaryIncomeNonSS: makeFromInt 55290, qualifiedIncome: makeFromInt 67715, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18405, stateTaxDue: makeFromInt 5895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22460, ordinaryIncomeNonSS: makeFromInt 98370, qualifiedIncome: makeFromInt 97386, itemizedDeductions: makeFromInt 7016, federalTaxDue: makeFromInt 27303, stateTaxDue: makeFromInt 9331 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44021, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14975, stateTaxDue: makeFromInt 4581 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 484, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35560, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15518, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122918, qualifiedIncome: makeFromInt 82699, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22079, stateTaxDue: makeFromInt 9606 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22474, ordinaryIncomeNonSS: makeFromInt 80875, qualifiedIncome: makeFromInt 23020, itemizedDeductions: makeFromInt 13360, federalTaxDue: makeFromInt 13560, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14529, ordinaryIncomeNonSS: makeFromInt 114524, qualifiedIncome: makeFromInt 77267, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30688, stateTaxDue: makeFromInt 9333 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19103, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33966, stateTaxDue: makeFromInt 10114 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18925, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44827, ordinaryIncomeNonSS: makeFromInt 91144, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13162, federalTaxDue: makeFromInt 28662, stateTaxDue: makeFromInt 9082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25679, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 759 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20102, ordinaryIncomeNonSS: makeFromInt 47682, qualifiedIncome: makeFromInt 43206, itemizedDeductions: makeFromInt 16546, federalTaxDue: makeFromInt 3503, stateTaxDue: makeFromInt 3869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37041, itemizedDeductions: makeFromInt 10387, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1440 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4375, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5595, stateTaxDue: makeFromInt 4478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55683, qualifiedIncome: makeFromInt 77969, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19450, stateTaxDue: makeFromInt 6388 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29236, ordinaryIncomeNonSS: makeFromInt 18254, qualifiedIncome: makeFromInt 56583, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5104, stateTaxDue: makeFromInt 3592 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6729, ordinaryIncomeNonSS: makeFromInt 54349, qualifiedIncome: makeFromInt 31851, itemizedDeductions: makeFromInt 16856, federalTaxDue: makeFromInt 8915, stateTaxDue: makeFromInt 3855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 29642, ordinaryIncomeNonSS: makeFromInt 11293, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9087, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18705, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55164, itemizedDeductions: makeFromInt 13621, federalTaxDue: makeFromInt 1022, stateTaxDue: makeFromInt 2503 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37034, ordinaryIncomeNonSS: makeFromInt 114875, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38968, stateTaxDue: makeFromInt 10510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34900, ordinaryIncomeNonSS: makeFromInt 140865, qualifiedIncome: makeFromInt 10245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39424, stateTaxDue: makeFromInt 7482 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50691, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1604, stateTaxDue: makeFromInt 2280 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25512, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23397, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 540 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1697, ordinaryIncomeNonSS: makeFromInt 100361, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7947, stateTaxDue: makeFromInt 4543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102078, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4538, federalTaxDue: makeFromInt 18658, stateTaxDue: makeFromInt 4982 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122008, qualifiedIncome: makeFromInt 18966, itemizedDeductions: makeFromInt 1043, federalTaxDue: makeFromInt 20894, stateTaxDue: makeFromInt 6594 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41145, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77510, itemizedDeductions: makeFromInt 10492, federalTaxDue: makeFromInt 41248, stateTaxDue: makeFromInt 11001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6691, stateTaxDue: makeFromInt 3767 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6049, ordinaryIncomeNonSS: makeFromInt 44781, qualifiedIncome: makeFromInt 91540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3807, stateTaxDue: makeFromInt 6341 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8747, ordinaryIncomeNonSS: makeFromInt 123209, qualifiedIncome: makeFromInt 2936, itemizedDeductions: makeFromInt 10120, federalTaxDue: makeFromInt 15020, stateTaxDue: makeFromInt 5632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36883, stateTaxDue: makeFromInt 10101 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13341, ordinaryIncomeNonSS: makeFromInt 112771, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21988, stateTaxDue: makeFromInt 5405 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73303, itemizedDeductions: makeFromInt 20793, federalTaxDue: makeFromInt 3743, stateTaxDue: makeFromInt 3410 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48808, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29428, federalTaxDue: makeFromInt 6068, stateTaxDue: makeFromInt 2040 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69313, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4749, stateTaxDue: makeFromInt 3311 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3531, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114759, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3359, federalTaxDue: makeFromInt 30308, stateTaxDue: makeFromInt 10363 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11618, ordinaryIncomeNonSS: makeFromInt 42818, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27648, federalTaxDue: makeFromInt 2815, stateTaxDue: makeFromInt 1755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23670, ordinaryIncomeNonSS: makeFromInt 34953, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28917, federalTaxDue: makeFromInt 2140, stateTaxDue: makeFromInt 1558 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36759, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7613, itemizedDeductions: makeFromInt 22205, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20179, ordinaryIncomeNonSS: makeFromInt 92932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15937, federalTaxDue: makeFromInt 10818, stateTaxDue: makeFromInt 4087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8204, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16662, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33929, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18283, federalTaxDue: makeFromInt 9710, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16962, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28922, ordinaryIncomeNonSS: makeFromInt 55334, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7206, stateTaxDue: makeFromInt 2598 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46417, ordinaryIncomeNonSS: makeFromInt 42878, qualifiedIncome: makeFromInt 73080, itemizedDeductions: makeFromInt 13573, federalTaxDue: makeFromInt 16524, stateTaxDue: makeFromInt 5423 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55261, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27127, stateTaxDue: makeFromInt 9588 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6151, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17279, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70720, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24483, federalTaxDue: makeFromInt 5396, stateTaxDue: makeFromInt 3158 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 675, ordinaryIncomeNonSS: makeFromInt 129535, qualifiedIncome: makeFromInt 89821, itemizedDeductions: makeFromInt 7496, federalTaxDue: makeFromInt 33290, stateTaxDue: makeFromInt 10738 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1971, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67892, itemizedDeductions: makeFromInt 4415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3014 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12912, ordinaryIncomeNonSS: makeFromInt 74091, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23429, federalTaxDue: makeFromInt 5939, stateTaxDue: makeFromInt 3230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65316, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13331, stateTaxDue: makeFromInt 3107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63537, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13696, federalTaxDue: makeFromInt 3975, stateTaxDue: makeFromInt 2812 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15394, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12942, itemizedDeductions: makeFromInt 7530, federalTaxDue: makeFromInt 29432, stateTaxDue: makeFromInt 7885 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22474, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35961, itemizedDeductions: makeFromInt 10805, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18992, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59962, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1434, stateTaxDue: makeFromInt 2507 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50798, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2065 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3148, stateTaxDue: makeFromInt 1841 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25047, ordinaryIncomeNonSS: makeFromInt 74287, qualifiedIncome: makeFromInt 57107, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20181, stateTaxDue: makeFromInt 6354 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86600, itemizedDeductions: makeFromInt 23801, federalTaxDue: makeFromInt 1605, stateTaxDue: makeFromInt 3764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36400, ordinaryIncomeNonSS: makeFromInt 64809, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26317, stateTaxDue: makeFromInt 7956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147423, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6081, federalTaxDue: makeFromInt 27934, stateTaxDue: makeFromInt 7172 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7531, ordinaryIncomeNonSS: makeFromInt 149327, qualifiedIncome: makeFromInt 61911, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38493, stateTaxDue: makeFromInt 10345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20795, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 510 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147986, qualifiedIncome: makeFromInt 14221, itemizedDeductions: makeFromInt 26213, federalTaxDue: makeFromInt 32667, stateTaxDue: makeFromInt 7735 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8102, ordinaryIncomeNonSS: makeFromInt 141537, qualifiedIncome: makeFromInt 22998, itemizedDeductions: makeFromInt 4972, federalTaxDue: makeFromInt 27838, stateTaxDue: makeFromInt 7772 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37697, ordinaryIncomeNonSS: makeFromInt 111694, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18833, federalTaxDue: makeFromInt 19725, stateTaxDue: makeFromInt 5210 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49528, ordinaryIncomeNonSS: makeFromInt 5172, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11839, stateTaxDue: makeFromInt 4915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34105, ordinaryIncomeNonSS: makeFromInt 132287, qualifiedIncome: makeFromInt 26299, itemizedDeductions: makeFromInt 1066, federalTaxDue: makeFromInt 31221, stateTaxDue: makeFromInt 7537 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125020, qualifiedIncome: makeFromInt 58888, itemizedDeductions: makeFromInt 11904, federalTaxDue: makeFromInt 24123, stateTaxDue: makeFromInt 8820 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78140, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6, federalTaxDue: makeFromInt 5108, stateTaxDue: makeFromInt 3232 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 897, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24761, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42885, qualifiedIncome: makeFromInt 96558, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24442, stateTaxDue: makeFromInt 6517 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112604, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32733, stateTaxDue: makeFromInt 10375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94436, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8310, stateTaxDue: makeFromInt 4163 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43018, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30004, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19908, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12681, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35501, ordinaryIncomeNonSS: makeFromInt 146839, qualifiedIncome: makeFromInt 18163, itemizedDeductions: makeFromInt 11973, federalTaxDue: makeFromInt 24544, stateTaxDue: makeFromInt 7775 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9374, qualifiedIncome: makeFromInt 91332, itemizedDeductions: makeFromInt 15395, federalTaxDue: makeFromInt 13903, stateTaxDue: makeFromInt 4660 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115200, qualifiedIncome: makeFromInt 84178, itemizedDeductions: makeFromInt 12128, federalTaxDue: makeFromInt 27630, stateTaxDue: makeFromInt 9617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33539, ordinaryIncomeNonSS: makeFromInt 69691, qualifiedIncome: makeFromInt 2524, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15888, stateTaxDue: makeFromInt 3336 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69833, itemizedDeductions: makeFromInt 12445, federalTaxDue: makeFromInt 3458, stateTaxDue: makeFromInt 3011 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40589, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19372, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11398, ordinaryIncomeNonSS: makeFromInt 92973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10370, stateTaxDue: makeFromInt 4274 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31547, ordinaryIncomeNonSS: makeFromInt 129462, qualifiedIncome: makeFromInt 2195, itemizedDeductions: makeFromInt 28182, federalTaxDue: makeFromInt 17586, stateTaxDue: makeFromInt 6108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95164, itemizedDeductions: makeFromInt 17639, federalTaxDue: makeFromInt 50602, stateTaxDue: makeFromInt 12075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54283, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10361, stateTaxDue: makeFromInt 7440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17904, ordinaryIncomeNonSS: makeFromInt 141261, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12789, federalTaxDue: makeFromInt 27600, stateTaxDue: makeFromInt 6776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16431, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46707, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1729 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45438, ordinaryIncomeNonSS: makeFromInt 136024, qualifiedIncome: makeFromInt 25447, itemizedDeductions: makeFromInt 3044, federalTaxDue: makeFromInt 27467, stateTaxDue: makeFromInt 7399 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64498, itemizedDeductions: makeFromInt 24504, federalTaxDue: makeFromInt 32836, stateTaxDue: makeFromInt 10270 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16452, qualifiedIncome: makeFromInt 94927, itemizedDeductions: makeFromInt 29207, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 5094 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143535, qualifiedIncome: makeFromInt 71119, itemizedDeductions: makeFromInt 5465, federalTaxDue: makeFromInt 26437, stateTaxDue: makeFromInt 10058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100275, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9186, stateTaxDue: makeFromInt 4461 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11464, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27731, itemizedDeductions: makeFromInt 16921, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 986 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8330, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32327, itemizedDeductions: makeFromInt 7326, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1361 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29678, qualifiedIncome: makeFromInt 28975, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2563 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25348, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 946 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15489, federalTaxDue: makeFromInt 15876, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16993, ordinaryIncomeNonSS: makeFromInt 20166, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16167, stateTaxDue: makeFromInt 5904 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65684, itemizedDeductions: makeFromInt 24038, federalTaxDue: makeFromInt 30578, stateTaxDue: makeFromInt 10449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17323, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49904, itemizedDeductions: makeFromInt 15636, federalTaxDue: makeFromInt 1838, stateTaxDue: makeFromInt 2117 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55937, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7884, stateTaxDue: makeFromInt 2380 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49131, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49646, ordinaryIncomeNonSS: makeFromInt 140880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30139, stateTaxDue: makeFromInt 6589 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47600, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9855, stateTaxDue: makeFromInt 2125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21744, federalTaxDue: makeFromInt 23629, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16238, ordinaryIncomeNonSS: makeFromInt 39124, qualifiedIncome: makeFromInt 55592, itemizedDeductions: makeFromInt 25480, federalTaxDue: makeFromInt 7722, stateTaxDue: makeFromInt 4484 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9857, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85492, itemizedDeductions: makeFromInt 21293, federalTaxDue: makeFromInt 5770, stateTaxDue: makeFromInt 3820 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9449, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19893, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20966, itemizedDeductions: makeFromInt 18545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 793 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36094, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 68, stateTaxDue: makeFromInt 2286 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31027, ordinaryIncomeNonSS: makeFromInt 130336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25376, stateTaxDue: makeFromInt 6142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21261, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1173, stateTaxDue: makeFromInt 860 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24174, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48719, ordinaryIncomeNonSS: makeFromInt 50261, qualifiedIncome: makeFromInt 34964, itemizedDeductions: makeFromInt 9394, federalTaxDue: makeFromInt 16586, stateTaxDue: makeFromInt 4006 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25081, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35901, stateTaxDue: makeFromInt 8705 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4294, ordinaryIncomeNonSS: makeFromInt 81203, qualifiedIncome: makeFromInt 94431, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21981, stateTaxDue: makeFromInt 8327 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 521, qualifiedIncome: makeFromInt 81645, itemizedDeductions: makeFromInt 27438, federalTaxDue: makeFromInt 6457, stateTaxDue: makeFromInt 3966 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91612, qualifiedIncome: makeFromInt 66988, itemizedDeductions: makeFromInt 9177, federalTaxDue: makeFromInt 24781, stateTaxDue: makeFromInt 7455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35598, itemizedDeductions: makeFromInt 16183, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1591 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26340, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11499, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3593, stateTaxDue: makeFromInt 2713 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110216, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22782, federalTaxDue: makeFromInt 25086, stateTaxDue: makeFromInt 10036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41523, ordinaryIncomeNonSS: makeFromInt 107995, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4486, federalTaxDue: makeFromInt 23202, stateTaxDue: makeFromInt 5059 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1641, ordinaryIncomeNonSS: makeFromInt 121536, qualifiedIncome: makeFromInt 40510, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24347, stateTaxDue: makeFromInt 7647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66525, qualifiedIncome: makeFromInt 4038, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15242, stateTaxDue: makeFromInt 3150 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46759, ordinaryIncomeNonSS: makeFromInt 21208, qualifiedIncome: makeFromInt 13174, itemizedDeductions: makeFromInt 8339, federalTaxDue: makeFromInt 1791, stateTaxDue: makeFromInt 1203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41084, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38301, stateTaxDue: makeFromInt 9521 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21626, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31386, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 948 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42326, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15090, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43598, ordinaryIncomeNonSS: makeFromInt 101395, qualifiedIncome: makeFromInt 98324, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37048, stateTaxDue: makeFromInt 9731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2545, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6739, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1745, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22930, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21935, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43253, itemizedDeductions: makeFromInt 21601, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1588 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54359, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2506, stateTaxDue: makeFromInt 2548 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49039, ordinaryIncomeNonSS: makeFromInt 130406, qualifiedIncome: makeFromInt 74817, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37575, stateTaxDue: makeFromInt 9814 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21990, ordinaryIncomeNonSS: makeFromInt 47630, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14754, stateTaxDue: makeFromInt 7007 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2341, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29510, stateTaxDue: makeFromInt 7162 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8892, federalTaxDue: makeFromInt 1233, stateTaxDue: makeFromInt 332 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4794, ordinaryIncomeNonSS: makeFromInt 57600, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4121, stateTaxDue: makeFromInt 2505 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28224, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32340, stateTaxDue: makeFromInt 8456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115754, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30966, stateTaxDue: makeFromInt 5557 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59170, itemizedDeductions: makeFromInt 13041, federalTaxDue: makeFromInt 36035, stateTaxDue: makeFromInt 10443 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17383, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1203, stateTaxDue: makeFromInt 414 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23790, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96610, itemizedDeductions: makeFromInt 28544, federalTaxDue: makeFromInt 384, stateTaxDue: makeFromInt 4356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39301, ordinaryIncomeNonSS: makeFromInt 81726, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15978, federalTaxDue: makeFromInt 18073, stateTaxDue: makeFromInt 3821 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91557, qualifiedIncome: makeFromInt 31525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17570, stateTaxDue: makeFromInt 5699 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48199, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46454, itemizedDeductions: makeFromInt 29472, federalTaxDue: makeFromInt 717, stateTaxDue: makeFromInt 2068 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50066, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29758, federalTaxDue: makeFromInt 2097, stateTaxDue: makeFromInt 1928 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91884, itemizedDeductions: makeFromInt 25213, federalTaxDue: makeFromInt 2488, stateTaxDue: makeFromInt 4237 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122406, qualifiedIncome: makeFromInt 80674, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29962, stateTaxDue: makeFromInt 10133 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28818, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1577, itemizedDeductions: makeFromInt 8025, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12935, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43178, stateTaxDue: makeFromInt 11856 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21601, ordinaryIncomeNonSS: makeFromInt 95906, qualifiedIncome: makeFromInt 65300, itemizedDeductions: makeFromInt 25813, federalTaxDue: makeFromInt 17133, stateTaxDue: makeFromInt 7585 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25471, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72024, itemizedDeductions: makeFromInt 23155, federalTaxDue: makeFromInt 5156, stateTaxDue: makeFromInt 3449 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14838, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148806, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24111, stateTaxDue: makeFromInt 7038 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66094, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7016, stateTaxDue: makeFromInt 2930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31480, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17882, qualifiedIncome: makeFromInt 65909, itemizedDeductions: makeFromInt 24584, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149796, qualifiedIncome: makeFromInt 13737, itemizedDeductions: makeFromInt 19483, federalTaxDue: makeFromInt 37815, stateTaxDue: makeFromInt 7912 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30431, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3875, stateTaxDue: makeFromInt 6047 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46353, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45483, itemizedDeductions: makeFromInt 21334, federalTaxDue: makeFromInt 39981, stateTaxDue: makeFromInt 9399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14190, ordinaryIncomeNonSS: makeFromInt 1877, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24866, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4543 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11084, federalTaxDue: makeFromInt 15876, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33440, ordinaryIncomeNonSS: makeFromInt 34108, qualifiedIncome: makeFromInt 52623, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8110, stateTaxDue: makeFromInt 3962 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2536, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65322, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2591 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27921, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2901, federalTaxDue: makeFromInt 26673, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5348, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28048, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3469, ordinaryIncomeNonSS: makeFromInt 38243, qualifiedIncome: makeFromInt 15212, itemizedDeductions: makeFromInt 19817, federalTaxDue: makeFromInt 1732, stateTaxDue: makeFromInt 2277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46289, itemizedDeductions: makeFromInt 8243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2014 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33268, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36797, stateTaxDue: makeFromInt 11725 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28924, ordinaryIncomeNonSS: makeFromInt 38311, qualifiedIncome: makeFromInt 30328, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11561, stateTaxDue: makeFromInt 3244 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3380, qualifiedIncome: makeFromInt 73767, itemizedDeductions: makeFromInt 25009, federalTaxDue: makeFromInt 5275, stateTaxDue: makeFromInt 3506 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56500, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2433 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42600, qualifiedIncome: makeFromInt 27639, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12750, stateTaxDue: makeFromInt 3137 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107600, qualifiedIncome: makeFromInt 16604, itemizedDeductions: makeFromInt 13397, federalTaxDue: makeFromInt 17337, stateTaxDue: makeFromInt 5755 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2621, ordinaryIncomeNonSS: makeFromInt 50106, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2964, stateTaxDue: makeFromInt 2086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10659, stateTaxDue: makeFromInt 2755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8988, federalTaxDue: makeFromInt 31509, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79034, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6208, stateTaxDue: makeFromInt 3602 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65076, itemizedDeductions: makeFromInt 2314, federalTaxDue: makeFromInt 1862, stateTaxDue: makeFromInt 2579 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3563, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49754, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1834, stateTaxDue: makeFromInt 2191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62428, itemizedDeductions: makeFromInt 144, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14685, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90655, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9923, stateTaxDue: makeFromInt 4399 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11260, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25382, ordinaryIncomeNonSS: makeFromInt 107543, qualifiedIncome: makeFromInt 92340, itemizedDeductions: makeFromInt 23804, federalTaxDue: makeFromInt 30067, stateTaxDue: makeFromInt 9619 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8851, federalTaxDue: makeFromInt 35740, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37785, ordinaryIncomeNonSS: makeFromInt 112460, qualifiedIncome: makeFromInt 88565, itemizedDeductions: makeFromInt 24884, federalTaxDue: makeFromInt 33119, stateTaxDue: makeFromInt 9676 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27202, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64947, itemizedDeductions: makeFromInt 11890, federalTaxDue: makeFromInt 30, stateTaxDue: makeFromInt 2672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67719, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6072, stateTaxDue: makeFromInt 2931 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40737, ordinaryIncomeNonSS: makeFromInt 92955, qualifiedIncome: makeFromInt 56833, itemizedDeductions: makeFromInt 23225, federalTaxDue: makeFromInt 26417, stateTaxDue: makeFromInt 7034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134847, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11529, federalTaxDue: makeFromInt 17042, stateTaxDue: makeFromInt 6224 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18448, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37916, ordinaryIncomeNonSS: makeFromInt 124249, qualifiedIncome: makeFromInt 63430, itemizedDeductions: makeFromInt 7906, federalTaxDue: makeFromInt 43017, stateTaxDue: makeFromInt 9347 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63621, itemizedDeductions: makeFromInt 15849, federalTaxDue: makeFromInt 1330, stateTaxDue: makeFromInt 2506 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107022, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8574, stateTaxDue: makeFromInt 4676 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42378, ordinaryIncomeNonSS: makeFromInt 46600, qualifiedIncome: makeFromInt 36317, itemizedDeductions: makeFromInt 4386, federalTaxDue: makeFromInt 14798, stateTaxDue: makeFromInt 3691 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47510, ordinaryIncomeNonSS: makeFromInt 129761, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23819, federalTaxDue: makeFromInt 22660, stateTaxDue: makeFromInt 6013 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85686, qualifiedIncome: makeFromInt 23918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14684, stateTaxDue: makeFromInt 5005 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58167, qualifiedIncome: makeFromInt 48543, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9184, stateTaxDue: makeFromInt 4961 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13174, ordinaryIncomeNonSS: makeFromInt 23918, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24274, federalTaxDue: makeFromInt 217, stateTaxDue: makeFromInt 621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37791, ordinaryIncomeNonSS: makeFromInt 94627, qualifiedIncome: makeFromInt 29067, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19077, stateTaxDue: makeFromInt 5860 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145512, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22444, federalTaxDue: makeFromInt 32211, stateTaxDue: makeFromInt 6972 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7403, federalTaxDue: makeFromInt 35202, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17704, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 960, federalTaxDue: makeFromInt 10984, stateTaxDue: makeFromInt 5350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23569, ordinaryIncomeNonSS: makeFromInt 104293, qualifiedIncome: makeFromInt 78126, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25831, stateTaxDue: makeFromInt 8855 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15158, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6081, itemizedDeductions: makeFromInt 22686, federalTaxDue: makeFromInt 23096, stateTaxDue: makeFromInt 7438 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77205, itemizedDeductions: makeFromInt 24683, federalTaxDue: makeFromInt 3541, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4181, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8773, ordinaryIncomeNonSS: makeFromInt 116641, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27291, federalTaxDue: makeFromInt 10682, stateTaxDue: makeFromInt 5296 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5683, ordinaryIncomeNonSS: makeFromInt 112439, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23411, federalTaxDue: makeFromInt 31750, stateTaxDue: makeFromInt 10488 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40358, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39971, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1624 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34948, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53162, qualifiedIncome: makeFromInt 97683, itemizedDeductions: makeFromInt 579, federalTaxDue: makeFromInt 19523, stateTaxDue: makeFromInt 7395 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3512, qualifiedIncome: makeFromInt 82366, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1453, stateTaxDue: makeFromInt 3819 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1808, ordinaryIncomeNonSS: makeFromInt 27971, qualifiedIncome: makeFromInt 40842, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2959 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49797, ordinaryIncomeNonSS: makeFromInt 127375, qualifiedIncome: makeFromInt 6848, itemizedDeductions: makeFromInt 27392, federalTaxDue: makeFromInt 21238, stateTaxDue: makeFromInt 6036 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6751, ordinaryIncomeNonSS: makeFromInt 89010, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7426, stateTaxDue: makeFromInt 3976 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10548, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27512, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25558, stateTaxDue: makeFromInt 8502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15346, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97743, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2159, stateTaxDue: makeFromInt 4412 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15013, ordinaryIncomeNonSS: makeFromInt 68765, qualifiedIncome: makeFromInt 71689, itemizedDeductions: makeFromInt 9504, federalTaxDue: makeFromInt 11054, stateTaxDue: makeFromInt 6548 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67392, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2895 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42362, ordinaryIncomeNonSS: makeFromInt 28178, qualifiedIncome: makeFromInt 28631, itemizedDeductions: makeFromInt 3730, federalTaxDue: makeFromInt 11590, stateTaxDue: makeFromInt 2647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32714, ordinaryIncomeNonSS: makeFromInt 13814, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 256 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47102, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39453, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2637, stateTaxDue: makeFromInt 1518 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132406, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22378, stateTaxDue: makeFromInt 6165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58422, qualifiedIncome: makeFromInt 71176, itemizedDeductions: makeFromInt 1600, federalTaxDue: makeFromInt 6126, stateTaxDue: makeFromInt 5957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4679, federalTaxDue: makeFromInt 11691, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70556, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21619, stateTaxDue: makeFromInt 8046 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14467, ordinaryIncomeNonSS: makeFromInt 27461, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10766, federalTaxDue: makeFromInt 2534, stateTaxDue: makeFromInt 5698 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109568, qualifiedIncome: makeFromInt 78742, itemizedDeductions: makeFromInt 3692, federalTaxDue: makeFromInt 22515, stateTaxDue: makeFromInt 8951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143225, qualifiedIncome: makeFromInt 6632, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23711, stateTaxDue: makeFromInt 7092 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12982, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54906, itemizedDeductions: makeFromInt 17063, federalTaxDue: makeFromInt 983, stateTaxDue: makeFromInt 2490 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34707, itemizedDeductions: makeFromInt 24164, federalTaxDue: makeFromInt 38192, stateTaxDue: makeFromInt 8971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68931, qualifiedIncome: makeFromInt 91664, itemizedDeductions: makeFromInt 2736, federalTaxDue: makeFromInt 32567, stateTaxDue: makeFromInt 7844 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2237, federalTaxDue: makeFromInt 21228, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14702, ordinaryIncomeNonSS: makeFromInt 118125, qualifiedIncome: makeFromInt 99849, itemizedDeductions: makeFromInt 25434, federalTaxDue: makeFromInt 34058, stateTaxDue: makeFromInt 10644 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17209, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5486, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8280, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22768, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4939 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13086, ordinaryIncomeNonSS: makeFromInt 74950, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2495, federalTaxDue: makeFromInt 10348, stateTaxDue: makeFromInt 3493 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27817, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7248, ordinaryIncomeNonSS: makeFromInt 18687, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10314, stateTaxDue: makeFromInt 5706 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12021, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11709, federalTaxDue: makeFromInt 18124, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131178, qualifiedIncome: makeFromInt 21476, itemizedDeductions: makeFromInt 9651, federalTaxDue: makeFromInt 33254, stateTaxDue: makeFromInt 7366 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19866, ordinaryIncomeNonSS: makeFromInt 23611, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34597, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78655, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52171, stateTaxDue: makeFromInt 11437 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4386, ordinaryIncomeNonSS: makeFromInt 71645, qualifiedIncome: makeFromInt 79959, itemizedDeductions: makeFromInt 12189, federalTaxDue: makeFromInt 8831, stateTaxDue: makeFromInt 6905 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8164, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78128, qualifiedIncome: makeFromInt 44702, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15371, stateTaxDue: makeFromInt 5836 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13873, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12169, federalTaxDue: makeFromInt 21090, stateTaxDue: makeFromInt 6896 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137050, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 509, federalTaxDue: makeFromInt 22377, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24079, ordinaryIncomeNonSS: makeFromInt 14839, qualifiedIncome: makeFromInt 70797, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10758, stateTaxDue: makeFromInt 3900 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38228, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8235, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24953, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42094, itemizedDeductions: makeFromInt 16386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1630 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102724, qualifiedIncome: makeFromInt 16169, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16199, stateTaxDue: makeFromInt 5690 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7493, ordinaryIncomeNonSS: makeFromInt 145189, qualifiedIncome: makeFromInt 92423, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30547, stateTaxDue: makeFromInt 11206 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44384, ordinaryIncomeNonSS: makeFromInt 39202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13749, federalTaxDue: makeFromInt 8036, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37955, ordinaryIncomeNonSS: makeFromInt 71578, qualifiedIncome: makeFromInt 40049, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22338, stateTaxDue: makeFromInt 5265 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95529, qualifiedIncome: makeFromInt 42969, itemizedDeductions: makeFromInt 28967, federalTaxDue: makeFromInt 14264, stateTaxDue: makeFromInt 6550 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10169, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22393, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22000, stateTaxDue: makeFromInt 8139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99201, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9233, stateTaxDue: makeFromInt 4835 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15706, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35530, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45842, ordinaryIncomeNonSS: makeFromInt 34626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 72, federalTaxDue: makeFromInt 3817, stateTaxDue: makeFromInt 1156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13831, qualifiedIncome: makeFromInt 94527, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2884, stateTaxDue: makeFromInt 5077 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37412, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59585, itemizedDeductions: makeFromInt 27843, federalTaxDue: makeFromInt 38734, stateTaxDue: makeFromInt 10024 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18097, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 330 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26747, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83422, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57260, itemizedDeductions: makeFromInt 17166, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2472 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7769, qualifiedIncome: makeFromInt 37238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1675 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2308, ordinaryIncomeNonSS: makeFromInt 72565, qualifiedIncome: makeFromInt 93992, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19369, stateTaxDue: makeFromInt 7944 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21343, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38286, itemizedDeductions: makeFromInt 6651, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42330, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8577, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19177, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12335, federalTaxDue: makeFromInt 32293, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71078, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26538, stateTaxDue: makeFromInt 10579 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8066, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17384, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25899, ordinaryIncomeNonSS: makeFromInt 74320, qualifiedIncome: makeFromInt 61250, itemizedDeductions: makeFromInt 29114, federalTaxDue: makeFromInt 18890, stateTaxDue: makeFromInt 6524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49832, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22456, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4015, federalTaxDue: makeFromInt 25602, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71683, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3132, stateTaxDue: makeFromInt 3309 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29117, ordinaryIncomeNonSS: makeFromInt 84072, qualifiedIncome: makeFromInt 56249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23552, stateTaxDue: makeFromInt 6561 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9660, stateTaxDue: makeFromInt 4686 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52680, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2059 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76001, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5753, stateTaxDue: makeFromInt 3448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4141, ordinaryIncomeNonSS: makeFromInt 24608, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18964, federalTaxDue: makeFromInt 243, stateTaxDue: makeFromInt 908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49650, ordinaryIncomeNonSS: makeFromInt 25015, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1972, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4259, itemizedDeductions: makeFromInt 2642, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55563, qualifiedIncome: makeFromInt 18933, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2479, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71754, qualifiedIncome: makeFromInt 46716, itemizedDeductions: makeFromInt 14654, federalTaxDue: makeFromInt 10700, stateTaxDue: makeFromInt 5593 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11273, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61488, itemizedDeductions: makeFromInt 10928, federalTaxDue: makeFromInt 27207, stateTaxDue: makeFromInt 9899 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4761, ordinaryIncomeNonSS: makeFromInt 82926, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9691, federalTaxDue: makeFromInt 25029, stateTaxDue: makeFromInt 8901 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32588, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18570, federalTaxDue: makeFromInt 27876, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35052, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58990, itemizedDeductions: makeFromInt 16175, federalTaxDue: makeFromInt 5139, stateTaxDue: makeFromInt 2695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61311, itemizedDeductions: makeFromInt 6943, federalTaxDue: makeFromInt 3549, stateTaxDue: makeFromInt 2903 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10698, itemizedDeductions: makeFromInt 84, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 117 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10182, ordinaryIncomeNonSS: makeFromInt 4417, qualifiedIncome: makeFromInt 54880, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 980, stateTaxDue: makeFromInt 2510 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17930, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33562, ordinaryIncomeNonSS: makeFromInt 38304, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13250, federalTaxDue: makeFromInt 5852, stateTaxDue: makeFromInt 1607 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85252, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7340, stateTaxDue: makeFromInt 4001 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18142, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 636, stateTaxDue: makeFromInt 1387 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19609, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12611, federalTaxDue: makeFromInt 30708, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43220, ordinaryIncomeNonSS: makeFromInt 41058, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5394, stateTaxDue: makeFromInt 1543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1754, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4910, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24258, federalTaxDue: makeFromInt 22932, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31577, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4663, itemizedDeductions: makeFromInt 228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57327, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15011, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22425, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31205, ordinaryIncomeNonSS: makeFromInt 95718, qualifiedIncome: makeFromInt 29711, itemizedDeductions: makeFromInt 3192, federalTaxDue: makeFromInt 19135, stateTaxDue: makeFromInt 5896 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2710, ordinaryIncomeNonSS: makeFromInt 84617, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26822, stateTaxDue: makeFromInt 8976 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22513, qualifiedIncome: makeFromInt 66669, itemizedDeductions: makeFromInt 1598, federalTaxDue: makeFromInt 5702, stateTaxDue: makeFromInt 4004 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144347, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23410, stateTaxDue: makeFromInt 6962 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74776, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1504, stateTaxDue: makeFromInt 3364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27331, ordinaryIncomeNonSS: makeFromInt 72451, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23947, federalTaxDue: makeFromInt 8643, stateTaxDue: makeFromInt 3267 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12106, ordinaryIncomeNonSS: makeFromInt 130431, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24035, federalTaxDue: makeFromInt 35852, stateTaxDue: makeFromInt 11267 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13120, federalTaxDue: makeFromInt 27141, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43385, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24223, itemizedDeductions: makeFromInt 2778, federalTaxDue: makeFromInt 123, stateTaxDue: makeFromInt 889 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23674, ordinaryIncomeNonSS: makeFromInt 104899, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14586, stateTaxDue: makeFromInt 4697 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6386, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48835, ordinaryIncomeNonSS: makeFromInt 119411, qualifiedIncome: makeFromInt 25351, itemizedDeductions: makeFromInt 13047, federalTaxDue: makeFromInt 25043, stateTaxDue: makeFromInt 6563 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58789, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2786, stateTaxDue: makeFromInt 2465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5531, federalTaxDue: makeFromInt 9125, stateTaxDue: makeFromInt 3818 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23983, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1192, itemizedDeductions: makeFromInt 16136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7723, ordinaryIncomeNonSS: makeFromInt 76704, qualifiedIncome: makeFromInt 12857, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9692, stateTaxDue: makeFromInt 4119 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32933, ordinaryIncomeNonSS: makeFromInt 133191, qualifiedIncome: makeFromInt 97827, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38586, stateTaxDue: makeFromInt 11176 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13524, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41839, itemizedDeductions: makeFromInt 9447, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1481 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17792, ordinaryIncomeNonSS: makeFromInt 61392, qualifiedIncome: makeFromInt 63350, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17510, stateTaxDue: makeFromInt 5782 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43937, ordinaryIncomeNonSS: makeFromInt 52626, qualifiedIncome: makeFromInt 65418, itemizedDeductions: makeFromInt 6227, federalTaxDue: makeFromInt 15317, stateTaxDue: makeFromInt 5517 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6088, stateTaxDue: makeFromInt 3598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42955, ordinaryIncomeNonSS: makeFromInt 100199, qualifiedIncome: makeFromInt 22666, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28538, stateTaxDue: makeFromInt 5919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78731, qualifiedIncome: makeFromInt 93386, itemizedDeductions: makeFromInt 1762, federalTaxDue: makeFromInt 38091, stateTaxDue: makeFromInt 8554 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126610, qualifiedIncome: makeFromInt 11225, itemizedDeductions: makeFromInt 17278, federalTaxDue: makeFromInt 31523, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109455, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11362, federalTaxDue: makeFromInt 29847, stateTaxDue: makeFromInt 10335 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70582, itemizedDeductions: makeFromInt 8145, federalTaxDue: makeFromInt 3894, stateTaxDue: makeFromInt 3074 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22181, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 734 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 403, ordinaryIncomeNonSS: makeFromInt 35836, qualifiedIncome: makeFromInt 96941, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8833, stateTaxDue: makeFromInt 6184 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51311, itemizedDeductions: makeFromInt 29504, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1891 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30721, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31282, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 55, stateTaxDue: makeFromInt 1109 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27540, ordinaryIncomeNonSS: makeFromInt 112184, qualifiedIncome: makeFromInt 35004, itemizedDeductions: makeFromInt 15754, federalTaxDue: makeFromInt 19272, stateTaxDue: makeFromInt 6884 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26642, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9705, ordinaryIncomeNonSS: makeFromInt 128998, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 85, federalTaxDue: makeFromInt 21706, stateTaxDue: makeFromInt 5995 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9823, qualifiedIncome: makeFromInt 70661, itemizedDeductions: makeFromInt 19585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3349 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69598, qualifiedIncome: makeFromInt 68156, itemizedDeductions: makeFromInt 18431, federalTaxDue: makeFromInt 16136, stateTaxDue: makeFromInt 6679 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15197, ordinaryIncomeNonSS: makeFromInt 71423, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23956, stateTaxDue: makeFromInt 8111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14605, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4704, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26002, ordinaryIncomeNonSS: makeFromInt 29893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1195, stateTaxDue: makeFromInt 1120 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96061, itemizedDeductions: makeFromInt 14313, federalTaxDue: makeFromInt 15761, stateTaxDue: makeFromInt 4548 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22660, ordinaryIncomeNonSS: makeFromInt 138115, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22674, stateTaxDue: makeFromInt 6391 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38925, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30856, stateTaxDue: makeFromInt 9392 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47623, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 46915, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113111, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42654, stateTaxDue: makeFromInt 10401 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2893, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43847, itemizedDeductions: makeFromInt 12747, federalTaxDue: makeFromInt 962, stateTaxDue: makeFromInt 1617 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36070, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92291, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10041, stateTaxDue: makeFromInt 4160 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39264, itemizedDeductions: makeFromInt 4935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1559 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74787, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39246, stateTaxDue: makeFromInt 10764 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70353, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6652, stateTaxDue: makeFromInt 3063 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 718, ordinaryIncomeNonSS: makeFromInt 83928, qualifiedIncome: makeFromInt 81090, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21936, stateTaxDue: makeFromInt 7796 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24683, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80942, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2691, stateTaxDue: makeFromInt 3472 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38138, ordinaryIncomeNonSS: makeFromInt 91843, qualifiedIncome: makeFromInt 75553, itemizedDeductions: makeFromInt 14952, federalTaxDue: makeFromInt 23898, stateTaxDue: makeFromInt 7895 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42232, ordinaryIncomeNonSS: makeFromInt 69220, qualifiedIncome: makeFromInt 78552, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25361, stateTaxDue: makeFromInt 7119 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26624, itemizedDeductions: makeFromInt 1425, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 807 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21876, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41138, qualifiedIncome: makeFromInt 22231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1114, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37526, ordinaryIncomeNonSS: makeFromInt 113128, qualifiedIncome: makeFromInt 12053, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16589, stateTaxDue: makeFromInt 5784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46280, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1707 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35920, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35512, stateTaxDue: makeFromInt 8841 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23835, federalTaxDue: makeFromInt 20866, stateTaxDue: makeFromInt 6435 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125715, qualifiedIncome: makeFromInt 88710, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31828, stateTaxDue: makeFromInt 10283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14751, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 324 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29400, ordinaryIncomeNonSS: makeFromInt 125368, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26687, stateTaxDue: makeFromInt 5813 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42659, qualifiedIncome: makeFromInt 44886, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1106, stateTaxDue: makeFromInt 3702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60077, qualifiedIncome: makeFromInt 33085, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 983, stateTaxDue: makeFromInt 4098 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18815, ordinaryIncomeNonSS: makeFromInt 14872, qualifiedIncome: makeFromInt 7652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1340, itemizedDeductions: makeFromInt 29572, federalTaxDue: makeFromInt 31942, stateTaxDue: makeFromInt 7192 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27651, ordinaryIncomeNonSS: makeFromInt 117858, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13975, stateTaxDue: makeFromInt 5218 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6747, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53990, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30082, stateTaxDue: makeFromInt 7507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82926, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4879, stateTaxDue: makeFromInt 3882 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38064, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34086, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 375, stateTaxDue: makeFromInt 1449 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2029, itemizedDeductions: makeFromInt 5386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65343, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5469, stateTaxDue: makeFromInt 2904 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117583, qualifiedIncome: makeFromInt 28720, itemizedDeductions: makeFromInt 23325, federalTaxDue: makeFromInt 12541, stateTaxDue: makeFromInt 6640 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47961, ordinaryIncomeNonSS: makeFromInt 129171, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43434, stateTaxDue: makeFromInt 10884 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74395, qualifiedIncome: makeFromInt 19451, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13876, stateTaxDue: makeFromInt 4235 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4731, ordinaryIncomeNonSS: makeFromInt 99779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28608, federalTaxDue: makeFromInt 8033, stateTaxDue: makeFromInt 4538 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94946, qualifiedIncome: makeFromInt 18059, itemizedDeductions: makeFromInt 21995, federalTaxDue: makeFromInt 11382, stateTaxDue: makeFromInt 5275 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2294, ordinaryIncomeNonSS: makeFromInt 78688, qualifiedIncome: makeFromInt 45709, itemizedDeductions: makeFromInt 21753, federalTaxDue: makeFromInt 14249, stateTaxDue: makeFromInt 5939 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30186, ordinaryIncomeNonSS: makeFromInt 62983, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29334, federalTaxDue: makeFromInt 6368, stateTaxDue: makeFromInt 2474 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136648, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18024, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18402, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41984, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36259, ordinaryIncomeNonSS: makeFromInt 99325, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7899, federalTaxDue: makeFromInt 31463, stateTaxDue: makeFromInt 9391 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75337, itemizedDeductions: makeFromInt 24294, federalTaxDue: makeFromInt 5301, stateTaxDue: makeFromInt 3512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1154, stateTaxDue: makeFromInt 2088 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49464, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40591, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40174, ordinaryIncomeNonSS: makeFromInt 40551, qualifiedIncome: makeFromInt 78990, itemizedDeductions: makeFromInt 22483, federalTaxDue: makeFromInt 9216, stateTaxDue: makeFromInt 5444 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18291, ordinaryIncomeNonSS: makeFromInt 117700, qualifiedIncome: makeFromInt 94572, itemizedDeductions: makeFromInt 8086, federalTaxDue: makeFromInt 33425, stateTaxDue: makeFromInt 10239 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95029, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8607, stateTaxDue: makeFromInt 4418 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87459, itemizedDeductions: makeFromInt 4074, federalTaxDue: makeFromInt 5866, stateTaxDue: makeFromInt 3918 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27903, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77670, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4398, stateTaxDue: makeFromInt 3629 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112473, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9228, stateTaxDue: makeFromInt 5149 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38345, itemizedDeductions: makeFromInt 28534, federalTaxDue: makeFromInt 30, stateTaxDue: makeFromInt 1662 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38004, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10716, ordinaryIncomeNonSS: makeFromInt 58801, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3880, stateTaxDue: makeFromInt 2465 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29275, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12498, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 155, federalTaxDue: makeFromInt 26707, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3391, ordinaryIncomeNonSS: makeFromInt 39780, qualifiedIncome: makeFromInt 78800, itemizedDeductions: makeFromInt 1830, federalTaxDue: makeFromInt 6671, stateTaxDue: makeFromInt 5554 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42706, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71025, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2149, stateTaxDue: makeFromInt 2969 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23035, itemizedDeductions: makeFromInt 3285, federalTaxDue: makeFromInt 38422, stateTaxDue: makeFromInt 8397 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38183, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 444, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29979, itemizedDeductions: makeFromInt 25353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1080 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9130, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23721, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40708, ordinaryIncomeNonSS: makeFromInt 76495, qualifiedIncome: makeFromInt 5119, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15922, stateTaxDue: makeFromInt 3714 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4627, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46661, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26753, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 347, stateTaxDue: makeFromInt 1083 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36522, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56546, itemizedDeductions: makeFromInt 18333, federalTaxDue: makeFromInt 654, stateTaxDue: makeFromInt 2452 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130022, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21806, stateTaxDue: makeFromInt 6046 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145786, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30417, stateTaxDue: makeFromInt 6914 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48399, ordinaryIncomeNonSS: makeFromInt 107090, qualifiedIncome: makeFromInt 82049, itemizedDeductions: makeFromInt 16385, federalTaxDue: makeFromInt 33110, stateTaxDue: makeFromInt 9082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 162, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25244, federalTaxDue: makeFromInt 21704, stateTaxDue: makeFromInt 6643 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18743, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48843, itemizedDeductions: makeFromInt 18230, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1767 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12285, ordinaryIncomeNonSS: makeFromInt 104354, qualifiedIncome: makeFromInt 6607, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16600, stateTaxDue: makeFromInt 5108 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130577, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18209, federalTaxDue: makeFromInt 29187, stateTaxDue: makeFromInt 5954 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 90, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17682, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 409 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24538, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22577, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48892, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11055, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27139, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36089, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2550, federalTaxDue: makeFromInt 26348, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12862, ordinaryIncomeNonSS: makeFromInt 129452, qualifiedIncome: makeFromInt 57540, itemizedDeductions: makeFromInt 25611, federalTaxDue: makeFromInt 30609, stateTaxDue: makeFromInt 9190 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40327, ordinaryIncomeNonSS: makeFromInt 35589, qualifiedIncome: makeFromInt 18571, itemizedDeductions: makeFromInt 12129, federalTaxDue: makeFromInt 7847, stateTaxDue: makeFromInt 2333 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42785, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144581, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24034, stateTaxDue: makeFromInt 6754 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72220, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4784, stateTaxDue: makeFromInt 3036 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10083, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44326, ordinaryIncomeNonSS: makeFromInt 65787, qualifiedIncome: makeFromInt 47442, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20362, stateTaxDue: makeFromInt 5326 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149179, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20706, federalTaxDue: makeFromInt 27820, stateTaxDue: makeFromInt 7384 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149055, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39123, stateTaxDue: makeFromInt 12032 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47796, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16870, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11511, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40416, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27743, stateTaxDue: makeFromInt 9160 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92589, qualifiedIncome: makeFromInt 44516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27360, stateTaxDue: makeFromInt 6442 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44818, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3432, itemizedDeductions: makeFromInt 28067, federalTaxDue: makeFromInt 21528, stateTaxDue: makeFromInt 7376 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43658, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6052, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13042, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17677, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27255, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44106, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38916, ordinaryIncomeNonSS: makeFromInt 132863, qualifiedIncome: makeFromInt 77971, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31079, stateTaxDue: makeFromInt 10067 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24393, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13766, itemizedDeductions: makeFromInt 11213, federalTaxDue: makeFromInt 28269, stateTaxDue: makeFromInt 7613 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23079, ordinaryIncomeNonSS: makeFromInt 15080, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16130, stateTaxDue: makeFromInt 5645 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56140, itemizedDeductions: makeFromInt 11178, federalTaxDue: makeFromInt 24297, stateTaxDue: makeFromInt 9832 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42489, ordinaryIncomeNonSS: makeFromInt 26257, qualifiedIncome: makeFromInt 7728, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1020, stateTaxDue: makeFromInt 1224 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79446, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34881, stateTaxDue: makeFromInt 11097 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17668, federalTaxDue: makeFromInt 24607, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140706, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22536, stateTaxDue: makeFromInt 6780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133875, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14817, federalTaxDue: makeFromInt 20294, stateTaxDue: makeFromInt 6379 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28763, ordinaryIncomeNonSS: makeFromInt 48535, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20983, federalTaxDue: makeFromInt 5478, stateTaxDue: makeFromInt 2052 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38858, ordinaryIncomeNonSS: makeFromInt 78894, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13538, federalTaxDue: makeFromInt 27735, stateTaxDue: makeFromInt 8570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107946, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25306, stateTaxDue: makeFromInt 9952 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23968, itemizedDeductions: makeFromInt 24342, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 743 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20399, qualifiedIncome: makeFromInt 99225, itemizedDeductions: makeFromInt 6987, federalTaxDue: makeFromInt 3589, stateTaxDue: makeFromInt 5448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3360, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34094, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16480, federalTaxDue: makeFromInt 1379, stateTaxDue: makeFromInt 1330 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16138, ordinaryIncomeNonSS: makeFromInt 94660, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18054, stateTaxDue: makeFromInt 4481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115785, qualifiedIncome: makeFromInt 66602, itemizedDeductions: makeFromInt 29391, federalTaxDue: makeFromInt 33447, stateTaxDue: makeFromInt 8873 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50237, qualifiedIncome: makeFromInt 4661, itemizedDeductions: makeFromInt 23817, federalTaxDue: makeFromInt 11479, stateTaxDue: makeFromInt 2290 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82103, qualifiedIncome: makeFromInt 22784, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10706, stateTaxDue: makeFromInt 4900 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9945, ordinaryIncomeNonSS: makeFromInt 60522, qualifiedIncome: makeFromInt 7425, itemizedDeductions: makeFromInt 23124, federalTaxDue: makeFromInt 5209, stateTaxDue: makeFromInt 2822 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15973, ordinaryIncomeNonSS: makeFromInt 107815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9628, federalTaxDue: makeFromInt 24262, stateTaxDue: makeFromInt 9916 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 834, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18433, itemizedDeductions: makeFromInt 1045, federalTaxDue: makeFromInt 27702, stateTaxDue: makeFromInt 8167 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6928, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30138, ordinaryIncomeNonSS: makeFromInt 84089, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18329, stateTaxDue: makeFromInt 3942 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44779, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79950, itemizedDeductions: makeFromInt 3778, federalTaxDue: makeFromInt 11184, stateTaxDue: makeFromInt 3731 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36306, ordinaryIncomeNonSS: makeFromInt 41028, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4092, stateTaxDue: makeFromInt 1676 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79119, itemizedDeductions: makeFromInt 4477, federalTaxDue: makeFromInt 5808, stateTaxDue: makeFromInt 3501 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30754, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12688, federalTaxDue: makeFromInt 14956, stateTaxDue: makeFromInt 6143 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24704, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18078, itemizedDeductions: makeFromInt 3933, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 229 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26972, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6943, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2442, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27572, stateTaxDue: makeFromInt 7814 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18647, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41009, itemizedDeductions: makeFromInt 20227, federalTaxDue: makeFromInt 29125, stateTaxDue: makeFromInt 9293 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146996, qualifiedIncome: makeFromInt 2930, itemizedDeductions: makeFromInt 15872, federalTaxDue: makeFromInt 18007, stateTaxDue: makeFromInt 6821 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46909, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16416, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33260, stateTaxDue: makeFromInt 7746 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48357, ordinaryIncomeNonSS: makeFromInt 111832, qualifiedIncome: makeFromInt 52055, itemizedDeductions: makeFromInt 3362, federalTaxDue: makeFromInt 29741, stateTaxDue: makeFromInt 7819 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84497, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7482, stateTaxDue: makeFromInt 3650 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58717, qualifiedIncome: makeFromInt 40293, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6442, stateTaxDue: makeFromInt 4601 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24539, itemizedDeductions: makeFromInt 199, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2928, federalTaxDue: makeFromInt 16169, stateTaxDue: makeFromInt 5424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111690, qualifiedIncome: makeFromInt 41717, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23785, stateTaxDue: makeFromInt 7171 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81024, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7686, stateTaxDue: makeFromInt 3683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18505, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108533, qualifiedIncome: makeFromInt 43019, itemizedDeductions: makeFromInt 24000, federalTaxDue: makeFromInt 28735, stateTaxDue: makeFromInt 7003 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13496, ordinaryIncomeNonSS: makeFromInt 21757, qualifiedIncome: makeFromInt 39241, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 873, stateTaxDue: makeFromInt 2675 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108057, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13525, federalTaxDue: makeFromInt 14163, stateTaxDue: makeFromInt 5062 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57831, itemizedDeductions: makeFromInt 27622, federalTaxDue: makeFromInt 3027, stateTaxDue: makeFromInt 2521 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2777, qualifiedIncome: makeFromInt 36639, itemizedDeductions: makeFromInt 15986, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19974, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25095, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 729 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29011, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67683, qualifiedIncome: makeFromInt 98230, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16342, stateTaxDue: makeFromInt 7721 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20770, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18768, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25377, stateTaxDue: makeFromInt 7763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7788, qualifiedIncome: makeFromInt 20721, itemizedDeductions: makeFromInt 11554, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1005 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52703, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40044, stateTaxDue: makeFromInt 10113 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126288, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28940, federalTaxDue: makeFromInt 14867, stateTaxDue: makeFromInt 5992 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15203, ordinaryIncomeNonSS: makeFromInt 79690, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10229, federalTaxDue: makeFromInt 13881, stateTaxDue: makeFromInt 3717 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84144, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12944, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23386, ordinaryIncomeNonSS: makeFromInt 4846, qualifiedIncome: makeFromInt 7884, itemizedDeductions: makeFromInt 23698, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 62 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111469, qualifiedIncome: makeFromInt 71541, itemizedDeductions: makeFromInt 29051, federalTaxDue: makeFromInt 22045, stateTaxDue: makeFromInt 8905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89516, qualifiedIncome: makeFromInt 38015, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10120, stateTaxDue: makeFromInt 6055 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113267, qualifiedIncome: makeFromInt 49857, itemizedDeductions: makeFromInt 5832, federalTaxDue: makeFromInt 20182, stateTaxDue: makeFromInt 7781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2481, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65269, qualifiedIncome: makeFromInt 95066, itemizedDeductions: makeFromInt 8943, federalTaxDue: makeFromInt 23100, stateTaxDue: makeFromInt 7953 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1955, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5052, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30576, itemizedDeductions: makeFromInt 19393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1074 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27004, federalTaxDue: makeFromInt 3156, stateTaxDue: makeFromInt 2487 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55616, qualifiedIncome: makeFromInt 58247, itemizedDeductions: makeFromInt 27010, federalTaxDue: makeFromInt 11714, stateTaxDue: makeFromInt 5018 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 761, ordinaryIncomeNonSS: makeFromInt 39627, qualifiedIncome: makeFromInt 33156, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4695, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10388, ordinaryIncomeNonSS: makeFromInt 35010, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26636, federalTaxDue: makeFromInt 1724, stateTaxDue: makeFromInt 1376 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42534, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37894, ordinaryIncomeNonSS: makeFromInt 21685, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2707, federalTaxDue: makeFromInt 20031, stateTaxDue: makeFromInt 5923 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93924, itemizedDeductions: makeFromInt 29138, federalTaxDue: makeFromInt 8029, stateTaxDue: makeFromInt 4241 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30679, ordinaryIncomeNonSS: makeFromInt 69543, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15770, federalTaxDue: makeFromInt 21375, stateTaxDue: makeFromInt 7802 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28696, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66863, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5509, stateTaxDue: makeFromInt 3088 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44454, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60785, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6295, stateTaxDue: makeFromInt 2784 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144691, qualifiedIncome: makeFromInt 16605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20672, stateTaxDue: makeFromInt 7701 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11966, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24308, qualifiedIncome: makeFromInt 25673, itemizedDeductions: makeFromInt 14303, federalTaxDue: makeFromInt 3481, stateTaxDue: makeFromInt 2080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38041, itemizedDeductions: makeFromInt 18510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1527 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35975, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11992, federalTaxDue: makeFromInt 25405, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10540, qualifiedIncome: makeFromInt 36268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5517, stateTaxDue: makeFromInt 1959 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57717, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12449, stateTaxDue: makeFromInt 2571 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46251, ordinaryIncomeNonSS: makeFromInt 38068, qualifiedIncome: makeFromInt 26197, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9970, stateTaxDue: makeFromInt 2958 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134432, qualifiedIncome: makeFromInt 12319, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25023, stateTaxDue: makeFromInt 7056 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18086, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78486, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4213, stateTaxDue: makeFromInt 3452 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138437, qualifiedIncome: makeFromInt 85281, itemizedDeductions: makeFromInt 28908, federalTaxDue: makeFromInt 40387, stateTaxDue: makeFromInt 10811 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94680, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15114, federalTaxDue: makeFromInt 7093, stateTaxDue: makeFromInt 4259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67108, qualifiedIncome: makeFromInt 425, itemizedDeductions: makeFromInt 27330, federalTaxDue: makeFromInt 4432, stateTaxDue: makeFromInt 2995 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138652, qualifiedIncome: makeFromInt 33646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23040, stateTaxDue: makeFromInt 8134 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4165, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131442, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24622, federalTaxDue: makeFromInt 36813, stateTaxDue: makeFromInt 11579 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34898, ordinaryIncomeNonSS: makeFromInt 33329, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27160, federalTaxDue: makeFromInt 1793, stateTaxDue: makeFromInt 1047 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1405, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79132, itemizedDeductions: makeFromInt 6656, federalTaxDue: makeFromInt 36578, stateTaxDue: makeFromInt 11135 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2376, ordinaryIncomeNonSS: makeFromInt 12272, qualifiedIncome: makeFromInt 29685, itemizedDeductions: makeFromInt 17588, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1843 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46384, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73080, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43245, stateTaxDue: makeFromInt 10899 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27804, ordinaryIncomeNonSS: makeFromInt 101857, qualifiedIncome: makeFromInt 70492, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35850, stateTaxDue: makeFromInt 8565 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87976, itemizedDeductions: makeFromInt 24739, federalTaxDue: makeFromInt 35053, stateTaxDue: makeFromInt 11524 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28599, itemizedDeductions: makeFromInt 16285, federalTaxDue: makeFromInt 38707, stateTaxDue: makeFromInt 8555 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22975, ordinaryIncomeNonSS: makeFromInt 108504, qualifiedIncome: makeFromInt 96103, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33910, stateTaxDue: makeFromInt 9975 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38576, itemizedDeductions: makeFromInt 17309, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1554 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19207, federalTaxDue: makeFromInt 34437, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16497, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35308, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57579, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24513, stateTaxDue: makeFromInt 9704 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18732, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25468, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80676, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10362, stateTaxDue: makeFromInt 3579 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145356, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26234, stateTaxDue: makeFromInt 6985 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24871, federalTaxDue: makeFromInt 25226, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85508, itemizedDeductions: makeFromInt 12242, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25774, ordinaryIncomeNonSS: makeFromInt 15166, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7577, federalTaxDue: makeFromInt 9321, stateTaxDue: makeFromInt 5323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49616, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39864, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94299, itemizedDeductions: makeFromInt 27013, federalTaxDue: makeFromInt 7823, stateTaxDue: makeFromInt 4340 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34580, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1354 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3220, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62961, qualifiedIncome: makeFromInt 79626, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16862, stateTaxDue: makeFromInt 6674 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18425, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 546 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49740, ordinaryIncomeNonSS: makeFromInt 104907, qualifiedIncome: makeFromInt 72816, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29141, stateTaxDue: makeFromInt 8411 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28339, ordinaryIncomeNonSS: makeFromInt 113767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21852, stateTaxDue: makeFromInt 5233 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48751, ordinaryIncomeNonSS: makeFromInt 32916, qualifiedIncome: makeFromInt 68270, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22013, stateTaxDue: makeFromInt 4936 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34704, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12307, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19877, ordinaryIncomeNonSS: makeFromInt 46733, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4355, stateTaxDue: makeFromInt 1962 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31896, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141750, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9550, federalTaxDue: makeFromInt 37787, stateTaxDue: makeFromInt 11633 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28332, ordinaryIncomeNonSS: makeFromInt 45728, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4595, federalTaxDue: makeFromInt 3885, stateTaxDue: makeFromInt 1811 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43824, ordinaryIncomeNonSS: makeFromInt 21062, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15573, federalTaxDue: makeFromInt 45, stateTaxDue: makeFromInt 578 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36219, qualifiedIncome: makeFromInt 5558, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7095, stateTaxDue: makeFromInt 1834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29126, itemizedDeductions: makeFromInt 19580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 935 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8029, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22795, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85960, itemizedDeductions: makeFromInt 5562, federalTaxDue: makeFromInt 7104, stateTaxDue: makeFromInt 4160 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131140, qualifiedIncome: makeFromInt 73855, itemizedDeductions: makeFromInt 27177, federalTaxDue: makeFromInt 27745, stateTaxDue: makeFromInt 10026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49055, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24345, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3808, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34437, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8201, federalTaxDue: makeFromInt 25118, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54549, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4267, stateTaxDue: makeFromInt 2272 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38375, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44475, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16572, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8869, federalTaxDue: makeFromInt 24609, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28541, ordinaryIncomeNonSS: makeFromInt 10536, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12720, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98754, qualifiedIncome: makeFromInt 68907, itemizedDeductions: makeFromInt 13361, federalTaxDue: makeFromInt 35594, stateTaxDue: makeFromInt 8204 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6276, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62253, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30583, ordinaryIncomeNonSS: makeFromInt 37560, qualifiedIncome: makeFromInt 42814, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9209, stateTaxDue: makeFromInt 3644 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3216, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43642, ordinaryIncomeNonSS: makeFromInt 86754, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20281, stateTaxDue: makeFromInt 3996 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16280, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 997, ordinaryIncomeNonSS: makeFromInt 104847, qualifiedIncome: makeFromInt 23008, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18116, stateTaxDue: makeFromInt 6138 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3816, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28117, ordinaryIncomeNonSS: makeFromInt 113440, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33189, stateTaxDue: makeFromInt 10097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62725, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1938, federalTaxDue: makeFromInt 6413, stateTaxDue: makeFromInt 2881 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36200, ordinaryIncomeNonSS: makeFromInt 31395, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12125, stateTaxDue: makeFromInt 6095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17073, ordinaryIncomeNonSS: makeFromInt 144733, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34727, stateTaxDue: makeFromInt 7157 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42156, qualifiedIncome: makeFromInt 22794, itemizedDeductions: makeFromInt 22367, federalTaxDue: makeFromInt 1779, stateTaxDue: makeFromInt 2673 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39409, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 189 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34144, ordinaryIncomeNonSS: makeFromInt 137457, qualifiedIncome: makeFromInt 63469, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37124, stateTaxDue: makeFromInt 9671 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16799, ordinaryIncomeNonSS: makeFromInt 120025, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12773, federalTaxDue: makeFromInt 37940, stateTaxDue: makeFromInt 10546 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13122, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40424, stateTaxDue: makeFromInt 7885 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30018, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89923, itemizedDeductions: makeFromInt 24620, federalTaxDue: makeFromInt 7019, stateTaxDue: makeFromInt 4041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18127, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47539, itemizedDeductions: makeFromInt 26746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1874 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5336, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6725, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15567, itemizedDeductions: makeFromInt 2393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45908, ordinaryIncomeNonSS: makeFromInt 47302, qualifiedIncome: makeFromInt 69786, itemizedDeductions: makeFromInt 4843, federalTaxDue: makeFromInt 23009, stateTaxDue: makeFromInt 5625 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24024, ordinaryIncomeNonSS: makeFromInt 95714, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12711, federalTaxDue: makeFromInt 15638, stateTaxDue: makeFromInt 4411 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19064, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27392, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40108, ordinaryIncomeNonSS: makeFromInt 114744, qualifiedIncome: makeFromInt 64662, itemizedDeductions: makeFromInt 8413, federalTaxDue: makeFromInt 34288, stateTaxDue: makeFromInt 8701 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38544, ordinaryIncomeNonSS: makeFromInt 36237, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4804, stateTaxDue: makeFromInt 1357 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3617, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21771, stateTaxDue: makeFromInt 7306 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115152, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29745, stateTaxDue: makeFromInt 5444 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44288, qualifiedIncome: makeFromInt 694, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1429, stateTaxDue: makeFromInt 1774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 59039, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41711, ordinaryIncomeNonSS: makeFromInt 64415, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11877, stateTaxDue: makeFromInt 2734 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33365, ordinaryIncomeNonSS: makeFromInt 95572, qualifiedIncome: makeFromInt 35431, itemizedDeductions: makeFromInt 13926, federalTaxDue: makeFromInt 25659, stateTaxDue: makeFromInt 6095 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145389, qualifiedIncome: makeFromInt 65156, itemizedDeductions: makeFromInt 24036, federalTaxDue: makeFromInt 29895, stateTaxDue: makeFromInt 9952 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2938, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63028, itemizedDeductions: makeFromInt 19827, federalTaxDue: makeFromInt 34338, stateTaxDue: makeFromInt 10396 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37513, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34671, stateTaxDue: makeFromInt 8993 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3995, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54615, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2256 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28626, ordinaryIncomeNonSS: makeFromInt 112068, qualifiedIncome: makeFromInt 36690, itemizedDeductions: makeFromInt 13651, federalTaxDue: makeFromInt 29253, stateTaxDue: makeFromInt 7362 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19704, ordinaryIncomeNonSS: makeFromInt 72438, qualifiedIncome: makeFromInt 8382, itemizedDeductions: makeFromInt 8368, federalTaxDue: makeFromInt 7386, stateTaxDue: makeFromInt 3435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81044, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3274, stateTaxDue: makeFromInt 3480 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29938, ordinaryIncomeNonSS: makeFromInt 72418, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7475, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36311, qualifiedIncome: makeFromInt 93531, itemizedDeductions: makeFromInt 13187, federalTaxDue: makeFromInt 10947, stateTaxDue: makeFromInt 6071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21001, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69431, qualifiedIncome: makeFromInt 82934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11527, stateTaxDue: makeFromInt 7143 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9872, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110751, qualifiedIncome: makeFromInt 80473, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22274, stateTaxDue: makeFromInt 9086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15594, ordinaryIncomeNonSS: makeFromInt 37334, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9188, federalTaxDue: makeFromInt 20094, stateTaxDue: makeFromInt 6780 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126279, qualifiedIncome: makeFromInt 27598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25856, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39111, itemizedDeductions: makeFromInt 26909, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1381 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42474, itemizedDeductions: makeFromInt 11889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1669 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38049, ordinaryIncomeNonSS: makeFromInt 71566, qualifiedIncome: makeFromInt 88568, itemizedDeductions: makeFromInt 438, federalTaxDue: makeFromInt 17826, stateTaxDue: makeFromInt 7332 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49479, ordinaryIncomeNonSS: makeFromInt 68849, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2672, federalTaxDue: makeFromInt 21193, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13370, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5627, federalTaxDue: makeFromInt 18841, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65681, qualifiedIncome: makeFromInt 23851, itemizedDeductions: makeFromInt 1557, federalTaxDue: makeFromInt 10726, stateTaxDue: makeFromInt 4022 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97990, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10231, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65942, qualifiedIncome: makeFromInt 68625, itemizedDeductions: makeFromInt 27888, federalTaxDue: makeFromInt 12246, stateTaxDue: makeFromInt 6153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5265, itemizedDeductions: makeFromInt 22917, federalTaxDue: makeFromInt 23091, stateTaxDue: makeFromInt 7470 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81361, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10177, federalTaxDue: makeFromInt 24074, stateTaxDue: makeFromInt 8613 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39861, ordinaryIncomeNonSS: makeFromInt 9942, qualifiedIncome: makeFromInt 18820, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33115, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12496, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92010, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1802, stateTaxDue: makeFromInt 4126 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39747, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95540, itemizedDeductions: makeFromInt 11226, federalTaxDue: makeFromInt 47206, stateTaxDue: makeFromInt 11822 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26954, ordinaryIncomeNonSS: makeFromInt 94760, qualifiedIncome: makeFromInt 69200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24053, stateTaxDue: makeFromInt 7823 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31560, ordinaryIncomeNonSS: makeFromInt 78883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14430, stateTaxDue: makeFromInt 3689 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22615, ordinaryIncomeNonSS: makeFromInt 112751, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16323, stateTaxDue: makeFromInt 5098 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3914, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125799, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15990, stateTaxDue: makeFromInt 5835 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20550, ordinaryIncomeNonSS: makeFromInt 103623, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9667, federalTaxDue: makeFromInt 21141, stateTaxDue: makeFromInt 4938 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5472, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25588, stateTaxDue: makeFromInt 7519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31264, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12580, federalTaxDue: makeFromInt 5286, stateTaxDue: makeFromInt 1370 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44653, ordinaryIncomeNonSS: makeFromInt 127970, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28400, stateTaxDue: makeFromInt 6180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12294, stateTaxDue: makeFromInt 5061 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26590, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148375, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46684, stateTaxDue: makeFromInt 12443 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4355, ordinaryIncomeNonSS: makeFromInt 87510, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10655, stateTaxDue: makeFromInt 4116 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11959, ordinaryIncomeNonSS: makeFromInt 95823, qualifiedIncome: makeFromInt 21124, itemizedDeductions: makeFromInt 5899, federalTaxDue: makeFromInt 18799, stateTaxDue: makeFromInt 5536 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32803, ordinaryIncomeNonSS: makeFromInt 76815, qualifiedIncome: makeFromInt 76005, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16155, stateTaxDue: makeFromInt 6966 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11738, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35694, qualifiedIncome: makeFromInt 98448, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19788, stateTaxDue: makeFromInt 6494 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27339, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41954, ordinaryIncomeNonSS: makeFromInt 19290, qualifiedIncome: makeFromInt 288, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2388, stateTaxDue: makeFromInt 774 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37649, ordinaryIncomeNonSS: makeFromInt 134449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25595, stateTaxDue: makeFromInt 6267 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28504, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28998, federalTaxDue: makeFromInt 27753, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44832, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60465, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1384, stateTaxDue: makeFromInt 2448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31043, ordinaryIncomeNonSS: makeFromInt 23217, qualifiedIncome: makeFromInt 59046, itemizedDeductions: makeFromInt 9265, federalTaxDue: makeFromInt 6650, stateTaxDue: makeFromInt 3645 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10201, ordinaryIncomeNonSS: makeFromInt 58180, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5881, stateTaxDue: makeFromInt 2654 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71766, itemizedDeductions: makeFromInt 19464, federalTaxDue: makeFromInt 2865, stateTaxDue: makeFromInt 3113 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37507, qualifiedIncome: makeFromInt 88245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24138, stateTaxDue: makeFromInt 5985 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52028, qualifiedIncome: makeFromInt 44654, itemizedDeductions: makeFromInt 11294, federalTaxDue: makeFromInt 17376, stateTaxDue: makeFromInt 4259 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22923, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34067, ordinaryIncomeNonSS: makeFromInt 48380, qualifiedIncome: makeFromInt 1218, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5518, stateTaxDue: makeFromInt 2060 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16529, ordinaryIncomeNonSS: makeFromInt 130613, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14390, federalTaxDue: makeFromInt 28324, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131702, qualifiedIncome: makeFromInt 6669, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35380, stateTaxDue: makeFromInt 6629 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2129, federalTaxDue: makeFromInt 330, stateTaxDue: makeFromInt 760 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70613, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7769, stateTaxDue: makeFromInt 3076 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94720, itemizedDeductions: makeFromInt 9754, federalTaxDue: makeFromInt 33046, stateTaxDue: makeFromInt 11761 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31842, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16732, itemizedDeductions: makeFromInt 26177, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 362 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8797, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7334, stateTaxDue: makeFromInt 3218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95194, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33514, stateTaxDue: makeFromInt 11954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34235, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18415, federalTaxDue: makeFromInt 28699, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27526, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18562, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1966 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35151, ordinaryIncomeNonSS: makeFromInt 28967, qualifiedIncome: makeFromInt 67637, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15572, stateTaxDue: makeFromInt 4580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36747, ordinaryIncomeNonSS: makeFromInt 44950, qualifiedIncome: makeFromInt 71850, itemizedDeductions: makeFromInt 21181, federalTaxDue: makeFromInt 17813, stateTaxDue: makeFromInt 5610 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79030, itemizedDeductions: makeFromInt 13405, federalTaxDue: makeFromInt 33082, stateTaxDue: makeFromInt 11077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20175, stateTaxDue: makeFromInt 4074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4139, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19569, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9234, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12695, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11737, ordinaryIncomeNonSS: makeFromInt 127682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13161, stateTaxDue: makeFromInt 5909 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26117, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19794, stateTaxDue: makeFromInt 8131 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15876, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95518, qualifiedIncome: makeFromInt 74380, itemizedDeductions: makeFromInt 15867, federalTaxDue: makeFromInt 37207, stateTaxDue: makeFromInt 8440 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73207, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4395, federalTaxDue: makeFromInt 4631, stateTaxDue: makeFromInt 3185 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29038, stateTaxDue: makeFromInt 5900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20778, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56204, qualifiedIncome: makeFromInt 72503, itemizedDeductions: makeFromInt 1939, federalTaxDue: makeFromInt 20375, stateTaxDue: makeFromInt 6060 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22781, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10566, itemizedDeductions: makeFromInt 14482, federalTaxDue: makeFromInt 24073, stateTaxDue: makeFromInt 7553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60294, itemizedDeductions: makeFromInt 29647, federalTaxDue: makeFromInt 674, stateTaxDue: makeFromInt 2440 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9008, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 5195 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36883, ordinaryIncomeNonSS: makeFromInt 53177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15881, federalTaxDue: makeFromInt 5974, stateTaxDue: makeFromInt 1984 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49769, itemizedDeductions: makeFromInt 17558, federalTaxDue: makeFromInt 33816, stateTaxDue: makeFromInt 9841 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18883, ordinaryIncomeNonSS: makeFromInt 51532, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4170, stateTaxDue: makeFromInt 2002 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81955, itemizedDeductions: makeFromInt 17713, federalTaxDue: makeFromInt 5041, stateTaxDue: makeFromInt 3643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18433, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5262, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12232, federalTaxDue: makeFromInt 41308, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11328, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69564, itemizedDeductions: makeFromInt 25268, federalTaxDue: makeFromInt 1472, stateTaxDue: makeFromInt 2903 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36052, qualifiedIncome: makeFromInt 78652, itemizedDeductions: makeFromInt 16248, federalTaxDue: makeFromInt 20253, stateTaxDue: makeFromInt 5280 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33074, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33616, stateTaxDue: makeFromInt 8990 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46699, ordinaryIncomeNonSS: makeFromInt 93210, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12115, stateTaxDue: makeFromInt 4186 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66752, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8956, stateTaxDue: makeFromInt 2863 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28455, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 968 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21913, ordinaryIncomeNonSS: makeFromInt 92747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14136, federalTaxDue: makeFromInt 15676, stateTaxDue: makeFromInt 4182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45679, ordinaryIncomeNonSS: makeFromInt 144136, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34732, stateTaxDue: makeFromInt 7127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77237, itemizedDeductions: makeFromInt 1093, federalTaxDue: makeFromInt 4026, stateTaxDue: makeFromInt 3592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91982, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41400, stateTaxDue: makeFromInt 11913 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17849, ordinaryIncomeNonSS: makeFromInt 124935, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24872, stateTaxDue: makeFromInt 5885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53527, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6565, stateTaxDue: makeFromInt 2505 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45193, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34271, itemizedDeductions: makeFromInt 8680, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1039 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3667, federalTaxDue: makeFromInt 25691, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30332, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41827, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46465, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1868 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114913, qualifiedIncome: makeFromInt 84967, itemizedDeductions: makeFromInt 25161, federalTaxDue: makeFromInt 27184, stateTaxDue: makeFromInt 9847 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28778, federalTaxDue: makeFromInt 20201, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18711, federalTaxDue: makeFromInt 33678, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5831, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17777, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24361, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27897, stateTaxDue: makeFromInt 8444 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32059, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34791, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1122 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79296, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8450, stateTaxDue: makeFromInt 3595 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69172, qualifiedIncome: makeFromInt 80697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20358, stateTaxDue: makeFromInt 7297 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21524, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31180, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146494, qualifiedIncome: makeFromInt 15688, itemizedDeductions: makeFromInt 6375, federalTaxDue: makeFromInt 28758, stateTaxDue: makeFromInt 7968 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30682, ordinaryIncomeNonSS: makeFromInt 116666, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4853, federalTaxDue: makeFromInt 22837, stateTaxDue: makeFromInt 5603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26908, ordinaryIncomeNonSS: makeFromInt 68443, qualifiedIncome: makeFromInt 17461, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12358, stateTaxDue: makeFromInt 3830 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89473, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26633, federalTaxDue: makeFromInt 7146, stateTaxDue: makeFromInt 3999 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31093, ordinaryIncomeNonSS: makeFromInt 52321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5393, stateTaxDue: makeFromInt 2141 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21257, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 488 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40082, stateTaxDue: makeFromInt 11777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34687, itemizedDeductions: makeFromInt 19715, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1116 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27690, ordinaryIncomeNonSS: makeFromInt 47579, qualifiedIncome: makeFromInt 81396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7897, stateTaxDue: makeFromInt 5774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7642, ordinaryIncomeNonSS: makeFromInt 118250, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23483, federalTaxDue: makeFromInt 10700, stateTaxDue: makeFromInt 5238 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34346, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1242 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36230, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93891, itemizedDeductions: makeFromInt 9488, federalTaxDue: makeFromInt 13102, stateTaxDue: makeFromInt 4564 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63704, itemizedDeductions: makeFromInt 15714, federalTaxDue: makeFromInt 32317, stateTaxDue: makeFromInt 10348 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 63, ordinaryIncomeNonSS: makeFromInt 114680, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 748, federalTaxDue: makeFromInt 16415, stateTaxDue: makeFromInt 5279 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36690, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53968, itemizedDeductions: makeFromInt 22762, federalTaxDue: makeFromInt 535, stateTaxDue: makeFromInt 2202 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57649, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1395, stateTaxDue: makeFromInt 2627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37524, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33808, stateTaxDue: makeFromInt 9115 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77783, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46634, stateTaxDue: makeFromInt 11134 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29602, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86969, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18616, federalTaxDue: makeFromInt 17209, stateTaxDue: makeFromInt 8883 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27416, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54133, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40420, stateTaxDue: makeFromInt 9952 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10287, ordinaryIncomeNonSS: makeFromInt 78246, qualifiedIncome: makeFromInt 73532, itemizedDeductions: makeFromInt 4132, federalTaxDue: makeFromInt 21342, stateTaxDue: makeFromInt 7334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43618, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73162, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 736, stateTaxDue: makeFromInt 3078 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12242, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46061, ordinaryIncomeNonSS: makeFromInt 57583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8589, federalTaxDue: makeFromInt 7096, stateTaxDue: makeFromInt 2204 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34825, ordinaryIncomeNonSS: makeFromInt 127680, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30603, stateTaxDue: makeFromInt 6165 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25879, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84111, itemizedDeductions: makeFromInt 18472, federalTaxDue: makeFromInt 4876, stateTaxDue: makeFromInt 3831 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30170, stateTaxDue: makeFromInt 8758 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6211, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 56 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59114, qualifiedIncome: makeFromInt 6579, itemizedDeductions: makeFromInt 18917, federalTaxDue: makeFromInt 4755, stateTaxDue: makeFromInt 3004 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2334, ordinaryIncomeNonSS: makeFromInt 35385, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8505, stateTaxDue: makeFromInt 6394 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4602, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49030, itemizedDeductions: makeFromInt 20123, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1848 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7307, ordinaryIncomeNonSS: makeFromInt 80182, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14098, federalTaxDue: makeFromInt 18667, stateTaxDue: makeFromInt 8334 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47978, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25693, itemizedDeductions: makeFromInt 5322, federalTaxDue: makeFromInt 83, stateTaxDue: makeFromInt 1030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5537, ordinaryIncomeNonSS: makeFromInt 46987, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12194, stateTaxDue: makeFromInt 6974 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19325, itemizedDeductions: makeFromInt 5384, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 391 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124697, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31141, stateTaxDue: makeFromInt 10980 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3814, ordinaryIncomeNonSS: makeFromInt 148343, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22027, stateTaxDue: makeFromInt 6962 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23826, ordinaryIncomeNonSS: makeFromInt 103337, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12868, stateTaxDue: makeFromInt 4492 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106832, qualifiedIncome: makeFromInt 3432, itemizedDeductions: makeFromInt 5913, federalTaxDue: makeFromInt 16462, stateTaxDue: makeFromInt 5058 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63477, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2828, stateTaxDue: makeFromInt 2719 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71945, itemizedDeductions: makeFromInt 8847, federalTaxDue: makeFromInt 4732, stateTaxDue: makeFromInt 3142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1443, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88453, itemizedDeductions: makeFromInt 7195, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3948 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52179, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4487, stateTaxDue: makeFromInt 2008 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7501, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29495, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1100 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29019, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 760, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1813, stateTaxDue: makeFromInt 2767 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8272, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37588, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146905, qualifiedIncome: makeFromInt 5003, itemizedDeductions: makeFromInt 20747, federalTaxDue: makeFromInt 18705, stateTaxDue: makeFromInt 7095 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4027, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26987, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23062, itemizedDeductions: makeFromInt 20057, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141647, qualifiedIncome: makeFromInt 12214, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24595, stateTaxDue: makeFromInt 7438 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56503, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10318, federalTaxDue: makeFromInt 5730, stateTaxDue: makeFromInt 2453 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39742, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3336, stateTaxDue: makeFromInt 1312 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26709, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45214, ordinaryIncomeNonSS: makeFromInt 117852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6540, federalTaxDue: makeFromInt 29295, stateTaxDue: makeFromInt 5582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26410, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2560, stateTaxDue: makeFromInt 4058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7675, ordinaryIncomeNonSS: makeFromInt 18694, qualifiedIncome: makeFromInt 7388, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 780, stateTaxDue: makeFromInt 983 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6873, ordinaryIncomeNonSS: makeFromInt 50329, qualifiedIncome: makeFromInt 10036, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6477, stateTaxDue: makeFromInt 2763 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19143, ordinaryIncomeNonSS: makeFromInt 61155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5796, federalTaxDue: makeFromInt 7435, stateTaxDue: makeFromInt 2543 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31092, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22155, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42795, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48654, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4706, stateTaxDue: makeFromInt 2178 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6503, ordinaryIncomeNonSS: makeFromInt 53058, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2700, federalTaxDue: makeFromInt 3769, stateTaxDue: makeFromInt 2053 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3170, ordinaryIncomeNonSS: makeFromInt 34899, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3613, stateTaxDue: makeFromInt 1556 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48849, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30125, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18402, stateTaxDue: makeFromInt 5251 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43202, ordinaryIncomeNonSS: makeFromInt 62363, qualifiedIncome: makeFromInt 40630, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17357, stateTaxDue: makeFromInt 4575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93419, qualifiedIncome: makeFromInt 40312, itemizedDeductions: makeFromInt 2937, federalTaxDue: makeFromInt 20362, stateTaxDue: makeFromInt 6473 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57278, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28500, stateTaxDue: makeFromInt 9989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47707, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83977, itemizedDeductions: makeFromInt 1012, federalTaxDue: makeFromInt 43738, stateTaxDue: makeFromInt 11280 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112720, qualifiedIncome: makeFromInt 3431, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23465, stateTaxDue: makeFromInt 5577 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28761, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11771, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46685, ordinaryIncomeNonSS: makeFromInt 135036, qualifiedIncome: makeFromInt 15756, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29943, stateTaxDue: makeFromInt 7285 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30760, ordinaryIncomeNonSS: makeFromInt 107434, qualifiedIncome: makeFromInt 3038, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21093, stateTaxDue: makeFromInt 5287 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32160, qualifiedIncome: makeFromInt 30902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12234, stateTaxDue: makeFromInt 2698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20731, itemizedDeductions: makeFromInt 14565, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48813, ordinaryIncomeNonSS: makeFromInt 95467, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29215, federalTaxDue: makeFromInt 18612, stateTaxDue: makeFromInt 4478 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89338, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4438, stateTaxDue: makeFromInt 4092 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16859, federalTaxDue: makeFromInt 39591, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121571, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21353, stateTaxDue: makeFromInt 5853 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44518, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12047, federalTaxDue: makeFromInt 6880, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43750, ordinaryIncomeNonSS: makeFromInt 31402, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3397, stateTaxDue: makeFromInt 1173 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2911, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17075, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27922, stateTaxDue: makeFromInt 8099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20238, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12761, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20641, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 475 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12953, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 255, stateTaxDue: makeFromInt 436 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6254, ordinaryIncomeNonSS: makeFromInt 28858, qualifiedIncome: makeFromInt 67655, itemizedDeductions: makeFromInt 29318, federalTaxDue: makeFromInt 5362, stateTaxDue: makeFromInt 4571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14165, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 172 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147750, qualifiedIncome: makeFromInt 86537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37019, stateTaxDue: makeFromInt 11602 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36266, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27068, federalTaxDue: makeFromInt 47089, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37170, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68405, qualifiedIncome: makeFromInt 7182, itemizedDeductions: makeFromInt 15842, federalTaxDue: makeFromInt 16044, stateTaxDue: makeFromInt 3474 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48606, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32171, stateTaxDue: makeFromInt 9680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131820, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33740, stateTaxDue: makeFromInt 11476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33326, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31336, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34116, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31011, stateTaxDue: makeFromInt 8839 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30609, ordinaryIncomeNonSS: makeFromInt 2085, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81222, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4623, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5143, stateTaxDue: makeFromInt 2935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16018, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84030, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5045, stateTaxDue: makeFromInt 3735 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3333, ordinaryIncomeNonSS: makeFromInt 51288, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2252, stateTaxDue: makeFromInt 1889 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39200, qualifiedIncome: makeFromInt 84683, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5290, stateTaxDue: makeFromInt 5819 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22341, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83137, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7706, stateTaxDue: makeFromInt 3702 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21771, ordinaryIncomeNonSS: makeFromInt 21026, qualifiedIncome: makeFromInt 8862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1078, stateTaxDue: makeFromInt 919 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14187, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 5423 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6306, ordinaryIncomeNonSS: makeFromInt 16239, qualifiedIncome: makeFromInt 83057, itemizedDeductions: makeFromInt 11675, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4490 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45428, ordinaryIncomeNonSS: makeFromInt 102864, qualifiedIncome: makeFromInt 51003, itemizedDeductions: makeFromInt 9415, federalTaxDue: makeFromInt 30372, stateTaxDue: makeFromInt 7238 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 350, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69148, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3078 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7668, ordinaryIncomeNonSS: makeFromInt 104037, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8142, federalTaxDue: makeFromInt 20523, stateTaxDue: makeFromInt 5081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45374, ordinaryIncomeNonSS: makeFromInt 85652, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26007, federalTaxDue: makeFromInt 11033, stateTaxDue: makeFromInt 3715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13648, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16483, itemizedDeductions: makeFromInt 14550, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 392 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30626, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47724, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3762, stateTaxDue: makeFromInt 2131 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92466, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7619, stateTaxDue: makeFromInt 4168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18401, ordinaryIncomeNonSS: makeFromInt 81583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3103, federalTaxDue: makeFromInt 11686, stateTaxDue: makeFromInt 3712 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3417, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52792, stateTaxDue: makeFromInt 11464 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49475, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72790, itemizedDeductions: makeFromInt 29418, federalTaxDue: makeFromInt 8133, stateTaxDue: makeFromInt 3185 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42142, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3981, federalTaxDue: makeFromInt 30222, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24072, ordinaryIncomeNonSS: makeFromInt 66128, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7111, stateTaxDue: makeFromInt 2731 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97277, itemizedDeductions: makeFromInt 25143, federalTaxDue: makeFromInt 6972, stateTaxDue: makeFromInt 4410 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1425, ordinaryIncomeNonSS: makeFromInt 25224, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13500, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25749, federalTaxDue: makeFromInt 20412, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44263, ordinaryIncomeNonSS: makeFromInt 147570, qualifiedIncome: makeFromInt 79090, itemizedDeductions: makeFromInt 11574, federalTaxDue: makeFromInt 35947, stateTaxDue: makeFromInt 10858 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38304, qualifiedIncome: makeFromInt 98425, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12179, stateTaxDue: makeFromInt 6545 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5957, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4751 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142186, qualifiedIncome: makeFromInt 33374, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24359, stateTaxDue: makeFromInt 8403 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137278, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12472, federalTaxDue: makeFromInt 22579, stateTaxDue: makeFromInt 6409 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3942, ordinaryIncomeNonSS: makeFromInt 53630, qualifiedIncome: makeFromInt 99834, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16062, stateTaxDue: makeFromInt 7218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34745, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9528, ordinaryIncomeNonSS: makeFromInt 26291, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 688 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36924, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32299, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17113, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3771, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9384, ordinaryIncomeNonSS: makeFromInt 59234, qualifiedIncome: makeFromInt 95325, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14293, stateTaxDue: makeFromInt 7153 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85534, itemizedDeductions: makeFromInt 13459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3602 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78751, qualifiedIncome: makeFromInt 61027, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28707, stateTaxDue: makeFromInt 6700 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26790, federalTaxDue: makeFromInt 33686, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33127, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14382, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38840, ordinaryIncomeNonSS: makeFromInt 67344, qualifiedIncome: makeFromInt 21648, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11277, stateTaxDue: makeFromInt 3886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75095, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16779, stateTaxDue: makeFromInt 3381 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36489, itemizedDeductions: makeFromInt 10116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41299, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7051, federalTaxDue: makeFromInt 41758, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67221, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4027, stateTaxDue: makeFromInt 2886 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28182, ordinaryIncomeNonSS: makeFromInt 98377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18127, stateTaxDue: makeFromInt 4464 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1334, ordinaryIncomeNonSS: makeFromInt 105102, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25707, federalTaxDue: makeFromInt 25891, stateTaxDue: makeFromInt 9880 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2737, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27272, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46743, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1304, stateTaxDue: makeFromInt 1882 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48776, ordinaryIncomeNonSS: makeFromInt 9854, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4840, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32385, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15648, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12609, ordinaryIncomeNonSS: makeFromInt 80097, qualifiedIncome: makeFromInt 10048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11121, stateTaxDue: makeFromInt 4047 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8593, ordinaryIncomeNonSS: makeFromInt 142458, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26650, stateTaxDue: makeFromInt 6668 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134259, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14816, stateTaxDue: makeFromInt 6398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1272 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6756, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4015, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43036, ordinaryIncomeNonSS: makeFromInt 144592, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32847, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115189, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18337, stateTaxDue: makeFromInt 5222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42735, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6197, ordinaryIncomeNonSS: makeFromInt 140092, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7603, federalTaxDue: makeFromInt 14855, stateTaxDue: makeFromInt 6530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22304, qualifiedIncome: makeFromInt 50019, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1855, stateTaxDue: makeFromInt 3260 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1138 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27362, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 743 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47664, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79674, itemizedDeductions: makeFromInt 23418, federalTaxDue: makeFromInt 42903, stateTaxDue: makeFromInt 11109 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2912, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97321, itemizedDeductions: makeFromInt 25188, federalTaxDue: makeFromInt 3303, stateTaxDue: makeFromInt 4311 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48205, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37379, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71234, qualifiedIncome: makeFromInt 76945, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15694, stateTaxDue: makeFromInt 7108 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22233, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85929, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 387, stateTaxDue: makeFromInt 3622 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23200, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14227, ordinaryIncomeNonSS: makeFromInt 145708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26560, federalTaxDue: makeFromInt 24067, stateTaxDue: makeFromInt 6910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31858, ordinaryIncomeNonSS: makeFromInt 84462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17969, federalTaxDue: makeFromInt 10071, stateTaxDue: makeFromInt 3655 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 34001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4643, federalTaxDue: makeFromInt 2058, stateTaxDue: makeFromInt 1081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36032, ordinaryIncomeNonSS: makeFromInt 105455, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32351, stateTaxDue: makeFromInt 9825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10272, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148694, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31153, stateTaxDue: makeFromInt 12031 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119456, qualifiedIncome: makeFromInt 94437, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38263, stateTaxDue: makeFromInt 10120 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88454, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7393, stateTaxDue: makeFromInt 4168 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14737, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17214, federalTaxDue: makeFromInt 25704, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98380, qualifiedIncome: makeFromInt 95161, itemizedDeductions: makeFromInt 67, federalTaxDue: makeFromInt 36874, stateTaxDue: makeFromInt 9422 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40015, ordinaryIncomeNonSS: makeFromInt 99891, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13236, federalTaxDue: makeFromInt 32365, stateTaxDue: makeFromInt 9420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108681, qualifiedIncome: makeFromInt 72196, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24910, stateTaxDue: makeFromInt 8674 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11946, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28744, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2404, federalTaxDue: makeFromInt 8608, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3206, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132590, qualifiedIncome: makeFromInt 47424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23591, stateTaxDue: makeFromInt 8528 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72273, qualifiedIncome: makeFromInt 86728, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18058, stateTaxDue: makeFromInt 7695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82259, itemizedDeductions: makeFromInt 12308, federalTaxDue: makeFromInt 14070, stateTaxDue: makeFromInt 3971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16148, ordinaryIncomeNonSS: makeFromInt 86428, qualifiedIncome: makeFromInt 3334, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9168, stateTaxDue: makeFromInt 3925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44137, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19025, stateTaxDue: makeFromInt 7127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43695, qualifiedIncome: makeFromInt 91388, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5124, stateTaxDue: makeFromInt 6236 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5713, federalTaxDue: makeFromInt 1653, stateTaxDue: makeFromInt 1246 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67297, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16659, stateTaxDue: makeFromInt 2910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48159, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 906, stateTaxDue: makeFromInt 1176 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44680, itemizedDeductions: makeFromInt 25990, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1728 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28061, ordinaryIncomeNonSS: makeFromInt 12233, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 37 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4529, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 30529, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74024, itemizedDeductions: makeFromInt 29568, federalTaxDue: makeFromInt 1391, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147287, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8543, federalTaxDue: makeFromInt 26215, stateTaxDue: makeFromInt 7083 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5359, ordinaryIncomeNonSS: makeFromInt 83634, qualifiedIncome: makeFromInt 7492, itemizedDeductions: makeFromInt 14413, federalTaxDue: makeFromInt 10244, stateTaxDue: makeFromInt 4219 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6278, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 174 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16734, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27861, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93188, itemizedDeductions: makeFromInt 24151, federalTaxDue: makeFromInt 2683, stateTaxDue: makeFromInt 4100 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37295, ordinaryIncomeNonSS: makeFromInt 74358, qualifiedIncome: makeFromInt 18584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8458, stateTaxDue: makeFromInt 3972 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21095, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16861, stateTaxDue: makeFromInt 5727 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27125, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37326, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1191 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66180, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5009, federalTaxDue: makeFromInt 17477, stateTaxDue: makeFromInt 7734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31203, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10057, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87002, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6357, stateTaxDue: makeFromInt 4095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41130, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5889, federalTaxDue: makeFromInt 13261, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72801, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16497, federalTaxDue: makeFromInt 18359, stateTaxDue: makeFromInt 8364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45216, ordinaryIncomeNonSS: makeFromInt 29101, qualifiedIncome: makeFromInt 30961, itemizedDeductions: makeFromInt 28125, federalTaxDue: makeFromInt 1946, stateTaxDue: makeFromInt 2410 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11444, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29744, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66183, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5391, stateTaxDue: makeFromInt 2927 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68132, itemizedDeductions: makeFromInt 1909, federalTaxDue: makeFromInt 2967, stateTaxDue: makeFromInt 2952 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20045, ordinaryIncomeNonSS: makeFromInt 91882, qualifiedIncome: makeFromInt 65717, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25674, stateTaxDue: makeFromInt 7425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4314, ordinaryIncomeNonSS: makeFromInt 112158, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4975, federalTaxDue: makeFromInt 16336, stateTaxDue: makeFromInt 5271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9774, ordinaryIncomeNonSS: makeFromInt 82011, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10974, federalTaxDue: makeFromInt 7693, stateTaxDue: makeFromInt 3530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27887, ordinaryIncomeNonSS: makeFromInt 35142, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9589, stateTaxDue: makeFromInt 6341 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39955, ordinaryIncomeNonSS: makeFromInt 138538, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24585, federalTaxDue: makeFromInt 26608, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 634, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25147, ordinaryIncomeNonSS: makeFromInt 133358, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24569, federalTaxDue: makeFromInt 23071, stateTaxDue: makeFromInt 6352 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24236, qualifiedIncome: makeFromInt 7013, itemizedDeductions: makeFromInt 9957, federalTaxDue: makeFromInt 1145, stateTaxDue: makeFromInt 887 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13172, ordinaryIncomeNonSS: makeFromInt 116174, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35876, stateTaxDue: makeFromInt 10554 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65596, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1057, federalTaxDue: makeFromInt 14955, stateTaxDue: makeFromInt 2825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4613, qualifiedIncome: makeFromInt 30220, itemizedDeductions: makeFromInt 27862, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3714, stateTaxDue: makeFromInt 2959 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147171, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29417, federalTaxDue: makeFromInt 41836, stateTaxDue: makeFromInt 11684 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7080, ordinaryIncomeNonSS: makeFromInt 29875, qualifiedIncome: makeFromInt 86139, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6057, stateTaxDue: makeFromInt 5226 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9469, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12536, ordinaryIncomeNonSS: makeFromInt 125407, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17666, federalTaxDue: makeFromInt 18280, stateTaxDue: makeFromInt 5695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22381, ordinaryIncomeNonSS: makeFromInt 143904, qualifiedIncome: makeFromInt 11619, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29196, stateTaxDue: makeFromInt 7309 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7251, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73446, itemizedDeductions: makeFromInt 4665, federalTaxDue: makeFromInt 10411, stateTaxDue: makeFromInt 3417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84877, qualifiedIncome: makeFromInt 1944, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7296, stateTaxDue: makeFromInt 4081 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84404, qualifiedIncome: makeFromInt 60723, itemizedDeductions: makeFromInt 11344, federalTaxDue: makeFromInt 12456, stateTaxDue: makeFromInt 6581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63024, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10233, federalTaxDue: makeFromInt 21248, stateTaxDue: makeFromInt 7896 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44232, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74445, itemizedDeductions: makeFromInt 143, federalTaxDue: makeFromInt 10166, stateTaxDue: makeFromInt 3467 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64401, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22060, stateTaxDue: makeFromInt 8038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4464, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24058, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34678, ordinaryIncomeNonSS: makeFromInt 3344, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19851, ordinaryIncomeNonSS: makeFromInt 63509, qualifiedIncome: makeFromInt 8974, itemizedDeductions: makeFromInt 25111, federalTaxDue: makeFromInt 4591, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11109, ordinaryIncomeNonSS: makeFromInt 79144, qualifiedIncome: makeFromInt 94031, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25385, stateTaxDue: makeFromInt 8404 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31597, ordinaryIncomeNonSS: makeFromInt 62372, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15155, federalTaxDue: makeFromInt 20651, stateTaxDue: makeFromInt 7832 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14383, ordinaryIncomeNonSS: makeFromInt 89441, qualifiedIncome: makeFromInt 67922, itemizedDeductions: makeFromInt 26153, federalTaxDue: makeFromInt 23793, stateTaxDue: makeFromInt 7801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85351, itemizedDeductions: makeFromInt 17719, federalTaxDue: makeFromInt 33159, stateTaxDue: makeFromInt 11350 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26875, ordinaryIncomeNonSS: makeFromInt 96527, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20444, federalTaxDue: makeFromInt 17822, stateTaxDue: makeFromInt 4371 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15898, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2826, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20568, ordinaryIncomeNonSS: makeFromInt 81580, qualifiedIncome: makeFromInt 18099, itemizedDeductions: makeFromInt 19779, federalTaxDue: makeFromInt 13245, stateTaxDue: makeFromInt 4655 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28630, itemizedDeductions: makeFromInt 25065, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1236 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6061, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10968, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45743, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33259, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18261, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5413, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70322, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2934 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 167, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27441, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6324, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42483, ordinaryIncomeNonSS: makeFromInt 84311, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19183, federalTaxDue: makeFromInt 29278, stateTaxDue: makeFromInt 8841 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12559, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 291 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 645, itemizedDeductions: makeFromInt 21017, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35913, itemizedDeductions: makeFromInt 28856, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1281 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10533, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8711, federalTaxDue: makeFromInt 23377, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5248, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29576, stateTaxDue: makeFromInt 7644 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58500, qualifiedIncome: makeFromInt 99100, itemizedDeductions: makeFromInt 9147, federalTaxDue: makeFromInt 11872, stateTaxDue: makeFromInt 7514 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16596, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 90, stateTaxDue: makeFromInt 375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103715, qualifiedIncome: makeFromInt 78304, itemizedDeductions: makeFromInt 24314, federalTaxDue: makeFromInt 34837, stateTaxDue: makeFromInt 8646 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36696, ordinaryIncomeNonSS: makeFromInt 75111, qualifiedIncome: makeFromInt 77105, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21527, stateTaxDue: makeFromInt 7236 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16212, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33663, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15811, federalTaxDue: makeFromInt 916, stateTaxDue: makeFromInt 1108 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45489, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6296, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15322, stateTaxDue: makeFromInt 4774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13997, qualifiedIncome: makeFromInt 17709, itemizedDeductions: makeFromInt 16498, federalTaxDue: makeFromInt 2362, stateTaxDue: makeFromInt 1379 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6759, federalTaxDue: makeFromInt 28868, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46021, ordinaryIncomeNonSS: makeFromInt 128011, qualifiedIncome: makeFromInt 57532, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41029, stateTaxDue: makeFromInt 9034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34988, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35043, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23850, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 870 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7614, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84024, itemizedDeductions: makeFromInt 19161, federalTaxDue: makeFromInt 38958, stateTaxDue: makeFromInt 11246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35335, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35591, itemizedDeductions: makeFromInt 12168, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1264 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98017, itemizedDeductions: makeFromInt 23294, federalTaxDue: makeFromInt 9957, stateTaxDue: makeFromInt 4526 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51007, itemizedDeductions: makeFromInt 16616, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2175 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18569, ordinaryIncomeNonSS: makeFromInt 112512, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13764, stateTaxDue: makeFromInt 5187 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41770, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11534, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48842, qualifiedIncome: makeFromInt 40868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2650, stateTaxDue: makeFromInt 4111 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47674, ordinaryIncomeNonSS: makeFromInt 113464, qualifiedIncome: makeFromInt 82160, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38048, stateTaxDue: makeFromInt 9326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1991, ordinaryIncomeNonSS: makeFromInt 145275, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9781, federalTaxDue: makeFromInt 25779, stateTaxDue: makeFromInt 6981 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37748, ordinaryIncomeNonSS: makeFromInt 128423, qualifiedIncome: makeFromInt 49586, itemizedDeductions: makeFromInt 3540, federalTaxDue: makeFromInt 33726, stateTaxDue: makeFromInt 8325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48085, ordinaryIncomeNonSS: makeFromInt 13549, qualifiedIncome: makeFromInt 73855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6112, stateTaxDue: makeFromInt 3695 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5165, itemizedDeductions: makeFromInt 25770, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13651, ordinaryIncomeNonSS: makeFromInt 76058, qualifiedIncome: makeFromInt 61093, itemizedDeductions: makeFromInt 12107, federalTaxDue: makeFromInt 9319, stateTaxDue: makeFromInt 6383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6744, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37609, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8330, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 997, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51563, itemizedDeductions: makeFromInt 11980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1903 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1277, stateTaxDue: makeFromInt 1364 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16481, ordinaryIncomeNonSS: makeFromInt 68281, qualifiedIncome: makeFromInt 15991, itemizedDeductions: makeFromInt 13653, federalTaxDue: makeFromInt 8627, stateTaxDue: makeFromInt 3747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25817, federalTaxDue: makeFromInt 20281, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1060, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33848, stateTaxDue: makeFromInt 7480 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39502, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32825, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15553, ordinaryIncomeNonSS: makeFromInt 111157, qualifiedIncome: makeFromInt 19594, itemizedDeductions: makeFromInt 19535, federalTaxDue: makeFromInt 22122, stateTaxDue: makeFromInt 6283 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30156, ordinaryIncomeNonSS: makeFromInt 64409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7505, stateTaxDue: makeFromInt 2645 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3855, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7484, federalTaxDue: makeFromInt 5550, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19280, ordinaryIncomeNonSS: makeFromInt 132475, qualifiedIncome: makeFromInt 88272, itemizedDeductions: makeFromInt 27552, federalTaxDue: makeFromInt 34575, stateTaxDue: makeFromInt 10830 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25321, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53779, itemizedDeductions: makeFromInt 10072, federalTaxDue: makeFromInt 37920, stateTaxDue: makeFromInt 9842 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31985, itemizedDeductions: makeFromInt 17143, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 978 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1013, stateTaxDue: makeFromInt 1088 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11475, federalTaxDue: makeFromInt 26938, stateTaxDue: makeFromInt 5568 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31353, ordinaryIncomeNonSS: makeFromInt 78472, qualifiedIncome: makeFromInt 54726, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22510, stateTaxDue: makeFromInt 6205 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12235, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20513, stateTaxDue: makeFromInt 7637 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37535, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12283, federalTaxDue: makeFromInt 4597, stateTaxDue: makeFromInt 1486 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95407, qualifiedIncome: makeFromInt 40973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12331, stateTaxDue: makeFromInt 6507 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52279, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4304, stateTaxDue: makeFromInt 2359 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17167, ordinaryIncomeNonSS: makeFromInt 74741, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5452, federalTaxDue: makeFromInt 9439, stateTaxDue: makeFromInt 3362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 94, federalTaxDue: makeFromInt 36019, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24728, ordinaryIncomeNonSS: makeFromInt 134126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20481, stateTaxDue: makeFromInt 6127 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9542, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47827, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3461, stateTaxDue: makeFromInt 2136 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19142, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29265, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80552, qualifiedIncome: makeFromInt 50087, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15822, stateTaxDue: makeFromInt 6112 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66112, itemizedDeductions: makeFromInt 10759, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2631 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19458, ordinaryIncomeNonSS: makeFromInt 4935, qualifiedIncome: makeFromInt 51316, itemizedDeductions: makeFromInt 18218, federalTaxDue: makeFromInt 1259, stateTaxDue: makeFromInt 2558 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7336, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61567, itemizedDeductions: makeFromInt 11976, federalTaxDue: makeFromInt 31960, stateTaxDue: makeFromInt 10203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27810, qualifiedIncome: makeFromInt 66689, itemizedDeductions: makeFromInt 8225, federalTaxDue: makeFromInt 9019, stateTaxDue: makeFromInt 4167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25036, qualifiedIncome: makeFromInt 60525, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4440, stateTaxDue: makeFromInt 4017 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6926, ordinaryIncomeNonSS: makeFromInt 119136, qualifiedIncome: makeFromInt 21780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23580, stateTaxDue: makeFromInt 6791 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22688, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21767, federalTaxDue: makeFromInt 4, stateTaxDue: makeFromInt 759 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104926, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21380, federalTaxDue: makeFromInt 10869, stateTaxDue: makeFromInt 4871 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48668, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18706, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 360 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46817, ordinaryIncomeNonSS: makeFromInt 69220, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7685, federalTaxDue: makeFromInt 13929, stateTaxDue: makeFromInt 3086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1499, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42603, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11209, federalTaxDue: makeFromInt 15175, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23850, ordinaryIncomeNonSS: makeFromInt 8382, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5181 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44094, itemizedDeductions: makeFromInt 18361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24796, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51944, itemizedDeductions: makeFromInt 18488, federalTaxDue: makeFromInt 232, stateTaxDue: makeFromInt 2098 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48739, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18487, itemizedDeductions: makeFromInt 15275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18160, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 477 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26041, ordinaryIncomeNonSS: makeFromInt 129798, qualifiedIncome: makeFromInt 15369, itemizedDeductions: makeFromInt 22866, federalTaxDue: makeFromInt 25102, stateTaxDue: makeFromInt 6955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93095, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9316, federalTaxDue: makeFromInt 10654, stateTaxDue: makeFromInt 4299 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7688, ordinaryIncomeNonSS: makeFromInt 64730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8853, stateTaxDue: makeFromInt 2845 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19014, ordinaryIncomeNonSS: makeFromInt 114602, qualifiedIncome: makeFromInt 56761, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22940, stateTaxDue: makeFromInt 8189 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14606, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72399, itemizedDeductions: makeFromInt 13347, federalTaxDue: makeFromInt 4166, stateTaxDue: makeFromInt 3365 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79682, qualifiedIncome: makeFromInt 69205, itemizedDeductions: makeFromInt 19008, federalTaxDue: makeFromInt 12453, stateTaxDue: makeFromInt 6769 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4611, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42774, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25960, federalTaxDue: makeFromInt 1779, stateTaxDue: makeFromInt 1684 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47305, qualifiedIncome: makeFromInt 70592, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7141, stateTaxDue: makeFromInt 5520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98254, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9091, stateTaxDue: makeFromInt 4787 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28255, ordinaryIncomeNonSS: makeFromInt 102934, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12120, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93136, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8778, stateTaxDue: makeFromInt 4082 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99688, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17538, federalTaxDue: makeFromInt 22763, stateTaxDue: makeFromInt 4729 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34967, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15494, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23858, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 564 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42781, ordinaryIncomeNonSS: makeFromInt 50122, qualifiedIncome: makeFromInt 32878, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4508, stateTaxDue: makeFromInt 3580 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17185, stateTaxDue: makeFromInt 6558 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34771, ordinaryIncomeNonSS: makeFromInt 55314, qualifiedIncome: makeFromInt 45047, itemizedDeductions: makeFromInt 15674, federalTaxDue: makeFromInt 6158, stateTaxDue: makeFromInt 4343 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49846, ordinaryIncomeNonSS: makeFromInt 38277, qualifiedIncome: makeFromInt 46194, itemizedDeductions: makeFromInt 28058, federalTaxDue: makeFromInt 12806, stateTaxDue: makeFromInt 3649 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10399, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27090, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29793, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1115 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81281, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6402, stateTaxDue: makeFromInt 3921 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11015, itemizedDeductions: makeFromInt 23151, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95241, qualifiedIncome: makeFromInt 28719, itemizedDeductions: makeFromInt 22882, federalTaxDue: makeFromInt 11633, stateTaxDue: makeFromInt 5771 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131143, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20168, stateTaxDue: makeFromInt 6464 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24568, ordinaryIncomeNonSS: makeFromInt 117149, qualifiedIncome: makeFromInt 53775, itemizedDeductions: makeFromInt 17389, federalTaxDue: makeFromInt 31512, stateTaxDue: makeFromInt 8370 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9912, qualifiedIncome: makeFromInt 79952, itemizedDeductions: makeFromInt 4272, federalTaxDue: makeFromInt 4433, stateTaxDue: makeFromInt 4236 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6963, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62746, itemizedDeductions: makeFromInt 24412, federalTaxDue: makeFromInt 34016, stateTaxDue: makeFromInt 10182 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3541, ordinaryIncomeNonSS: makeFromInt 60884, qualifiedIncome: makeFromInt 26525, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5639, stateTaxDue: makeFromInt 3915 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24984, stateTaxDue: makeFromInt 9861 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 824, qualifiedIncome: makeFromInt 66513, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2724, stateTaxDue: makeFromInt 2912 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24286, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1031, stateTaxDue: makeFromInt 959 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24619, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62330, itemizedDeductions: makeFromInt 29754, federalTaxDue: makeFromInt 387, stateTaxDue: makeFromInt 2542 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36269, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14828, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 532 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31360, ordinaryIncomeNonSS: makeFromInt 1691, qualifiedIncome: makeFromInt 8478, itemizedDeductions: makeFromInt 3522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 70 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103145, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13105, stateTaxDue: makeFromInt 4865 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48656, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18191, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27526, qualifiedIncome: makeFromInt 93354, itemizedDeductions: makeFromInt 21342, federalTaxDue: makeFromInt 1557, stateTaxDue: makeFromInt 5369 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13786, ordinaryIncomeNonSS: makeFromInt 101352, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12661, stateTaxDue: makeFromInt 4693 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41207, itemizedDeductions: makeFromInt 21407, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11211, ordinaryIncomeNonSS: makeFromInt 136123, qualifiedIncome: makeFromInt 1832, itemizedDeductions: makeFromInt 135, federalTaxDue: makeFromInt 31196, stateTaxDue: makeFromInt 6811 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80543, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17063, federalTaxDue: makeFromInt 18282, stateTaxDue: makeFromInt 3772 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45893, itemizedDeductions: makeFromInt 14468, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1620 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129371, qualifiedIncome: makeFromInt 1581, itemizedDeductions: makeFromInt 2795, federalTaxDue: makeFromInt 15048, stateTaxDue: makeFromInt 5967 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80703, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3560 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10936, ordinaryIncomeNonSS: makeFromInt 145057, qualifiedIncome: makeFromInt 35908, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38744, stateTaxDue: makeFromInt 9005 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33993, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42261, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1638 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40663, ordinaryIncomeNonSS: makeFromInt 1185, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3298, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2436, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4921 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1382, itemizedDeductions: makeFromInt 10254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69602, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1708, federalTaxDue: makeFromInt 6487, stateTaxDue: makeFromInt 3225 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29208, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2876, itemizedDeductions: makeFromInt 15574, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21524, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92176, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5711, stateTaxDue: makeFromInt 4234 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8888, ordinaryIncomeNonSS: makeFromInt 128600, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19937, stateTaxDue: makeFromInt 5855 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32985, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5348, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 158, ordinaryIncomeNonSS: makeFromInt 57430, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20052, federalTaxDue: makeFromInt 18931, stateTaxDue: makeFromInt 7617 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35724, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22422, federalTaxDue: makeFromInt 2444, stateTaxDue: makeFromInt 1111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28046, ordinaryIncomeNonSS: makeFromInt 25640, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27879, federalTaxDue: makeFromInt 303, stateTaxDue: makeFromInt 1083 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131736, qualifiedIncome: makeFromInt 42456, itemizedDeductions: makeFromInt 6209, federalTaxDue: makeFromInt 37349, stateTaxDue: makeFromInt 8435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10774, ordinaryIncomeNonSS: makeFromInt 104565, qualifiedIncome: makeFromInt 58231, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24545, stateTaxDue: makeFromInt 7854 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45478, ordinaryIncomeNonSS: makeFromInt 36403, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2367, stateTaxDue: makeFromInt 1345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32846, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24264, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48732, ordinaryIncomeNonSS: makeFromInt 88353, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21940, stateTaxDue: makeFromInt 4078 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23021, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1709, stateTaxDue: makeFromInt 2159 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71206, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11203, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117475, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13189, federalTaxDue: makeFromInt 13629, stateTaxDue: makeFromInt 5299 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26773, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20883, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3220, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10367, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70783, itemizedDeductions: makeFromInt 6915, federalTaxDue: makeFromInt 45584, stateTaxDue: makeFromInt 10784 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95738, qualifiedIncome: makeFromInt 53394, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19234, stateTaxDue: makeFromInt 7157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84678, qualifiedIncome: makeFromInt 41017, itemizedDeductions: makeFromInt 5223, federalTaxDue: makeFromInt 9479, stateTaxDue: makeFromInt 5758 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1731, ordinaryIncomeNonSS: makeFromInt 139203, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28870, federalTaxDue: makeFromInt 15140, stateTaxDue: makeFromInt 6285 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48234, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8787, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147861, qualifiedIncome: makeFromInt 18814, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29826, stateTaxDue: makeFromInt 8072 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44214, ordinaryIncomeNonSS: makeFromInt 103601, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34531, stateTaxDue: makeFromInt 9925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26050, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30282, itemizedDeductions: makeFromInt 28909, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1259 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83668, qualifiedIncome: makeFromInt 55278, itemizedDeductions: makeFromInt 29754, federalTaxDue: makeFromInt 12796, stateTaxDue: makeFromInt 6572 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34199, ordinaryIncomeNonSS: makeFromInt 24390, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23603, federalTaxDue: makeFromInt 148, stateTaxDue: makeFromInt 795 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148095, qualifiedIncome: makeFromInt 12214, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22603, stateTaxDue: makeFromInt 7440 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31701, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3528, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7574, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45665, ordinaryIncomeNonSS: makeFromInt 33485, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10357, federalTaxDue: makeFromInt 4117, stateTaxDue: makeFromInt 1099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10619, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74697, itemizedDeductions: makeFromInt 22858, federalTaxDue: makeFromInt 3645, stateTaxDue: makeFromInt 3259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36452, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60186, itemizedDeductions: makeFromInt 4831, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2417 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49414, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16708, federalTaxDue: makeFromInt 14260, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31702, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37460, stateTaxDue: makeFromInt 9320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36195, ordinaryIncomeNonSS: makeFromInt 140968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34740, stateTaxDue: makeFromInt 6843 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32143, ordinaryIncomeNonSS: makeFromInt 46678, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6868, stateTaxDue: makeFromInt 1830 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13621, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 206 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66933, itemizedDeductions: makeFromInt 16798, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2761 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116596, qualifiedIncome: makeFromInt 43721, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20523, stateTaxDue: makeFromInt 7761 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42943, ordinaryIncomeNonSS: makeFromInt 90136, qualifiedIncome: makeFromInt 64344, itemizedDeductions: makeFromInt 24897, federalTaxDue: makeFromInt 29987, stateTaxDue: makeFromInt 7654 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131190, qualifiedIncome: makeFromInt 88952, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28804, stateTaxDue: makeFromInt 10574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12723, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97374, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3311, stateTaxDue: makeFromInt 4313 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40587, qualifiedIncome: makeFromInt 25040, itemizedDeductions: makeFromInt 20926, federalTaxDue: makeFromInt 13290, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42097, ordinaryIncomeNonSS: makeFromInt 5419, qualifiedIncome: makeFromInt 26529, itemizedDeductions: makeFromInt 20454, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76471, qualifiedIncome: makeFromInt 8893, itemizedDeductions: makeFromInt 20922, federalTaxDue: makeFromInt 12736, stateTaxDue: makeFromInt 3793 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3564, ordinaryIncomeNonSS: makeFromInt 112633, qualifiedIncome: makeFromInt 96779, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28075, stateTaxDue: makeFromInt 10096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121937, qualifiedIncome: makeFromInt 69772, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28330, stateTaxDue: makeFromInt 9328 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3421, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21467, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22469, ordinaryIncomeNonSS: makeFromInt 28195, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1733, stateTaxDue: makeFromInt 1035 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10496, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 150 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147628, qualifiedIncome: makeFromInt 27262, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29258, stateTaxDue: makeFromInt 8270 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 611, ordinaryIncomeNonSS: makeFromInt 81791, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9282, stateTaxDue: makeFromInt 3635 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18147, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34836, itemizedDeductions: makeFromInt 23872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21277, qualifiedIncome: makeFromInt 13509, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1284 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127485, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15832, stateTaxDue: makeFromInt 5999 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15559, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37301, stateTaxDue: makeFromInt 8023 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15402, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57639, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2507 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76346, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5882, stateTaxDue: makeFromInt 3242 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2624, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18719, itemizedDeductions: makeFromInt 25919, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29935, itemizedDeductions: makeFromInt 9266, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16825, qualifiedIncome: makeFromInt 9793, itemizedDeductions: makeFromInt 26171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 807 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67831, itemizedDeductions: makeFromInt 14233, federalTaxDue: makeFromInt 38363, stateTaxDue: makeFromInt 10417 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5626, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37852, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1318 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81911, itemizedDeductions: makeFromInt 3558, federalTaxDue: makeFromInt 5034, stateTaxDue: makeFromInt 3841 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12193, qualifiedIncome: makeFromInt 86172, itemizedDeductions: makeFromInt 26701, federalTaxDue: makeFromInt 1631, stateTaxDue: makeFromInt 4568 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33744, ordinaryIncomeNonSS: makeFromInt 111659, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6068, federalTaxDue: makeFromInt 13751, stateTaxDue: makeFromInt 5108 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18061, itemizedDeductions: makeFromInt 5746, federalTaxDue: makeFromInt 18585, stateTaxDue: makeFromInt 7728 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 231, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44094, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76797, itemizedDeductions: makeFromInt 6338, federalTaxDue: makeFromInt 35641, stateTaxDue: makeFromInt 10865 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15626, itemizedDeductions: makeFromInt 28198, federalTaxDue: makeFromInt 18220, stateTaxDue: makeFromInt 7606 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22242, ordinaryIncomeNonSS: makeFromInt 48497, qualifiedIncome: makeFromInt 78869, itemizedDeductions: makeFromInt 10372, federalTaxDue: makeFromInt 6515, stateTaxDue: makeFromInt 5693 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27560, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 155, federalTaxDue: makeFromInt 921, stateTaxDue: makeFromInt 1048 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29773, stateTaxDue: makeFromInt 6163 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36810, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17985, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 224 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1640, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14615, ordinaryIncomeNonSS: makeFromInt 124852, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43576, stateTaxDue: makeFromInt 11243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39012, itemizedDeductions: makeFromInt 13960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88058, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2642, federalTaxDue: makeFromInt 15970, stateTaxDue: makeFromInt 3838 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11494, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132019, qualifiedIncome: makeFromInt 96506, itemizedDeductions: makeFromInt 6757, federalTaxDue: makeFromInt 41452, stateTaxDue: makeFromInt 11430 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32070, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24463, qualifiedIncome: makeFromInt 71872, itemizedDeductions: makeFromInt 23914, federalTaxDue: makeFromInt 3666, stateTaxDue: makeFromInt 4362 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13445, ordinaryIncomeNonSS: makeFromInt 4082, qualifiedIncome: makeFromInt 6195, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87553, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18601, federalTaxDue: makeFromInt 6819, stateTaxDue: makeFromInt 3903 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117816, qualifiedIncome: makeFromInt 73818, itemizedDeductions: makeFromInt 20871, federalTaxDue: makeFromInt 30120, stateTaxDue: makeFromInt 9549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5347, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49180, ordinaryIncomeNonSS: makeFromInt 29607, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14208, federalTaxDue: makeFromInt 2960, stateTaxDue: makeFromInt 1105 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1863, ordinaryIncomeNonSS: makeFromInt 131806, qualifiedIncome: makeFromInt 85024, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29310, stateTaxDue: makeFromInt 10630 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5744, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90322, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23280, federalTaxDue: makeFromInt 22656, stateTaxDue: makeFromInt 8941 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30494, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1214, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72895, qualifiedIncome: makeFromInt 89114, itemizedDeductions: makeFromInt 16052, federalTaxDue: makeFromInt 16123, stateTaxDue: makeFromInt 7712 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19740, itemizedDeductions: makeFromInt 13096, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3731, federalTaxDue: makeFromInt 38546, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40587, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1059, stateTaxDue: makeFromInt 1454 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3971, ordinaryIncomeNonSS: makeFromInt 115429, qualifiedIncome: makeFromInt 61891, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20538, stateTaxDue: makeFromInt 8510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22494, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3484, stateTaxDue: makeFromInt 4372 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21317, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30339, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7382, federalTaxDue: makeFromInt 11794, stateTaxDue: makeFromInt 6300 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49859, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55668, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3125, stateTaxDue: makeFromInt 2208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8523, ordinaryIncomeNonSS: makeFromInt 45105, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12467, stateTaxDue: makeFromInt 6880 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9916, ordinaryIncomeNonSS: makeFromInt 105094, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25172, federalTaxDue: makeFromInt 12612, stateTaxDue: makeFromInt 4880 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13386, itemizedDeductions: makeFromInt 5477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7591, itemizedDeductions: makeFromInt 25562, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 5 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35628, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86631, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1700, stateTaxDue: makeFromInt 3969 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63885, qualifiedIncome: makeFromInt 34566, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13291, stateTaxDue: makeFromInt 4248 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46118, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95987, itemizedDeductions: makeFromInt 644, federalTaxDue: makeFromInt 4691, stateTaxDue: makeFromInt 4243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26783, ordinaryIncomeNonSS: makeFromInt 2199, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 464, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108359, qualifiedIncome: makeFromInt 78329, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29799, stateTaxDue: makeFromInt 9174 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7377, ordinaryIncomeNonSS: makeFromInt 12718, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79843, qualifiedIncome: makeFromInt 44493, itemizedDeductions: makeFromInt 12837, federalTaxDue: makeFromInt 16710, stateTaxDue: makeFromInt 5994 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26937, ordinaryIncomeNonSS: makeFromInt 105310, qualifiedIncome: makeFromInt 37303, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16697, stateTaxDue: makeFromInt 6456 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47565, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34903, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 98, stateTaxDue: makeFromInt 1170 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122563, qualifiedIncome: makeFromInt 90810, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38078, stateTaxDue: makeFromInt 10658 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25530, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10907, federalTaxDue: makeFromInt 29745, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17735, itemizedDeductions: makeFromInt 19658, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 432 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3322, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43393, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47590, ordinaryIncomeNonSS: makeFromInt 5665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85606, qualifiedIncome: makeFromInt 43589, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21124, stateTaxDue: makeFromInt 6365 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121704, qualifiedIncome: makeFromInt 95546, itemizedDeductions: makeFromInt 7386, federalTaxDue: makeFromInt 32138, stateTaxDue: makeFromInt 10631 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6283, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22929, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5367, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29374, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1070 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81015, qualifiedIncome: makeFromInt 52102, itemizedDeductions: makeFromInt 6607, federalTaxDue: makeFromInt 28166, stateTaxDue: makeFromInt 6401 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19001, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24279, itemizedDeductions: makeFromInt 15306, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 959 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10475, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1203, itemizedDeductions: makeFromInt 22780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21289, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98304, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17194, stateTaxDue: makeFromInt 9461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3080, ordinaryIncomeNonSS: makeFromInt 90576, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12432, stateTaxDue: makeFromInt 4191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138075, qualifiedIncome: makeFromInt 79158, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37353, stateTaxDue: makeFromInt 10732 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17867, federalTaxDue: makeFromInt 29775, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34998, ordinaryIncomeNonSS: makeFromInt 18602, qualifiedIncome: makeFromInt 27060, itemizedDeductions: makeFromInt 7613, federalTaxDue: makeFromInt 1479, stateTaxDue: makeFromInt 1808 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3508, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29530, itemizedDeductions: makeFromInt 11049, federalTaxDue: makeFromInt 36718, stateTaxDue: makeFromInt 8402 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90699, qualifiedIncome: makeFromInt 88218, itemizedDeductions: makeFromInt 1506, federalTaxDue: makeFromInt 24361, stateTaxDue: makeFromInt 8691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34697, ordinaryIncomeNonSS: makeFromInt 40960, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19048, stateTaxDue: makeFromInt 6638 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52024, itemizedDeductions: makeFromInt 16902, federalTaxDue: makeFromInt 33768, stateTaxDue: makeFromInt 9846 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19852, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21747, federalTaxDue: makeFromInt 29168, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6521, ordinaryIncomeNonSS: makeFromInt 81096, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5650, federalTaxDue: makeFromInt 7779, stateTaxDue: makeFromInt 3680 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128495, qualifiedIncome: makeFromInt 41194, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35985, stateTaxDue: makeFromInt 8029 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48339, ordinaryIncomeNonSS: makeFromInt 24699, qualifiedIncome: makeFromInt 40750, itemizedDeductions: makeFromInt 2033, federalTaxDue: makeFromInt 11760, stateTaxDue: makeFromInt 3017 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3079, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70453, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8794, federalTaxDue: makeFromInt 10174, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19287, qualifiedIncome: makeFromInt 7416, itemizedDeductions: makeFromInt 25573, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 960 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148183, qualifiedIncome: makeFromInt 11079, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33223, stateTaxDue: makeFromInt 7898 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27958, ordinaryIncomeNonSS: makeFromInt 53595, qualifiedIncome: makeFromInt 58866, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13049, stateTaxDue: makeFromInt 5048 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16021, itemizedDeductions: makeFromInt 11024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 346 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18272, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41402, ordinaryIncomeNonSS: makeFromInt 144001, qualifiedIncome: makeFromInt 75066, itemizedDeductions: makeFromInt 16719, federalTaxDue: makeFromInt 33558, stateTaxDue: makeFromInt 10278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40724, ordinaryIncomeNonSS: makeFromInt 75653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12859, federalTaxDue: makeFromInt 17637, stateTaxDue: makeFromInt 3512 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42290, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76488, itemizedDeductions: makeFromInt 23805, federalTaxDue: makeFromInt 435, stateTaxDue: makeFromInt 3149 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22952, ordinaryIncomeNonSS: makeFromInt 93949, qualifiedIncome: makeFromInt 52677, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19437, stateTaxDue: makeFromInt 6756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34291, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14555, itemizedDeductions: makeFromInt 2000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 396 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78878, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2119, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114051, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22811, federalTaxDue: makeFromInt 29467, stateTaxDue: makeFromInt 10328 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4883, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42154, itemizedDeductions: makeFromInt 12913, federalTaxDue: makeFromInt 818, stateTaxDue: makeFromInt 1733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43266, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81571, itemizedDeductions: makeFromInt 6307, federalTaxDue: makeFromInt 6051, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44727, qualifiedIncome: makeFromInt 20648, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1495, stateTaxDue: makeFromInt 2783 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24883, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54288, itemizedDeductions: makeFromInt 8444, federalTaxDue: makeFromInt 931, stateTaxDue: makeFromInt 2196 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3382, ordinaryIncomeNonSS: makeFromInt 78969, qualifiedIncome: makeFromInt 49361, itemizedDeductions: makeFromInt 9850, federalTaxDue: makeFromInt 14874, stateTaxDue: makeFromInt 6042 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29071, itemizedDeductions: makeFromInt 15828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 51223, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19469, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 299 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39201, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1347 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18611, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 476 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16803, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18288, itemizedDeductions: makeFromInt 15080, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 439 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20032, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 153 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9510, ordinaryIncomeNonSS: makeFromInt 700, qualifiedIncome: makeFromInt 37977, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1524 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110102, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27871, stateTaxDue: makeFromInt 5136 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86320, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16482, stateTaxDue: makeFromInt 4178 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47457, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145824, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24334, stateTaxDue: makeFromInt 7213 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34876, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 118, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29338, ordinaryIncomeNonSS: makeFromInt 88752, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21671, federalTaxDue: makeFromInt 28535, stateTaxDue: makeFromInt 9178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45346, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31682, stateTaxDue: makeFromInt 9514 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12205, ordinaryIncomeNonSS: makeFromInt 70973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10595, stateTaxDue: makeFromInt 3094 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32259, itemizedDeductions: makeFromInt 26713, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1158 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11152, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16725, itemizedDeductions: makeFromInt 1972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45875, ordinaryIncomeNonSS: makeFromInt 27313, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13859, federalTaxDue: makeFromInt 2180, stateTaxDue: makeFromInt 944 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21950, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31724, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20030, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33805, ordinaryIncomeNonSS: makeFromInt 21648, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9386, stateTaxDue: makeFromInt 5776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3043, ordinaryIncomeNonSS: makeFromInt 69345, qualifiedIncome: makeFromInt 36250, itemizedDeductions: makeFromInt 13212, federalTaxDue: makeFromInt 13402, stateTaxDue: makeFromInt 5039 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63813, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8060, federalTaxDue: makeFromInt 16925, stateTaxDue: makeFromInt 2826 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32392, ordinaryIncomeNonSS: makeFromInt 41037, qualifiedIncome: makeFromInt 84758, itemizedDeductions: makeFromInt 6420, federalTaxDue: makeFromInt 14560, stateTaxDue: makeFromInt 5715 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9416, ordinaryIncomeNonSS: makeFromInt 98929, qualifiedIncome: makeFromInt 88606, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27990, stateTaxDue: makeFromInt 8922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14068, qualifiedIncome: makeFromInt 9205, itemizedDeductions: makeFromInt 2475, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 489 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46101, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22048, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22186, itemizedDeductions: makeFromInt 13896, federalTaxDue: makeFromInt 23769, stateTaxDue: makeFromInt 8129 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17305, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7096, federalTaxDue: makeFromInt 43557, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47319, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77905, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42567, stateTaxDue: makeFromInt 10820 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45998, ordinaryIncomeNonSS: makeFromInt 32814, qualifiedIncome: makeFromInt 22656, itemizedDeductions: makeFromInt 27448, federalTaxDue: makeFromInt 4499, stateTaxDue: makeFromInt 2380 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17967, ordinaryIncomeNonSS: makeFromInt 30437, qualifiedIncome: makeFromInt 85026, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12208, stateTaxDue: makeFromInt 5338 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24030, federalTaxDue: makeFromInt 23942, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18745, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21648, stateTaxDue: makeFromInt 5572 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15619, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112750, qualifiedIncome: makeFromInt 66075, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23434, stateTaxDue: makeFromInt 8566 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60664, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2558 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19716, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57357, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32028, stateTaxDue: makeFromInt 10024 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2971, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11974, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23840, stateTaxDue: makeFromInt 7724 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3608, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14026, federalTaxDue: makeFromInt 38995, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1125, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81932, itemizedDeductions: makeFromInt 3702, federalTaxDue: makeFromInt 2577, stateTaxDue: makeFromInt 3722 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6479, qualifiedIncome: makeFromInt 17457, itemizedDeductions: makeFromInt 16346, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 522 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21821, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33956, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24701, qualifiedIncome: makeFromInt 18432, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1547 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19408, ordinaryIncomeNonSS: makeFromInt 41070, qualifiedIncome: makeFromInt 21125, itemizedDeductions: makeFromInt 23947, federalTaxDue: makeFromInt 4755, stateTaxDue: makeFromInt 2655 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81803, itemizedDeductions: makeFromInt 18925, federalTaxDue: makeFromInt 28147, stateTaxDue: makeFromInt 11115 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105696, qualifiedIncome: makeFromInt 20427, itemizedDeductions: makeFromInt 17439, federalTaxDue: makeFromInt 11244, stateTaxDue: makeFromInt 5779 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60568, itemizedDeductions: makeFromInt 17678, federalTaxDue: makeFromInt 8296, stateTaxDue: makeFromInt 2773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29890, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7502, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25841, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33560, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50294, itemizedDeductions: makeFromInt 23162, federalTaxDue: makeFromInt 403, stateTaxDue: makeFromInt 1940 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143531, qualifiedIncome: makeFromInt 80259, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30394, stateTaxDue: makeFromInt 10815 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43375, qualifiedIncome: makeFromInt 25956, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2773, stateTaxDue: makeFromInt 3189 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98175, qualifiedIncome: makeFromInt 57621, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22792, stateTaxDue: makeFromInt 7293 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53208, qualifiedIncome: makeFromInt 69626, itemizedDeductions: makeFromInt 21520, federalTaxDue: makeFromInt 13019, stateTaxDue: makeFromInt 5836 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1803, qualifiedIncome: makeFromInt 4302, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27542, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63110, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3774, stateTaxDue: makeFromInt 2790 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19286, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17923, federalTaxDue: makeFromInt 19483, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142412, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24780, stateTaxDue: makeFromInt 6666 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20829, ordinaryIncomeNonSS: makeFromInt 17636, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 99, stateTaxDue: makeFromInt 451 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63364, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1790, federalTaxDue: makeFromInt 6827, stateTaxDue: makeFromInt 2885 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13496, ordinaryIncomeNonSS: makeFromInt 32398, qualifiedIncome: makeFromInt 39334, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1387, stateTaxDue: makeFromInt 2912 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11004, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58851, itemizedDeductions: makeFromInt 24543, federalTaxDue: makeFromInt 33936, stateTaxDue: makeFromInt 10204 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34669, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85738, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41558, stateTaxDue: makeFromInt 11412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24107, ordinaryIncomeNonSS: makeFromInt 43287, qualifiedIncome: makeFromInt 12210, itemizedDeductions: makeFromInt 10932, federalTaxDue: makeFromInt 8248, stateTaxDue: makeFromInt 2484 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 621, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 870, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94568, qualifiedIncome: makeFromInt 49628, itemizedDeductions: makeFromInt 13192, federalTaxDue: makeFromInt 16034, stateTaxDue: makeFromInt 6635 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5667, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61943, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2422 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11626, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 5006 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37633, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43195, ordinaryIncomeNonSS: makeFromInt 69390, qualifiedIncome: makeFromInt 8218, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8464, stateTaxDue: makeFromInt 3205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110829, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20951, stateTaxDue: makeFromInt 10099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13802, federalTaxDue: makeFromInt 49758, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33979, ordinaryIncomeNonSS: makeFromInt 100089, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19623, stateTaxDue: makeFromInt 4656 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6517, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26579, qualifiedIncome: makeFromInt 5813, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2277, stateTaxDue: makeFromInt 1165 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54064, qualifiedIncome: makeFromInt 53866, itemizedDeductions: makeFromInt 23323, federalTaxDue: makeFromInt 2246, stateTaxDue: makeFromInt 4922 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31264, ordinaryIncomeNonSS: makeFromInt 44887, qualifiedIncome: makeFromInt 88030, itemizedDeductions: makeFromInt 20713, federalTaxDue: makeFromInt 8985, stateTaxDue: makeFromInt 5971 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29599, ordinaryIncomeNonSS: makeFromInt 97012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7361, federalTaxDue: makeFromInt 11069, stateTaxDue: makeFromInt 4376 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24408, qualifiedIncome: makeFromInt 33331, itemizedDeductions: makeFromInt 23717, federalTaxDue: makeFromInt 69, stateTaxDue: makeFromInt 2632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144905, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42229, stateTaxDue: makeFromInt 12143 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26446, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21179, ordinaryIncomeNonSS: makeFromInt 78084, qualifiedIncome: makeFromInt 15419, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11200, stateTaxDue: makeFromInt 4100 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68915, itemizedDeductions: makeFromInt 15801, federalTaxDue: makeFromInt 2582, stateTaxDue: makeFromInt 2964 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23128, itemizedDeductions: makeFromInt 10971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 629 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30677, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28168, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34833, stateTaxDue: makeFromInt 8654 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41474, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24006, federalTaxDue: makeFromInt 10559, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71919, qualifiedIncome: makeFromInt 54985, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21734, stateTaxDue: makeFromInt 5890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11503, ordinaryIncomeNonSS: makeFromInt 28450, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 635, federalTaxDue: makeFromInt 357, stateTaxDue: makeFromInt 900 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46736, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37761, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17, stateTaxDue: makeFromInt 1497 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10946, federalTaxDue: makeFromInt 13588, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33284, ordinaryIncomeNonSS: makeFromInt 148941, qualifiedIncome: makeFromInt 54486, itemizedDeductions: makeFromInt 29267, federalTaxDue: makeFromInt 34793, stateTaxDue: makeFromInt 9596 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22358, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48778, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15211, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128189, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16353, federalTaxDue: makeFromInt 29551, stateTaxDue: makeFromInt 10877 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32398, qualifiedIncome: makeFromInt 19906, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 285, stateTaxDue: makeFromInt 2117 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29312, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73770, itemizedDeductions: makeFromInt 13089, federalTaxDue: makeFromInt 6103, stateTaxDue: makeFromInt 3234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27252, ordinaryIncomeNonSS: makeFromInt 97605, qualifiedIncome: makeFromInt 7112, itemizedDeductions: makeFromInt 27863, federalTaxDue: makeFromInt 10641, stateTaxDue: makeFromInt 4688 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26833, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13406, itemizedDeductions: makeFromInt 21134, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 95 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25727, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18004, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 469 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23791, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118668, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28630, stateTaxDue: makeFromInt 5828 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45012, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66168, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4233, stateTaxDue: makeFromInt 2946 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2935, itemizedDeductions: makeFromInt 1804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139178, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16844, federalTaxDue: makeFromInt 17218, stateTaxDue: makeFromInt 6445 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43602, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4164, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93203, itemizedDeductions: makeFromInt 5351, federalTaxDue: makeFromInt 11872, stateTaxDue: makeFromInt 4363 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13139, qualifiedIncome: makeFromInt 31747, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4873, stateTaxDue: makeFromInt 1942 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44759, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22620, federalTaxDue: makeFromInt 30359, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5570, federalTaxDue: makeFromInt 16368, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43873, ordinaryIncomeNonSS: makeFromInt 30203, qualifiedIncome: makeFromInt 8223, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8695, stateTaxDue: makeFromInt 1735 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20261, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30330, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2576, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136007, qualifiedIncome: makeFromInt 37300, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26815, stateTaxDue: makeFromInt 8288 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26315, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42437, itemizedDeductions: makeFromInt 9943, federalTaxDue: makeFromInt 32962, stateTaxDue: makeFromInt 9047 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27353, ordinaryIncomeNonSS: makeFromInt 46355, qualifiedIncome: makeFromInt 29104, itemizedDeductions: makeFromInt 27893, federalTaxDue: makeFromInt 4084, stateTaxDue: makeFromInt 3098 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85521, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6134, stateTaxDue: makeFromInt 3821 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19620, ordinaryIncomeNonSS: makeFromInt 6409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25536, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21714, ordinaryIncomeNonSS: makeFromInt 53045, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5387, stateTaxDue: makeFromInt 2277 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15529, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22457, federalTaxDue: makeFromInt 21228, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27813, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1304 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14177, ordinaryIncomeNonSS: makeFromInt 121184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5898, federalTaxDue: makeFromInt 20554, stateTaxDue: makeFromInt 5834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34474, qualifiedIncome: makeFromInt 80743, itemizedDeductions: makeFromInt 17684, federalTaxDue: makeFromInt 9822, stateTaxDue: makeFromInt 5652 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44885, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30526, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36519, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21083, itemizedDeductions: makeFromInt 12156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 647 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35162, ordinaryIncomeNonSS: makeFromInt 53275, qualifiedIncome: makeFromInt 27495, itemizedDeductions: makeFromInt 21078, federalTaxDue: makeFromInt 9911, stateTaxDue: makeFromInt 3464 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15168, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6364, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10931, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43926, ordinaryIncomeNonSS: makeFromInt 58137, qualifiedIncome: makeFromInt 26042, itemizedDeductions: makeFromInt 13450, federalTaxDue: makeFromInt 16085, stateTaxDue: makeFromInt 3954 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17161, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98015, itemizedDeductions: makeFromInt 47, federalTaxDue: makeFromInt 197, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23388, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29838, federalTaxDue: makeFromInt 22043, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39850, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3872, federalTaxDue: makeFromInt 29298, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47963, ordinaryIncomeNonSS: makeFromInt 135274, qualifiedIncome: makeFromInt 1333, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28097, stateTaxDue: makeFromInt 6575 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37305, itemizedDeductions: makeFromInt 25191, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1410 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25739, ordinaryIncomeNonSS: makeFromInt 34979, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2620, federalTaxDue: makeFromInt 2049, stateTaxDue: makeFromInt 1335 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78411, itemizedDeductions: makeFromInt 7049, federalTaxDue: makeFromInt 4202, stateTaxDue: makeFromInt 3448 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 371, ordinaryIncomeNonSS: makeFromInt 30317, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 841 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6631, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41075, itemizedDeductions: makeFromInt 23906, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1679 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45344, qualifiedIncome: makeFromInt 24841, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8051, stateTaxDue: makeFromInt 3355 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29360, itemizedDeductions: makeFromInt 17361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1049 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5698, ordinaryIncomeNonSS: makeFromInt 14904, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 270 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23475, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115127, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15692, stateTaxDue: makeFromInt 5321 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20170, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28465, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17133, ordinaryIncomeNonSS: makeFromInt 139396, qualifiedIncome: makeFromInt 49314, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36108, stateTaxDue: makeFromInt 9196 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42581, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47764, itemizedDeductions: makeFromInt 20340, federalTaxDue: makeFromInt 3442, stateTaxDue: makeFromInt 1933 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127216, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24640, stateTaxDue: makeFromInt 5786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31532, qualifiedIncome: makeFromInt 70183, itemizedDeductions: makeFromInt 17558, federalTaxDue: makeFromInt 7393, stateTaxDue: makeFromInt 4963 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37604, itemizedDeductions: makeFromInt 4512, federalTaxDue: makeFromInt 26471, stateTaxDue: makeFromInt 8915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36929, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6600, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31974, ordinaryIncomeNonSS: makeFromInt 10799, qualifiedIncome: makeFromInt 67588, itemizedDeductions: makeFromInt 17392, federalTaxDue: makeFromInt 2662, stateTaxDue: makeFromInt 3447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116751, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12397, stateTaxDue: makeFromInt 5526 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23959, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44525, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 49715, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8985, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11746, federalTaxDue: makeFromInt 47752, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83307, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9856, federalTaxDue: makeFromInt 33832, stateTaxDue: makeFromInt 8900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39503, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2341, qualifiedIncome: makeFromInt 62696, itemizedDeductions: makeFromInt 18881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2868 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38914, ordinaryIncomeNonSS: makeFromInt 75715, qualifiedIncome: makeFromInt 27452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9978, stateTaxDue: makeFromInt 4683 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24790, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29478, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39548, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11612, federalTaxDue: makeFromInt 3119, stateTaxDue: makeFromInt 1793 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14236, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39997, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111186, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9129, federalTaxDue: makeFromInt 32379, stateTaxDue: makeFromInt 5446 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7261, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26248, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46641, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31998, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40, stateTaxDue: makeFromInt 925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16156, ordinaryIncomeNonSS: makeFromInt 75296, qualifiedIncome: makeFromInt 68895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21725, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28907, ordinaryIncomeNonSS: makeFromInt 5764, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11114, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111058, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39114, stateTaxDue: makeFromInt 9978 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29164, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31581, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43785, ordinaryIncomeNonSS: makeFromInt 61234, qualifiedIncome: makeFromInt 44606, itemizedDeductions: makeFromInt 18679, federalTaxDue: makeFromInt 19294, stateTaxDue: makeFromInt 5037 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48051, ordinaryIncomeNonSS: makeFromInt 137848, qualifiedIncome: makeFromInt 46456, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38621, stateTaxDue: makeFromInt 8760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20521, ordinaryIncomeNonSS: makeFromInt 94239, qualifiedIncome: makeFromInt 70024, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21454, stateTaxDue: makeFromInt 7929 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134907, qualifiedIncome: makeFromInt 76039, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39212, stateTaxDue: makeFromInt 9972 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47972, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70435, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6183, stateTaxDue: makeFromInt 3147 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17707, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48009, itemizedDeductions: makeFromInt 22135, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2026 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78032, itemizedDeductions: makeFromInt 159, federalTaxDue: makeFromInt 13959, stateTaxDue: makeFromInt 3755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20834, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25321, federalTaxDue: makeFromInt 27020, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33414, qualifiedIncome: makeFromInt 19190, itemizedDeductions: makeFromInt 20349, federalTaxDue: makeFromInt 1307, stateTaxDue: makeFromInt 2313 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2421, itemizedDeductions: makeFromInt 27436, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34310, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15325, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71038, qualifiedIncome: makeFromInt 16392, itemizedDeductions: makeFromInt 8495, federalTaxDue: makeFromInt 9941, stateTaxDue: makeFromInt 3917 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46347, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59102, itemizedDeductions: makeFromInt 29921, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2361 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55007, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4122, stateTaxDue: makeFromInt 2232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77121, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6165, federalTaxDue: makeFromInt 16815, stateTaxDue: makeFromInt 3382 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88018, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12965, stateTaxDue: makeFromInt 4142 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28270, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45534, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44528, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3760, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3454, stateTaxDue: makeFromInt 3027 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44588, itemizedDeductions: makeFromInt 22008, federalTaxDue: makeFromInt 898, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26169, ordinaryIncomeNonSS: makeFromInt 22762, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6389, federalTaxDue: makeFromInt 219, stateTaxDue: makeFromInt 732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38204, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62163, itemizedDeductions: makeFromInt 12095, federalTaxDue: makeFromInt 1797, stateTaxDue: makeFromInt 2620 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22419, federalTaxDue: makeFromInt 7713, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131050, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10462, federalTaxDue: makeFromInt 36057, stateTaxDue: makeFromInt 10878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20643, ordinaryIncomeNonSS: makeFromInt 40676, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15379, stateTaxDue: makeFromInt 6624 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13291, ordinaryIncomeNonSS: makeFromInt 67270, qualifiedIncome: makeFromInt 5161, itemizedDeductions: makeFromInt 14487, federalTaxDue: makeFromInt 6148, stateTaxDue: makeFromInt 3047 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28982, federalTaxDue: makeFromInt 18121, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121019, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17165, stateTaxDue: makeFromInt 5621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49640, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2351, stateTaxDue: makeFromInt 1981 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38869, ordinaryIncomeNonSS: makeFromInt 73585, qualifiedIncome: makeFromInt 71783, itemizedDeductions: makeFromInt 8783, federalTaxDue: makeFromInt 22010, stateTaxDue: makeFromInt 6693 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41828, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36265, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6869, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30133, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92671, itemizedDeductions: makeFromInt 11626, federalTaxDue: makeFromInt 8765, stateTaxDue: makeFromInt 4379 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53114, itemizedDeductions: makeFromInt 20376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2281 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13104, federalTaxDue: makeFromInt 20858, stateTaxDue: makeFromInt 4306 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1703, ordinaryIncomeNonSS: makeFromInt 22190, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28184, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 5435 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15132, ordinaryIncomeNonSS: makeFromInt 75356, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10582, stateTaxDue: makeFromInt 3513 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18310, ordinaryIncomeNonSS: makeFromInt 8012, qualifiedIncome: makeFromInt 54933, itemizedDeductions: makeFromInt 9393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7742, ordinaryIncomeNonSS: makeFromInt 29752, qualifiedIncome: makeFromInt 69215, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4053, stateTaxDue: makeFromInt 4452 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38382, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18101, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5470, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56712, itemizedDeductions: makeFromInt 9303, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18811, ordinaryIncomeNonSS: makeFromInt 100930, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20190, stateTaxDue: makeFromInt 4801 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47927, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 578, federalTaxDue: makeFromInt 39013, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74004, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1388, stateTaxDue: makeFromInt 3325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29674, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48607, ordinaryIncomeNonSS: makeFromInt 35241, qualifiedIncome: makeFromInt 84181, itemizedDeductions: makeFromInt 8935, federalTaxDue: makeFromInt 20644, stateTaxDue: makeFromInt 5516 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79713, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2192, stateTaxDue: makeFromInt 3617 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31969, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12230, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50860, qualifiedIncome: makeFromInt 83, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3272, stateTaxDue: makeFromInt 2172 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11361, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22444, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4439, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11994, stateTaxDue: makeFromInt 4776 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39966, ordinaryIncomeNonSS: makeFromInt 139258, qualifiedIncome: makeFromInt 64495, itemizedDeductions: makeFromInt 12671, federalTaxDue: makeFromInt 36477, stateTaxDue: makeFromInt 9813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18403, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21014, federalTaxDue: makeFromInt 32399, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26215, ordinaryIncomeNonSS: makeFromInt 5632, qualifiedIncome: makeFromInt 25380, itemizedDeductions: makeFromInt 21883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 28830, ordinaryIncomeNonSS: makeFromInt 17146, qualifiedIncome: makeFromInt 3965, itemizedDeductions: makeFromInt 24284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29686, ordinaryIncomeNonSS: makeFromInt 141942, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6413, federalTaxDue: makeFromInt 29174, stateTaxDue: makeFromInt 6790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119910, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13186, stateTaxDue: makeFromInt 5687 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34502, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31883, stateTaxDue: makeFromInt 8970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11693, ordinaryIncomeNonSS: makeFromInt 5852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140453, qualifiedIncome: makeFromInt 62489, itemizedDeductions: makeFromInt 14366, federalTaxDue: makeFromInt 28310, stateTaxDue: makeFromInt 9772 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22372, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 355, stateTaxDue: makeFromInt 3811 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47794, ordinaryIncomeNonSS: makeFromInt 90224, qualifiedIncome: makeFromInt 43785, itemizedDeductions: makeFromInt 27699, federalTaxDue: makeFromInt 24175, stateTaxDue: makeFromInt 6245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32988, ordinaryIncomeNonSS: makeFromInt 122306, qualifiedIncome: makeFromInt 80402, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33371, stateTaxDue: makeFromInt 9560 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66732, itemizedDeductions: makeFromInt 3622, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50495, itemizedDeductions: makeFromInt 11714, federalTaxDue: makeFromInt 1927, stateTaxDue: makeFromInt 2147 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11302, qualifiedIncome: makeFromInt 50901, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 75, stateTaxDue: makeFromInt 2622 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58772, itemizedDeductions: makeFromInt 3996, federalTaxDue: makeFromInt 696, stateTaxDue: makeFromInt 2345 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27336, qualifiedIncome: makeFromInt 3473, itemizedDeductions: makeFromInt 8030, federalTaxDue: makeFromInt 1034, stateTaxDue: makeFromInt 1085 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3458, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21060, federalTaxDue: makeFromInt 13487, stateTaxDue: makeFromInt 5308 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142228, qualifiedIncome: makeFromInt 25670, itemizedDeductions: makeFromInt 5689, federalTaxDue: makeFromInt 27367, stateTaxDue: makeFromInt 7720 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25798, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24100, itemizedDeductions: makeFromInt 3089, federalTaxDue: makeFromInt 35754, stateTaxDue: makeFromInt 8655 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37932, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11339, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137821, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9809, federalTaxDue: makeFromInt 27746, stateTaxDue: makeFromInt 6804 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14041, qualifiedIncome: makeFromInt 36447, itemizedDeductions: makeFromInt 148, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1949 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 47940, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65150, itemizedDeductions: makeFromInt 13440, federalTaxDue: makeFromInt 915, stateTaxDue: makeFromInt 2783 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92274, itemizedDeductions: makeFromInt 7921, federalTaxDue: makeFromInt 37607, stateTaxDue: makeFromInt 11539 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81651, qualifiedIncome: makeFromInt 64976, itemizedDeductions: makeFromInt 20174, federalTaxDue: makeFromInt 15125, stateTaxDue: makeFromInt 6956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17406, ordinaryIncomeNonSS: makeFromInt 103558, qualifiedIncome: makeFromInt 31718, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17676, stateTaxDue: makeFromInt 6246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75189, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35689, stateTaxDue: makeFromInt 10934 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31001, qualifiedIncome: makeFromInt 13618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2784, stateTaxDue: makeFromInt 1756 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70007, qualifiedIncome: makeFromInt 36814, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2031, stateTaxDue: makeFromInt 4795 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1036, qualifiedIncome: makeFromInt 23772, itemizedDeductions: makeFromInt 14894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28593, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5656, itemizedDeductions: makeFromInt 8374, federalTaxDue: makeFromInt 31773, stateTaxDue: makeFromInt 7388 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72400, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3244 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108702, qualifiedIncome: makeFromInt 93817, itemizedDeductions: makeFromInt 8461, federalTaxDue: makeFromInt 28628, stateTaxDue: makeFromInt 9880 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11514, ordinaryIncomeNonSS: makeFromInt 65896, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9825, stateTaxDue: makeFromInt 2904 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6984, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6223, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47383, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44774, ordinaryIncomeNonSS: makeFromInt 133219, qualifiedIncome: makeFromInt 9197, itemizedDeductions: makeFromInt 6737, federalTaxDue: makeFromInt 27714, stateTaxDue: makeFromInt 6546 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32341, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76984, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33936, stateTaxDue: makeFromInt 10874 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28902, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2712, ordinaryIncomeNonSS: makeFromInt 18951, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26937, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36886, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32898, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149965, qualifiedIncome: makeFromInt 64182, itemizedDeductions: makeFromInt 16900, federalTaxDue: makeFromInt 25496, stateTaxDue: makeFromInt 10032 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34552, itemizedDeductions: makeFromInt 6850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1253 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13301, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42959, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86942, itemizedDeductions: makeFromInt 7368, federalTaxDue: makeFromInt 2663, stateTaxDue: makeFromInt 3781 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90640, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29472, stateTaxDue: makeFromInt 11357 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108694, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20833, stateTaxDue: makeFromInt 9760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3151, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37795, ordinaryIncomeNonSS: makeFromInt 131894, qualifiedIncome: makeFromInt 78713, itemizedDeductions: makeFromInt 24812, federalTaxDue: makeFromInt 36325, stateTaxDue: makeFromInt 10155 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33809, ordinaryIncomeNonSS: makeFromInt 103268, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5018, federalTaxDue: makeFromInt 16910, stateTaxDue: makeFromInt 4588 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16577, ordinaryIncomeNonSS: makeFromInt 103597, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26918, federalTaxDue: makeFromInt 14883, stateTaxDue: makeFromInt 4725 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135251, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45426, stateTaxDue: makeFromInt 11188 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37645, ordinaryIncomeNonSS: makeFromInt 146605, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35003, stateTaxDue: makeFromInt 7048 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16266, ordinaryIncomeNonSS: makeFromInt 119308, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7635, federalTaxDue: makeFromInt 12166, stateTaxDue: makeFromInt 5490 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44986, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38922, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1287, stateTaxDue: makeFromInt 1491 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20096, ordinaryIncomeNonSS: makeFromInt 110326, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11246, federalTaxDue: makeFromInt 18344, stateTaxDue: makeFromInt 5141 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89201, qualifiedIncome: makeFromInt 37334, itemizedDeductions: makeFromInt 27616, federalTaxDue: makeFromInt 6435, stateTaxDue: makeFromInt 5852 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1803, qualifiedIncome: makeFromInt 643, itemizedDeductions: makeFromInt 7344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73664, qualifiedIncome: makeFromInt 76305, itemizedDeductions: makeFromInt 27021, federalTaxDue: makeFromInt 25971, stateTaxDue: makeFromInt 7243 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18193, federalTaxDue: makeFromInt 7100, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39680, qualifiedIncome: makeFromInt 63123, itemizedDeductions: makeFromInt 20755, federalTaxDue: makeFromInt 6551, stateTaxDue: makeFromInt 4896 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98960, qualifiedIncome: makeFromInt 98555, itemizedDeductions: makeFromInt 2213, federalTaxDue: makeFromInt 28780, stateTaxDue: makeFromInt 9201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25463, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9848, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36016, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12407, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26509, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15882, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84729, itemizedDeductions: makeFromInt 26376, federalTaxDue: makeFromInt 37520, stateTaxDue: makeFromInt 11522 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9425, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55466, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1626, stateTaxDue: makeFromInt 2318 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18540, itemizedDeductions: makeFromInt 9906, federalTaxDue: makeFromInt 27548, stateTaxDue: makeFromInt 8172 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70023, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4597, stateTaxDue: makeFromInt 3314 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 686, federalTaxDue: makeFromInt 40226, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44069, ordinaryIncomeNonSS: makeFromInt 107334, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20397, stateTaxDue: makeFromInt 5112 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24446, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71119, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20016, federalTaxDue: makeFromInt 16894, stateTaxDue: makeFromInt 8278 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32221, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24605, federalTaxDue: makeFromInt 5983, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48189, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48550, itemizedDeductions: makeFromInt 14244, federalTaxDue: makeFromInt 6888, stateTaxDue: makeFromInt 2252 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44402, qualifiedIncome: makeFromInt 39091, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2460, stateTaxDue: makeFromInt 3600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7347, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80205, itemizedDeductions: makeFromInt 2175, federalTaxDue: makeFromInt 4471, stateTaxDue: makeFromInt 3744 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41243, ordinaryIncomeNonSS: makeFromInt 68615, qualifiedIncome: makeFromInt 3850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8172, stateTaxDue: makeFromInt 3148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12288, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22673, stateTaxDue: makeFromInt 7624 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35669, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73600, itemizedDeductions: makeFromInt 16042, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3205 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27296, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 205, federalTaxDue: makeFromInt 9903, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25808, ordinaryIncomeNonSS: makeFromInt 68541, qualifiedIncome: makeFromInt 20442, itemizedDeductions: makeFromInt 18555, federalTaxDue: makeFromInt 11756, stateTaxDue: makeFromInt 4110 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49798, qualifiedIncome: makeFromInt 13294, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12086, stateTaxDue: makeFromInt 2580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31785, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34141, itemizedDeductions: makeFromInt 16741, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1032 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9162, ordinaryIncomeNonSS: makeFromInt 149899, qualifiedIncome: makeFromInt 16637, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28106, stateTaxDue: makeFromInt 7752 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12280, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 39 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48811, ordinaryIncomeNonSS: makeFromInt 134203, qualifiedIncome: makeFromInt 93306, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 53329, stateTaxDue: makeFromInt 11379 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17348, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81214, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4622, stateTaxDue: makeFromInt 3795 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25258, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17044, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29969, federalTaxDue: makeFromInt 23293, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33427, qualifiedIncome: makeFromInt 2821, itemizedDeductions: makeFromInt 2742, federalTaxDue: makeFromInt 4688, stateTaxDue: makeFromInt 1400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6531, ordinaryIncomeNonSS: makeFromInt 124178, qualifiedIncome: makeFromInt 32545, itemizedDeductions: makeFromInt 16183, federalTaxDue: makeFromInt 24041, stateTaxDue: makeFromInt 7564 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94263, itemizedDeductions: makeFromInt 14490, federalTaxDue: makeFromInt 37399, stateTaxDue: makeFromInt 11838 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27661, qualifiedIncome: makeFromInt 68917, itemizedDeductions: makeFromInt 13771, federalTaxDue: makeFromInt 2628, stateTaxDue: makeFromInt 4254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23298, itemizedDeductions: makeFromInt 27357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 637 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2388, ordinaryIncomeNonSS: makeFromInt 124274, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17361, stateTaxDue: makeFromInt 5991 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29249, qualifiedIncome: makeFromInt 72503, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7423, stateTaxDue: makeFromInt 4843 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74151, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4617, stateTaxDue: makeFromInt 3453 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6801, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100637, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17478, federalTaxDue: makeFromInt 32839, stateTaxDue: makeFromInt 9688 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15522, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11569, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 324 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39964, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25493, itemizedDeductions: makeFromInt 8531, federalTaxDue: makeFromInt 41990, stateTaxDue: makeFromInt 8603 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34822, itemizedDeductions: makeFromInt 26125, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1286 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21200, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9580, stateTaxDue: makeFromInt 5295 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44720, ordinaryIncomeNonSS: makeFromInt 31923, qualifiedIncome: makeFromInt 41459, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4123, stateTaxDue: makeFromInt 2994 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58930, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17040, federalTaxDue: makeFromInt 20074, stateTaxDue: makeFromInt 7602 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47244, ordinaryIncomeNonSS: makeFromInt 24014, qualifiedIncome: makeFromInt 44446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13959, stateTaxDue: makeFromInt 3033 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34531, ordinaryIncomeNonSS: makeFromInt 48838, qualifiedIncome: makeFromInt 46439, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17473, stateTaxDue: makeFromInt 4512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29863, qualifiedIncome: makeFromInt 97497, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25899, stateTaxDue: makeFromInt 6271 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14936, ordinaryIncomeNonSS: makeFromInt 17427, qualifiedIncome: makeFromInt 91780, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6147, stateTaxDue: makeFromInt 5019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7941, qualifiedIncome: makeFromInt 36733, itemizedDeductions: makeFromInt 7062, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100681, qualifiedIncome: makeFromInt 54057, itemizedDeductions: makeFromInt 17316, federalTaxDue: makeFromInt 22235, stateTaxDue: makeFromInt 7545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 179 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35443, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72727, itemizedDeductions: makeFromInt 3653, federalTaxDue: makeFromInt 47999, stateTaxDue: makeFromInt 11012 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18996, qualifiedIncome: makeFromInt 59521, itemizedDeductions: makeFromInt 9269, federalTaxDue: makeFromInt 14311, stateTaxDue: makeFromInt 3471 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115889, qualifiedIncome: makeFromInt 29624, itemizedDeductions: makeFromInt 12595, federalTaxDue: makeFromInt 19502, stateTaxDue: makeFromInt 6870 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24122, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2851, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30461, ordinaryIncomeNonSS: makeFromInt 83439, qualifiedIncome: makeFromInt 10045, itemizedDeductions: makeFromInt 29316, federalTaxDue: makeFromInt 14969, stateTaxDue: makeFromInt 4499 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10837, qualifiedIncome: makeFromInt 38870, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2713, stateTaxDue: makeFromInt 2110 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23831, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26488, federalTaxDue: makeFromInt 38126, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13411, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148179, qualifiedIncome: makeFromInt 23169, itemizedDeductions: makeFromInt 4837, federalTaxDue: makeFromInt 18951, stateTaxDue: makeFromInt 8092 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16305, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22398, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 36924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1351 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2341, ordinaryIncomeNonSS: makeFromInt 102820, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25843, stateTaxDue: makeFromInt 9566 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1215, ordinaryIncomeNonSS: makeFromInt 56251, qualifiedIncome: makeFromInt 76931, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10339, stateTaxDue: makeFromInt 6084 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3723, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49499, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14838, federalTaxDue: makeFromInt 3661, stateTaxDue: makeFromInt 2220 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43525, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35047, ordinaryIncomeNonSS: makeFromInt 130809, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38913, stateTaxDue: makeFromInt 11165 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134561, qualifiedIncome: makeFromInt 68261, itemizedDeductions: makeFromInt 14400, federalTaxDue: makeFromInt 43607, stateTaxDue: makeFromInt 10020 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16142, ordinaryIncomeNonSS: makeFromInt 7662, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110440, qualifiedIncome: makeFromInt 6687, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13085, stateTaxDue: makeFromInt 5281 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19436, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13887, ordinaryIncomeNonSS: makeFromInt 4786, qualifiedIncome: makeFromInt 58461, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2687 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15701, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11270, federalTaxDue: makeFromInt 24077, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14438, ordinaryIncomeNonSS: makeFromInt 147583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18044, stateTaxDue: makeFromInt 6904 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5670, federalTaxDue: makeFromInt 11083, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30185, ordinaryIncomeNonSS: makeFromInt 63356, qualifiedIncome: makeFromInt 18051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12220, stateTaxDue: makeFromInt 3927 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5773, ordinaryIncomeNonSS: makeFromInt 87233, qualifiedIncome: makeFromInt 45295, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17209, stateTaxDue: makeFromInt 6310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43353, ordinaryIncomeNonSS: makeFromInt 24357, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3198, stateTaxDue: makeFromInt 895 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18558, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12044, stateTaxDue: makeFromInt 5253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7770, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1227 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44814, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13481, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5488, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 45853, ordinaryIncomeNonSS: makeFromInt 14476, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16105, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 85 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4749, ordinaryIncomeNonSS: makeFromInt 55217, qualifiedIncome: makeFromInt 37344, itemizedDeductions: makeFromInt 5699, federalTaxDue: makeFromInt 9301, stateTaxDue: makeFromInt 4292 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38598, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1801, stateTaxDue: makeFromInt 1555 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36286, ordinaryIncomeNonSS: makeFromInt 86343, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14499, stateTaxDue: makeFromInt 3942 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63208, qualifiedIncome: makeFromInt 8717, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3316, stateTaxDue: makeFromInt 3121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20966, ordinaryIncomeNonSS: makeFromInt 62922, qualifiedIncome: makeFromInt 78597, itemizedDeductions: makeFromInt 28740, federalTaxDue: makeFromInt 15204, stateTaxDue: makeFromInt 6789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43942, ordinaryIncomeNonSS: makeFromInt 40904, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6017, stateTaxDue: makeFromInt 1637 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42288, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29788, federalTaxDue: makeFromInt 10479, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96892, itemizedDeductions: makeFromInt 8307, federalTaxDue: makeFromInt 10212, stateTaxDue: makeFromInt 4391 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20785, ordinaryIncomeNonSS: makeFromInt 41304, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9684, federalTaxDue: makeFromInt 2225, stateTaxDue: makeFromInt 1390 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16513, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82433, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6365, stateTaxDue: makeFromInt 3867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60490, qualifiedIncome: makeFromInt 9418, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3978, stateTaxDue: makeFromInt 3015 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15834, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38663, ordinaryIncomeNonSS: makeFromInt 146524, qualifiedIncome: makeFromInt 81266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44537, stateTaxDue: makeFromInt 11066 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7453, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 118 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40823, ordinaryIncomeNonSS: makeFromInt 15935, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14091, federalTaxDue: makeFromInt 429, stateTaxDue: makeFromInt 466 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 37629, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12012, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11471, ordinaryIncomeNonSS: makeFromInt 133703, qualifiedIncome: makeFromInt 85532, itemizedDeductions: makeFromInt 19763, federalTaxDue: makeFromInt 35362, stateTaxDue: makeFromInt 10507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90575, qualifiedIncome: makeFromInt 97760, itemizedDeductions: makeFromInt 23744, federalTaxDue: makeFromInt 32527, stateTaxDue: makeFromInt 9156 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38121, ordinaryIncomeNonSS: makeFromInt 75105, qualifiedIncome: makeFromInt 85787, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23621, stateTaxDue: makeFromInt 7670 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21929, itemizedDeductions: makeFromInt 7325, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 721 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6700, qualifiedIncome: makeFromInt 56709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1254, stateTaxDue: makeFromInt 2915 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1013, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29281, itemizedDeductions: makeFromInt 25656, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 841 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42816, ordinaryIncomeNonSS: makeFromInt 120351, qualifiedIncome: makeFromInt 47542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35997, stateTaxDue: makeFromInt 8256 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21999, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41914, itemizedDeductions: makeFromInt 2810, federalTaxDue: makeFromInt 35542, stateTaxDue: makeFromInt 9141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7459, ordinaryIncomeNonSS: makeFromInt 82875, qualifiedIncome: makeFromInt 90376, itemizedDeductions: makeFromInt 2884, federalTaxDue: makeFromInt 18243, stateTaxDue: makeFromInt 8183 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13416, ordinaryIncomeNonSS: makeFromInt 83391, qualifiedIncome: makeFromInt 35324, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8019, stateTaxDue: makeFromInt 5461 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20957, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25829, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10132, ordinaryIncomeNonSS: makeFromInt 25984, qualifiedIncome: makeFromInt 49568, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1064, stateTaxDue: makeFromInt 3302 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14962, ordinaryIncomeNonSS: makeFromInt 26709, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2679, stateTaxDue: makeFromInt 1138 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3677, ordinaryIncomeNonSS: makeFromInt 101652, qualifiedIncome: makeFromInt 7932, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12026, stateTaxDue: makeFromInt 4904 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18805, ordinaryIncomeNonSS: makeFromInt 139591, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34455, stateTaxDue: makeFromInt 11305 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97984, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10582, stateTaxDue: makeFromInt 4644 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34225, ordinaryIncomeNonSS: makeFromInt 36516, qualifiedIncome: makeFromInt 56247, itemizedDeductions: makeFromInt 7471, federalTaxDue: makeFromInt 14045, stateTaxDue: makeFromInt 4383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130877, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16987, federalTaxDue: makeFromInt 36757, stateTaxDue: makeFromInt 11428 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 13225, ordinaryIncomeNonSS: makeFromInt 145117, qualifiedIncome: makeFromInt 84053, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30678, stateTaxDue: makeFromInt 11035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85221, itemizedDeductions: makeFromInt 16276, federalTaxDue: makeFromInt 1488, stateTaxDue: makeFromInt 3693 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3135, itemizedDeductions: makeFromInt 19830, federalTaxDue: makeFromInt 34758, stateTaxDue: makeFromInt 7202 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 21346, ordinaryIncomeNonSS: makeFromInt 88365, qualifiedIncome: makeFromInt 90830, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27632, stateTaxDue: makeFromInt 8690 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21862, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12280, stateTaxDue: makeFromInt 5991 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24503, ordinaryIncomeNonSS: makeFromInt 27256, qualifiedIncome: makeFromInt 90305, itemizedDeductions: makeFromInt 3283, federalTaxDue: makeFromInt 10308, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17075, itemizedDeductions: makeFromInt 1547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 379 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2018, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18491, ordinaryIncomeNonSS: makeFromInt 59969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12982, federalTaxDue: makeFromInt 9653, stateTaxDue: makeFromInt 2604 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44331, ordinaryIncomeNonSS: makeFromInt 45712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13840, federalTaxDue: makeFromInt 9577, stateTaxDue: makeFromInt 1985 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34375, ordinaryIncomeNonSS: makeFromInt 60809, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17075, federalTaxDue: makeFromInt 25207, stateTaxDue: makeFromInt 7575 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1210, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26583, itemizedDeductions: makeFromInt 6787, federalTaxDue: makeFromInt 27494, stateTaxDue: makeFromInt 8254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41467, ordinaryIncomeNonSS: makeFromInt 66431, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12799, stateTaxDue: makeFromInt 2939 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82630, qualifiedIncome: makeFromInt 40060, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11652, stateTaxDue: makeFromInt 5760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28259, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22702, ordinaryIncomeNonSS: makeFromInt 63161, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14661, federalTaxDue: makeFromInt 23729, stateTaxDue: makeFromInt 7974 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24008, qualifiedIncome: makeFromInt 19191, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 701, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 46258, ordinaryIncomeNonSS: makeFromInt 126277, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34307, stateTaxDue: makeFromInt 10639 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7146, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6625, ordinaryIncomeNonSS: makeFromInt 88864, qualifiedIncome: makeFromInt 6354, itemizedDeductions: makeFromInt 13248, federalTaxDue: makeFromInt 11624, stateTaxDue: makeFromInt 4186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35486, ordinaryIncomeNonSS: makeFromInt 31595, qualifiedIncome: makeFromInt 29673, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3409, stateTaxDue: makeFromInt 2472 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11367, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8679, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24247, stateTaxDue: makeFromInt 7644 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47547, ordinaryIncomeNonSS: makeFromInt 49256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5323, stateTaxDue: makeFromInt 1788 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41934, ordinaryIncomeNonSS: makeFromInt 25947, qualifiedIncome: makeFromInt 84739, itemizedDeductions: makeFromInt 14586, federalTaxDue: makeFromInt 17375, stateTaxDue: makeFromInt 5298 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17863, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149353, qualifiedIncome: makeFromInt 63245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34099, stateTaxDue: makeFromInt 10175 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12439, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20887, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 486 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9242, qualifiedIncome: makeFromInt 2290, itemizedDeductions: makeFromInt 3023, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11700, ordinaryIncomeNonSS: makeFromInt 72949, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3969, stateTaxDue: makeFromInt 3068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9893, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 76 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101476, qualifiedIncome: makeFromInt 21854, itemizedDeductions: makeFromInt 9036, federalTaxDue: makeFromInt 26182, stateTaxDue: makeFromInt 5885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18025, ordinaryIncomeNonSS: makeFromInt 70434, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10573, stateTaxDue: makeFromInt 3164 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42326, ordinaryIncomeNonSS: makeFromInt 133520, qualifiedIncome: makeFromInt 52967, itemizedDeductions: makeFromInt 29604, federalTaxDue: makeFromInt 28110, stateTaxDue: makeFromInt 8849 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37602, ordinaryIncomeNonSS: makeFromInt 79008, qualifiedIncome: makeFromInt 6410, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13160, stateTaxDue: makeFromInt 3696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44685, ordinaryIncomeNonSS: makeFromInt 78615, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14934, stateTaxDue: makeFromInt 3663 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96670, itemizedDeductions: makeFromInt 14104, federalTaxDue: makeFromInt 8853, stateTaxDue: makeFromInt 4502 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7474, ordinaryIncomeNonSS: makeFromInt 141623, qualifiedIncome: makeFromInt 81130, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34563, stateTaxDue: makeFromInt 10683 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32191, itemizedDeductions: makeFromInt 2542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1035 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26414, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14245, federalTaxDue: makeFromInt 27746, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24296, ordinaryIncomeNonSS: makeFromInt 40663, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8041, stateTaxDue: makeFromInt 6358 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6638, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38447, itemizedDeductions: makeFromInt 24409, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1667 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124531, qualifiedIncome: makeFromInt 48970, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26000, stateTaxDue: makeFromInt 8420 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14492, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123938, qualifiedIncome: makeFromInt 75118, itemizedDeductions: makeFromInt 25972, federalTaxDue: makeFromInt 37827, stateTaxDue: makeFromInt 9498 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86208, itemizedDeductions: makeFromInt 3701, federalTaxDue: makeFromInt 5877, stateTaxDue: makeFromInt 3855 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7081, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6776, federalTaxDue: makeFromInt 22673, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38619, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22974, itemizedDeductions: makeFromInt 25736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2329, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24082, ordinaryIncomeNonSS: makeFromInt 146991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24099, stateTaxDue: makeFromInt 6775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4313, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26442, federalTaxDue: makeFromInt 22336, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10371, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17417, ordinaryIncomeNonSS: makeFromInt 106022, qualifiedIncome: makeFromInt 58183, itemizedDeductions: makeFromInt 1717, federalTaxDue: makeFromInt 20537, stateTaxDue: makeFromInt 7735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12217, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 187, stateTaxDue: makeFromInt 399 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2243, ordinaryIncomeNonSS: makeFromInt 8860, qualifiedIncome: makeFromInt 89647, itemizedDeductions: makeFromInt 22297, federalTaxDue: makeFromInt 60, stateTaxDue: makeFromInt 4450 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9717, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49727, itemizedDeductions: makeFromInt 4275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11567, ordinaryIncomeNonSS: makeFromInt 133487, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30268, stateTaxDue: makeFromInt 6583 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8125, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78975, qualifiedIncome: makeFromInt 62034, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20009, stateTaxDue: makeFromInt 6845 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14742, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12475, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9087, federalTaxDue: makeFromInt 13176, stateTaxDue: makeFromInt 5049 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6267, ordinaryIncomeNonSS: makeFromInt 813, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59397, qualifiedIncome: makeFromInt 88042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8959, stateTaxDue: makeFromInt 6697 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78714, itemizedDeductions: makeFromInt 10036, federalTaxDue: makeFromInt 6115, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12090, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17740, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4575, itemizedDeductions: makeFromInt 26496, federalTaxDue: makeFromInt 25862, stateTaxDue: makeFromInt 7435 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31461, ordinaryIncomeNonSS: makeFromInt 9684, qualifiedIncome: makeFromInt 16942, itemizedDeductions: makeFromInt 15628, federalTaxDue: makeFromInt 79, stateTaxDue: makeFromInt 756 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8064, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26610, federalTaxDue: makeFromInt 18976, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58593, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1229, stateTaxDue: makeFromInt 2641 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3954, ordinaryIncomeNonSS: makeFromInt 54617, qualifiedIncome: makeFromInt 45569, itemizedDeductions: makeFromInt 20869, federalTaxDue: makeFromInt 10642, stateTaxDue: makeFromInt 4885 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132907, qualifiedIncome: makeFromInt 99123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29786, stateTaxDue: makeFromInt 11127 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9809, ordinaryIncomeNonSS: makeFromInt 110005, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8483, federalTaxDue: makeFromInt 10257, stateTaxDue: makeFromInt 5025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17108, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 424 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13804, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43753, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2769, federalTaxDue: makeFromInt 35428, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3038, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59642, itemizedDeductions: makeFromInt 7376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2389 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47514, ordinaryIncomeNonSS: makeFromInt 41467, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24182, stateTaxDue: makeFromInt 6818 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56055, itemizedDeductions: makeFromInt 8119, federalTaxDue: makeFromInt 35655, stateTaxDue: makeFromInt 9982 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55488, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1133, stateTaxDue: makeFromInt 2519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10046, itemizedDeductions: makeFromInt 7649, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131858, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25777, federalTaxDue: makeFromInt 26335, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21965, ordinaryIncomeNonSS: makeFromInt 93412, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15832, stateTaxDue: makeFromInt 4216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41320, qualifiedIncome: makeFromInt 46927, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2422, stateTaxDue: makeFromInt 3950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14734, ordinaryIncomeNonSS: makeFromInt 134136, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8267, federalTaxDue: makeFromInt 19995, stateTaxDue: makeFromInt 6188 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123816, qualifiedIncome: makeFromInt 48803, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22345, stateTaxDue: makeFromInt 8056 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12819, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26194, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9644, ordinaryIncomeNonSS: makeFromInt 84583, qualifiedIncome: makeFromInt 15646, itemizedDeductions: makeFromInt 3067, federalTaxDue: makeFromInt 6865, stateTaxDue: makeFromInt 4536 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51215, qualifiedIncome: makeFromInt 98874, itemizedDeductions: makeFromInt 10656, federalTaxDue: makeFromInt 11992, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40645, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24371, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19160, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27618, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23285, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43393, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91859, itemizedDeductions: makeFromInt 452, federalTaxDue: makeFromInt 45891, stateTaxDue: makeFromInt 11718 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9361, ordinaryIncomeNonSS: makeFromInt 149970, qualifiedIncome: makeFromInt 60995, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27546, stateTaxDue: makeFromInt 10106 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1665, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146091, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22970, federalTaxDue: makeFromInt 21310, stateTaxDue: makeFromInt 7002 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11583, ordinaryIncomeNonSS: makeFromInt 146516, qualifiedIncome: makeFromInt 5612, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24016, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120553, qualifiedIncome: makeFromInt 86181, itemizedDeductions: makeFromInt 2570, federalTaxDue: makeFromInt 37288, stateTaxDue: makeFromInt 9762 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47758, ordinaryIncomeNonSS: makeFromInt 88931, qualifiedIncome: makeFromInt 13560, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22752, stateTaxDue: makeFromInt 4670 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38856, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29155, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38898, qualifiedIncome: makeFromInt 936, itemizedDeductions: makeFromInt 3409, federalTaxDue: makeFromInt 3808, stateTaxDue: makeFromInt 1807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8428, ordinaryIncomeNonSS: makeFromInt 18824, qualifiedIncome: makeFromInt 21392, itemizedDeductions: makeFromInt 20541, federalTaxDue: makeFromInt 140, stateTaxDue: makeFromInt 1827 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22885, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2007, itemizedDeductions: makeFromInt 3189, federalTaxDue: makeFromInt 26198, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27701, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82209, itemizedDeductions: makeFromInt 2856, federalTaxDue: makeFromInt 11726, stateTaxDue: makeFromInt 3856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31104, qualifiedIncome: makeFromInt 39273, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6786, stateTaxDue: makeFromInt 3161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48467, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32702, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1015 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6267, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17755, ordinaryIncomeNonSS: makeFromInt 70085, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10428, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89584, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21272, federalTaxDue: makeFromInt 18233, stateTaxDue: makeFromInt 4120 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131277, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29160, stateTaxDue: makeFromInt 11346 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130397, qualifiedIncome: makeFromInt 34924, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18823, stateTaxDue: makeFromInt 7591 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30973, ordinaryIncomeNonSS: makeFromInt 109860, qualifiedIncome: makeFromInt 40129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26976, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22835, federalTaxDue: makeFromInt 17111, stateTaxDue: makeFromInt 5732 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50420, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50405, qualifiedIncome: makeFromInt 81507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18011, stateTaxDue: makeFromInt 6503 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33460, ordinaryIncomeNonSS: makeFromInt 36995, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20493, stateTaxDue: makeFromInt 6558 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49669, itemizedDeductions: makeFromInt 13546, federalTaxDue: makeFromInt 1758, stateTaxDue: makeFromInt 2309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1195, ordinaryIncomeNonSS: makeFromInt 131471, qualifiedIncome: makeFromInt 78296, itemizedDeductions: makeFromInt 16776, federalTaxDue: makeFromInt 29907, stateTaxDue: makeFromInt 10147 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47375, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60888, itemizedDeductions: makeFromInt 5569, federalTaxDue: makeFromInt 1297, stateTaxDue: makeFromInt 2369 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9436, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43619, ordinaryIncomeNonSS: makeFromInt 74517, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2138, federalTaxDue: makeFromInt 17032, stateTaxDue: makeFromInt 3372 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5360, ordinaryIncomeNonSS: makeFromInt 65060, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29383, federalTaxDue: makeFromInt 4495, stateTaxDue: makeFromInt 2869 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78393, itemizedDeductions: makeFromInt 22169, federalTaxDue: makeFromInt 2046, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45530, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41362, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1231, stateTaxDue: makeFromInt 1745 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4712, ordinaryIncomeNonSS: makeFromInt 88238, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22668, federalTaxDue: makeFromInt 11055, stateTaxDue: makeFromInt 3957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1854, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77897, itemizedDeductions: makeFromInt 3228, federalTaxDue: makeFromInt 30363, stateTaxDue: makeFromInt 10720 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121981, qualifiedIncome: makeFromInt 56066, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17831, stateTaxDue: makeFromInt 8427 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 254, ordinaryIncomeNonSS: makeFromInt 135990, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10881, federalTaxDue: makeFromInt 12841, stateTaxDue: makeFromInt 6325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14714, ordinaryIncomeNonSS: makeFromInt 73334, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24878, federalTaxDue: makeFromInt 24999, stateTaxDue: makeFromInt 8616 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16799, ordinaryIncomeNonSS: makeFromInt 35047, qualifiedIncome: makeFromInt 94343, itemizedDeductions: makeFromInt 24236, federalTaxDue: makeFromInt 14469, stateTaxDue: makeFromInt 6015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107014, qualifiedIncome: makeFromInt 82426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25371, stateTaxDue: makeFromInt 8897 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16083, ordinaryIncomeNonSS: makeFromInt 144690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3895, federalTaxDue: makeFromInt 19030, stateTaxDue: makeFromInt 6560 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37553, itemizedDeductions: makeFromInt 14109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1262 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31931, ordinaryIncomeNonSS: makeFromInt 67496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14619, stateTaxDue: makeFromInt 3095 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61212, itemizedDeductions: makeFromInt 4088, federalTaxDue: makeFromInt 33949, stateTaxDue: makeFromInt 10106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64347, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9135, stateTaxDue: makeFromInt 2742 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24069, qualifiedIncome: makeFromInt 5905, itemizedDeductions: makeFromInt 10681, federalTaxDue: makeFromInt 357, stateTaxDue: makeFromInt 924 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43189, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29228, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1206 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88505, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30310, stateTaxDue: makeFromInt 9389 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36068, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91270, itemizedDeductions: makeFromInt 15438, federalTaxDue: makeFromInt 9887, stateTaxDue: makeFromInt 4309 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1773, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7395, federalTaxDue: makeFromInt 23622, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102514, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15311, stateTaxDue: makeFromInt 4871 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31826, itemizedDeductions: makeFromInt 12614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 916 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96833, qualifiedIncome: makeFromInt 89089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30711, stateTaxDue: makeFromInt 9258 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67396, itemizedDeductions: makeFromInt 6524, federalTaxDue: makeFromInt 3858, stateTaxDue: makeFromInt 3115 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13819, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11515, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23041, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38984, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1374 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84935, itemizedDeductions: makeFromInt 28761, federalTaxDue: makeFromInt 45438, stateTaxDue: makeFromInt 11292 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112329, qualifiedIncome: makeFromInt 83194, itemizedDeductions: makeFromInt 25568, federalTaxDue: makeFromInt 22419, stateTaxDue: makeFromInt 9301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 152, stateTaxDue: makeFromInt 1429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36542, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78280, itemizedDeductions: makeFromInt 23017, federalTaxDue: makeFromInt 7093, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45901, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4999, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49127, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13235, federalTaxDue: makeFromInt 9508, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67103, itemizedDeductions: makeFromInt 14742, federalTaxDue: makeFromInt 2813, stateTaxDue: makeFromInt 2900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78248, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21737, federalTaxDue: makeFromInt 13656, stateTaxDue: makeFromInt 8438 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145252, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23628, stateTaxDue: makeFromInt 6808 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123929, qualifiedIncome: makeFromInt 18893, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17883, stateTaxDue: makeFromInt 6566 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21353, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89556, itemizedDeductions: makeFromInt 24065, federalTaxDue: makeFromInt 5873, stateTaxDue: makeFromInt 4221 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 33427, ordinaryIncomeNonSS: makeFromInt 8544, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1834, stateTaxDue: makeFromInt 4952 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87273, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34319, stateTaxDue: makeFromInt 11289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36181, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87843, itemizedDeductions: makeFromInt 23732, federalTaxDue: makeFromInt 7878, stateTaxDue: makeFromInt 3937 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34773, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1345 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127125, qualifiedIncome: makeFromInt 28011, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20912, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18087, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24758, ordinaryIncomeNonSS: makeFromInt 81208, qualifiedIncome: makeFromInt 83695, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25451, stateTaxDue: makeFromInt 7984 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29772, ordinaryIncomeNonSS: makeFromInt 135137, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50063, stateTaxDue: makeFromInt 11768 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14182, ordinaryIncomeNonSS: makeFromInt 30094, qualifiedIncome: makeFromInt 36063, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1485, stateTaxDue: makeFromInt 2633 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2138 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 48769, ordinaryIncomeNonSS: makeFromInt 26314, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 801, stateTaxDue: makeFromInt 893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25006, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11434, federalTaxDue: makeFromInt 36653, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44343, ordinaryIncomeNonSS: makeFromInt 45480, qualifiedIncome: makeFromInt 55071, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15964, stateTaxDue: makeFromInt 4577 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28879, qualifiedIncome: makeFromInt 14422, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1690 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28227, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 168, stateTaxDue: makeFromInt 1011 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34630, ordinaryIncomeNonSS: makeFromInt 103560, qualifiedIncome: makeFromInt 62422, itemizedDeductions: makeFromInt 20531, federalTaxDue: makeFromInt 30376, stateTaxDue: makeFromInt 7844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146944, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19766, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 354, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59181, itemizedDeductions: makeFromInt 23177, federalTaxDue: makeFromInt 33943, stateTaxDue: makeFromInt 10321 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13659, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11086, federalTaxDue: makeFromInt 26046, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22671, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41163, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2784, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44248, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44962, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39387, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20285, federalTaxDue: makeFromInt 25159, stateTaxDue: makeFromInt 6884 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93966, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4023 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16075, ordinaryIncomeNonSS: makeFromInt 139117, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16488, stateTaxDue: makeFromInt 6481 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53471, itemizedDeductions: makeFromInt 15707, federalTaxDue: makeFromInt 768, stateTaxDue: makeFromInt 2419 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43531, ordinaryIncomeNonSS: makeFromInt 52171, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10792, stateTaxDue: makeFromInt 2354 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9385, ordinaryIncomeNonSS: makeFromInt 56130, qualifiedIncome: makeFromInt 23311, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9983, stateTaxDue: makeFromInt 3517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31417, ordinaryIncomeNonSS: makeFromInt 149670, qualifiedIncome: makeFromInt 84106, itemizedDeductions: makeFromInt 5850, federalTaxDue: makeFromInt 44120, stateTaxDue: makeFromInt 11372 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3335, ordinaryIncomeNonSS: makeFromInt 83528, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6919, stateTaxDue: makeFromInt 3811 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6968, ordinaryIncomeNonSS: makeFromInt 49256, qualifiedIncome: makeFromInt 30413, itemizedDeductions: makeFromInt 1756, federalTaxDue: makeFromInt 7039, stateTaxDue: makeFromInt 3635 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19749, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112148, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2739, federalTaxDue: makeFromInt 14565, stateTaxDue: makeFromInt 5232 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23119, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 514 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11862, ordinaryIncomeNonSS: makeFromInt 117606, qualifiedIncome: makeFromInt 13211, itemizedDeductions: makeFromInt 9499, federalTaxDue: makeFromInt 22387, stateTaxDue: makeFromInt 6243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16795, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67933, itemizedDeductions: makeFromInt 20326, federalTaxDue: makeFromInt 36707, stateTaxDue: makeFromInt 10666 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47829, qualifiedIncome: makeFromInt 64723, itemizedDeductions: makeFromInt 14849, federalTaxDue: makeFromInt 1863, stateTaxDue: makeFromInt 4953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12866, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68653, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3053 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 48597, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45170, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33895, qualifiedIncome: makeFromInt 25901, itemizedDeductions: makeFromInt 15144, federalTaxDue: makeFromInt 12977, stateTaxDue: makeFromInt 2535 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12784, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68836, itemizedDeductions: makeFromInt 15272, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2967 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110316, qualifiedIncome: makeFromInt 20848, itemizedDeductions: makeFromInt 15382, federalTaxDue: makeFromInt 19250, stateTaxDue: makeFromInt 6303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131269, qualifiedIncome: makeFromInt 92046, itemizedDeductions: makeFromInt 20382, federalTaxDue: makeFromInt 33267, stateTaxDue: makeFromInt 10911 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127646, qualifiedIncome: makeFromInt 33002, itemizedDeductions: makeFromInt 11510, federalTaxDue: makeFromInt 20817, stateTaxDue: makeFromInt 7457 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37699, qualifiedIncome: makeFromInt 91583, itemizedDeductions: makeFromInt 27795, federalTaxDue: makeFromInt 3906, stateTaxDue: makeFromInt 6145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 49373, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89197, itemizedDeductions: makeFromInt 23830, federalTaxDue: makeFromInt 5606, stateTaxDue: makeFromInt 4100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38592, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20253, federalTaxDue: makeFromInt 5830, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32639, ordinaryIncomeNonSS: makeFromInt 82935, qualifiedIncome: makeFromInt 77476, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26534, stateTaxDue: makeFromInt 7555 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17266, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68940, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4694, stateTaxDue: makeFromInt 3088 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115005, qualifiedIncome: makeFromInt 60254, itemizedDeductions: makeFromInt 29507, federalTaxDue: makeFromInt 30866, stateTaxDue: makeFromInt 8188 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22649, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9207, qualifiedIncome: makeFromInt 60146, itemizedDeductions: makeFromInt 19248, federalTaxDue: makeFromInt 1267, stateTaxDue: makeFromInt 3190 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46348, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10689, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94565, itemizedDeductions: makeFromInt 21942, federalTaxDue: makeFromInt 35413, stateTaxDue: makeFromInt 11653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31323, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39594, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22661, qualifiedIncome: makeFromInt 48003, itemizedDeductions: makeFromInt 3886, federalTaxDue: makeFromInt 4720, stateTaxDue: makeFromInt 3379 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4385, ordinaryIncomeNonSS: makeFromInt 84505, qualifiedIncome: makeFromInt 77672, itemizedDeductions: makeFromInt 2278, federalTaxDue: makeFromInt 15189, stateTaxDue: makeFromInt 7434 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8520, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17410, federalTaxDue: makeFromInt 15444, stateTaxDue: makeFromInt 5685 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35496, ordinaryIncomeNonSS: makeFromInt 48746, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13600, federalTaxDue: makeFromInt 16648, stateTaxDue: makeFromInt 6962 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41410, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30801, ordinaryIncomeNonSS: makeFromInt 4100, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 369, stateTaxDue: makeFromInt 1034 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90490, qualifiedIncome: makeFromInt 7718, itemizedDeductions: makeFromInt 26408, federalTaxDue: makeFromInt 16093, stateTaxDue: makeFromInt 4435 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33438, ordinaryIncomeNonSS: makeFromInt 99536, qualifiedIncome: makeFromInt 17851, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18616, stateTaxDue: makeFromInt 5494 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49226, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 131, stateTaxDue: makeFromInt 2006 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44610, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9210, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 206 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25917, ordinaryIncomeNonSS: makeFromInt 8414, qualifiedIncome: makeFromInt 35806, itemizedDeductions: makeFromInt 17021, federalTaxDue: makeFromInt 2895, stateTaxDue: makeFromInt 2011 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41737, ordinaryIncomeNonSS: makeFromInt 62968, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9770, stateTaxDue: makeFromInt 2573 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49118, ordinaryIncomeNonSS: makeFromInt 114839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25663, federalTaxDue: makeFromInt 22530, stateTaxDue: makeFromInt 5167 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46989, qualifiedIncome: makeFromInt 94509, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12783, stateTaxDue: makeFromInt 6992 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4297, ordinaryIncomeNonSS: makeFromInt 43683, qualifiedIncome: makeFromInt 33211, itemizedDeductions: makeFromInt 13998, federalTaxDue: makeFromInt 6609, stateTaxDue: makeFromInt 3590 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15313, ordinaryIncomeNonSS: makeFromInt 24056, qualifiedIncome: makeFromInt 91548, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11661, stateTaxDue: makeFromInt 5325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11466, ordinaryIncomeNonSS: makeFromInt 142875, qualifiedIncome: makeFromInt 10641, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23453, stateTaxDue: makeFromInt 7101 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26855, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44039, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22314, itemizedDeductions: makeFromInt 23854, federalTaxDue: makeFromInt 19688, stateTaxDue: makeFromInt 8141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19947, ordinaryIncomeNonSS: makeFromInt 15819, qualifiedIncome: makeFromInt 13876, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 964 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40283, ordinaryIncomeNonSS: makeFromInt 34370, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1771, stateTaxDue: makeFromInt 1044 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 39673, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29482, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1055 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3926, ordinaryIncomeNonSS: makeFromInt 40815, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11159, federalTaxDue: makeFromInt 1668, stateTaxDue: makeFromInt 1366 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44897, ordinaryIncomeNonSS: makeFromInt 117954, qualifiedIncome: makeFromInt 22874, itemizedDeductions: makeFromInt 886, federalTaxDue: makeFromInt 20653, stateTaxDue: makeFromInt 6566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138219, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48680, stateTaxDue: makeFromInt 11656 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46118, ordinaryIncomeNonSS: makeFromInt 139982, qualifiedIncome: makeFromInt 17279, itemizedDeductions: makeFromInt 27924, federalTaxDue: makeFromInt 24888, stateTaxDue: makeFromInt 7388 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21166, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83527, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3567, stateTaxDue: makeFromInt 3601 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11409, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10796, itemizedDeductions: makeFromInt 11630, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 165 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19678, qualifiedIncome: makeFromInt 39011, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2359 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11691, ordinaryIncomeNonSS: makeFromInt 69599, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4833, federalTaxDue: makeFromInt 6264, stateTaxDue: makeFromInt 2905 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37869, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44020, ordinaryIncomeNonSS: makeFromInt 84962, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17975, stateTaxDue: makeFromInt 3884 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44192, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27835, ordinaryIncomeNonSS: makeFromInt 838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16493, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20978, ordinaryIncomeNonSS: makeFromInt 56935, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10256, federalTaxDue: makeFromInt 20212, stateTaxDue: makeFromInt 7555 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46400, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22288, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14350, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8375, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 343 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27001, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17912, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61664, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27318, federalTaxDue: makeFromInt 12846, stateTaxDue: makeFromInt 2716 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17373, ordinaryIncomeNonSS: makeFromInt 25156, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 303, stateTaxDue: makeFromInt 855 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30539, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4063, federalTaxDue: makeFromInt 13509, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28479, ordinaryIncomeNonSS: makeFromInt 142899, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20579, federalTaxDue: makeFromInt 29341, stateTaxDue: makeFromInt 6994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30679, ordinaryIncomeNonSS: makeFromInt 81448, qualifiedIncome: makeFromInt 75615, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25482, stateTaxDue: makeFromInt 7786 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63779, itemizedDeductions: makeFromInt 27263, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2514 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36234, ordinaryIncomeNonSS: makeFromInt 70870, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25152, stateTaxDue: makeFromInt 7969 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4116, qualifiedIncome: makeFromInt 61393, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2600 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39432, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2823, stateTaxDue: makeFromInt 1517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41126, ordinaryIncomeNonSS: makeFromInt 90119, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29599, stateTaxDue: makeFromInt 9043 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84085, qualifiedIncome: makeFromInt 7476, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18476, stateTaxDue: makeFromInt 4200 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92007, qualifiedIncome: makeFromInt 54239, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17717, stateTaxDue: makeFromInt 7234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19853, ordinaryIncomeNonSS: makeFromInt 28608, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14574, federalTaxDue: makeFromInt 1325, stateTaxDue: makeFromInt 1010 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18388, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 12749, ordinaryIncomeNonSS: makeFromInt 8191, qualifiedIncome: makeFromInt 39253, itemizedDeductions: makeFromInt 8288, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1897 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23788, ordinaryIncomeNonSS: makeFromInt 140823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23878, stateTaxDue: makeFromInt 6666 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71428, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27849, stateTaxDue: makeFromInt 8196 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44977, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10863, federalTaxDue: makeFromInt 9252, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16761, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2701, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51873, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32852, stateTaxDue: makeFromInt 9639 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45079, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23, itemizedDeductions: makeFromInt 13472, federalTaxDue: makeFromInt 36272, stateTaxDue: makeFromInt 7223 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36019, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38494, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21903, federalTaxDue: makeFromInt 1464, stateTaxDue: makeFromInt 1350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76869, itemizedDeductions: makeFromInt 24262, federalTaxDue: makeFromInt 5883, stateTaxDue: makeFromInt 3492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9496, ordinaryIncomeNonSS: makeFromInt 85639, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25808, stateTaxDue: makeFromInt 9019 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148335, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18472, stateTaxDue: makeFromInt 6942 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47757, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65164, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 984, stateTaxDue: makeFromInt 2583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136140, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5430, federalTaxDue: makeFromInt 32365, stateTaxDue: makeFromInt 11390 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97873, qualifiedIncome: makeFromInt 91223, itemizedDeductions: makeFromInt 2648, federalTaxDue: makeFromInt 27442, stateTaxDue: makeFromInt 8780 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72491, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4827, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16484, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145547, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45756, stateTaxDue: makeFromInt 11702 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1219, itemizedDeductions: makeFromInt 27201, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17729, ordinaryIncomeNonSS: makeFromInt 135601, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42791, stateTaxDue: makeFromInt 11587 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43397, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23903, federalTaxDue: makeFromInt 32453, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27698, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69524, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 716, stateTaxDue: makeFromInt 2901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28998, stateTaxDue: makeFromInt 6517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2464, ordinaryIncomeNonSS: makeFromInt 15801, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15419, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5559 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 802, ordinaryIncomeNonSS: makeFromInt 52547, qualifiedIncome: makeFromInt 67253, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7792, stateTaxDue: makeFromInt 5415 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26624, ordinaryIncomeNonSS: makeFromInt 82769, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3809, federalTaxDue: makeFromInt 13202, stateTaxDue: makeFromInt 3670 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47353, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 409, stateTaxDue: makeFromInt 1913 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44776, itemizedDeductions: makeFromInt 26699, federalTaxDue: makeFromInt 500, stateTaxDue: makeFromInt 1864 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19887, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57733, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33626, stateTaxDue: makeFromInt 9942 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61786, itemizedDeductions: makeFromInt 10883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2702 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3000, qualifiedIncome: makeFromInt 86829, itemizedDeductions: makeFromInt 25400, federalTaxDue: makeFromInt 5772, stateTaxDue: makeFromInt 4036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66116, qualifiedIncome: makeFromInt 25409, itemizedDeductions: makeFromInt 26978, federalTaxDue: makeFromInt 1906, stateTaxDue: makeFromInt 4015 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110188, qualifiedIncome: makeFromInt 53484, itemizedDeductions: makeFromInt 4093, federalTaxDue: makeFromInt 18900, stateTaxDue: makeFromInt 7694 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24566, ordinaryIncomeNonSS: makeFromInt 76808, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11649, stateTaxDue: makeFromInt 3693 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6488, qualifiedIncome: makeFromInt 48960, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 92, stateTaxDue: makeFromInt 2317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30150, ordinaryIncomeNonSS: makeFromInt 79714, qualifiedIncome: makeFromInt 58020, itemizedDeductions: makeFromInt 29387, federalTaxDue: makeFromInt 18400, stateTaxDue: makeFromInt 6596 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1396, ordinaryIncomeNonSS: makeFromInt 145405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15104, federalTaxDue: makeFromInt 23402, stateTaxDue: makeFromInt 6967 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18559, itemizedDeductions: makeFromInt 20631, federalTaxDue: makeFromInt 25142, stateTaxDue: makeFromInt 7853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141132, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26887, federalTaxDue: makeFromInt 34091, stateTaxDue: makeFromInt 11849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60531, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41219, stateTaxDue: makeFromInt 10513 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2825, ordinaryIncomeNonSS: makeFromInt 22487, qualifiedIncome: makeFromInt 14469, itemizedDeductions: makeFromInt 12662, federalTaxDue: makeFromInt 39, stateTaxDue: makeFromInt 1473 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46674, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8439, federalTaxDue: makeFromInt 3322, stateTaxDue: makeFromInt 2079 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130429, qualifiedIncome: makeFromInt 15837, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13963, stateTaxDue: makeFromInt 6807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54882, qualifiedIncome: makeFromInt 69538, itemizedDeductions: makeFromInt 21049, federalTaxDue: makeFromInt 15033, stateTaxDue: makeFromInt 5693 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29139, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 982 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21598, federalTaxDue: makeFromInt 42855, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41459, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4554, federalTaxDue: makeFromInt 3554, stateTaxDue: makeFromInt 1768 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7491, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56871, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 416, stateTaxDue: makeFromInt 2469 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9625, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11985, stateTaxDue: makeFromInt 4097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8597, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23468, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2807, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38391, ordinaryIncomeNonSS: makeFromInt 120667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25705, stateTaxDue: makeFromInt 5705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45993, ordinaryIncomeNonSS: makeFromInt 76800, qualifiedIncome: makeFromInt 39431, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17918, stateTaxDue: makeFromInt 5479 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15732, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36787, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15776, federalTaxDue: makeFromInt 1229, stateTaxDue: makeFromInt 1464 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104284, qualifiedIncome: makeFromInt 2567, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8191, stateTaxDue: makeFromInt 4899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27619, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 942 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30316, ordinaryIncomeNonSS: makeFromInt 103756, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 418, federalTaxDue: makeFromInt 11371, stateTaxDue: makeFromInt 4513 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81837, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35925, stateTaxDue: makeFromInt 11217 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4704, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19295, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31413, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 949 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47019, itemizedDeductions: makeFromInt 8063, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1829 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24600, ordinaryIncomeNonSS: makeFromInt 95457, qualifiedIncome: makeFromInt 73961, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18999, stateTaxDue: makeFromInt 7796 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3168, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99555, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7681, stateTaxDue: makeFromInt 4723 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1818, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19939, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31967, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3975, stateTaxDue: makeFromInt 1223 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3723, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12953, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3129, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86052, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3458, stateTaxDue: makeFromInt 3928 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11596, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146524, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1881, federalTaxDue: makeFromInt 23541, stateTaxDue: makeFromInt 6922 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97843, qualifiedIncome: makeFromInt 44668, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15327, stateTaxDue: makeFromInt 6751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25223, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22945, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5923, ordinaryIncomeNonSS: makeFromInt 140425, qualifiedIncome: makeFromInt 80434, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28700, stateTaxDue: makeFromInt 10368 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4806, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24134, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14524, ordinaryIncomeNonSS: makeFromInt 131311, qualifiedIncome: makeFromInt 57896, itemizedDeductions: makeFromInt 23967, federalTaxDue: makeFromInt 30308, stateTaxDue: makeFromInt 9303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68825, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1859, stateTaxDue: makeFromInt 2857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42548, ordinaryIncomeNonSS: makeFromInt 6299, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59774, qualifiedIncome: makeFromInt 80234, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18360, stateTaxDue: makeFromInt 6848 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98355, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9106, stateTaxDue: makeFromInt 4588 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121593, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24100, federalTaxDue: makeFromInt 31798, stateTaxDue: makeFromInt 10625 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14209, ordinaryIncomeNonSS: makeFromInt 89991, qualifiedIncome: makeFromInt 7880, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15491, stateTaxDue: makeFromInt 4439 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34493, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1535 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5827, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29739, ordinaryIncomeNonSS: makeFromInt 18483, qualifiedIncome: makeFromInt 9744, itemizedDeductions: makeFromInt 21875, federalTaxDue: makeFromInt 479, stateTaxDue: makeFromInt 1093 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12031, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33472, ordinaryIncomeNonSS: makeFromInt 35014, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4274, stateTaxDue: makeFromInt 1296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14070, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 371 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14049, itemizedDeductions: makeFromInt 14557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 288 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6208, ordinaryIncomeNonSS: makeFromInt 41708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1745, stateTaxDue: makeFromInt 1510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45959, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1104, stateTaxDue: makeFromInt 1916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2711, itemizedDeductions: makeFromInt 19990, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6094, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17016, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22402, ordinaryIncomeNonSS: makeFromInt 140931, qualifiedIncome: makeFromInt 96047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39158, stateTaxDue: makeFromInt 11274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45884, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77924, itemizedDeductions: makeFromInt 1972, federalTaxDue: makeFromInt 54748, stateTaxDue: makeFromInt 11400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1471, ordinaryIncomeNonSS: makeFromInt 46765, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3711, federalTaxDue: makeFromInt 4537, stateTaxDue: makeFromInt 2038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21682, ordinaryIncomeNonSS: makeFromInt 11572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 243 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115789, qualifiedIncome: makeFromInt 56917, itemizedDeductions: makeFromInt 24849, federalTaxDue: makeFromInt 23598, stateTaxDue: makeFromInt 8380 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14394, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36356, ordinaryIncomeNonSS: makeFromInt 84528, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4672, federalTaxDue: makeFromInt 18304, stateTaxDue: makeFromInt 3971 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8342, qualifiedIncome: makeFromInt 44225, itemizedDeductions: makeFromInt 3102, federalTaxDue: makeFromInt 3432, stateTaxDue: makeFromInt 2253 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3839, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9472, itemizedDeductions: makeFromInt 16270, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37315, itemizedDeductions: makeFromInt 2305, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1411 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67386, itemizedDeductions: makeFromInt 26615, federalTaxDue: makeFromInt 6906, stateTaxDue: makeFromInt 3114 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40938, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20859, federalTaxDue: makeFromInt 47192, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23254, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1183, ordinaryIncomeNonSS: makeFromInt 4918, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4955 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21834, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 44469, ordinaryIncomeNonSS: makeFromInt 32632, qualifiedIncome: makeFromInt 99585, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13629, stateTaxDue: makeFromInt 6294 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90174, qualifiedIncome: makeFromInt 15588, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13350, stateTaxDue: makeFromInt 4833 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39412, ordinaryIncomeNonSS: makeFromInt 46355, qualifiedIncome: makeFromInt 71930, itemizedDeductions: makeFromInt 8719, federalTaxDue: makeFromInt 15683, stateTaxDue: makeFromInt 5339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1320, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28816, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21814, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3966, ordinaryIncomeNonSS: makeFromInt 2395, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34458, ordinaryIncomeNonSS: makeFromInt 79807, qualifiedIncome: makeFromInt 73014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21243, stateTaxDue: makeFromInt 7345 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72504, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19182, federalTaxDue: makeFromInt 17077, stateTaxDue: makeFromInt 3170 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12970, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46279, ordinaryIncomeNonSS: makeFromInt 51353, qualifiedIncome: makeFromInt 33584, itemizedDeductions: makeFromInt 4083, federalTaxDue: makeFromInt 12774, stateTaxDue: makeFromInt 3872 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5938, qualifiedIncome: makeFromInt 43031, itemizedDeductions: makeFromInt 22663, federalTaxDue: makeFromInt 203, stateTaxDue: makeFromInt 2193 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11901, ordinaryIncomeNonSS: makeFromInt 149940, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33088, stateTaxDue: makeFromInt 12022 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58149, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43689, stateTaxDue: makeFromInt 10152 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121220, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1826, federalTaxDue: makeFromInt 32497, stateTaxDue: makeFromInt 5835 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38438, ordinaryIncomeNonSS: makeFromInt 136680, qualifiedIncome: makeFromInt 16535, itemizedDeductions: makeFromInt 28330, federalTaxDue: makeFromInt 30500, stateTaxDue: makeFromInt 7515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7699, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43210, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64720, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35305, stateTaxDue: makeFromInt 10298 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5484, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25575, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57387, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1048, stateTaxDue: makeFromInt 2376 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 583, ordinaryIncomeNonSS: makeFromInt 85424, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6738, stateTaxDue: makeFromInt 3596 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 3517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24794, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73968, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25006, federalTaxDue: makeFromInt 20686, stateTaxDue: makeFromInt 8443 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28248, qualifiedIncome: makeFromInt 41367, itemizedDeductions: makeFromInt 21174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3000 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100918, qualifiedIncome: makeFromInt 17961, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11471, stateTaxDue: makeFromInt 5369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 463, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17676, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 677 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41240, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1500, federalTaxDue: makeFromInt 38470, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3685, ordinaryIncomeNonSS: makeFromInt 1331, qualifiedIncome: makeFromInt 59043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1296, stateTaxDue: makeFromInt 2528 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54234, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12518, federalTaxDue: makeFromInt 2564, stateTaxDue: makeFromInt 2037 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9094, ordinaryIncomeNonSS: makeFromInt 57408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3997, stateTaxDue: makeFromInt 2615 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89118, qualifiedIncome: makeFromInt 21787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15488, stateTaxDue: makeFromInt 5090 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12024, stateTaxDue: makeFromInt 4579 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22701, qualifiedIncome: makeFromInt 91155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1171, stateTaxDue: makeFromInt 5018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29403, ordinaryIncomeNonSS: makeFromInt 49366, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 251, federalTaxDue: makeFromInt 7723, stateTaxDue: makeFromInt 2089 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73533, qualifiedIncome: makeFromInt 93738, itemizedDeductions: makeFromInt 25193, federalTaxDue: makeFromInt 10401, stateTaxDue: makeFromInt 7689 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 5865, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44181, ordinaryIncomeNonSS: makeFromInt 83463, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34752, stateTaxDue: makeFromInt 8918 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42140, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37841, stateTaxDue: makeFromInt 11520 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57094, itemizedDeductions: makeFromInt 6511, federalTaxDue: makeFromInt 40389, stateTaxDue: makeFromInt 9980 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1730, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43856, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9453, ordinaryIncomeNonSS: makeFromInt 107618, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18047, stateTaxDue: makeFromInt 5060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7434, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32764, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1120 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63810, qualifiedIncome: makeFromInt 82797, itemizedDeductions: makeFromInt 17311, federalTaxDue: makeFromInt 12981, stateTaxDue: makeFromInt 6955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 851, ordinaryIncomeNonSS: makeFromInt 77289, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5357, federalTaxDue: makeFromInt 12687, stateTaxDue: makeFromInt 3717 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 430 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45562, qualifiedIncome: makeFromInt 96331, itemizedDeductions: makeFromInt 5409, federalTaxDue: makeFromInt 6333, stateTaxDue: makeFromInt 6584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 28002, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21154, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76634, itemizedDeductions: makeFromInt 4245, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 3256 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 29959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5057, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15396, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24125, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27988, stateTaxDue: makeFromInt 8131 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33838, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27521, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20569, itemizedDeductions: makeFromInt 9785, federalTaxDue: makeFromInt 33467, stateTaxDue: makeFromInt 8273 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81768, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 723, federalTaxDue: makeFromInt 24934, stateTaxDue: makeFromInt 3946 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17952, federalTaxDue: makeFromInt 13466, stateTaxDue: makeFromInt 3062 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18557, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48943, ordinaryIncomeNonSS: makeFromInt 10070, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27044, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52142, qualifiedIncome: makeFromInt 28441, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6263, stateTaxDue: makeFromInt 3774 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22586, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79621, itemizedDeductions: makeFromInt 18065, federalTaxDue: makeFromInt 2231, stateTaxDue: makeFromInt 3606 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17487, ordinaryIncomeNonSS: makeFromInt 8741, qualifiedIncome: makeFromInt 85251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 18303, ordinaryIncomeNonSS: makeFromInt 77010, qualifiedIncome: makeFromInt 61330, itemizedDeductions: makeFromInt 19942, federalTaxDue: makeFromInt 17550, stateTaxDue: makeFromInt 6607 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114161, qualifiedIncome: makeFromInt 17323, itemizedDeductions: makeFromInt 26741, federalTaxDue: makeFromInt 19212, stateTaxDue: makeFromInt 6481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14765, federalTaxDue: makeFromInt 23044, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2636, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32551, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 953 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36178, ordinaryIncomeNonSS: makeFromInt 13942, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 122 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91427, itemizedDeductions: makeFromInt 26078, federalTaxDue: makeFromInt 8107, stateTaxDue: makeFromInt 4196 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 25748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42513, qualifiedIncome: makeFromInt 81321, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10814, stateTaxDue: makeFromInt 5887 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108322, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27145, stateTaxDue: makeFromInt 10161 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87785, qualifiedIncome: makeFromInt 50470, itemizedDeductions: makeFromInt 26952, federalTaxDue: makeFromInt 26644, stateTaxDue: makeFromInt 6704 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14252, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18479, stateTaxDue: makeFromInt 7738 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2895, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19896, federalTaxDue: makeFromInt 22216, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39170, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11103, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34522, itemizedDeductions: makeFromInt 3718, federalTaxDue: makeFromInt 26008, stateTaxDue: makeFromInt 8758 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 43423, ordinaryIncomeNonSS: makeFromInt 60954, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8057, stateTaxDue: makeFromInt 2573 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51184, itemizedDeductions: makeFromInt 13045, federalTaxDue: makeFromInt 1888, stateTaxDue: makeFromInt 2386 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89492, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34652, stateTaxDue: makeFromInt 11400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21650, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43498, qualifiedIncome: makeFromInt 36343, itemizedDeductions: makeFromInt 5053, federalTaxDue: makeFromInt 1430, stateTaxDue: makeFromInt 3317 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9584, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9281, ordinaryIncomeNonSS: makeFromInt 18928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 423, stateTaxDue: makeFromInt 491 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145136, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25835, federalTaxDue: makeFromInt 31875, stateTaxDue: makeFromInt 7002 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12903, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117545, qualifiedIncome: makeFromInt 75628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30262, stateTaxDue: makeFromInt 9204 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18210, ordinaryIncomeNonSS: makeFromInt 8609, qualifiedIncome: makeFromInt 81369, itemizedDeductions: makeFromInt 8487, federalTaxDue: makeFromInt 5972, stateTaxDue: makeFromInt 4242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9469, ordinaryIncomeNonSS: makeFromInt 103745, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21441, stateTaxDue: makeFromInt 5067 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85164, qualifiedIncome: makeFromInt 76024, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16517, stateTaxDue: makeFromInt 7484 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45108, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44464, ordinaryIncomeNonSS: makeFromInt 123043, qualifiedIncome: makeFromInt 91581, itemizedDeductions: makeFromInt 26295, federalTaxDue: makeFromInt 36608, stateTaxDue: makeFromInt 10395 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126580, qualifiedIncome: makeFromInt 9647, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15894, stateTaxDue: makeFromInt 6295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69743, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6926, stateTaxDue: makeFromInt 3332 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40125, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55986, itemizedDeductions: makeFromInt 16850, federalTaxDue: makeFromInt 33092, stateTaxDue: makeFromInt 9824 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108556, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28346, stateTaxDue: makeFromInt 9853 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26267, ordinaryIncomeNonSS: makeFromInt 2878, qualifiedIncome: makeFromInt 15215, itemizedDeductions: makeFromInt 3995, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 430 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10015, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3042, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1656, ordinaryIncomeNonSS: makeFromInt 87649, qualifiedIncome: makeFromInt 68347, itemizedDeductions: makeFromInt 16273, federalTaxDue: makeFromInt 18650, stateTaxDue: makeFromInt 7507 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18462, ordinaryIncomeNonSS: makeFromInt 42416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23872, federalTaxDue: makeFromInt 16958, stateTaxDue: makeFromInt 6866 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59690, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37141, stateTaxDue: makeFromInt 10010 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 21150, ordinaryIncomeNonSS: makeFromInt 21681, qualifiedIncome: makeFromInt 64848, itemizedDeductions: makeFromInt 19444, federalTaxDue: makeFromInt 891, stateTaxDue: makeFromInt 3651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5707, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13877, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4910 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17760, ordinaryIncomeNonSS: makeFromInt 12090, qualifiedIncome: makeFromInt 62514, itemizedDeductions: makeFromInt 17997, federalTaxDue: makeFromInt 4422, stateTaxDue: makeFromInt 3275 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35605, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1994, stateTaxDue: makeFromInt 1325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147772, qualifiedIncome: makeFromInt 43727, itemizedDeductions: makeFromInt 6585, federalTaxDue: makeFromInt 37939, stateTaxDue: makeFromInt 9542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8226, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24788, ordinaryIncomeNonSS: makeFromInt 54218, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7911, stateTaxDue: makeFromInt 2337 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148823, qualifiedIncome: makeFromInt 30497, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28642, stateTaxDue: makeFromInt 8510 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30024, ordinaryIncomeNonSS: makeFromInt 28377, qualifiedIncome: makeFromInt 17934, itemizedDeductions: makeFromInt 15441, federalTaxDue: makeFromInt 5161, stateTaxDue: makeFromInt 2061 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10227, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3772, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 892 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35093, ordinaryIncomeNonSS: makeFromInt 132875, qualifiedIncome: makeFromInt 80523, itemizedDeductions: makeFromInt 25865, federalTaxDue: makeFromInt 37818, stateTaxDue: makeFromInt 10332 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96571, qualifiedIncome: makeFromInt 97358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25314, stateTaxDue: makeFromInt 9121 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8921, ordinaryIncomeNonSS: makeFromInt 68798, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20167, federalTaxDue: makeFromInt 20231, stateTaxDue: makeFromInt 7865 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47889, ordinaryIncomeNonSS: makeFromInt 74042, qualifiedIncome: makeFromInt 22743, itemizedDeductions: makeFromInt 963, federalTaxDue: makeFromInt 15428, stateTaxDue: makeFromInt 4283 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99497, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26819, federalTaxDue: makeFromInt 11779, stateTaxDue: makeFromInt 4720 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48353, qualifiedIncome: makeFromInt 51790, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11603, stateTaxDue: makeFromInt 4679 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 24102, ordinaryIncomeNonSS: makeFromInt 92623, qualifiedIncome: makeFromInt 96019, itemizedDeductions: makeFromInt 1682, federalTaxDue: makeFromInt 25920, stateTaxDue: makeFromInt 8968 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39456, ordinaryIncomeNonSS: makeFromInt 55347, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6992, federalTaxDue: makeFromInt 25729, stateTaxDue: makeFromInt 7312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67968, itemizedDeductions: makeFromInt 6772, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120118, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47188, stateTaxDue: makeFromInt 10879 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44388, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74226, itemizedDeductions: makeFromInt 26863, federalTaxDue: makeFromInt 7191, stateTaxDue: makeFromInt 3561 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24053, ordinaryIncomeNonSS: makeFromInt 89818, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36012, stateTaxDue: makeFromInt 9456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8230, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96251, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19702, federalTaxDue: makeFromInt 20292, stateTaxDue: makeFromInt 4460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13021, ordinaryIncomeNonSS: makeFromInt 120113, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12604, federalTaxDue: makeFromInt 25104, stateTaxDue: makeFromInt 5901 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25070, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21318, itemizedDeductions: makeFromInt 8736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 638 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33973, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12261, itemizedDeductions: makeFromInt 5789, federalTaxDue: makeFromInt 33120, stateTaxDue: makeFromInt 7649 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16168, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18074, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 473 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9471, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40162, itemizedDeductions: makeFromInt 29647, federalTaxDue: makeFromInt 26152, stateTaxDue: makeFromInt 9249 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22272, stateTaxDue: makeFromInt 6907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140747, qualifiedIncome: makeFromInt 97253, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33105, stateTaxDue: makeFromInt 11485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44680, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76072, itemizedDeductions: makeFromInt 10083, federalTaxDue: makeFromInt 50480, stateTaxDue: makeFromInt 11183 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27262, ordinaryIncomeNonSS: makeFromInt 6039, qualifiedIncome: makeFromInt 62683, itemizedDeductions: makeFromInt 2040, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2852 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141465, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34180, stateTaxDue: makeFromInt 11498 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101419, qualifiedIncome: makeFromInt 97653, itemizedDeductions: makeFromInt 2150, federalTaxDue: makeFromInt 30235, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68983, itemizedDeductions: makeFromInt 12366, federalTaxDue: makeFromInt 35137, stateTaxDue: makeFromInt 10719 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 976, qualifiedIncome: makeFromInt 25759, itemizedDeductions: makeFromInt 28676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 882 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4358, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36653, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12815, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32989, ordinaryIncomeNonSS: makeFromInt 11715, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 11 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26533, itemizedDeductions: makeFromInt 19084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 952 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26957, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 402, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148969, qualifiedIncome: makeFromInt 80723, itemizedDeductions: makeFromInt 9868, federalTaxDue: makeFromInt 39271, stateTaxDue: makeFromInt 11490 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47335, ordinaryIncomeNonSS: makeFromInt 140143, qualifiedIncome: makeFromInt 36864, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33956, stateTaxDue: makeFromInt 8475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19694, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28015, federalTaxDue: makeFromInt 23916, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19617, qualifiedIncome: makeFromInt 94783, itemizedDeductions: makeFromInt 20873, federalTaxDue: makeFromInt 7524, stateTaxDue: makeFromInt 5465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5445, ordinaryIncomeNonSS: makeFromInt 109041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19259, federalTaxDue: makeFromInt 14133, stateTaxDue: makeFromInt 5112 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3451, ordinaryIncomeNonSS: makeFromInt 14205, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10087, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 5335 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44419, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61878, itemizedDeductions: makeFromInt 15576, federalTaxDue: makeFromInt 46751, stateTaxDue: makeFromInt 10459 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18204, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24850, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5316, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 14893, ordinaryIncomeNonSS: makeFromInt 55868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13121, stateTaxDue: makeFromInt 7500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10217, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21080, ordinaryIncomeNonSS: makeFromInt 16076, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22696, federalTaxDue: makeFromInt 9710, stateTaxDue: makeFromInt 5229 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49066, ordinaryIncomeNonSS: makeFromInt 102304, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23329, stateTaxDue: makeFromInt 4660 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16765, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95197, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13283, stateTaxDue: makeFromInt 4305 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149504, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26108, federalTaxDue: makeFromInt 22253, stateTaxDue: makeFromInt 6900 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22702, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4428, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102083, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23500, federalTaxDue: makeFromInt 10243, stateTaxDue: makeFromInt 4529 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7425, ordinaryIncomeNonSS: makeFromInt 35434, qualifiedIncome: makeFromInt 6213, itemizedDeductions: makeFromInt 3257, federalTaxDue: makeFromInt 2530, stateTaxDue: makeFromInt 1558 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29938, federalTaxDue: makeFromInt 25391, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3220, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33915, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37462, itemizedDeductions: makeFromInt 11461, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1360 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36619, qualifiedIncome: makeFromInt 93964, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14468, stateTaxDue: makeFromInt 6109 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 25589, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20297, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86121, itemizedDeductions: makeFromInt 2063, federalTaxDue: makeFromInt 6858, stateTaxDue: makeFromInt 4051 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18007, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13986, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17467, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 462 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19644, itemizedDeductions: makeFromInt 2836, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 573 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 377, qualifiedIncome: makeFromInt 49573, itemizedDeductions: makeFromInt 14606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61602, itemizedDeductions: makeFromInt 4115, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2605 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23468, ordinaryIncomeNonSS: makeFromInt 96913, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23038, stateTaxDue: makeFromInt 9171 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57780, qualifiedIncome: makeFromInt 37583, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15484, stateTaxDue: makeFromInt 4193 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1481, itemizedDeductions: makeFromInt 14153, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12904, ordinaryIncomeNonSS: makeFromInt 130250, qualifiedIncome: makeFromInt 16839, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24740, stateTaxDue: makeFromInt 6951 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27105, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 44612, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96572, itemizedDeductions: makeFromInt 26596, federalTaxDue: makeFromInt 5197, stateTaxDue: makeFromInt 4154 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11266, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 506, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8666, ordinaryIncomeNonSS: makeFromInt 148209, qualifiedIncome: makeFromInt 48908, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29902, stateTaxDue: makeFromInt 9281 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 106, ordinaryIncomeNonSS: makeFromInt 15207, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9312, stateTaxDue: makeFromInt 5305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40467, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11314, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85406, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21964, federalTaxDue: makeFromInt 11080, stateTaxDue: makeFromInt 3595 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40171, ordinaryIncomeNonSS: makeFromInt 49027, qualifiedIncome: makeFromInt 72138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9763, stateTaxDue: makeFromInt 5383 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18393, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4785, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139517, qualifiedIncome: makeFromInt 7004, itemizedDeductions: makeFromInt 16338, federalTaxDue: makeFromInt 22184, stateTaxDue: makeFromInt 6951 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112070, qualifiedIncome: makeFromInt 32498, itemizedDeductions: makeFromInt 1164, federalTaxDue: makeFromInt 33381, stateTaxDue: makeFromInt 6945 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18159, ordinaryIncomeNonSS: makeFromInt 78616, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9832, federalTaxDue: makeFromInt 23476, stateTaxDue: makeFromInt 8556 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84454, itemizedDeductions: makeFromInt 15319, federalTaxDue: makeFromInt 7476, stateTaxDue: makeFromInt 3648 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117623, qualifiedIncome: makeFromInt 99859, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38636, stateTaxDue: makeFromInt 10499 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2516, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35024, itemizedDeductions: makeFromInt 20558, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1076 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24423, ordinaryIncomeNonSS: makeFromInt 40966, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4151, stateTaxDue: makeFromInt 1539 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9887, ordinaryIncomeNonSS: makeFromInt 34020, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 830, stateTaxDue: makeFromInt 1226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59334, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26373, federalTaxDue: makeFromInt 7800, stateTaxDue: makeFromInt 2492 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38622, ordinaryIncomeNonSS: makeFromInt 17665, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7083, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 408 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 308, stateTaxDue: makeFromInt 1849 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43842, ordinaryIncomeNonSS: makeFromInt 128681, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31999, stateTaxDue: makeFromInt 6134 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3688, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94881, itemizedDeductions: makeFromInt 2123, federalTaxDue: makeFromInt 6672, stateTaxDue: makeFromInt 4492 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 9078, ordinaryIncomeNonSS: makeFromInt 8825, qualifiedIncome: makeFromInt 8135, itemizedDeductions: makeFromInt 11980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 373 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27580, federalTaxDue: makeFromInt 23225, stateTaxDue: makeFromInt 5251 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 20152, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50896, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1870 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38088, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28295, federalTaxDue: makeFromInt 7980, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26347, ordinaryIncomeNonSS: makeFromInt 17789, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 479 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 8627, ordinaryIncomeNonSS: makeFromInt 116394, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14172, stateTaxDue: makeFromInt 5283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25942, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41613, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 865, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14716, ordinaryIncomeNonSS: makeFromInt 81800, qualifiedIncome: makeFromInt 43828, itemizedDeductions: makeFromInt 2809, federalTaxDue: makeFromInt 18496, stateTaxDue: makeFromInt 6026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87644, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8821, stateTaxDue: makeFromInt 3919 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1613, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35595, ordinaryIncomeNonSS: makeFromInt 56991, qualifiedIncome: makeFromInt 45898, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21880, stateTaxDue: makeFromInt 5023 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31428, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 19909, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88229, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1114, stateTaxDue: makeFromInt 3736 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9377, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77103, qualifiedIncome: makeFromInt 91140, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14830, stateTaxDue: makeFromInt 7737 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67148, qualifiedIncome: makeFromInt 3471, itemizedDeductions: makeFromInt 23338, federalTaxDue: makeFromInt 3789, stateTaxDue: makeFromInt 3056 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61124, qualifiedIncome: makeFromInt 39249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5723, stateTaxDue: makeFromInt 4644 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41960, ordinaryIncomeNonSS: makeFromInt 40570, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10009, federalTaxDue: makeFromInt 4118, stateTaxDue: makeFromInt 1620 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125601, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4266, federalTaxDue: makeFromInt 11823, stateTaxDue: makeFromInt 5805 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73326, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12048, stateTaxDue: makeFromInt 3211 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121228, qualifiedIncome: makeFromInt 41359, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24066, stateTaxDue: makeFromInt 7874 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 47369, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64208, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1416, stateTaxDue: makeFromInt 2535 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121774, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15253, federalTaxDue: makeFromInt 27628, stateTaxDue: makeFromInt 10414 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41937, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14697, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2759, stateTaxDue: makeFromInt 3532 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57105, itemizedDeductions: makeFromInt 11008, federalTaxDue: makeFromInt 451, stateTaxDue: makeFromInt 2280 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131381, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18621, stateTaxDue: makeFromInt 6272 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18503, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 10070, ordinaryIncomeNonSS: makeFromInt 131043, qualifiedIncome: makeFromInt 37813, itemizedDeductions: makeFromInt 28143, federalTaxDue: makeFromInt 19260, stateTaxDue: makeFromInt 7768 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 15396, ordinaryIncomeNonSS: makeFromInt 39515, qualifiedIncome: makeFromInt 41553, itemizedDeductions: makeFromInt 9556, federalTaxDue: makeFromInt 2625, stateTaxDue: makeFromInt 3378 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49646, ordinaryIncomeNonSS: makeFromInt 75719, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2472, federalTaxDue: makeFromInt 17116, stateTaxDue: makeFromInt 3531 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56415, qualifiedIncome: makeFromInt 21561, itemizedDeductions: makeFromInt 19926, federalTaxDue: makeFromInt 15526, stateTaxDue: makeFromInt 3644 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128771, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30279, stateTaxDue: makeFromInt 6119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19928, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29115, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2870 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75735, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20810, stateTaxDue: makeFromInt 8532 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5803, qualifiedIncome: makeFromInt 87415, itemizedDeductions: makeFromInt 25153, federalTaxDue: makeFromInt 5860, stateTaxDue: makeFromInt 4206 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117695, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30457, stateTaxDue: makeFromInt 5574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 9181, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42311, ordinaryIncomeNonSS: makeFromInt 143063, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22262, stateTaxDue: makeFromInt 6478 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4701, ordinaryIncomeNonSS: makeFromInt 85754, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7509, stateTaxDue: makeFromInt 3925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33103, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24718, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 32434, ordinaryIncomeNonSS: makeFromInt 116703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19098, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27859, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99438, itemizedDeductions: makeFromInt 9796, federalTaxDue: makeFromInt 3336, stateTaxDue: makeFromInt 4623 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42122, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46853, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33618, ordinaryIncomeNonSS: makeFromInt 135229, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29542, federalTaxDue: makeFromInt 39017, stateTaxDue: makeFromInt 11386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11063, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37883, stateTaxDue: makeFromInt 7765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28636, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58065, itemizedDeductions: makeFromInt 16940, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2528 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57042, itemizedDeductions: makeFromInt 23177, federalTaxDue: makeFromInt 44429, stateTaxDue: makeFromInt 10131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2787, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72226, itemizedDeductions: makeFromInt 19083, federalTaxDue: makeFromInt 4335, stateTaxDue: makeFromInt 3337 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31052, ordinaryIncomeNonSS: makeFromInt 51018, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10313, stateTaxDue: makeFromInt 2255 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98601, qualifiedIncome: makeFromInt 80916, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34769, stateTaxDue: makeFromInt 8721 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15755, ordinaryIncomeNonSS: makeFromInt 89025, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26250, stateTaxDue: makeFromInt 8876 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15929, ordinaryIncomeNonSS: makeFromInt 46457, qualifiedIncome: makeFromInt 27931, itemizedDeductions: makeFromInt 16352, federalTaxDue: makeFromInt 3256, stateTaxDue: makeFromInt 3244 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30358, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48912, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17310, federalTaxDue: makeFromInt 31206, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67747, itemizedDeductions: makeFromInt 16028, federalTaxDue: makeFromInt 35041, stateTaxDue: makeFromInt 10677 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31951, ordinaryIncomeNonSS: makeFromInt 38044, qualifiedIncome: makeFromInt 81900, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21724, stateTaxDue: makeFromInt 5893 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46185, ordinaryIncomeNonSS: makeFromInt 6291, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9694, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1712, ordinaryIncomeNonSS: makeFromInt 63100, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3828, stateTaxDue: makeFromInt 2565 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57762, itemizedDeductions: makeFromInt 19230, federalTaxDue: makeFromInt 34070, stateTaxDue: makeFromInt 10133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9641, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40437, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1362, itemizedDeductions: makeFromInt 27644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102902, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13275, stateTaxDue: makeFromInt 4901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1089, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27268, stateTaxDue: makeFromInt 7053 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15499, ordinaryIncomeNonSS: makeFromInt 48, qualifiedIncome: makeFromInt 800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25824, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25076, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38856, ordinaryIncomeNonSS: makeFromInt 105960, qualifiedIncome: makeFromInt 35119, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20742, stateTaxDue: makeFromInt 6379 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15588, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103137, qualifiedIncome: makeFromInt 73362, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25920, stateTaxDue: makeFromInt 8150 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21625, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 49484, ordinaryIncomeNonSS: makeFromInt 60628, qualifiedIncome: makeFromInt 63665, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18279, stateTaxDue: makeFromInt 5686 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30246, ordinaryIncomeNonSS: makeFromInt 93173, qualifiedIncome: makeFromInt 81141, itemizedDeductions: makeFromInt 6463, federalTaxDue: makeFromInt 29499, stateTaxDue: makeFromInt 8261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 2417, ordinaryIncomeNonSS: makeFromInt 148345, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21456, federalTaxDue: makeFromInt 18716, stateTaxDue: makeFromInt 6913 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69925, itemizedDeductions: makeFromInt 174, federalTaxDue: makeFromInt 2374, stateTaxDue: makeFromInt 3121 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16833, itemizedDeductions: makeFromInt 20057, federalTaxDue: makeFromInt 33953, stateTaxDue: makeFromInt 7767 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43014, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52112, stateTaxDue: makeFromInt 12201 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84190, itemizedDeductions: makeFromInt 19132, federalTaxDue: makeFromInt 5376, stateTaxDue: makeFromInt 3955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26122, ordinaryIncomeNonSS: makeFromInt 90970, qualifiedIncome: makeFromInt 73880, itemizedDeductions: makeFromInt 2212, federalTaxDue: makeFromInt 30335, stateTaxDue: makeFromInt 8061 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71822, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11340, federalTaxDue: makeFromInt 5372, stateTaxDue: makeFromInt 3112 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25625, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11661, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45641, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27884, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 34305, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7045, itemizedDeductions: makeFromInt 11899, federalTaxDue: makeFromInt 33416, stateTaxDue: makeFromInt 7560 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14233, ordinaryIncomeNonSS: makeFromInt 89687, qualifiedIncome: makeFromInt 11317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10689, stateTaxDue: makeFromInt 4498 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78186, itemizedDeductions: makeFromInt 22014, federalTaxDue: makeFromInt 6080, stateTaxDue: makeFromInt 3763 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4630, ordinaryIncomeNonSS: makeFromInt 42610, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2324, stateTaxDue: makeFromInt 1520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22040, ordinaryIncomeNonSS: makeFromInt 41171, qualifiedIncome: makeFromInt 48171, itemizedDeductions: makeFromInt 25031, federalTaxDue: makeFromInt 8250, stateTaxDue: makeFromInt 4210 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33049, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80727, itemizedDeductions: makeFromInt 27314, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3361 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48831, qualifiedIncome: makeFromInt 59008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6283, stateTaxDue: makeFromInt 5051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110431, qualifiedIncome: makeFromInt 38652, itemizedDeductions: makeFromInt 11548, federalTaxDue: makeFromInt 25388, stateTaxDue: makeFromInt 7379 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 39758, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38311, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24767, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45212, ordinaryIncomeNonSS: makeFromInt 136327, qualifiedIncome: makeFromInt 73537, itemizedDeductions: makeFromInt 16273, federalTaxDue: makeFromInt 39330, stateTaxDue: makeFromInt 10118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23901, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13177, ordinaryIncomeNonSS: makeFromInt 61969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5519, stateTaxDue: makeFromInt 2712 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 698, federalTaxDue: makeFromInt 875, stateTaxDue: makeFromInt 995 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20916, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98274, itemizedDeductions: makeFromInt 2294, federalTaxDue: makeFromInt 43838, stateTaxDue: makeFromInt 12111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52281, qualifiedIncome: makeFromInt 70852, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16882, stateTaxDue: makeFromInt 6055 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25709, ordinaryIncomeNonSS: makeFromInt 101808, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13836, federalTaxDue: makeFromInt 31037, stateTaxDue: makeFromInt 9515 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10299, stateTaxDue: makeFromInt 5395 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34657, itemizedDeductions: makeFromInt 377, federalTaxDue: makeFromInt 33854, stateTaxDue: makeFromInt 9071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 45613, ordinaryIncomeNonSS: makeFromInt 113845, qualifiedIncome: makeFromInt 55559, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29518, stateTaxDue: makeFromInt 8191 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32417, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12067, federalTaxDue: makeFromInt 30379, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 691, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58392, itemizedDeductions: makeFromInt 18604, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12437, ordinaryIncomeNonSS: makeFromInt 88664, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11296, stateTaxDue: makeFromInt 4058 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 5219, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5023, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34967, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56316, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25941, federalTaxDue: makeFromInt 11504, stateTaxDue: makeFromInt 2525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42702, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92772, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7462, stateTaxDue: makeFromInt 4283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43343, qualifiedIncome: makeFromInt 62768, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11871, stateTaxDue: makeFromInt 4861 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29837, ordinaryIncomeNonSS: makeFromInt 41803, qualifiedIncome: makeFromInt 88974, itemizedDeductions: makeFromInt 8802, federalTaxDue: makeFromInt 17107, stateTaxDue: makeFromInt 6164 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40179, ordinaryIncomeNonSS: makeFromInt 2824, qualifiedIncome: makeFromInt 3906, itemizedDeductions: makeFromInt 10791, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26003, federalTaxDue: makeFromInt 12366, stateTaxDue: makeFromInt 6894 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31225, ordinaryIncomeNonSS: makeFromInt 116782, qualifiedIncome: makeFromInt 90587, itemizedDeductions: makeFromInt 24019, federalTaxDue: makeFromInt 36301, stateTaxDue: makeFromInt 10113 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40932, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5786, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4613, stateTaxDue: makeFromInt 3807 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47113, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1981 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65967, qualifiedIncome: makeFromInt 61009, itemizedDeductions: makeFromInt 26019, federalTaxDue: makeFromInt 4088, stateTaxDue: makeFromInt 5674 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 32640, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 837, itemizedDeductions: makeFromInt 24449, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32094, ordinaryIncomeNonSS: makeFromInt 32535, qualifiedIncome: makeFromInt 20715, itemizedDeductions: makeFromInt 1560, federalTaxDue: makeFromInt 8880, stateTaxDue: makeFromInt 2408 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29600, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2913, stateTaxDue: makeFromInt 905 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14595, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 275 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97816, itemizedDeductions: makeFromInt 17463, federalTaxDue: makeFromInt 7052, stateTaxDue: makeFromInt 4438 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67601, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15396, stateTaxDue: makeFromInt 2925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106910, qualifiedIncome: makeFromInt 27937, itemizedDeductions: makeFromInt 6502, federalTaxDue: makeFromInt 31572, stateTaxDue: makeFromInt 6449 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37020, ordinaryIncomeNonSS: makeFromInt 5035, qualifiedIncome: makeFromInt 95779, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1087, stateTaxDue: makeFromInt 4566 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3322, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128467, qualifiedIncome: makeFromInt 71268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29717, stateTaxDue: makeFromInt 9636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 18158, ordinaryIncomeNonSS: makeFromInt 13163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 19 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13078, ordinaryIncomeNonSS: makeFromInt 15907, qualifiedIncome: makeFromInt 51264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5592, stateTaxDue: makeFromInt 2968 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31119, ordinaryIncomeNonSS: makeFromInt 58648, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27021, stateTaxDue: makeFromInt 7867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17294, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32771, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30110, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69681, qualifiedIncome: makeFromInt 31893, itemizedDeductions: makeFromInt 24066, federalTaxDue: makeFromInt 2877, stateTaxDue: makeFromInt 4527 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84373, qualifiedIncome: makeFromInt 43793, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5856, stateTaxDue: makeFromInt 5933 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29818, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20349, stateTaxDue: makeFromInt 8316 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127083, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29393, federalTaxDue: makeFromInt 22422, stateTaxDue: makeFromInt 5879 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97831, itemizedDeductions: makeFromInt 18783, federalTaxDue: makeFromInt 6635, stateTaxDue: makeFromInt 4317 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12451, ordinaryIncomeNonSS: makeFromInt 73152, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14095, stateTaxDue: makeFromInt 7983 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31716, ordinaryIncomeNonSS: makeFromInt 123013, qualifiedIncome: makeFromInt 7994, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25959, stateTaxDue: makeFromInt 6295 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42299, stateTaxDue: makeFromInt 12284 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3521, ordinaryIncomeNonSS: makeFromInt 100811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2803, federalTaxDue: makeFromInt 15220, stateTaxDue: makeFromInt 4786 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35341, qualifiedIncome: makeFromInt 1076, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 374, stateTaxDue: makeFromInt 1146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44501, ordinaryIncomeNonSS: makeFromInt 10381, qualifiedIncome: makeFromInt 45870, itemizedDeductions: makeFromInt 29777, federalTaxDue: makeFromInt 5083, stateTaxDue: makeFromInt 2644 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45874, ordinaryIncomeNonSS: makeFromInt 36978, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5403, stateTaxDue: makeFromInt 1594 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30332, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92900, itemizedDeductions: makeFromInt 3492, federalTaxDue: makeFromInt 44723, stateTaxDue: makeFromInt 11837 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59456, qualifiedIncome: makeFromInt 66742, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13983, stateTaxDue: makeFromInt 5855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 13275, ordinaryIncomeNonSS: makeFromInt 64581, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25608, federalTaxDue: makeFromInt 6004, stateTaxDue: makeFromInt 2845 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87031, qualifiedIncome: makeFromInt 90500, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26293, stateTaxDue: makeFromInt 8707 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83334, itemizedDeductions: makeFromInt 28560, federalTaxDue: makeFromInt 3050, stateTaxDue: makeFromInt 3792 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38401, ordinaryIncomeNonSS: makeFromInt 143637, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31681, stateTaxDue: makeFromInt 6877 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3802, ordinaryIncomeNonSS: makeFromInt 66948, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13146, federalTaxDue: makeFromInt 6028, stateTaxDue: makeFromInt 2864 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 31188, ordinaryIncomeNonSS: makeFromInt 103729, qualifiedIncome: makeFromInt 64157, itemizedDeductions: makeFromInt 27810, federalTaxDue: makeFromInt 23875, stateTaxDue: makeFromInt 7832 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52546, itemizedDeductions: makeFromInt 7729, federalTaxDue: makeFromInt 35129, stateTaxDue: makeFromInt 9804 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21657, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113006, qualifiedIncome: makeFromInt 25557, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19869, stateTaxDue: makeFromInt 6673 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122947, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24392, stateTaxDue: makeFromInt 5822 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 532, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27274, itemizedDeductions: makeFromInt 10215, federalTaxDue: makeFromInt 25428, stateTaxDue: makeFromInt 8289 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46984, ordinaryIncomeNonSS: makeFromInt 4038, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130927, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20189, stateTaxDue: makeFromInt 6291 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113850, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22303, federalTaxDue: makeFromInt 35996, stateTaxDue: makeFromInt 10458 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46845, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60525, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7749, stateTaxDue: makeFromInt 2771 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11795, federalTaxDue: makeFromInt 39450, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2032, federalTaxDue: makeFromInt 10596, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72923, itemizedDeductions: makeFromInt 18466, federalTaxDue: makeFromInt 2102, stateTaxDue: makeFromInt 3271 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38268, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7918, itemizedDeductions: makeFromInt 26043, federalTaxDue: makeFromInt 29852, stateTaxDue: makeFromInt 7321 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23859, qualifiedIncome: makeFromInt 94026, itemizedDeductions: makeFromInt 10012, federalTaxDue: makeFromInt 15353, stateTaxDue: makeFromInt 5319 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6093, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101299, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25993, stateTaxDue: makeFromInt 9810 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14258, ordinaryIncomeNonSS: makeFromInt 66396, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 598, federalTaxDue: makeFromInt 8447, stateTaxDue: makeFromInt 3065 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34912, ordinaryIncomeNonSS: makeFromInt 105554, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5080, federalTaxDue: makeFromInt 43003, stateTaxDue: makeFromInt 10259 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9710, ordinaryIncomeNonSS: makeFromInt 148244, qualifiedIncome: makeFromInt 59505, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33745, stateTaxDue: makeFromInt 9812 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48817, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2066 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9000, itemizedDeductions: makeFromInt 13614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43642, ordinaryIncomeNonSS: makeFromInt 127169, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6227, federalTaxDue: makeFromInt 43494, stateTaxDue: makeFromInt 10903 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2575, federalTaxDue: makeFromInt 40464, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30906, itemizedDeductions: makeFromInt 16393, federalTaxDue: makeFromInt 673, stateTaxDue: makeFromInt 1148 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71493, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3100 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105422, qualifiedIncome: makeFromInt 11874, itemizedDeductions: makeFromInt 20541, federalTaxDue: makeFromInt 14751, stateTaxDue: makeFromInt 5290 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20943, federalTaxDue: makeFromInt 16496, stateTaxDue: makeFromInt 6539 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8798, qualifiedIncome: makeFromInt 66413, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4056, stateTaxDue: makeFromInt 3374 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67736, qualifiedIncome: makeFromInt 19336, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4120, stateTaxDue: makeFromInt 3992 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86093, itemizedDeductions: makeFromInt 4090, federalTaxDue: makeFromInt 7453, stateTaxDue: makeFromInt 4044 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56692, itemizedDeductions: makeFromInt 17294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39591, itemizedDeductions: makeFromInt 18088, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11959, federalTaxDue: makeFromInt 23745, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10484, ordinaryIncomeNonSS: makeFromInt 12429, qualifiedIncome: makeFromInt 98357, itemizedDeductions: makeFromInt 17279, federalTaxDue: makeFromInt 3461, stateTaxDue: makeFromInt 5201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31088, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26953, ordinaryIncomeNonSS: makeFromInt 103775, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13248, federalTaxDue: makeFromInt 18824, stateTaxDue: makeFromInt 4844 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128835, qualifiedIncome: makeFromInt 86392, itemizedDeductions: makeFromInt 11907, federalTaxDue: makeFromInt 34480, stateTaxDue: makeFromInt 10506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17232, ordinaryIncomeNonSS: makeFromInt 2479, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32143, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1211 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23475, ordinaryIncomeNonSS: makeFromInt 25218, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 370, stateTaxDue: makeFromInt 837 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15333, ordinaryIncomeNonSS: makeFromInt 37684, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13048, stateTaxDue: makeFromInt 6471 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34908, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24519, itemizedDeductions: makeFromInt 6567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 971 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24599, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65954, qualifiedIncome: makeFromInt 80167, itemizedDeductions: makeFromInt 3355, federalTaxDue: makeFromInt 19474, stateTaxDue: makeFromInt 7105 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38055, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33395, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93408, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34923, stateTaxDue: makeFromInt 11985 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6119, ordinaryIncomeNonSS: makeFromInt 101085, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30660, stateTaxDue: makeFromInt 9827 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38622, itemizedDeductions: makeFromInt 12787, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7267, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28359, ordinaryIncomeNonSS: makeFromInt 16908, qualifiedIncome: makeFromInt 5731, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 677 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7222, ordinaryIncomeNonSS: makeFromInt 6249, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74312, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11762, stateTaxDue: makeFromInt 3566 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 19868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9581, itemizedDeductions: makeFromInt 19411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 40 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4395, federalTaxDue: makeFromInt 34678, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79893, itemizedDeductions: makeFromInt 315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59987, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 45222, stateTaxDue: makeFromInt 10261 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83388, qualifiedIncome: makeFromInt 14799, itemizedDeductions: makeFromInt 18837, federalTaxDue: makeFromInt 8067, stateTaxDue: makeFromInt 4334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35508, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25938, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10048, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 27787, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73414, itemizedDeductions: makeFromInt 15191, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3196 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144307, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31382, stateTaxDue: makeFromInt 11740 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 42632, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99480, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41122, stateTaxDue: makeFromInt 11999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 552, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27279, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27494, stateTaxDue: makeFromInt 8694 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21396, ordinaryIncomeNonSS: makeFromInt 67288, qualifiedIncome: makeFromInt 18073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11397, stateTaxDue: makeFromInt 3893 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97470, itemizedDeductions: makeFromInt 15582, federalTaxDue: makeFromInt 8621, stateTaxDue: makeFromInt 4619 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28591, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49416, itemizedDeductions: makeFromInt 20993, federalTaxDue: makeFromInt 987, stateTaxDue: makeFromInt 2016 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47837, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23743, itemizedDeductions: makeFromInt 21461, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2164, ordinaryIncomeNonSS: makeFromInt 126416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13295, federalTaxDue: makeFromInt 34270, stateTaxDue: makeFromInt 11098 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30072, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 441, stateTaxDue: makeFromInt 1757 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 10842, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17903, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38575, ordinaryIncomeNonSS: makeFromInt 75482, qualifiedIncome: makeFromInt 26163, itemizedDeductions: makeFromInt 5347, federalTaxDue: makeFromInt 24379, stateTaxDue: makeFromInt 4959 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10606, ordinaryIncomeNonSS: makeFromInt 72948, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2892, federalTaxDue: makeFromInt 22401, stateTaxDue: makeFromInt 8270 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44307, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68953, itemizedDeductions: makeFromInt 4931, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3038 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136522, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38366, stateTaxDue: makeFromInt 11571 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18049, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42492, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4576, federalTaxDue: makeFromInt 29896, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15142, ordinaryIncomeNonSS: makeFromInt 60975, qualifiedIncome: makeFromInt 26227, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7450, stateTaxDue: makeFromInt 3785 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35948, ordinaryIncomeNonSS: makeFromInt 140807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31728, stateTaxDue: makeFromInt 6785 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19886, qualifiedIncome: makeFromInt 78957, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4560, stateTaxDue: makeFromInt 4490 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22218, ordinaryIncomeNonSS: makeFromInt 17826, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 953, stateTaxDue: makeFromInt 685 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110885, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18681, stateTaxDue: makeFromInt 5308 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 38619, ordinaryIncomeNonSS: makeFromInt 89197, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10374, stateTaxDue: makeFromInt 3985 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46400, ordinaryIncomeNonSS: makeFromInt 6840, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15506, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 362 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99452, qualifiedIncome: makeFromInt 88327, itemizedDeductions: makeFromInt 12785, federalTaxDue: makeFromInt 38826, stateTaxDue: makeFromInt 9230 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15291, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61067, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36857, stateTaxDue: makeFromInt 10418 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57103, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22414, stateTaxDue: makeFromInt 7788 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34445, ordinaryIncomeNonSS: makeFromInt 67990, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11227, stateTaxDue: makeFromInt 2917 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3507, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 26605, ordinaryIncomeNonSS: makeFromInt 94696, qualifiedIncome: makeFromInt 96677, itemizedDeductions: makeFromInt 25786, federalTaxDue: makeFromInt 27913, stateTaxDue: makeFromInt 9311 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43593, ordinaryIncomeNonSS: makeFromInt 85989, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24591, stateTaxDue: makeFromInt 4161 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10240, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27668, qualifiedIncome: makeFromInt 17690, itemizedDeductions: makeFromInt 4873, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1593 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107231, qualifiedIncome: makeFromInt 64500, itemizedDeductions: makeFromInt 11429, federalTaxDue: makeFromInt 22816, stateTaxDue: makeFromInt 8207 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 810, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83507, itemizedDeductions: makeFromInt 7622, federalTaxDue: makeFromInt 2814, stateTaxDue: makeFromInt 3600 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40180, ordinaryIncomeNonSS: makeFromInt 47418, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4813, stateTaxDue: makeFromInt 1696 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36213, qualifiedIncome: makeFromInt 76330, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5750, stateTaxDue: makeFromInt 5372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133729, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16762, stateTaxDue: makeFromInt 6167 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12327, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7715, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29082, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41976, qualifiedIncome: makeFromInt 43619, itemizedDeductions: makeFromInt 16121, federalTaxDue: makeFromInt 5868, stateTaxDue: makeFromInt 3605 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 79, ordinaryIncomeNonSS: makeFromInt 24049, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 527 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49532, ordinaryIncomeNonSS: makeFromInt 115523, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29440, federalTaxDue: makeFromInt 23662, stateTaxDue: makeFromInt 5545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23576, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 165, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 5704 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21586, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3083, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118311, qualifiedIncome: makeFromInt 72012, itemizedDeductions: makeFromInt 10951, federalTaxDue: makeFromInt 28004, stateTaxDue: makeFromInt 9061 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23691, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38640, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26102, stateTaxDue: makeFromInt 8757 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8913, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29861, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1035, federalTaxDue: makeFromInt 10180, stateTaxDue: makeFromInt 6195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2567, ordinaryIncomeNonSS: makeFromInt 141026, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25701, stateTaxDue: makeFromInt 6764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5121, ordinaryIncomeNonSS: makeFromInt 81015, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7798, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13022, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 176 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63699, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20426, stateTaxDue: makeFromInt 7730 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 418, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77208, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3852, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74601, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3255 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22800, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2698, federalTaxDue: makeFromInt 27009, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98200, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 225, stateTaxDue: makeFromInt 4435 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102491, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2631, federalTaxDue: makeFromInt 20026, stateTaxDue: makeFromInt 4550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133888, qualifiedIncome: makeFromInt 24568, itemizedDeductions: makeFromInt 24045, federalTaxDue: makeFromInt 21855, stateTaxDue: makeFromInt 7653 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 26143, ordinaryIncomeNonSS: makeFromInt 75434, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7450, stateTaxDue: makeFromInt 3097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40979, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2897, federalTaxDue: makeFromInt 8599, stateTaxDue: makeFromInt 1594 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 30080, ordinaryIncomeNonSS: makeFromInt 141666, qualifiedIncome: makeFromInt 77773, itemizedDeductions: makeFromInt 29967, federalTaxDue: makeFromInt 32463, stateTaxDue: makeFromInt 10539 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42753, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14705, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14345, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46608, ordinaryIncomeNonSS: makeFromInt 61290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12137, stateTaxDue: makeFromInt 2575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28236, ordinaryIncomeNonSS: makeFromInt 72532, qualifiedIncome: makeFromInt 4293, itemizedDeductions: makeFromInt 1542, federalTaxDue: makeFromInt 11687, stateTaxDue: makeFromInt 3367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10528, ordinaryIncomeNonSS: makeFromInt 119990, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23195, stateTaxDue: makeFromInt 5773 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11018, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1213 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19938, itemizedDeductions: makeFromInt 3167, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13191, itemizedDeductions: makeFromInt 20311, federalTaxDue: makeFromInt 26940, stateTaxDue: makeFromInt 7705 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79468, qualifiedIncome: makeFromInt 76371, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20873, stateTaxDue: makeFromInt 7317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146275, qualifiedIncome: makeFromInt 88217, itemizedDeductions: makeFromInt 15763, federalTaxDue: makeFromInt 37143, stateTaxDue: makeFromInt 11531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3248, ordinaryIncomeNonSS: makeFromInt 95344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11047, stateTaxDue: makeFromInt 4192 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46562, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 7538, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1574, itemizedDeductions: makeFromInt 6405, federalTaxDue: makeFromInt 26718, stateTaxDue: makeFromInt 7281 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143881, qualifiedIncome: makeFromInt 76992, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33729, stateTaxDue: makeFromInt 10469 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21727, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37301, ordinaryIncomeNonSS: makeFromInt 115588, qualifiedIncome: makeFromInt 76728, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36254, stateTaxDue: makeFromInt 9584 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69733, itemizedDeductions: makeFromInt 1744, federalTaxDue: makeFromInt 35227, stateTaxDue: makeFromInt 10532 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 27387, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27516, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16085, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29770, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32514, stateTaxDue: makeFromInt 8534 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 62 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24484, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23988, itemizedDeductions: makeFromInt 4711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 571 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42188, qualifiedIncome: makeFromInt 81328, itemizedDeductions: makeFromInt 7631, federalTaxDue: makeFromInt 18397, stateTaxDue: makeFromInt 5801 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 22549, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25945, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40190, qualifiedIncome: makeFromInt 13227, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2544, stateTaxDue: makeFromInt 2216 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96387, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24695, federalTaxDue: makeFromInt 25120, stateTaxDue: makeFromInt 9244 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57664, itemizedDeductions: makeFromInt 18166, federalTaxDue: makeFromInt 3002, stateTaxDue: makeFromInt 2716 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41177, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49793, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7525, stateTaxDue: makeFromInt 2090 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20612, itemizedDeductions: makeFromInt 12394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 576 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127589, qualifiedIncome: makeFromInt 94364, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39949, stateTaxDue: makeFromInt 11095 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20748, federalTaxDue: makeFromInt 6541, stateTaxDue: makeFromInt 3245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7358, ordinaryIncomeNonSS: makeFromInt 71732, qualifiedIncome: makeFromInt 16369, itemizedDeductions: makeFromInt 26226, federalTaxDue: makeFromInt 3799, stateTaxDue: makeFromInt 3840 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19539, ordinaryIncomeNonSS: makeFromInt 63249, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5588, federalTaxDue: makeFromInt 6884, stateTaxDue: makeFromInt 2675 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 12310, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90925, itemizedDeductions: makeFromInt 25435, federalTaxDue: makeFromInt 31817, stateTaxDue: makeFromInt 11371 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18398, ordinaryIncomeNonSS: makeFromInt 6832, qualifiedIncome: makeFromInt 93930, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8205, stateTaxDue: makeFromInt 4583 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83790, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6876, stateTaxDue: makeFromInt 4049 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 40129, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9454, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114868, qualifiedIncome: makeFromInt 58225, itemizedDeductions: makeFromInt 15115, federalTaxDue: makeFromInt 26964, stateTaxDue: makeFromInt 8399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3944, federalTaxDue: makeFromInt 7271, stateTaxDue: makeFromInt 3272 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7031, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5808, federalTaxDue: makeFromInt 43681, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 197 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49996, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 46846, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43738, ordinaryIncomeNonSS: makeFromInt 33824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2872, stateTaxDue: makeFromInt 1316 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66561, itemizedDeductions: makeFromInt 22313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2853 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22739, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3320, ordinaryIncomeNonSS: makeFromInt 47854, qualifiedIncome: makeFromInt 53344, itemizedDeductions: makeFromInt 14487, federalTaxDue: makeFromInt 9603, stateTaxDue: makeFromInt 4805 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 971, qualifiedIncome: makeFromInt 36748, itemizedDeductions: makeFromInt 8076, federalTaxDue: makeFromInt 623, stateTaxDue: makeFromInt 1475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89073, qualifiedIncome: makeFromInt 61301, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27873, stateTaxDue: makeFromInt 7322 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2964, stateTaxDue: makeFromInt 1657 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11590, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27343, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90254, qualifiedIncome: makeFromInt 71104, itemizedDeductions: makeFromInt 27426, federalTaxDue: makeFromInt 20236, stateTaxDue: makeFromInt 7613 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31146, ordinaryIncomeNonSS: makeFromInt 128010, qualifiedIncome: makeFromInt 84051, itemizedDeductions: makeFromInt 6956, federalTaxDue: makeFromInt 34912, stateTaxDue: makeFromInt 10228 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36914, itemizedDeductions: makeFromInt 26693, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1471 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45384, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15262, federalTaxDue: makeFromInt 2414, stateTaxDue: makeFromInt 1694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21103, ordinaryIncomeNonSS: makeFromInt 44061, qualifiedIncome: makeFromInt 23887, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12266, stateTaxDue: makeFromInt 3241 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139825, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34499, stateTaxDue: makeFromInt 6907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9972, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68322, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1544, federalTaxDue: makeFromInt 16780, stateTaxDue: makeFromInt 7841 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26844, ordinaryIncomeNonSS: makeFromInt 35700, qualifiedIncome: makeFromInt 2643, itemizedDeductions: makeFromInt 22367, federalTaxDue: makeFromInt 3866, stateTaxDue: makeFromInt 1731 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107351, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10638, federalTaxDue: makeFromInt 16365, stateTaxDue: makeFromInt 4913 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52542, itemizedDeductions: makeFromInt 16617, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68120, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21164, stateTaxDue: makeFromInt 8146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36145, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52258, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95013, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6999, stateTaxDue: makeFromInt 4296 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23463, itemizedDeductions: makeFromInt 12548, federalTaxDue: makeFromInt 425, stateTaxDue: makeFromInt 963 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 823, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91774, itemizedDeductions: makeFromInt 26068, federalTaxDue: makeFromInt 6514, stateTaxDue: makeFromInt 4134 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4300, itemizedDeductions: makeFromInt 23302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6592, ordinaryIncomeNonSS: makeFromInt 14047, qualifiedIncome: makeFromInt 32234, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 395, stateTaxDue: makeFromInt 2059 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15059, ordinaryIncomeNonSS: makeFromInt 97570, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27659, federalTaxDue: makeFromInt 11372, stateTaxDue: makeFromInt 4504 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4555, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 729, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5288, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142537, qualifiedIncome: makeFromInt 51154, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30687, stateTaxDue: makeFromInt 9429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6746, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27761, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23311, ordinaryIncomeNonSS: makeFromInt 31917, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15907, federalTaxDue: makeFromInt 2067, stateTaxDue: makeFromInt 1221 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16751, ordinaryIncomeNonSS: makeFromInt 116861, qualifiedIncome: makeFromInt 36840, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24756, stateTaxDue: makeFromInt 7310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28641, federalTaxDue: makeFromInt 8933, stateTaxDue: makeFromInt 4750 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50789, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7763, stateTaxDue: makeFromInt 1964 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44174, qualifiedIncome: makeFromInt 24526, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11132, stateTaxDue: makeFromInt 3157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 46694, ordinaryIncomeNonSS: makeFromInt 102184, qualifiedIncome: makeFromInt 37802, itemizedDeductions: makeFromInt 4805, federalTaxDue: makeFromInt 28519, stateTaxDue: makeFromInt 6690 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 42088, ordinaryIncomeNonSS: makeFromInt 103360, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13764, stateTaxDue: makeFromInt 4619 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11706, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4326, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6532, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43412, itemizedDeductions: makeFromInt 25639, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1916 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114352, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 368, federalTaxDue: makeFromInt 26506, stateTaxDue: makeFromInt 10178 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36635, ordinaryIncomeNonSS: makeFromInt 55980, qualifiedIncome: makeFromInt 31089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12548, stateTaxDue: makeFromInt 3778 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140488, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13784, stateTaxDue: makeFromInt 6349 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14079, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25556, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13001, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25353, federalTaxDue: makeFromInt 25362, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29841, federalTaxDue: makeFromInt 35187, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20431, ordinaryIncomeNonSS: makeFromInt 68335, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2617, federalTaxDue: makeFromInt 9430, stateTaxDue: makeFromInt 3036 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37425, ordinaryIncomeNonSS: makeFromInt 117941, qualifiedIncome: makeFromInt 31004, itemizedDeductions: makeFromInt 20517, federalTaxDue: makeFromInt 28514, stateTaxDue: makeFromInt 7192 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113034, qualifiedIncome: makeFromInt 70904, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25530, stateTaxDue: makeFromInt 8822 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72067, qualifiedIncome: makeFromInt 81042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11574, stateTaxDue: makeFromInt 7156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6496, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29149, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95262, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32770, stateTaxDue: makeFromInt 9306 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2316, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40385, itemizedDeductions: makeFromInt 13281, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1344 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30897, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75809, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9068, stateTaxDue: makeFromInt 3404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54534, qualifiedIncome: makeFromInt 85424, itemizedDeductions: makeFromInt 23674, federalTaxDue: makeFromInt 9885, stateTaxDue: makeFromInt 6709 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1620, ordinaryIncomeNonSS: makeFromInt 125294, qualifiedIncome: makeFromInt 78873, itemizedDeductions: makeFromInt 17066, federalTaxDue: makeFromInt 32311, stateTaxDue: makeFromInt 10088 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10419, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 33619, ordinaryIncomeNonSS: makeFromInt 55079, qualifiedIncome: makeFromInt 18981, itemizedDeductions: makeFromInt 22835, federalTaxDue: makeFromInt 6352, stateTaxDue: makeFromInt 3028 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36075, itemizedDeductions: makeFromInt 23796, federalTaxDue: makeFromInt 24760, stateTaxDue: makeFromInt 8952 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22254, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79412, itemizedDeductions: makeFromInt 17207, federalTaxDue: makeFromInt 5087, stateTaxDue: makeFromInt 3516 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42514, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12676, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7916, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81192, qualifiedIncome: makeFromInt 35822, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6282, stateTaxDue: makeFromInt 5176 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 535, ordinaryIncomeNonSS: makeFromInt 72441, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5164, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88249, itemizedDeductions: makeFromInt 3474, federalTaxDue: makeFromInt 7447, stateTaxDue: makeFromInt 4276 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41940, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16834, federalTaxDue: makeFromInt 33323, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101203, qualifiedIncome: makeFromInt 57745, itemizedDeductions: makeFromInt 23119, federalTaxDue: makeFromInt 32093, stateTaxDue: makeFromInt 7760 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22039, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 14426, ordinaryIncomeNonSS: makeFromInt 109459, qualifiedIncome: makeFromInt 66812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23149, stateTaxDue: makeFromInt 8255 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1964, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60915, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2454 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32487, itemizedDeductions: makeFromInt 4361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1228 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10062, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13325, ordinaryIncomeNonSS: makeFromInt 110798, qualifiedIncome: makeFromInt 1993, itemizedDeductions: makeFromInt 28221, federalTaxDue: makeFromInt 15872, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84870, qualifiedIncome: makeFromInt 9808, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5916, stateTaxDue: makeFromInt 4259 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 4491, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24429, stateTaxDue: makeFromInt 9396 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19141, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7946, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23017, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20180, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20829, federalTaxDue: makeFromInt 25081, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35308, stateTaxDue: makeFromInt 8418 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50807, qualifiedIncome: makeFromInt 98954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26545, stateTaxDue: makeFromInt 7233 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28024, stateTaxDue: makeFromInt 8331 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42664, ordinaryIncomeNonSS: makeFromInt 22413, qualifiedIncome: makeFromInt 3764, itemizedDeductions: makeFromInt 12932, federalTaxDue: makeFromInt 2862, stateTaxDue: makeFromInt 898 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16342, federalTaxDue: makeFromInt 26100, stateTaxDue: makeFromInt 5198 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18601, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35231, ordinaryIncomeNonSS: makeFromInt 5838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 16513, ordinaryIncomeNonSS: makeFromInt 85605, qualifiedIncome: makeFromInt 49470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19711, stateTaxDue: makeFromInt 6440 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1500, stateTaxDue: makeFromInt 1400 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20772, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24554, federalTaxDue: makeFromInt 1088, stateTaxDue: makeFromInt 784 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35866, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99037, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43007, stateTaxDue: makeFromInt 12252 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 41483, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99417, itemizedDeductions: makeFromInt 29189, federalTaxDue: makeFromInt 4310, stateTaxDue: makeFromInt 4296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13301, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19975, stateTaxDue: makeFromInt 5210 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41828, itemizedDeductions: makeFromInt 29758, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1516 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43821, ordinaryIncomeNonSS: makeFromInt 4059, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29073, federalTaxDue: makeFromInt 8346, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 23335, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9937, itemizedDeductions: makeFromInt 22854, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 187, ordinaryIncomeNonSS: makeFromInt 59697, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17786, federalTaxDue: makeFromInt 4810, stateTaxDue: makeFromInt 2730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24208, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91024, qualifiedIncome: makeFromInt 80996, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23349, stateTaxDue: makeFromInt 8346 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4882, ordinaryIncomeNonSS: makeFromInt 74411, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23729, stateTaxDue: makeFromInt 8467 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29013, ordinaryIncomeNonSS: makeFromInt 73903, qualifiedIncome: makeFromInt 1479, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10220, stateTaxDue: makeFromInt 3514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85311, qualifiedIncome: makeFromInt 68930, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18715, stateTaxDue: makeFromInt 7417 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19695, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24062, qualifiedIncome: makeFromInt 31831, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2422 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3881, federalTaxDue: makeFromInt 29408, stateTaxDue: makeFromInt 5895 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96906, qualifiedIncome: makeFromInt 56178, itemizedDeductions: makeFromInt 9700, federalTaxDue: makeFromInt 30651, stateTaxDue: makeFromInt 7199 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43588, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94025, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9960, stateTaxDue: makeFromInt 4526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98806, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27725, federalTaxDue: makeFromInt 22887, stateTaxDue: makeFromInt 9690 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26945, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17046, ordinaryIncomeNonSS: makeFromInt 7742, qualifiedIncome: makeFromInt 25124, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 517, stateTaxDue: makeFromInt 1329 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1687, ordinaryIncomeNonSS: makeFromInt 747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41995, itemizedDeductions: makeFromInt 3270, federalTaxDue: makeFromInt 32607, stateTaxDue: makeFromInt 9345 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 11677, ordinaryIncomeNonSS: makeFromInt 137178, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32591, stateTaxDue: makeFromInt 11184 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 41656, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87088, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2108, stateTaxDue: makeFromInt 3993 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 6164, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2579, federalTaxDue: makeFromInt 17029, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36857, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11352, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28368, itemizedDeductions: makeFromInt 27885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 843 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103799, qualifiedIncome: makeFromInt 32300, itemizedDeductions: makeFromInt 23325, federalTaxDue: makeFromInt 9357, stateTaxDue: makeFromInt 6330 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17191, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24128, ordinaryIncomeNonSS: makeFromInt 98523, qualifiedIncome: makeFromInt 99589, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34752, stateTaxDue: makeFromInt 9580 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6076, ordinaryIncomeNonSS: makeFromInt 111683, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13492, stateTaxDue: makeFromInt 5009 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22693, stateTaxDue: makeFromInt 4581 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20656, ordinaryIncomeNonSS: makeFromInt 33993, qualifiedIncome: makeFromInt 35843, itemizedDeductions: makeFromInt 18289, federalTaxDue: makeFromInt 6866, stateTaxDue: makeFromInt 3237 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76592, qualifiedIncome: makeFromInt 67454, itemizedDeductions: makeFromInt 26760, federalTaxDue: makeFromInt 13520, stateTaxDue: makeFromInt 6627 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141680, qualifiedIncome: makeFromInt 36267, itemizedDeductions: makeFromInt 24258, federalTaxDue: makeFromInt 36390, stateTaxDue: makeFromInt 8522 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5927, federalTaxDue: makeFromInt 22217, stateTaxDue: makeFromInt 4207 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1553, stateTaxDue: makeFromInt 542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 3293, ordinaryIncomeNonSS: makeFromInt 66907, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20443, federalTaxDue: makeFromInt 3424, stateTaxDue: makeFromInt 2759 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84020, itemizedDeductions: makeFromInt 1566, federalTaxDue: makeFromInt 48622, stateTaxDue: makeFromInt 11384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51756, itemizedDeductions: makeFromInt 21691, federalTaxDue: makeFromInt 2579, stateTaxDue: makeFromInt 2133 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48950, ordinaryIncomeNonSS: makeFromInt 139795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43765, stateTaxDue: makeFromInt 11615 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 4833, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10235, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12654, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22489, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37173, ordinaryIncomeNonSS: makeFromInt 103028, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29538, federalTaxDue: makeFromInt 12494, stateTaxDue: makeFromInt 4676 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92703, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4193, stateTaxDue: makeFromInt 4260 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34543, ordinaryIncomeNonSS: makeFromInt 116221, qualifiedIncome: makeFromInt 11780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28133, stateTaxDue: makeFromInt 6100 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38855, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2696, federalTaxDue: makeFromInt 2384, stateTaxDue: makeFromInt 1688 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19158, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15874, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 31815, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10205, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 622, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27370, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 794 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 36131, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35757, itemizedDeductions: makeFromInt 13517, federalTaxDue: makeFromInt 30131, stateTaxDue: makeFromInt 8833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15554, ordinaryIncomeNonSS: makeFromInt 107153, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17383, federalTaxDue: makeFromInt 16456, stateTaxDue: makeFromInt 5036 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 16734, ordinaryIncomeNonSS: makeFromInt 101958, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8962, stateTaxDue: makeFromInt 4547 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50613, qualifiedIncome: makeFromInt 46373, itemizedDeductions: makeFromInt 2632, federalTaxDue: makeFromInt 2141, stateTaxDue: makeFromInt 4374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 269 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23869, ordinaryIncomeNonSS: makeFromInt 44042, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6852, stateTaxDue: makeFromInt 1747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40260, ordinaryIncomeNonSS: makeFromInt 30957, qualifiedIncome: makeFromInt 16268, itemizedDeductions: makeFromInt 20788, federalTaxDue: makeFromInt 5909, stateTaxDue: makeFromInt 2062 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58252, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14508, stateTaxDue: makeFromInt 7538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10972, stateTaxDue: makeFromInt 3206 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44173, ordinaryIncomeNonSS: makeFromInt 94449, qualifiedIncome: makeFromInt 80569, itemizedDeductions: makeFromInt 7280, federalTaxDue: makeFromInt 29389, stateTaxDue: makeFromInt 8176 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11924, ordinaryIncomeNonSS: makeFromInt 143712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22548, stateTaxDue: makeFromInt 6811 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23320, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17106, federalTaxDue: makeFromInt 7748, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73237, itemizedDeductions: makeFromInt 23019, federalTaxDue: makeFromInt 31966, stateTaxDue: makeFromInt 10834 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77675, qualifiedIncome: makeFromInt 42431, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23977, stateTaxDue: makeFromInt 5750 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12820, ordinaryIncomeNonSS: makeFromInt 87937, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10109, federalTaxDue: makeFromInt 12858, stateTaxDue: makeFromInt 4056 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 2625, ordinaryIncomeNonSS: makeFromInt 54063, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2486, stateTaxDue: makeFromInt 2228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19673, ordinaryIncomeNonSS: makeFromInt 42267, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20469, stateTaxDue: makeFromInt 6909 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1506, ordinaryIncomeNonSS: makeFromInt 92295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13821, federalTaxDue: makeFromInt 11999, stateTaxDue: makeFromInt 4360 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 15995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75373, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35170, stateTaxDue: makeFromInt 11045 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56730, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4739, federalTaxDue: makeFromInt 3528, stateTaxDue: makeFromInt 2262 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4429, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26167, stateTaxDue: makeFromInt 7651 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 22844, ordinaryIncomeNonSS: makeFromInt 124292, qualifiedIncome: makeFromInt 21692, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17746, stateTaxDue: makeFromInt 6624 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16615, ordinaryIncomeNonSS: makeFromInt 100025, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16525, stateTaxDue: makeFromInt 4746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6321, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12234, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29552, ordinaryIncomeNonSS: makeFromInt 58721, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22813, stateTaxDue: makeFromInt 7544 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10422, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 146 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9019, ordinaryIncomeNonSS: makeFromInt 59866, qualifiedIncome: makeFromInt 96787, itemizedDeductions: makeFromInt 5399, federalTaxDue: makeFromInt 22074, stateTaxDue: makeFromInt 7578 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130640, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29320, stateTaxDue: makeFromInt 5957 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6524, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36223, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55003, itemizedDeductions: makeFromInt 23688, federalTaxDue: makeFromInt 3366, stateTaxDue: makeFromInt 2581 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38888, ordinaryIncomeNonSS: makeFromInt 35121, qualifiedIncome: makeFromInt 91329, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9233, stateTaxDue: makeFromInt 5648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20905, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 40181, ordinaryIncomeNonSS: makeFromInt 44924, qualifiedIncome: makeFromInt 322, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4343, stateTaxDue: makeFromInt 1587 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21228, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76935, qualifiedIncome: makeFromInt 27382, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8590, stateTaxDue: makeFromInt 4925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12828, ordinaryIncomeNonSS: makeFromInt 111140, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20537, stateTaxDue: makeFromInt 5390 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22400, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41479, stateTaxDue: makeFromInt 8165 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15656, federalTaxDue: makeFromInt 26264, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45938, ordinaryIncomeNonSS: makeFromInt 6974, qualifiedIncome: makeFromInt 97163, itemizedDeductions: makeFromInt 6260, federalTaxDue: makeFromInt 17009, stateTaxDue: makeFromInt 4952 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148256, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7520, federalTaxDue: makeFromInt 26718, stateTaxDue: makeFromInt 7133 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68011, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7318, stateTaxDue: makeFromInt 2946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22272, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13048, ordinaryIncomeNonSS: makeFromInt 22417, qualifiedIncome: makeFromInt 41426, itemizedDeductions: makeFromInt 12011, federalTaxDue: makeFromInt 878, stateTaxDue: makeFromInt 2828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11601, qualifiedIncome: makeFromInt 45169, itemizedDeductions: makeFromInt 16102, federalTaxDue: makeFromInt 524, stateTaxDue: makeFromInt 2384 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132278, qualifiedIncome: makeFromInt 38844, itemizedDeductions: makeFromInt 4912, federalTaxDue: makeFromInt 19119, stateTaxDue: makeFromInt 8081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147289, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35465, stateTaxDue: makeFromInt 7063 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45200, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42843, itemizedDeductions: makeFromInt 19763, federalTaxDue: makeFromInt 38373, stateTaxDue: makeFromInt 9284 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93884, qualifiedIncome: makeFromInt 63263, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27450, stateTaxDue: makeFromInt 7282 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40893, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6491, stateTaxDue: makeFromInt 6570 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27731, itemizedDeductions: makeFromInt 17365, federalTaxDue: makeFromInt 32348, stateTaxDue: makeFromInt 8212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 17714, ordinaryIncomeNonSS: makeFromInt 59770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5349, stateTaxDue: makeFromInt 2395 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18251, ordinaryIncomeNonSS: makeFromInt 62956, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16299, federalTaxDue: makeFromInt 23828, stateTaxDue: makeFromInt 7964 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 11901, ordinaryIncomeNonSS: makeFromInt 63722, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4592, stateTaxDue: makeFromInt 2711 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 8110, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83281, itemizedDeductions: makeFromInt 29095, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3689 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25954, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2297, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137878, qualifiedIncome: makeFromInt 75136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29986, stateTaxDue: makeFromInt 10076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24912, federalTaxDue: makeFromInt 32776, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43258, ordinaryIncomeNonSS: makeFromInt 141797, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44830, stateTaxDue: makeFromInt 11989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42603, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45455, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15210, federalTaxDue: makeFromInt 3959, stateTaxDue: makeFromInt 6798 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38555, ordinaryIncomeNonSS: makeFromInt 1605, qualifiedIncome: makeFromInt 45075, itemizedDeductions: makeFromInt 22512, federalTaxDue: makeFromInt 1062, stateTaxDue: makeFromInt 1959 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 38195, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21972, ordinaryIncomeNonSS: makeFromInt 134198, qualifiedIncome: makeFromInt 75078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35718, stateTaxDue: makeFromInt 10089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 37463, ordinaryIncomeNonSS: makeFromInt 129290, qualifiedIncome: makeFromInt 22918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24115, stateTaxDue: makeFromInt 7135 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42937, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75627, itemizedDeductions: makeFromInt 16578, federalTaxDue: makeFromInt 50769, stateTaxDue: makeFromInt 11283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50617, qualifiedIncome: makeFromInt 34599, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3287, stateTaxDue: makeFromInt 3795 },
  TestCase { year: (unsafeMakeYear 2024), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 35369, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4585, federalTaxDue: makeFromInt 6038, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6615, ordinaryIncomeNonSS: makeFromInt 4263, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15254, ordinaryIncomeNonSS: makeFromInt 71088, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6806, stateTaxDue: makeFromInt 3179 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25241, ordinaryIncomeNonSS: makeFromInt 149412, qualifiedIncome: makeFromInt 44933, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36515, stateTaxDue: makeFromInt 9462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 43559, ordinaryIncomeNonSS: makeFromInt 131419, qualifiedIncome: makeFromInt 43944, itemizedDeductions: makeFromInt 6382, federalTaxDue: makeFromInt 32033, stateTaxDue: makeFromInt 8291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19507, ordinaryIncomeNonSS: makeFromInt 50029, qualifiedIncome: makeFromInt 26410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13798, stateTaxDue: makeFromInt 3674 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113608, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25832, stateTaxDue: makeFromInt 10205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24890, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76160, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38315, stateTaxDue: makeFromInt 11106 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8087, ordinaryIncomeNonSS: makeFromInt 77569, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10431, stateTaxDue: makeFromInt 3624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32019, qualifiedIncome: makeFromInt 42045, itemizedDeductions: makeFromInt 3780, federalTaxDue: makeFromInt 6696, stateTaxDue: makeFromInt 3553 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67272, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28193, federalTaxDue: makeFromInt 8904, stateTaxDue: makeFromInt 2689 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16270, ordinaryIncomeNonSS: makeFromInt 137323, qualifiedIncome: makeFromInt 59074, itemizedDeductions: makeFromInt 11284, federalTaxDue: makeFromInt 35336, stateTaxDue: makeFromInt 9588 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23561, federalTaxDue: makeFromInt 12623, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 6095, ordinaryIncomeNonSS: makeFromInt 36574, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19052, federalTaxDue: makeFromInt 802, stateTaxDue: makeFromInt 1154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31263, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29570, stateTaxDue: makeFromInt 8796 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25939, ordinaryIncomeNonSS: makeFromInt 43682, qualifiedIncome: makeFromInt 12049, itemizedDeductions: makeFromInt 20329, federalTaxDue: makeFromInt 6575, stateTaxDue: makeFromInt 2332 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42500, itemizedDeductions: makeFromInt 21938, federalTaxDue: makeFromInt 1379, stateTaxDue: makeFromInt 1617 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 7482, ordinaryIncomeNonSS: makeFromInt 5124, qualifiedIncome: makeFromInt 8198, itemizedDeductions: makeFromInt 9322, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108711, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27694, federalTaxDue: makeFromInt 8776, stateTaxDue: makeFromInt 4761 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53982, itemizedDeductions: makeFromInt 9474, federalTaxDue: makeFromInt 36704, stateTaxDue: makeFromInt 10056 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2632, stateTaxDue: makeFromInt 1978 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1949, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18970, stateTaxDue: makeFromInt 6922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107977, qualifiedIncome: makeFromInt 21872, itemizedDeductions: makeFromInt 28820, federalTaxDue: makeFromInt 29248, stateTaxDue: makeFromInt 6398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: MarriedJoint, socSec: makeFromInt 34673, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22282, itemizedDeductions: makeFromInt 2880, federalTaxDue: makeFromInt 31540, stateTaxDue: makeFromInt 8134 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18993, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94625, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40948, stateTaxDue: makeFromInt 11976 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90848, qualifiedIncome: makeFromInt 82127, itemizedDeductions: makeFromInt 11401, federalTaxDue: makeFromInt 27334, stateTaxDue: makeFromInt 8174 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7481, ordinaryIncomeNonSS: makeFromInt 23363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2235, federalTaxDue: makeFromInt 606, stateTaxDue: makeFromInt 836 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 35898, ordinaryIncomeNonSS: makeFromInt 76744, qualifiedIncome: makeFromInt 24959, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17848, stateTaxDue: makeFromInt 4738 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34596, ordinaryIncomeNonSS: makeFromInt 147874, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39708, stateTaxDue: makeFromInt 7317 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9863, ordinaryIncomeNonSS: makeFromInt 44396, qualifiedIncome: makeFromInt 15546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2809, stateTaxDue: makeFromInt 2506 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 20127, ordinaryIncomeNonSS: makeFromInt 123515, qualifiedIncome: makeFromInt 19123, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19033, stateTaxDue: makeFromInt 6657 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23376, ordinaryIncomeNonSS: makeFromInt 140565, qualifiedIncome: makeFromInt 83609, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30713, stateTaxDue: makeFromInt 10734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102199, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12460, stateTaxDue: makeFromInt 4661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57358, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16572, federalTaxDue: makeFromInt 13799, stateTaxDue: makeFromInt 7576 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94409, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25352, federalTaxDue: makeFromInt 17124, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2023), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 23702, ordinaryIncomeNonSS: makeFromInt 75060, qualifiedIncome: makeFromInt 94257, itemizedDeductions: makeFromInt 16662, federalTaxDue: makeFromInt 18133, stateTaxDue: makeFromInt 7991 },
  TestCase { year: (unsafeMakeYear 2025), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6678, ordinaryIncomeNonSS: makeFromInt 75214, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12469, federalTaxDue: makeFromInt 23970, stateTaxDue: makeFromInt 8306 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: MarriedJoint, socSec: makeFromInt 17169, ordinaryIncomeNonSS: makeFromInt 4974, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14296, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 }
  
  ]