module KnownYearsGoldenTestCasesFromScala
  ( TestCase(..)
  , cases
  ) where

import CommonTypes (FilingStatus(..))
import Data.Date (Date, Year)
import Moneys (Deduction, Income, TaxPayable, makeFromInt)
import Prelude (class Show, show)
import UnsafeDates (unsafeMakeDate, unsafeMakeYear)

newtype TestCase
  = TestCase
  { year :: Year
  , birthDate :: Date
  , personalExemptions :: Int
  , filingStatus :: FilingStatus
  , socSec :: Income
  , ordinaryIncomeNonSS :: Income
  , qualifiedIncome :: Income
  , itemizedDeductions :: Deduction 
  , federalTaxDue :: TaxPayable
  , stateTaxDue :: TaxPayable
  }

instance showTestCase :: Show TestCase where
  show (TestCase tc) = show tc

cases :: Array TestCase
cases =
  [ 
    TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16862, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30107, stateTaxDue: makeFromInt 7868 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36435, ordinaryIncomeNonSS: makeFromInt 73946, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28609, stateTaxDue: makeFromInt 8422 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16160, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96698, itemizedDeductions: makeFromInt 1647, federalTaxDue: makeFromInt 3210, stateTaxDue: makeFromInt 4483 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10703, ordinaryIncomeNonSS: makeFromInt 56150, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25339, federalTaxDue: makeFromInt 2021, stateTaxDue: makeFromInt 2211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30658, qualifiedIncome: makeFromInt 67782, itemizedDeductions: makeFromInt 13497, federalTaxDue: makeFromInt 336, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131631, qualifiedIncome: makeFromInt 1563, itemizedDeductions: makeFromInt 16504, federalTaxDue: makeFromInt 32086, stateTaxDue: makeFromInt 6205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28729, qualifiedIncome: makeFromInt 15826, itemizedDeductions: makeFromInt 13533, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1620 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13666, qualifiedIncome: makeFromInt 77426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3880 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13256, ordinaryIncomeNonSS: makeFromInt 23221, qualifiedIncome: makeFromInt 16452, itemizedDeductions: makeFromInt 15936, federalTaxDue: makeFromInt 2021, stateTaxDue: makeFromInt 1529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14056, itemizedDeductions: makeFromInt 780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123156, qualifiedIncome: makeFromInt 57211, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26281, stateTaxDue: makeFromInt 8648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47139, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23139, ordinaryIncomeNonSS: makeFromInt 138487, qualifiedIncome: makeFromInt 39438, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28694, stateTaxDue: makeFromInt 8421 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10013, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18217, itemizedDeductions: makeFromInt 9121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14180, itemizedDeductions: makeFromInt 9785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 172 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30211, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70892, itemizedDeductions: makeFromInt 18688, federalTaxDue: makeFromInt 41210, stateTaxDue: makeFromInt 10919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11835, ordinaryIncomeNonSS: makeFromInt 66658, qualifiedIncome: makeFromInt 40487, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5791, stateTaxDue: makeFromInt 4914 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96140, qualifiedIncome: makeFromInt 10167, itemizedDeductions: makeFromInt 7018, federalTaxDue: makeFromInt 15059, stateTaxDue: makeFromInt 4860 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35482, ordinaryIncomeNonSS: makeFromInt 7905, qualifiedIncome: makeFromInt 94105, itemizedDeductions: makeFromInt 18463, federalTaxDue: makeFromInt 10559, stateTaxDue: makeFromInt 4856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1487, itemizedDeductions: makeFromInt 9159, federalTaxDue: makeFromInt 25103, stateTaxDue: makeFromInt 7277 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141751, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40224, stateTaxDue: makeFromInt 11901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45323, itemizedDeductions: makeFromInt 14797, federalTaxDue: makeFromInt 1151, stateTaxDue: makeFromInt 2087 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 156, ordinaryIncomeNonSS: makeFromInt 50008, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1453, federalTaxDue: makeFromInt 8253, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41898, ordinaryIncomeNonSS: makeFromInt 16579, qualifiedIncome: makeFromInt 97117, itemizedDeductions: makeFromInt 11043, federalTaxDue: makeFromInt 19224, stateTaxDue: makeFromInt 5519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30741, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141468, qualifiedIncome: makeFromInt 1162, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17646, stateTaxDue: makeFromInt 6758 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13723, qualifiedIncome: makeFromInt 67441, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3487 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45012, itemizedDeductions: makeFromInt 1097, federalTaxDue: makeFromInt 501, stateTaxDue: makeFromInt 1996 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144241, qualifiedIncome: makeFromInt 85006, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40183, stateTaxDue: makeFromInt 11133 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21141, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4816, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19702, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94363, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7444, stateTaxDue: makeFromInt 4466 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36455, ordinaryIncomeNonSS: makeFromInt 74240, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12167, stateTaxDue: makeFromInt 3257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6996, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40735, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1527 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67246, itemizedDeductions: makeFromInt 13469, federalTaxDue: makeFromInt 37498, stateTaxDue: makeFromInt 10733 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47706, ordinaryIncomeNonSS: makeFromInt 70963, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18010, stateTaxDue: makeFromInt 3159 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20203, ordinaryIncomeNonSS: makeFromInt 122139, qualifiedIncome: makeFromInt 71021, itemizedDeductions: makeFromInt 11787, federalTaxDue: makeFromInt 33727, stateTaxDue: makeFromInt 9423 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5575, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 60 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53794, itemizedDeductions: makeFromInt 25714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38381, ordinaryIncomeNonSS: makeFromInt 139259, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9884, federalTaxDue: makeFromInt 30083, stateTaxDue: makeFromInt 6551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 19773, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 514 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93826, itemizedDeductions: makeFromInt 7112, federalTaxDue: makeFromInt 8381, stateTaxDue: makeFromInt 4357 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 591, ordinaryIncomeNonSS: makeFromInt 55081, qualifiedIncome: makeFromInt 47417, itemizedDeductions: makeFromInt 5115, federalTaxDue: makeFromInt 9711, stateTaxDue: makeFromInt 4799 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41183, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17639, federalTaxDue: makeFromInt 5968, stateTaxDue: makeFromInt 6584 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13536, qualifiedIncome: makeFromInt 37117, itemizedDeductions: makeFromInt 12110, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2135 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13712, stateTaxDue: makeFromInt 5799 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101915, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19542, federalTaxDue: makeFromInt 8914, stateTaxDue: makeFromInt 4702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21415, ordinaryIncomeNonSS: makeFromInt 88474, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19951, federalTaxDue: makeFromInt 27933, stateTaxDue: makeFromInt 9049 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98222, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16988, stateTaxDue: makeFromInt 4785 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20077, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88158, itemizedDeductions: makeFromInt 10135, federalTaxDue: makeFromInt 721, stateTaxDue: makeFromInt 3933 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44871, ordinaryIncomeNonSS: makeFromInt 126591, qualifiedIncome: makeFromInt 48510, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29355, stateTaxDue: makeFromInt 8280 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42726, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3821, itemizedDeductions: makeFromInt 18886, federalTaxDue: makeFromInt 32549, stateTaxDue: makeFromInt 7116 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22849, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38504, itemizedDeductions: makeFromInt 12637, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1450 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115071, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34300, stateTaxDue: makeFromInt 10079 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 626, ordinaryIncomeNonSS: makeFromInt 102667, qualifiedIncome: makeFromInt 47495, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14704, stateTaxDue: makeFromInt 7033 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35853, ordinaryIncomeNonSS: makeFromInt 111448, qualifiedIncome: makeFromInt 29262, itemizedDeductions: makeFromInt 11861, federalTaxDue: makeFromInt 25711, stateTaxDue: makeFromInt 6461 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111453, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7134, federalTaxDue: makeFromInt 32350, stateTaxDue: makeFromInt 10318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7163, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90513, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5207, stateTaxDue: makeFromInt 3951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2547, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21372, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 866 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38704, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23140, federalTaxDue: makeFromInt 1662, stateTaxDue: makeFromInt 1680 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40729, ordinaryIncomeNonSS: makeFromInt 15826, qualifiedIncome: makeFromInt 27857, itemizedDeductions: makeFromInt 21213, federalTaxDue: makeFromInt 4637, stateTaxDue: makeFromInt 1729 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37287, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57762, itemizedDeductions: makeFromInt 4209, federalTaxDue: makeFromInt 7231, stateTaxDue: makeFromInt 2433 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12052, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20625, itemizedDeductions: makeFromInt 14347, federalTaxDue: makeFromInt 29825, stateTaxDue: makeFromInt 8192 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6130, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37509, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35253, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36, stateTaxDue: makeFromInt 1188 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31787, ordinaryIncomeNonSS: makeFromInt 78714, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12410, stateTaxDue: makeFromInt 3481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18632, federalTaxDue: makeFromInt 37077, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8777, federalTaxDue: makeFromInt 51665, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20817, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33581, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17368, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 613 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88393, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7469, stateTaxDue: makeFromInt 4080 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5002, ordinaryIncomeNonSS: makeFromInt 52879, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3540, stateTaxDue: makeFromInt 2226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8464, itemizedDeductions: makeFromInt 27060, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 207 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33515, ordinaryIncomeNonSS: makeFromInt 138966, qualifiedIncome: makeFromInt 23940, itemizedDeductions: makeFromInt 24779, federalTaxDue: makeFromInt 29790, stateTaxDue: makeFromInt 7859 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70352, qualifiedIncome: makeFromInt 30424, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23058, stateTaxDue: makeFromInt 4711 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26834, ordinaryIncomeNonSS: makeFromInt 96728, qualifiedIncome: makeFromInt 30903, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23709, stateTaxDue: makeFromInt 6081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45051, ordinaryIncomeNonSS: makeFromInt 55996, qualifiedIncome: makeFromInt 91882, itemizedDeductions: makeFromInt 28645, federalTaxDue: makeFromInt 23841, stateTaxDue: makeFromInt 7139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51017, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5938, stateTaxDue: makeFromInt 2378 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82201, itemizedDeductions: makeFromInt 22402, federalTaxDue: makeFromInt 4418, stateTaxDue: makeFromInt 3808 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7958, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16338, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56410, itemizedDeductions: makeFromInt 18428, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2346 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15478, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19098, ordinaryIncomeNonSS: makeFromInt 102116, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9696, federalTaxDue: makeFromInt 35448, stateTaxDue: makeFromInt 9961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69083, qualifiedIncome: makeFromInt 73071, itemizedDeductions: makeFromInt 18479, federalTaxDue: makeFromInt 18370, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66879, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25412, stateTaxDue: makeFromInt 7781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19911, qualifiedIncome: makeFromInt 24480, itemizedDeductions: makeFromInt 8957, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1611 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46369, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1833, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34856, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9209, federalTaxDue: makeFromInt 39746, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24955, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1026, stateTaxDue: makeFromInt 793 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17559, ordinaryIncomeNonSS: makeFromInt 146816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17316, federalTaxDue: makeFromInt 28498, stateTaxDue: makeFromInt 7086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28317, qualifiedIncome: makeFromInt 2789, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 717, stateTaxDue: makeFromInt 980 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7686, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32677, ordinaryIncomeNonSS: makeFromInt 106695, qualifiedIncome: makeFromInt 64299, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22242, stateTaxDue: makeFromInt 8068 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16480, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60997, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34923, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10136, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37489, ordinaryIncomeNonSS: makeFromInt 99899, qualifiedIncome: makeFromInt 86509, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31860, stateTaxDue: makeFromInt 8945 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9089, ordinaryIncomeNonSS: makeFromInt 26981, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6813, federalTaxDue: makeFromInt 1224, stateTaxDue: makeFromInt 825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42232, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97839, itemizedDeductions: makeFromInt 29268, federalTaxDue: makeFromInt 7761, stateTaxDue: makeFromInt 4643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3559, ordinaryIncomeNonSS: makeFromInt 35945, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 897, stateTaxDue: makeFromInt 1222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135040, qualifiedIncome: makeFromInt 21078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33031, stateTaxDue: makeFromInt 7431 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27656, ordinaryIncomeNonSS: makeFromInt 28949, qualifiedIncome: makeFromInt 98115, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21015, stateTaxDue: makeFromInt 6256 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31428, ordinaryIncomeNonSS: makeFromInt 37163, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12805, stateTaxDue: makeFromInt 6183 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85239, qualifiedIncome: makeFromInt 2174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19551, stateTaxDue: makeFromInt 4009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2017, ordinaryIncomeNonSS: makeFromInt 117815, qualifiedIncome: makeFromInt 34557, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16708, stateTaxDue: makeFromInt 6944 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96943, itemizedDeductions: makeFromInt 19143, federalTaxDue: makeFromInt 12213, stateTaxDue: makeFromInt 4472 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126851, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42904, stateTaxDue: makeFromInt 10968 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30406, ordinaryIncomeNonSS: makeFromInt 10553, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26667, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93205, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45728, stateTaxDue: makeFromInt 11705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25426, ordinaryIncomeNonSS: makeFromInt 95761, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24781, federalTaxDue: makeFromInt 32907, stateTaxDue: makeFromInt 9759 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30962, ordinaryIncomeNonSS: makeFromInt 109155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20279, stateTaxDue: makeFromInt 4883 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73698, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44134, stateTaxDue: makeFromInt 10730 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94294, qualifiedIncome: makeFromInt 79158, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35012, stateTaxDue: makeFromInt 8418 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74834, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6345, stateTaxDue: makeFromInt 3367 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49128, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33024, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9502, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83655, itemizedDeductions: makeFromInt 10174, federalTaxDue: makeFromInt 3666, stateTaxDue: makeFromInt 3614 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41300, ordinaryIncomeNonSS: makeFromInt 126304, qualifiedIncome: makeFromInt 4059, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24785, stateTaxDue: makeFromInt 5943 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22814, federalTaxDue: makeFromInt 26586, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67127, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16618, stateTaxDue: makeFromInt 3101 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7185, ordinaryIncomeNonSS: makeFromInt 125618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13123, federalTaxDue: makeFromInt 20181, stateTaxDue: makeFromInt 5958 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58108, qualifiedIncome: makeFromInt 68167, itemizedDeductions: makeFromInt 11434, federalTaxDue: makeFromInt 7473, stateTaxDue: makeFromInt 5787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66930, qualifiedIncome: makeFromInt 31943, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17934, stateTaxDue: makeFromInt 4696 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36098, qualifiedIncome: makeFromInt 20420, itemizedDeductions: makeFromInt 19423, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2454 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126100, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20572, stateTaxDue: makeFromInt 5850 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46984, qualifiedIncome: makeFromInt 35934, itemizedDeductions: makeFromInt 28607, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3678 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37062, qualifiedIncome: makeFromInt 17721, itemizedDeductions: makeFromInt 11701, federalTaxDue: makeFromInt 421, stateTaxDue: makeFromInt 2141 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41391, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35525, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7652, ordinaryIncomeNonSS: makeFromInt 40415, qualifiedIncome: makeFromInt 82620, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9251, stateTaxDue: makeFromInt 5826 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39192, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52884, itemizedDeductions: makeFromInt 27946, federalTaxDue: makeFromInt 905, stateTaxDue: makeFromInt 2269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25849, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22606, federalTaxDue: makeFromInt 2040, stateTaxDue: makeFromInt 971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25883, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11239, federalTaxDue: makeFromInt 23678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47846, ordinaryIncomeNonSS: makeFromInt 81941, qualifiedIncome: makeFromInt 96270, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38910, stateTaxDue: makeFromInt 8864 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17751, stateTaxDue: makeFromInt 6371 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42492, ordinaryIncomeNonSS: makeFromInt 141062, qualifiedIncome: makeFromInt 33861, itemizedDeductions: makeFromInt 11053, federalTaxDue: makeFromInt 39626, stateTaxDue: makeFromInt 8493 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31603, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42021, itemizedDeductions: makeFromInt 27660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8736, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61631, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36491, stateTaxDue: makeFromInt 10263 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125168, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14622, stateTaxDue: makeFromInt 5731 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114292, qualifiedIncome: makeFromInt 24755, itemizedDeductions: makeFromInt 27407, federalTaxDue: makeFromInt 14062, stateTaxDue: makeFromInt 6277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91655, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3930, federalTaxDue: makeFromInt 7893, stateTaxDue: makeFromInt 4022 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9567, ordinaryIncomeNonSS: makeFromInt 82126, qualifiedIncome: makeFromInt 11439, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11576, stateTaxDue: makeFromInt 4323 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59833, itemizedDeductions: makeFromInt 23611, federalTaxDue: makeFromInt 3185, stateTaxDue: makeFromInt 2827 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118469, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20520, stateTaxDue: makeFromInt 5695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34690, qualifiedIncome: makeFromInt 99452, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8133, stateTaxDue: makeFromInt 6392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4348, itemizedDeductions: makeFromInt 9116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61642, itemizedDeductions: makeFromInt 20963, federalTaxDue: makeFromInt 1948, stateTaxDue: makeFromInt 2593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6619, ordinaryIncomeNonSS: makeFromInt 90809, qualifiedIncome: makeFromInt 89763, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24144, stateTaxDue: makeFromInt 8654 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24426, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97646, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8999, stateTaxDue: makeFromInt 4552 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20017, qualifiedIncome: makeFromInt 93338, itemizedDeductions: makeFromInt 24208, federalTaxDue: makeFromInt 8211, stateTaxDue: makeFromInt 5557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13342, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63316, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1937, stateTaxDue: makeFromInt 2882 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32268, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9623, federalTaxDue: makeFromInt 24712, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26019, ordinaryIncomeNonSS: makeFromInt 146346, qualifiedIncome: makeFromInt 68784, itemizedDeductions: makeFromInt 4734, federalTaxDue: makeFromInt 33057, stateTaxDue: makeFromInt 10282 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20344, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26689, itemizedDeductions: makeFromInt 2066, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75423, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26160, federalTaxDue: makeFromInt 5855, stateTaxDue: makeFromInt 3398 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29408, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81441, itemizedDeductions: makeFromInt 10308, federalTaxDue: makeFromInt 36393, stateTaxDue: makeFromInt 11097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36036, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36179, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76558, qualifiedIncome: makeFromInt 52340, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14148, stateTaxDue: makeFromInt 5870 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121806, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1276, federalTaxDue: makeFromInt 24176, stateTaxDue: makeFromInt 5988 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29003, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37851, ordinaryIncomeNonSS: makeFromInt 37679, qualifiedIncome: makeFromInt 34215, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10189, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32438, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18918, federalTaxDue: makeFromInt 25296, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2571, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24901, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20123, ordinaryIncomeNonSS: makeFromInt 103833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9676, stateTaxDue: makeFromInt 4643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32309, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27818, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5080, ordinaryIncomeNonSS: makeFromInt 83296, qualifiedIncome: makeFromInt 90170, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17732, stateTaxDue: makeFromInt 8194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9906, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2942, ordinaryIncomeNonSS: makeFromInt 32186, qualifiedIncome: makeFromInt 29133, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1804, stateTaxDue: makeFromInt 2678 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24980, ordinaryIncomeNonSS: makeFromInt 68909, qualifiedIncome: makeFromInt 10235, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7666, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8151, ordinaryIncomeNonSS: makeFromInt 114130, qualifiedIncome: makeFromInt 3782, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16257, stateTaxDue: makeFromInt 5441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53977, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9817, federalTaxDue: makeFromInt 2242, stateTaxDue: makeFromInt 2100 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45079, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65524, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1102, stateTaxDue: makeFromInt 2601 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89145, qualifiedIncome: makeFromInt 63589, itemizedDeductions: makeFromInt 22672, federalTaxDue: makeFromInt 29981, stateTaxDue: makeFromInt 7361 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48021, ordinaryIncomeNonSS: makeFromInt 141623, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25365, stateTaxDue: makeFromInt 6606 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39449, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41137, ordinaryIncomeNonSS: makeFromInt 129699, qualifiedIncome: makeFromInt 96071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42280, stateTaxDue: makeFromInt 10856 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66083, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16368, stateTaxDue: makeFromInt 3049 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37404, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23889, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 770 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28720, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1118 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98112, itemizedDeductions: makeFromInt 24741, federalTaxDue: makeFromInt 33555, stateTaxDue: makeFromInt 11931 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11923, ordinaryIncomeNonSS: makeFromInt 30594, qualifiedIncome: makeFromInt 14237, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2169, stateTaxDue: makeFromInt 1667 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50745, itemizedDeductions: makeFromInt 23314, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2062 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30494, ordinaryIncomeNonSS: makeFromInt 143706, qualifiedIncome: makeFromInt 36174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36444, stateTaxDue: makeFromInt 8739 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46232, ordinaryIncomeNonSS: makeFromInt 141875, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44695, stateTaxDue: makeFromInt 11907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32678, ordinaryIncomeNonSS: makeFromInt 132947, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18129, federalTaxDue: makeFromInt 26179, stateTaxDue: makeFromInt 6332 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119230, qualifiedIncome: makeFromInt 70358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26429, stateTaxDue: makeFromInt 8904 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141619, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17679, federalTaxDue: makeFromInt 21638, stateTaxDue: makeFromInt 6506 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5515, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47578, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35515, itemizedDeductions: makeFromInt 23315, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1363 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32559, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9335, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29178, stateTaxDue: makeFromInt 7392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 7 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15089, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29672, ordinaryIncomeNonSS: makeFromInt 724, qualifiedIncome: makeFromInt 31122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 917 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72084, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35223, stateTaxDue: makeFromInt 10775 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4238, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13673, federalTaxDue: makeFromInt 26492, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6097, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9561, ordinaryIncomeNonSS: makeFromInt 10007, qualifiedIncome: makeFromInt 89034, itemizedDeductions: makeFromInt 12318, federalTaxDue: makeFromInt 7962, stateTaxDue: makeFromInt 4497 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1029, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47070, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76194, itemizedDeductions: makeFromInt 9846, federalTaxDue: makeFromInt 7858, stateTaxDue: makeFromInt 3235 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35860, ordinaryIncomeNonSS: makeFromInt 64639, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6063, stateTaxDue: makeFromInt 2746 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42682, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10422, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1546, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7950, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7286, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22249, ordinaryIncomeNonSS: makeFromInt 29100, qualifiedIncome: makeFromInt 61447, itemizedDeductions: makeFromInt 21391, federalTaxDue: makeFromInt 2521, stateTaxDue: makeFromInt 4052 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28097, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15522, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12646, itemizedDeductions: makeFromInt 22545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 94 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36496, ordinaryIncomeNonSS: makeFromInt 137335, qualifiedIncome: makeFromInt 1403, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27876, stateTaxDue: makeFromInt 6562 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55852, itemizedDeductions: makeFromInt 22767, federalTaxDue: makeFromInt 2685, stateTaxDue: makeFromInt 2420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39515, ordinaryIncomeNonSS: makeFromInt 22708, qualifiedIncome: makeFromInt 51559, itemizedDeductions: makeFromInt 15783, federalTaxDue: makeFromInt 12216, stateTaxDue: makeFromInt 3258 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19236, federalTaxDue: makeFromInt 3369, stateTaxDue: makeFromInt 881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32258, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2528, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9881, ordinaryIncomeNonSS: makeFromInt 126141, qualifiedIncome: makeFromInt 59182, itemizedDeductions: makeFromInt 19207, federalTaxDue: makeFromInt 28933, stateTaxDue: makeFromInt 8691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30939, ordinaryIncomeNonSS: makeFromInt 73580, qualifiedIncome: makeFromInt 51196, itemizedDeductions: makeFromInt 2709, federalTaxDue: makeFromInt 25833, stateTaxDue: makeFromInt 6139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53790, qualifiedIncome: makeFromInt 20168, itemizedDeductions: makeFromInt 849, federalTaxDue: makeFromInt 5086, stateTaxDue: makeFromInt 3343 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70572, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2216, stateTaxDue: makeFromInt 2954 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43151, qualifiedIncome: makeFromInt 43901, itemizedDeductions: makeFromInt 15908, federalTaxDue: makeFromInt 7484, stateTaxDue: makeFromInt 3898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126355, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 526, federalTaxDue: makeFromInt 20633, stateTaxDue: makeFromInt 6063 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10548, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38412, ordinaryIncomeNonSS: makeFromInt 52060, qualifiedIncome: makeFromInt 8151, itemizedDeductions: makeFromInt 12353, federalTaxDue: makeFromInt 6849, stateTaxDue: makeFromInt 2596 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119077, qualifiedIncome: makeFromInt 34309, itemizedDeductions: makeFromInt 6565, federalTaxDue: makeFromInt 17942, stateTaxDue: makeFromInt 7170 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22099, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11746, stateTaxDue: makeFromInt 6003 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69095, itemizedDeductions: makeFromInt 10286, federalTaxDue: makeFromInt 31194, stateTaxDue: makeFromInt 10521 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19200, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14463, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68993, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4349, stateTaxDue: makeFromInt 3195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25198, ordinaryIncomeNonSS: makeFromInt 22056, qualifiedIncome: makeFromInt 80846, itemizedDeductions: makeFromInt 20420, federalTaxDue: makeFromInt 11717, stateTaxDue: makeFromInt 5024 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16364, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21134, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 731 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55762, qualifiedIncome: makeFromInt 56651, itemizedDeductions: makeFromInt 18282, federalTaxDue: makeFromInt 12420, stateTaxDue: makeFromInt 5166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4559, stateTaxDue: makeFromInt 2504 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20524, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 410, stateTaxDue: makeFromInt 1990 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9033, ordinaryIncomeNonSS: makeFromInt 97833, qualifiedIncome: makeFromInt 88903, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24244, stateTaxDue: makeFromInt 8762 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37372, ordinaryIncomeNonSS: makeFromInt 53334, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21320, federalTaxDue: makeFromInt 10671, stateTaxDue: makeFromInt 2496 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39436, ordinaryIncomeNonSS: makeFromInt 128275, qualifiedIncome: makeFromInt 94743, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46169, stateTaxDue: makeFromInt 11027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26934, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5266, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5690, federalTaxDue: makeFromInt 12541, stateTaxDue: makeFromInt 5361 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73582, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14583, stateTaxDue: makeFromInt 8204 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5020, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89470, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2126, stateTaxDue: makeFromInt 3910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25166, federalTaxDue: makeFromInt 21739, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85639, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26224, stateTaxDue: makeFromInt 9027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3199, itemizedDeductions: makeFromInt 22614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40152, ordinaryIncomeNonSS: makeFromInt 118040, qualifiedIncome: makeFromInt 3339, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19206, stateTaxDue: makeFromInt 5394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12714, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6638, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45955, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25061, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106198, qualifiedIncome: makeFromInt 65885, itemizedDeductions: makeFromInt 16994, federalTaxDue: makeFromInt 26943, stateTaxDue: makeFromInt 8552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41904, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33137, ordinaryIncomeNonSS: makeFromInt 102003, qualifiedIncome: makeFromInt 76322, itemizedDeductions: makeFromInt 8886, federalTaxDue: makeFromInt 33396, stateTaxDue: makeFromInt 8661 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13115, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57143, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2182 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5353, qualifiedIncome: makeFromInt 52987, itemizedDeductions: makeFromInt 1891, federalTaxDue: makeFromInt 10877, stateTaxDue: makeFromInt 2662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6462, itemizedDeductions: makeFromInt 3374, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 577, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88757, itemizedDeductions: makeFromInt 14572, federalTaxDue: makeFromInt 7062, stateTaxDue: makeFromInt 3983 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66060, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4262, stateTaxDue: makeFromInt 2941 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18969, federalTaxDue: makeFromInt 40714, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46015, itemizedDeductions: makeFromInt 20022, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1694 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81789, qualifiedIncome: makeFromInt 84433, itemizedDeductions: makeFromInt 3160, federalTaxDue: makeFromInt 14463, stateTaxDue: makeFromInt 7836 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65650, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18068, federalTaxDue: makeFromInt 6258, stateTaxDue: makeFromInt 2828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90107, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7265, stateTaxDue: makeFromInt 4250 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40259, itemizedDeductions: makeFromInt 4988, federalTaxDue: makeFromInt 4478, stateTaxDue: makeFromInt 1811 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36956, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13065, federalTaxDue: makeFromInt 13056, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53931, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12786, federalTaxDue: makeFromInt 20018, stateTaxDue: makeFromInt 7626 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73574, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4936, stateTaxDue: makeFromInt 3104 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35383, ordinaryIncomeNonSS: makeFromInt 120829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28826, federalTaxDue: makeFromInt 21635, stateTaxDue: makeFromInt 5466 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4119, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20612, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6408, federalTaxDue: makeFromInt 22532, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29072, itemizedDeductions: makeFromInt 26146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114064, qualifiedIncome: makeFromInt 34032, itemizedDeductions: makeFromInt 16975, federalTaxDue: makeFromInt 22242, stateTaxDue: makeFromInt 6950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94962, qualifiedIncome: makeFromInt 11199, itemizedDeductions: makeFromInt 18733, federalTaxDue: makeFromInt 20597, stateTaxDue: makeFromInt 4863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3252, stateTaxDue: makeFromInt 3329 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7418, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23024, ordinaryIncomeNonSS: makeFromInt 37550, qualifiedIncome: makeFromInt 80738, itemizedDeductions: makeFromInt 18935, federalTaxDue: makeFromInt 9269, stateTaxDue: makeFromInt 5482 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26095, ordinaryIncomeNonSS: makeFromInt 74494, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30129, stateTaxDue: makeFromInt 8552 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15918, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30477, itemizedDeductions: makeFromInt 16067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1106 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15517, ordinaryIncomeNonSS: makeFromInt 140312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9942, federalTaxDue: makeFromInt 25125, stateTaxDue: makeFromInt 6605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35851, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53664, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40906, stateTaxDue: makeFromInt 9938 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86731, qualifiedIncome: makeFromInt 1260, itemizedDeductions: makeFromInt 9720, federalTaxDue: makeFromInt 12727, stateTaxDue: makeFromInt 4141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64061, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7319, stateTaxDue: makeFromInt 2920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10625, ordinaryIncomeNonSS: makeFromInt 102075, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18743, federalTaxDue: makeFromInt 13800, stateTaxDue: makeFromInt 4777 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121127, qualifiedIncome: makeFromInt 50008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34032, stateTaxDue: makeFromInt 7982 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26891, ordinaryIncomeNonSS: makeFromInt 143586, qualifiedIncome: makeFromInt 79587, itemizedDeductions: makeFromInt 23025, federalTaxDue: makeFromInt 40194, stateTaxDue: makeFromInt 10904 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8542, ordinaryIncomeNonSS: makeFromInt 4829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 22 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48538, itemizedDeductions: makeFromInt 19065, federalTaxDue: makeFromInt 32995, stateTaxDue: makeFromInt 9901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105256, qualifiedIncome: makeFromInt 91258, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33299, stateTaxDue: makeFromInt 9798 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21755, ordinaryIncomeNonSS: makeFromInt 23716, qualifiedIncome: makeFromInt 53676, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4398, stateTaxDue: makeFromInt 3723 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91651, itemizedDeductions: makeFromInt 7186, federalTaxDue: makeFromInt 7958, stateTaxDue: makeFromInt 4246 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35246, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45842, stateTaxDue: makeFromInt 9101 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3425, ordinaryIncomeNonSS: makeFromInt 69111, qualifiedIncome: makeFromInt 33611, itemizedDeductions: makeFromInt 359, federalTaxDue: makeFromInt 9561, stateTaxDue: makeFromInt 4688 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39503, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22794, ordinaryIncomeNonSS: makeFromInt 5761, qualifiedIncome: makeFromInt 63137, itemizedDeductions: makeFromInt 896, federalTaxDue: makeFromInt 4857, stateTaxDue: makeFromInt 3167 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3460, stateTaxDue: makeFromInt 1094 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4921, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48375, ordinaryIncomeNonSS: makeFromInt 107247, qualifiedIncome: makeFromInt 33264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29175, stateTaxDue: makeFromInt 6819 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14168, ordinaryIncomeNonSS: makeFromInt 131840, qualifiedIncome: makeFromInt 58351, itemizedDeductions: makeFromInt 18692, federalTaxDue: makeFromInt 32973, stateTaxDue: makeFromInt 9180 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18218, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9733, ordinaryIncomeNonSS: makeFromInt 134736, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17487, stateTaxDue: makeFromInt 6321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70, qualifiedIncome: makeFromInt 95638, itemizedDeductions: makeFromInt 13105, federalTaxDue: makeFromInt 2533, stateTaxDue: makeFromInt 4187 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5673, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102476, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15841, stateTaxDue: makeFromInt 4953 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43620, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14256, federalTaxDue: makeFromInt 2403, stateTaxDue: makeFromInt 1606 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7995, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24891, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47708, ordinaryIncomeNonSS: makeFromInt 20008, qualifiedIncome: makeFromInt 85470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18681, stateTaxDue: makeFromInt 5033 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81893, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10716, stateTaxDue: makeFromInt 3840 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23511, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17267, ordinaryIncomeNonSS: makeFromInt 67609, qualifiedIncome: makeFromInt 60069, itemizedDeductions: makeFromInt 21800, federalTaxDue: makeFromInt 10943, stateTaxDue: makeFromInt 5709 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33992, ordinaryIncomeNonSS: makeFromInt 123869, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20207, stateTaxDue: makeFromInt 5665 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49663, ordinaryIncomeNonSS: makeFromInt 108004, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25807, federalTaxDue: makeFromInt 23694, stateTaxDue: makeFromInt 5145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50964, itemizedDeductions: makeFromInt 27525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1946 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42989, qualifiedIncome: makeFromInt 87992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10432, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64950, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20169, federalTaxDue: makeFromInt 5792, stateTaxDue: makeFromInt 2884 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27693, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22114, qualifiedIncome: makeFromInt 87813, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9078, stateTaxDue: makeFromInt 5041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2714, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39512, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9047, federalTaxDue: makeFromInt 12848, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40124, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20398, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30650, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38960, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68312, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2687, stateTaxDue: makeFromInt 2933 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29587, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21197, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26225, federalTaxDue: makeFromInt 26560, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38557, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49381, itemizedDeductions: makeFromInt 19592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1866 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29258, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1979, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6916, ordinaryIncomeNonSS: makeFromInt 35248, qualifiedIncome: makeFromInt 53642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11168, stateTaxDue: makeFromInt 4309 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40325, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9110, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66196, itemizedDeductions: makeFromInt 19435, federalTaxDue: makeFromInt 4282, stateTaxDue: makeFromInt 2948 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6118, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34260, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21820, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 888 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23270, itemizedDeductions: makeFromInt 21679, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 962 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17179, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44440, ordinaryIncomeNonSS: makeFromInt 112609, qualifiedIncome: makeFromInt 65377, itemizedDeductions: makeFromInt 22739, federalTaxDue: makeFromInt 34616, stateTaxDue: makeFromInt 8766 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6072, ordinaryIncomeNonSS: makeFromInt 23722, qualifiedIncome: makeFromInt 96348, itemizedDeductions: makeFromInt 19944, federalTaxDue: makeFromInt 8016, stateTaxDue: makeFromInt 5429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1460, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19562, federalTaxDue: makeFromInt 40438, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14998, itemizedDeductions: makeFromInt 15293, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110498, qualifiedIncome: makeFromInt 84905, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22723, stateTaxDue: makeFromInt 9295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23818, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8797, federalTaxDue: makeFromInt 25891, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34781, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4873, ordinaryIncomeNonSS: makeFromInt 82829, qualifiedIncome: makeFromInt 92845, itemizedDeductions: makeFromInt 10314, federalTaxDue: makeFromInt 17124, stateTaxDue: makeFromInt 8109 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32500, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41098, stateTaxDue: makeFromInt 8859 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48314, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16868, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2148, ordinaryIncomeNonSS: makeFromInt 97956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 554, federalTaxDue: makeFromInt 14335, stateTaxDue: makeFromInt 4443 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53235, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2266 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63207, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17344, federalTaxDue: makeFromInt 23256, stateTaxDue: makeFromInt 7685 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96571, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18019, stateTaxDue: makeFromInt 4701 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43032, ordinaryIncomeNonSS: makeFromInt 73783, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2696, federalTaxDue: makeFromInt 13746, stateTaxDue: makeFromInt 3314 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25515, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20772, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18610, federalTaxDue: makeFromInt 37112, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28982, ordinaryIncomeNonSS: makeFromInt 17760, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 452 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23042, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19071, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32156, ordinaryIncomeNonSS: makeFromInt 148371, qualifiedIncome: makeFromInt 64445, itemizedDeductions: makeFromInt 3984, federalTaxDue: makeFromInt 42143, stateTaxDue: makeFromInt 10386 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76991, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35087, stateTaxDue: makeFromInt 8802 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32070, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7642, itemizedDeductions: makeFromInt 662, federalTaxDue: makeFromInt 38274, stateTaxDue: makeFromInt 7427 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85434, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27534, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33711, ordinaryIncomeNonSS: makeFromInt 127746, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26010, stateTaxDue: makeFromInt 5964 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40713, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35406, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1195 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10110, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25438, qualifiedIncome: makeFromInt 35755, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2692 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126010, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18821, stateTaxDue: makeFromInt 6080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123800, qualifiedIncome: makeFromInt 84404, itemizedDeductions: makeFromInt 15079, federalTaxDue: makeFromInt 30371, stateTaxDue: makeFromInt 10170 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6342, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23450, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38934, itemizedDeductions: makeFromInt 15635, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1333 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28369, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32101, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26121, ordinaryIncomeNonSS: makeFromInt 29787, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20918, federalTaxDue: makeFromInt 14884, stateTaxDue: makeFromInt 6272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25031, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25600, itemizedDeductions: makeFromInt 28062, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 857 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32166, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3425, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77659, itemizedDeductions: makeFromInt 218, federalTaxDue: makeFromInt 37956, stateTaxDue: makeFromInt 10928 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42140, itemizedDeductions: makeFromInt 2866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1496 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7873, ordinaryIncomeNonSS: makeFromInt 86708, qualifiedIncome: makeFromInt 71828, itemizedDeductions: makeFromInt 24422, federalTaxDue: makeFromInt 22745, stateTaxDue: makeFromInt 7861 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87649, qualifiedIncome: makeFromInt 88689, itemizedDeductions: makeFromInt 29458, federalTaxDue: makeFromInt 22577, stateTaxDue: makeFromInt 8769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3540, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19376, ordinaryIncomeNonSS: makeFromInt 66427, qualifiedIncome: makeFromInt 60478, itemizedDeductions: makeFromInt 23609, federalTaxDue: makeFromInt 11169, stateTaxDue: makeFromInt 5670 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24986, ordinaryIncomeNonSS: makeFromInt 39916, qualifiedIncome: makeFromInt 11784, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4507, stateTaxDue: makeFromInt 2010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29519, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60517, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1518, stateTaxDue: makeFromInt 2536 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9704, ordinaryIncomeNonSS: makeFromInt 115603, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4412, federalTaxDue: makeFromInt 12925, stateTaxDue: makeFromInt 5105 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35640, ordinaryIncomeNonSS: makeFromInt 64170, qualifiedIncome: makeFromInt 94188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24374, stateTaxDue: makeFromInt 7343 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28237, ordinaryIncomeNonSS: makeFromInt 137808, qualifiedIncome: makeFromInt 5129, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26239, stateTaxDue: makeFromInt 6692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14610, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76072, qualifiedIncome: makeFromInt 72755, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34252, stateTaxDue: makeFromInt 7366 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9707, ordinaryIncomeNonSS: makeFromInt 3521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137201, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22592, federalTaxDue: makeFromInt 33173, stateTaxDue: makeFromInt 6651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63777, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7330, stateTaxDue: makeFromInt 2824 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60625, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95732, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21642, stateTaxDue: makeFromInt 9330 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30211, ordinaryIncomeNonSS: makeFromInt 111280, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15359, stateTaxDue: makeFromInt 5089 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94247, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8445, stateTaxDue: makeFromInt 4582 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21076, federalTaxDue: makeFromInt 765, stateTaxDue: makeFromInt 1272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115997, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18133, stateTaxDue: makeFromInt 5487 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13494, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131539, qualifiedIncome: makeFromInt 93069, itemizedDeductions: makeFromInt 2786, federalTaxDue: makeFromInt 30175, stateTaxDue: makeFromInt 10802 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136209, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26090, federalTaxDue: makeFromInt 28965, stateTaxDue: makeFromInt 6236 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17229, qualifiedIncome: makeFromInt 98171, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3576, stateTaxDue: makeFromInt 5437 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27131, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47488, itemizedDeductions: makeFromInt 15613, federalTaxDue: makeFromInt 191, stateTaxDue: makeFromInt 1799 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50776, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3170, stateTaxDue: makeFromInt 2161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84704, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6732, federalTaxDue: makeFromInt 18711, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47404, qualifiedIncome: makeFromInt 94658, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16572, stateTaxDue: makeFromInt 6648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76407, qualifiedIncome: makeFromInt 505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5606, stateTaxDue: makeFromInt 3270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63181, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 184, federalTaxDue: makeFromInt 6812, stateTaxDue: makeFromInt 2875 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23367, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38804, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1659, stateTaxDue: makeFromInt 1755 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29557, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1023 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3274, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26799, stateTaxDue: makeFromInt 7209 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37919, ordinaryIncomeNonSS: makeFromInt 30770, qualifiedIncome: makeFromInt 94141, itemizedDeductions: makeFromInt 19250, federalTaxDue: makeFromInt 17197, stateTaxDue: makeFromInt 5871 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30629, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12353, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 43 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73930, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9677, stateTaxDue: makeFromInt 3424 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68584, itemizedDeductions: makeFromInt 13443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 872, ordinaryIncomeNonSS: makeFromInt 128476, qualifiedIncome: makeFromInt 54920, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23751, stateTaxDue: makeFromInt 8925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25646, ordinaryIncomeNonSS: makeFromInt 67020, qualifiedIncome: makeFromInt 55407, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21151, stateTaxDue: makeFromInt 5815 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26762, ordinaryIncomeNonSS: makeFromInt 19397, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 214, stateTaxDue: makeFromInt 395 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49565, ordinaryIncomeNonSS: makeFromInt 118484, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12810, federalTaxDue: makeFromInt 30568, stateTaxDue: makeFromInt 5696 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18596, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34157, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39353, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40208, ordinaryIncomeNonSS: makeFromInt 62596, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18723, federalTaxDue: makeFromInt 7742, stateTaxDue: makeFromInt 2540 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48515, ordinaryIncomeNonSS: makeFromInt 14893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20914, ordinaryIncomeNonSS: makeFromInt 137089, qualifiedIncome: makeFromInt 99083, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48364, stateTaxDue: makeFromInt 11820 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30599, ordinaryIncomeNonSS: makeFromInt 28104, qualifiedIncome: makeFromInt 87349, itemizedDeductions: makeFromInt 1572, federalTaxDue: makeFromInt 17287, stateTaxDue: makeFromInt 5318 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117976, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12554, stateTaxDue: makeFromInt 5568 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 62, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9631, qualifiedIncome: makeFromInt 98089, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2211, stateTaxDue: makeFromInt 4711 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 276, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10520, ordinaryIncomeNonSS: makeFromInt 61556, qualifiedIncome: makeFromInt 14992, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4465, stateTaxDue: makeFromInt 3152 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18203, qualifiedIncome: makeFromInt 34806, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7077, stateTaxDue: makeFromInt 2275 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81092, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29798, stateTaxDue: makeFromInt 10880 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8145, stateTaxDue: makeFromInt 3159 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22659, qualifiedIncome: makeFromInt 25169, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 216, stateTaxDue: makeFromInt 1816 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60083, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27812, ordinaryIncomeNonSS: makeFromInt 120571, qualifiedIncome: makeFromInt 36932, itemizedDeductions: makeFromInt 6794, federalTaxDue: makeFromInt 35919, stateTaxDue: makeFromInt 7808 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1239, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12175, qualifiedIncome: makeFromInt 10888, itemizedDeductions: makeFromInt 6618, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 942 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131131, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37179, stateTaxDue: makeFromInt 11302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11362, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23065, itemizedDeductions: makeFromInt 14233, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 748 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10605, itemizedDeductions: makeFromInt 24236, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49458, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2973, stateTaxDue: makeFromInt 2094 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31528, qualifiedIncome: makeFromInt 66824, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4567 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29350, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17646, ordinaryIncomeNonSS: makeFromInt 115892, qualifiedIncome: makeFromInt 19135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26553, stateTaxDue: makeFromInt 6540 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17513, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37792, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1275 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15844, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14837, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 287 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43168, ordinaryIncomeNonSS: makeFromInt 100775, qualifiedIncome: makeFromInt 17040, itemizedDeductions: makeFromInt 27599, federalTaxDue: makeFromInt 16438, stateTaxDue: makeFromInt 5356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24828, ordinaryIncomeNonSS: makeFromInt 74294, qualifiedIncome: makeFromInt 85082, itemizedDeductions: makeFromInt 2287, federalTaxDue: makeFromInt 25745, stateTaxDue: makeFromInt 7700 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28505, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2004, federalTaxDue: makeFromInt 14852, stateTaxDue: makeFromInt 4852 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94015, qualifiedIncome: makeFromInt 49837, itemizedDeductions: makeFromInt 10978, federalTaxDue: makeFromInt 20542, stateTaxDue: makeFromInt 6738 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140503, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24967, stateTaxDue: makeFromInt 6873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25677, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64099, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5169, stateTaxDue: makeFromInt 2841 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5687, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63593, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1626, stateTaxDue: makeFromInt 2666 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 688, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80010, itemizedDeductions: makeFromInt 12638, federalTaxDue: makeFromInt 38449, stateTaxDue: makeFromInt 11246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33163, ordinaryIncomeNonSS: makeFromInt 101019, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11101, federalTaxDue: makeFromInt 20437, stateTaxDue: makeFromInt 4724 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62451, itemizedDeductions: makeFromInt 22394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2532 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5841, ordinaryIncomeNonSS: makeFromInt 5125, qualifiedIncome: makeFromInt 45095, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1936 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54640, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4078, stateTaxDue: makeFromInt 2214 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19329, ordinaryIncomeNonSS: makeFromInt 12495, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8574, stateTaxDue: makeFromInt 5250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36884, ordinaryIncomeNonSS: makeFromInt 135173, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13013, federalTaxDue: makeFromInt 49886, stateTaxDue: makeFromInt 11769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17081, ordinaryIncomeNonSS: makeFromInt 49373, qualifiedIncome: makeFromInt 35598, itemizedDeductions: makeFromInt 10224, federalTaxDue: makeFromInt 3980, stateTaxDue: makeFromInt 3574 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11810, ordinaryIncomeNonSS: makeFromInt 143671, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39150, stateTaxDue: makeFromInt 11609 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90125, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5606, stateTaxDue: makeFromInt 4208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41982, ordinaryIncomeNonSS: makeFromInt 62464, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20083, federalTaxDue: makeFromInt 10175, stateTaxDue: makeFromInt 2737 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142825, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 306, federalTaxDue: makeFromInt 21538, stateTaxDue: makeFromInt 6766 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39369, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7793, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29508, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63694, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76379, itemizedDeductions: makeFromInt 5593, federalTaxDue: makeFromInt 3897, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75339, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15362, federalTaxDue: makeFromInt 18430, stateTaxDue: makeFromInt 3312 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61101, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2667 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137893, qualifiedIncome: makeFromInt 62863, itemizedDeductions: makeFromInt 9600, federalTaxDue: makeFromInt 24994, stateTaxDue: makeFromInt 9563 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4163, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1021 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46218, itemizedDeductions: makeFromInt 25391, federalTaxDue: makeFromInt 31370, stateTaxDue: makeFromInt 9660 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26304, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24799, itemizedDeductions: makeFromInt 25164, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 985 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37562, ordinaryIncomeNonSS: makeFromInt 138755, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37930, stateTaxDue: makeFromInt 6852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34788, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 664, stateTaxDue: makeFromInt 1366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5986, ordinaryIncomeNonSS: makeFromInt 117869, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14825, federalTaxDue: makeFromInt 13513, stateTaxDue: makeFromInt 5359 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35308, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4320, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74567, qualifiedIncome: makeFromInt 22073, itemizedDeductions: makeFromInt 29263, federalTaxDue: makeFromInt 18547, stateTaxDue: makeFromInt 4582 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33879, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 205, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27060, ordinaryIncomeNonSS: makeFromInt 41656, qualifiedIncome: makeFromInt 43174, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9560, stateTaxDue: makeFromInt 3667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108348, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31221, stateTaxDue: makeFromInt 10197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39602, ordinaryIncomeNonSS: makeFromInt 136259, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34233, stateTaxDue: makeFromInt 6602 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140586, qualifiedIncome: makeFromInt 75821, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35421, stateTaxDue: makeFromInt 10565 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18878, ordinaryIncomeNonSS: makeFromInt 6468, qualifiedIncome: makeFromInt 95765, itemizedDeductions: makeFromInt 1919, federalTaxDue: makeFromInt 6753, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31198, qualifiedIncome: makeFromInt 74584, itemizedDeductions: makeFromInt 5408, federalTaxDue: makeFromInt 1075, stateTaxDue: makeFromInt 4696 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24452, ordinaryIncomeNonSS: makeFromInt 95351, qualifiedIncome: makeFromInt 67099, itemizedDeductions: makeFromInt 1231, federalTaxDue: makeFromInt 28245, stateTaxDue: makeFromInt 7668 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27617, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17949, federalTaxDue: makeFromInt 24763, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3896, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58839, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3178, stateTaxDue: makeFromInt 2776 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11998, itemizedDeductions: makeFromInt 7916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25264, qualifiedIncome: makeFromInt 8612, itemizedDeductions: makeFromInt 25127, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8788, qualifiedIncome: makeFromInt 51673, itemizedDeductions: makeFromInt 9706, federalTaxDue: makeFromInt 191, stateTaxDue: makeFromInt 2533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12368, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44275, qualifiedIncome: makeFromInt 42577, itemizedDeductions: makeFromInt 4964, federalTaxDue: makeFromInt 3216, stateTaxDue: makeFromInt 3981 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45096, ordinaryIncomeNonSS: makeFromInt 11262, qualifiedIncome: makeFromInt 61979, itemizedDeductions: makeFromInt 6337, federalTaxDue: makeFromInt 8314, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83762, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38879, stateTaxDue: makeFromInt 11233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72592, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5880, stateTaxDue: makeFromInt 3255 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9323, ordinaryIncomeNonSS: makeFromInt 48945, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16130, federalTaxDue: makeFromInt 3508, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47759, ordinaryIncomeNonSS: makeFromInt 1654, qualifiedIncome: makeFromInt 89007, itemizedDeductions: makeFromInt 5978, federalTaxDue: makeFromInt 14652, stateTaxDue: makeFromInt 4078 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59003, itemizedDeductions: makeFromInt 18993, federalTaxDue: makeFromInt 457, stateTaxDue: makeFromInt 2356 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85877, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1230, federalTaxDue: makeFromInt 6733, stateTaxDue: makeFromInt 3619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12424, ordinaryIncomeNonSS: makeFromInt 118310, qualifiedIncome: makeFromInt 23082, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17415, stateTaxDue: makeFromInt 6660 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36918, ordinaryIncomeNonSS: makeFromInt 1593, qualifiedIncome: makeFromInt 54150, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2430, stateTaxDue: makeFromInt 2414 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85655, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4936, stateTaxDue: makeFromInt 3780 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11999, ordinaryIncomeNonSS: makeFromInt 122060, qualifiedIncome: makeFromInt 7620, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14874, stateTaxDue: makeFromInt 5809 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42801, ordinaryIncomeNonSS: makeFromInt 140824, qualifiedIncome: makeFromInt 24403, itemizedDeductions: makeFromInt 24769, federalTaxDue: makeFromInt 33654, stateTaxDue: makeFromInt 7998 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26538, ordinaryIncomeNonSS: makeFromInt 107458, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28831, stateTaxDue: makeFromInt 9898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69851, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14200, stateTaxDue: makeFromInt 8018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19113, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30658, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28833, stateTaxDue: makeFromInt 7503 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25771, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15462, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53664, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32165, stateTaxDue: makeFromInt 9734 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31935, itemizedDeductions: makeFromInt 8054, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63552, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3282, stateTaxDue: makeFromInt 2923 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33437, ordinaryIncomeNonSS: makeFromInt 110575, qualifiedIncome: makeFromInt 39044, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27516, stateTaxDue: makeFromInt 7080 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21233, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12243, federalTaxDue: makeFromInt 28098, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47939, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22633, itemizedDeductions: makeFromInt 23695, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130359, qualifiedIncome: makeFromInt 89956, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35087, stateTaxDue: makeFromInt 10761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40986, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49882, ordinaryIncomeNonSS: makeFromInt 89098, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4718, federalTaxDue: makeFromInt 22267, stateTaxDue: makeFromInt 4200 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23466, itemizedDeductions: makeFromInt 15150, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 850 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21029, ordinaryIncomeNonSS: makeFromInt 34785, qualifiedIncome: makeFromInt 65209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3381, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67303, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4815, stateTaxDue: makeFromInt 2780 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23825, ordinaryIncomeNonSS: makeFromInt 86557, qualifiedIncome: makeFromInt 83691, itemizedDeductions: makeFromInt 21538, federalTaxDue: makeFromInt 27156, stateTaxDue: makeFromInt 8336 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93789, itemizedDeductions: makeFromInt 6658, federalTaxDue: makeFromInt 12635, stateTaxDue: makeFromInt 4355 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12768, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59873, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2401 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8571, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96573, itemizedDeductions: makeFromInt 7383, federalTaxDue: makeFromInt 2486, stateTaxDue: makeFromInt 4354 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35725, ordinaryIncomeNonSS: makeFromInt 28296, qualifiedIncome: makeFromInt 61335, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9711, stateTaxDue: makeFromInt 4020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81620, itemizedDeductions: makeFromInt 1998, federalTaxDue: makeFromInt 10917, stateTaxDue: makeFromInt 3734 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37957, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26975, federalTaxDue: makeFromInt 1112, stateTaxDue: makeFromInt 1643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12295, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19478, stateTaxDue: makeFromInt 7640 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92201, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10989, federalTaxDue: makeFromInt 13459, stateTaxDue: makeFromInt 4232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2237, stateTaxDue: makeFromInt 4249 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83561, qualifiedIncome: makeFromInt 12799, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16675, stateTaxDue: makeFromInt 4262 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42274, ordinaryIncomeNonSS: makeFromInt 115582, qualifiedIncome: makeFromInt 2501, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27046, stateTaxDue: makeFromInt 5449 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38169, ordinaryIncomeNonSS: makeFromInt 4001, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8241, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7977, ordinaryIncomeNonSS: makeFromInt 93610, qualifiedIncome: makeFromInt 2220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14802, stateTaxDue: makeFromInt 4537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111464, qualifiedIncome: makeFromInt 79641, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26722, stateTaxDue: makeFromInt 9196 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82058, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6402, stateTaxDue: makeFromInt 3922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10284, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57934, qualifiedIncome: makeFromInt 30298, itemizedDeductions: makeFromInt 10151, federalTaxDue: makeFromInt 17824, stateTaxDue: makeFromInt 4071 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43517, ordinaryIncomeNonSS: makeFromInt 130576, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25894, federalTaxDue: makeFromInt 28851, stateTaxDue: makeFromInt 6313 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19946, qualifiedIncome: makeFromInt 40970, itemizedDeductions: makeFromInt 9372, federalTaxDue: makeFromInt 3702, stateTaxDue: makeFromInt 2571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35520, qualifiedIncome: makeFromInt 42842, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7755, stateTaxDue: makeFromInt 3344 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126464, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40549, stateTaxDue: makeFromInt 11325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22021, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29382, itemizedDeductions: makeFromInt 810, federalTaxDue: makeFromInt 40545, stateTaxDue: makeFromInt 8598 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12434, federalTaxDue: makeFromInt 34349, stateTaxDue: makeFromInt 12181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70294, itemizedDeductions: makeFromInt 6561, federalTaxDue: makeFromInt 6077, stateTaxDue: makeFromInt 3136 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122022, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7894, federalTaxDue: makeFromInt 23804, stateTaxDue: makeFromInt 5999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105353, qualifiedIncome: makeFromInt 67045, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27355, stateTaxDue: makeFromInt 8445 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27723, qualifiedIncome: makeFromInt 63690, itemizedDeductions: makeFromInt 4328, federalTaxDue: makeFromInt 7048, stateTaxDue: makeFromInt 4116 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15279, ordinaryIncomeNonSS: makeFromInt 122854, qualifiedIncome: makeFromInt 88672, itemizedDeductions: makeFromInt 18331, federalTaxDue: makeFromInt 33163, stateTaxDue: makeFromInt 10201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15828, ordinaryIncomeNonSS: makeFromInt 83788, qualifiedIncome: makeFromInt 14131, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17390, stateTaxDue: makeFromInt 4647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29129, itemizedDeductions: makeFromInt 4658, federalTaxDue: makeFromInt 28780, stateTaxDue: makeFromInt 8585 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75109, itemizedDeductions: makeFromInt 21517, federalTaxDue: makeFromInt 34740, stateTaxDue: makeFromInt 10680 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75128, qualifiedIncome: makeFromInt 6340, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12057, stateTaxDue: makeFromInt 3598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35982, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1611 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3039, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17763, itemizedDeductions: makeFromInt 19573, federalTaxDue: makeFromInt 28876, stateTaxDue: makeFromInt 8332 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32858, ordinaryIncomeNonSS: makeFromInt 148342, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34256, stateTaxDue: makeFromInt 7137 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15114, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11299, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17751, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4841, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26469, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27673, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5899 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63420, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24003, federalTaxDue: makeFromInt 4525, stateTaxDue: makeFromInt 2916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21286, ordinaryIncomeNonSS: makeFromInt 148383, qualifiedIncome: makeFromInt 43251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31437, stateTaxDue: makeFromInt 9121 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27090, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19459, qualifiedIncome: makeFromInt 77097, itemizedDeductions: makeFromInt 7131, federalTaxDue: makeFromInt 15827, stateTaxDue: makeFromInt 4496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14389, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37803, itemizedDeductions: makeFromInt 10156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1275 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5433, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21661, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20883, stateTaxDue: makeFromInt 7908 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7183, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24725, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26016, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9578, federalTaxDue: makeFromInt 13215, stateTaxDue: makeFromInt 5826 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90106, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5803, stateTaxDue: makeFromInt 4249 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63245, itemizedDeductions: makeFromInt 11208, federalTaxDue: makeFromInt 1117, stateTaxDue: makeFromInt 2787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38412, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18158, itemizedDeductions: makeFromInt 23697, federalTaxDue: makeFromInt 34597, stateTaxDue: makeFromInt 8148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35561, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51692, itemizedDeductions: makeFromInt 11821, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1984 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1190, ordinaryIncomeNonSS: makeFromInt 21046, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6857, stateTaxDue: makeFromInt 5677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20682, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30527, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14346, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32002, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1225 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 877, ordinaryIncomeNonSS: makeFromInt 45402, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1885, stateTaxDue: makeFromInt 1595 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34722, ordinaryIncomeNonSS: makeFromInt 116437, qualifiedIncome: makeFromInt 21982, itemizedDeductions: makeFromInt 6740, federalTaxDue: makeFromInt 25585, stateTaxDue: makeFromInt 6546 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137741, qualifiedIncome: makeFromInt 80935, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33485, stateTaxDue: makeFromInt 10602 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12091, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42874, itemizedDeductions: makeFromInt 19918, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65734, qualifiedIncome: makeFromInt 1989, itemizedDeductions: makeFromInt 316, federalTaxDue: makeFromInt 20743, stateTaxDue: makeFromInt 3229 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11928, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74902, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10618, federalTaxDue: makeFromInt 5416, stateTaxDue: makeFromInt 3070 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6553, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27749, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6391, ordinaryIncomeNonSS: makeFromInt 113549, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15583, federalTaxDue: makeFromInt 30816, stateTaxDue: makeFromInt 10302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112659, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20846, federalTaxDue: makeFromInt 13483, stateTaxDue: makeFromInt 5297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40246, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14177, itemizedDeductions: makeFromInt 1598, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 70 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1738, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13532, ordinaryIncomeNonSS: makeFromInt 135936, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23034, stateTaxDue: makeFromInt 6222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76752, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29013, federalTaxDue: makeFromInt 11795, stateTaxDue: makeFromInt 3364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37937, ordinaryIncomeNonSS: makeFromInt 101521, qualifiedIncome: makeFromInt 6981, itemizedDeductions: makeFromInt 2231, federalTaxDue: makeFromInt 15704, stateTaxDue: makeFromInt 4950 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19587, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6552, federalTaxDue: makeFromInt 14118, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28457, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29632, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29215, federalTaxDue: makeFromInt 34979, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46506, qualifiedIncome: makeFromInt 56993, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7172, stateTaxDue: makeFromInt 4800 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41267, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64241, itemizedDeductions: makeFromInt 28579, federalTaxDue: makeFromInt 245, stateTaxDue: makeFromInt 2827 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31011, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29736, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1012 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28735, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32365, ordinaryIncomeNonSS: makeFromInt 125246, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6664, federalTaxDue: makeFromInt 19955, stateTaxDue: makeFromInt 5881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20894, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30570, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97646, itemizedDeductions: makeFromInt 27369, federalTaxDue: makeFromInt 6892, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4829, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18537, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63836, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18973, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 519 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26220, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8060, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41295, ordinaryIncomeNonSS: makeFromInt 119475, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43815, stateTaxDue: makeFromInt 10765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11767, ordinaryIncomeNonSS: makeFromInt 144056, qualifiedIncome: makeFromInt 46593, itemizedDeductions: makeFromInt 19738, federalTaxDue: makeFromInt 27049, stateTaxDue: makeFromInt 9070 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42561, ordinaryIncomeNonSS: makeFromInt 73868, qualifiedIncome: makeFromInt 67934, itemizedDeductions: makeFromInt 22035, federalTaxDue: makeFromInt 20749, stateTaxDue: makeFromInt 6515 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19813, ordinaryIncomeNonSS: makeFromInt 43142, qualifiedIncome: makeFromInt 27659, itemizedDeductions: makeFromInt 6082, federalTaxDue: makeFromInt 3626, stateTaxDue: makeFromInt 3065 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43300, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78187, itemizedDeductions: makeFromInt 753, federalTaxDue: makeFromInt 10542, stateTaxDue: makeFromInt 3641 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26731, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36341, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26499, federalTaxDue: makeFromInt 42980, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77065, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2556, federalTaxDue: makeFromInt 9653, stateTaxDue: makeFromInt 3398 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68411, itemizedDeductions: makeFromInt 16919, federalTaxDue: makeFromInt 2147, stateTaxDue: makeFromInt 3046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31291, itemizedDeductions: makeFromInt 9654, federalTaxDue: makeFromInt 875, stateTaxDue: makeFromInt 1110 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6374, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 64 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4395, ordinaryIncomeNonSS: makeFromInt 102993, qualifiedIncome: makeFromInt 63070, itemizedDeductions: makeFromInt 26502, federalTaxDue: makeFromInt 18752, stateTaxDue: makeFromInt 7918 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8530, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77897, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8260, stateTaxDue: makeFromInt 3524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46237, itemizedDeductions: makeFromInt 12018, federalTaxDue: makeFromInt 36906, stateTaxDue: makeFromInt 9559 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1530, ordinaryIncomeNonSS: makeFromInt 114825, qualifiedIncome: makeFromInt 80049, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31999, stateTaxDue: makeFromInt 9592 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45270, ordinaryIncomeNonSS: makeFromInt 25206, qualifiedIncome: makeFromInt 79898, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15246, stateTaxDue: makeFromInt 4880 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49622, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96322, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15411, stateTaxDue: makeFromInt 4561 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2265, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5243, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28316, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121570, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22010, federalTaxDue: makeFromInt 11973, stateTaxDue: makeFromInt 5404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30394, ordinaryIncomeNonSS: makeFromInt 110428, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32096, stateTaxDue: makeFromInt 10283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17960, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29111, ordinaryIncomeNonSS: makeFromInt 118642, qualifiedIncome: makeFromInt 63367, itemizedDeductions: makeFromInt 28527, federalTaxDue: makeFromInt 24700, stateTaxDue: makeFromInt 8630 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5623, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19713, itemizedDeductions: makeFromInt 6942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101981, qualifiedIncome: makeFromInt 36678, itemizedDeductions: makeFromInt 8582, federalTaxDue: makeFromInt 20321, stateTaxDue: makeFromInt 6478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85273, qualifiedIncome: makeFromInt 77044, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23835, stateTaxDue: makeFromInt 7931 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89162, itemizedDeductions: makeFromInt 7258, federalTaxDue: makeFromInt 7727, stateTaxDue: makeFromInt 4323 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105916, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4136, federalTaxDue: makeFromInt 24572, stateTaxDue: makeFromInt 9849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44508, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21639, federalTaxDue: makeFromInt 3618, stateTaxDue: makeFromInt 1617 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48478, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24953, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 573 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40166, itemizedDeductions: makeFromInt 5583, federalTaxDue: makeFromInt 30905, stateTaxDue: makeFromInt 9250 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74460, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26707, federalTaxDue: makeFromInt 6364, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14094, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19674, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31108, qualifiedIncome: makeFromInt 23673, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9052, stateTaxDue: makeFromInt 2364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47677, qualifiedIncome: makeFromInt 11087, itemizedDeductions: makeFromInt 5915, federalTaxDue: makeFromInt 13885, stateTaxDue: makeFromInt 2483 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95844, itemizedDeductions: makeFromInt 25245, federalTaxDue: makeFromInt 8377, stateTaxDue: makeFromInt 4537 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114585, qualifiedIncome: makeFromInt 94443, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25213, stateTaxDue: makeFromInt 9976 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39104, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71407, itemizedDeductions: makeFromInt 19176, federalTaxDue: makeFromInt 594, stateTaxDue: makeFromInt 2895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123762, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16296, federalTaxDue: makeFromInt 17397, stateTaxDue: makeFromInt 5863 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12248, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18619, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21877, ordinaryIncomeNonSS: makeFromInt 80080, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23246, federalTaxDue: makeFromInt 12384, stateTaxDue: makeFromInt 3749 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32714, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27782, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67636, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28373, stateTaxDue: makeFromInt 10407 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18959, ordinaryIncomeNonSS: makeFromInt 28635, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 439, stateTaxDue: makeFromInt 957 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6602, ordinaryIncomeNonSS: makeFromInt 43541, qualifiedIncome: makeFromInt 80282, itemizedDeductions: makeFromInt 21593, federalTaxDue: makeFromInt 11456, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42534, stateTaxDue: makeFromInt 8336 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74782, qualifiedIncome: makeFromInt 46051, itemizedDeductions: makeFromInt 17491, federalTaxDue: makeFromInt 13146, stateTaxDue: makeFromInt 5467 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73925, qualifiedIncome: makeFromInt 66050, itemizedDeductions: makeFromInt 4496, federalTaxDue: makeFromInt 9583, stateTaxDue: makeFromInt 6324 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47489, ordinaryIncomeNonSS: makeFromInt 142735, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19939, federalTaxDue: makeFromInt 41120, stateTaxDue: makeFromInt 11662 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51376, qualifiedIncome: makeFromInt 58996, itemizedDeductions: makeFromInt 24196, federalTaxDue: makeFromInt 7566, stateTaxDue: makeFromInt 5282 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6981, ordinaryIncomeNonSS: makeFromInt 130468, qualifiedIncome: makeFromInt 74499, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27782, stateTaxDue: makeFromInt 9801 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22239, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 706 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78820, qualifiedIncome: makeFromInt 1205, itemizedDeductions: makeFromInt 3431, federalTaxDue: makeFromInt 16558, stateTaxDue: makeFromInt 3626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37449, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66898, qualifiedIncome: makeFromInt 28322, itemizedDeductions: makeFromInt 22898, federalTaxDue: makeFromInt 17395, stateTaxDue: makeFromInt 4186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114123, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25616, federalTaxDue: makeFromInt 19232, stateTaxDue: makeFromInt 5167 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22628, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13614, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 42 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27676, ordinaryIncomeNonSS: makeFromInt 14967, qualifiedIncome: makeFromInt 79653, itemizedDeductions: makeFromInt 22780, federalTaxDue: makeFromInt 9931, stateTaxDue: makeFromInt 4476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69991, qualifiedIncome: makeFromInt 67026, itemizedDeductions: makeFromInt 28360, federalTaxDue: makeFromInt 25845, stateTaxDue: makeFromInt 6763 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7074, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47486, ordinaryIncomeNonSS: makeFromInt 89955, qualifiedIncome: makeFromInt 70461, itemizedDeductions: makeFromInt 8564, federalTaxDue: makeFromInt 34051, stateTaxDue: makeFromInt 7834 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33143, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31279, stateTaxDue: makeFromInt 8902 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49934, qualifiedIncome: makeFromInt 17741, itemizedDeductions: makeFromInt 762, federalTaxDue: makeFromInt 5718, stateTaxDue: makeFromInt 3129 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136449, qualifiedIncome: makeFromInt 59459, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30627, stateTaxDue: makeFromInt 9767 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6742, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 82 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7753, federalTaxDue: makeFromInt 6118, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41444, ordinaryIncomeNonSS: makeFromInt 72862, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23900, stateTaxDue: makeFromInt 8168 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18220, stateTaxDue: makeFromInt 3950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9892, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19988, ordinaryIncomeNonSS: makeFromInt 4863, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22681, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4668 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38623, qualifiedIncome: makeFromInt 34952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2368, stateTaxDue: makeFromInt 3304 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46132, itemizedDeductions: makeFromInt 24333, federalTaxDue: makeFromInt 669, stateTaxDue: makeFromInt 2052 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15594, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4730, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66950, qualifiedIncome: makeFromInt 5115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8195, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2205, itemizedDeductions: makeFromInt 13565, federalTaxDue: makeFromInt 27909, stateTaxDue: makeFromInt 7135 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39327, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11250, itemizedDeductions: makeFromInt 11252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30903, qualifiedIncome: makeFromInt 5955, itemizedDeductions: makeFromInt 3895, federalTaxDue: makeFromInt 435, stateTaxDue: makeFromInt 1451 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35623, ordinaryIncomeNonSS: makeFromInt 54275, qualifiedIncome: makeFromInt 46282, itemizedDeductions: makeFromInt 24046, federalTaxDue: makeFromInt 14550, stateTaxDue: makeFromInt 4653 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10737, ordinaryIncomeNonSS: makeFromInt 64536, qualifiedIncome: makeFromInt 62999, itemizedDeductions: makeFromInt 29445, federalTaxDue: makeFromInt 14795, stateTaxDue: makeFromInt 5922 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2620, federalTaxDue: makeFromInt 34349, stateTaxDue: makeFromInt 11979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3453, ordinaryIncomeNonSS: makeFromInt 62213, qualifiedIncome: makeFromInt 87811, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10477, stateTaxDue: makeFromInt 6826 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49432, ordinaryIncomeNonSS: makeFromInt 100052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10423, federalTaxDue: makeFromInt 24804, stateTaxDue: makeFromInt 4748 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19486, federalTaxDue: makeFromInt 25403, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40546, itemizedDeductions: makeFromInt 26128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1415 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69025, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17254, federalTaxDue: makeFromInt 16169, stateTaxDue: makeFromInt 8069 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33745, qualifiedIncome: makeFromInt 52719, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3757 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19631, ordinaryIncomeNonSS: makeFromInt 134823, qualifiedIncome: makeFromInt 98360, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36252, stateTaxDue: makeFromInt 11284 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29682, ordinaryIncomeNonSS: makeFromInt 133856, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26046, federalTaxDue: makeFromInt 24266, stateTaxDue: makeFromInt 6118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8195, ordinaryIncomeNonSS: makeFromInt 43825, qualifiedIncome: makeFromInt 92157, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8311, stateTaxDue: makeFromInt 6507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32309, ordinaryIncomeNonSS: makeFromInt 70703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11451, stateTaxDue: makeFromInt 3055 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18311, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140292, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1344, federalTaxDue: makeFromInt 21436, stateTaxDue: makeFromInt 6440 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22841, ordinaryIncomeNonSS: makeFromInt 62585, qualifiedIncome: makeFromInt 42744, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8809, stateTaxDue: makeFromInt 4719 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49996, ordinaryIncomeNonSS: makeFromInt 94510, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21403, federalTaxDue: makeFromInt 22034, stateTaxDue: makeFromInt 4392 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33558, ordinaryIncomeNonSS: makeFromInt 148688, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17375, federalTaxDue: makeFromInt 30881, stateTaxDue: makeFromInt 7165 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32002, stateTaxDue: makeFromInt 10826 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1154, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119259, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16271, stateTaxDue: makeFromInt 5388 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94781, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10734, stateTaxDue: makeFromInt 4164 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42015, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97209, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13068, stateTaxDue: makeFromInt 4611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103575, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31854, stateTaxDue: makeFromInt 10036 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9177, ordinaryIncomeNonSS: makeFromInt 128531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35993, stateTaxDue: makeFromInt 11104 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41602, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1191, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25249, qualifiedIncome: makeFromInt 98961, itemizedDeductions: makeFromInt 24262, federalTaxDue: makeFromInt 9197, stateTaxDue: makeFromInt 6110 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65710, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7388, stateTaxDue: makeFromInt 3004 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95929, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8483, stateTaxDue: makeFromInt 4420 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75203, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3720, stateTaxDue: makeFromInt 3285 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40525, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 907, stateTaxDue: makeFromInt 3132 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73597, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26836, federalTaxDue: makeFromInt 5744, stateTaxDue: makeFromInt 3407 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48760, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16970, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2680, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8006, ordinaryIncomeNonSS: makeFromInt 97017, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15089, stateTaxDue: makeFromInt 4519 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45367, ordinaryIncomeNonSS: makeFromInt 17868, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 549, stateTaxDue: makeFromInt 462 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19051, ordinaryIncomeNonSS: makeFromInt 104254, qualifiedIncome: makeFromInt 76520, itemizedDeductions: makeFromInt 11443, federalTaxDue: makeFromInt 28034, stateTaxDue: makeFromInt 8464 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50129, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4385, stateTaxDue: makeFromInt 2332 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28877, itemizedDeductions: makeFromInt 29480, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1189 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117432, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16268, stateTaxDue: makeFromInt 5438 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27847, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27855, ordinaryIncomeNonSS: makeFromInt 136497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20466, stateTaxDue: makeFromInt 6350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13479, ordinaryIncomeNonSS: makeFromInt 10003, qualifiedIncome: makeFromInt 47902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1538, stateTaxDue: makeFromInt 2525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33370, ordinaryIncomeNonSS: makeFromInt 73179, qualifiedIncome: makeFromInt 52536, itemizedDeductions: makeFromInt 20578, federalTaxDue: makeFromInt 19684, stateTaxDue: makeFromInt 5911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67599, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38795, stateTaxDue: makeFromInt 10751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9681, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67248, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55398, itemizedDeductions: makeFromInt 21772, federalTaxDue: makeFromInt 2662, stateTaxDue: makeFromInt 2397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6468, ordinaryIncomeNonSS: makeFromInt 21659, qualifiedIncome: makeFromInt 14487, itemizedDeductions: makeFromInt 11501, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22553, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23801, itemizedDeductions: makeFromInt 6340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 867 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11522, ordinaryIncomeNonSS: makeFromInt 6323, qualifiedIncome: makeFromInt 10585, itemizedDeductions: makeFromInt 24892, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 390 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103323, qualifiedIncome: makeFromInt 91573, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25931, stateTaxDue: makeFromInt 9170 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36895, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22293, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92193, qualifiedIncome: makeFromInt 41666, itemizedDeductions: makeFromInt 22817, federalTaxDue: makeFromInt 16879, stateTaxDue: makeFromInt 6480 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109760, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25290, federalTaxDue: makeFromInt 27700, stateTaxDue: makeFromInt 10113 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42995, qualifiedIncome: makeFromInt 44569, itemizedDeductions: makeFromInt 20845, federalTaxDue: makeFromInt 1655, stateTaxDue: makeFromInt 3903 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38047, ordinaryIncomeNonSS: makeFromInt 23604, qualifiedIncome: makeFromInt 26059, itemizedDeductions: makeFromInt 29245, federalTaxDue: makeFromInt 5137, stateTaxDue: makeFromInt 2308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22661, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28763, itemizedDeductions: makeFromInt 14597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1018 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2606, ordinaryIncomeNonSS: makeFromInt 76737, qualifiedIncome: makeFromInt 95142, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16800, stateTaxDue: makeFromInt 8033 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134504, qualifiedIncome: makeFromInt 97824, itemizedDeductions: makeFromInt 4644, federalTaxDue: makeFromInt 46354, stateTaxDue: makeFromInt 11298 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69076, qualifiedIncome: makeFromInt 36838, itemizedDeductions: makeFromInt 18749, federalTaxDue: makeFromInt 3584, stateTaxDue: makeFromInt 4749 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90345, qualifiedIncome: makeFromInt 24902, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12628, stateTaxDue: makeFromInt 5507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8886, federalTaxDue: makeFromInt 10533, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35416, ordinaryIncomeNonSS: makeFromInt 31874, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4045, stateTaxDue: makeFromInt 1139 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60177, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3424, stateTaxDue: makeFromInt 2554 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30518, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29365, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33605, stateTaxDue: makeFromInt 8634 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18849, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3599, federalTaxDue: makeFromInt 220, stateTaxDue: makeFromInt 512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75865, qualifiedIncome: makeFromInt 69502, itemizedDeductions: makeFromInt 6871, federalTaxDue: makeFromInt 22433, stateTaxDue: makeFromInt 7189 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32789, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57394, itemizedDeductions: makeFromInt 19552, federalTaxDue: makeFromInt 32969, stateTaxDue: makeFromInt 9695 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28978, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14711, federalTaxDue: makeFromInt 1507, stateTaxDue: makeFromInt 994 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10245, federalTaxDue: makeFromInt 28042, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18976, ordinaryIncomeNonSS: makeFromInt 85548, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8968, stateTaxDue: makeFromInt 3914 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111478, qualifiedIncome: makeFromInt 16460, itemizedDeductions: makeFromInt 18129, federalTaxDue: makeFromInt 22693, stateTaxDue: makeFromInt 5814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6775, ordinaryIncomeNonSS: makeFromInt 44507, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22801, federalTaxDue: makeFromInt 2585, stateTaxDue: makeFromInt 1821 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9236, itemizedDeductions: makeFromInt 7185, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32217, ordinaryIncomeNonSS: makeFromInt 111948, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13556, federalTaxDue: makeFromInt 24729, stateTaxDue: makeFromInt 5363 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28219, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50106, itemizedDeductions: makeFromInt 20516, federalTaxDue: makeFromInt 2323, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65357, itemizedDeductions: makeFromInt 8399, federalTaxDue: makeFromInt 34214, stateTaxDue: makeFromInt 10432 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22356, federalTaxDue: makeFromInt 22441, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9688, stateTaxDue: makeFromInt 4010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119860, qualifiedIncome: makeFromInt 73768, itemizedDeductions: makeFromInt 18423, federalTaxDue: makeFromInt 22905, stateTaxDue: makeFromInt 9222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1089 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27540, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43878, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43978, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13049, federalTaxDue: makeFromInt 6433, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43075, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1366, stateTaxDue: makeFromInt 1646 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19021, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28832, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44768, ordinaryIncomeNonSS: makeFromInt 22329, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15752, federalTaxDue: makeFromInt 284, stateTaxDue: makeFromInt 442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124844, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12946, stateTaxDue: makeFromInt 5816 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31266, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74831, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4973, stateTaxDue: makeFromInt 3487 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4270, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18779, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93748, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10507, stateTaxDue: makeFromInt 4112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49046, qualifiedIncome: makeFromInt 94413, itemizedDeductions: makeFromInt 4319, federalTaxDue: makeFromInt 18595, stateTaxDue: makeFromInt 6698 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22551, federalTaxDue: makeFromInt 3162, stateTaxDue: makeFromInt 2276 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76840, itemizedDeductions: makeFromInt 9301, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16514, ordinaryIncomeNonSS: makeFromInt 98455, qualifiedIncome: makeFromInt 77709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21633, stateTaxDue: makeFromInt 8333 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82166, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39735, stateTaxDue: makeFromInt 11616 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10792, ordinaryIncomeNonSS: makeFromInt 124166, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15684, stateTaxDue: makeFromInt 5826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20010, ordinaryIncomeNonSS: makeFromInt 142122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23113, stateTaxDue: makeFromInt 6595 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13015, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63744, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3562, stateTaxDue: makeFromInt 2732 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47244, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16622, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37300, ordinaryIncomeNonSS: makeFromInt 18993, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8391, federalTaxDue: makeFromInt 1656, stateTaxDue: makeFromInt 744 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93092, itemizedDeductions: makeFromInt 20332, federalTaxDue: makeFromInt 8174, stateTaxDue: makeFromInt 4319 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58071, itemizedDeductions: makeFromInt 27698, federalTaxDue: makeFromInt 2459, stateTaxDue: makeFromInt 2649 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26800, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7790, federalTaxDue: makeFromInt 880, stateTaxDue: makeFromInt 1020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30318, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13045, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29229, stateTaxDue: makeFromInt 7662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37797, ordinaryIncomeNonSS: makeFromInt 95998, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15886, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42427, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11593, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11320, ordinaryIncomeNonSS: makeFromInt 7550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24814, ordinaryIncomeNonSS: makeFromInt 27612, qualifiedIncome: makeFromInt 77067, itemizedDeductions: makeFromInt 13676, federalTaxDue: makeFromInt 11566, stateTaxDue: makeFromInt 4943 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148525, qualifiedIncome: makeFromInt 40512, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39183, stateTaxDue: makeFromInt 9077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71856, itemizedDeductions: makeFromInt 20627, federalTaxDue: makeFromInt 3218, stateTaxDue: makeFromInt 3318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21189, ordinaryIncomeNonSS: makeFromInt 46805, qualifiedIncome: makeFromInt 77643, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8862, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37623, ordinaryIncomeNonSS: makeFromInt 53345, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8947, federalTaxDue: makeFromInt 18596, stateTaxDue: makeFromInt 7192 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28889, ordinaryIncomeNonSS: makeFromInt 113773, qualifiedIncome: makeFromInt 2943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18264, stateTaxDue: makeFromInt 5300 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43625, ordinaryIncomeNonSS: makeFromInt 72699, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17841, federalTaxDue: makeFromInt 31145, stateTaxDue: makeFromInt 8380 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71271, itemizedDeductions: makeFromInt 9260, federalTaxDue: makeFromInt 8476, stateTaxDue: makeFromInt 3206 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47660, ordinaryIncomeNonSS: makeFromInt 2475, qualifiedIncome: makeFromInt 25519, itemizedDeductions: makeFromInt 13418, federalTaxDue: makeFromInt 466, stateTaxDue: makeFromInt 1081 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83770, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4946, stateTaxDue: makeFromInt 3722 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63343, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15710, stateTaxDue: makeFromInt 2712 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39760, ordinaryIncomeNonSS: makeFromInt 34538, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18893, stateTaxDue: makeFromInt 6472 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28094, ordinaryIncomeNonSS: makeFromInt 26343, qualifiedIncome: makeFromInt 65401, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3928, stateTaxDue: makeFromInt 3912 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120847, qualifiedIncome: makeFromInt 32269, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20479, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142970, qualifiedIncome: makeFromInt 52607, itemizedDeductions: makeFromInt 25653, federalTaxDue: makeFromInt 24573, stateTaxDue: makeFromInt 9304 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99896, qualifiedIncome: makeFromInt 76314, itemizedDeductions: makeFromInt 8998, federalTaxDue: makeFromInt 25807, stateTaxDue: makeFromInt 8556 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8345, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56811, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11110, itemizedDeductions: makeFromInt 21413, federalTaxDue: makeFromInt 35146, stateTaxDue: makeFromInt 7681 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2538, ordinaryIncomeNonSS: makeFromInt 73354, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23012, stateTaxDue: makeFromInt 8413 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122643, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10012, federalTaxDue: makeFromInt 32784, stateTaxDue: makeFromInt 10900 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14726, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46390, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67213, itemizedDeductions: makeFromInt 17129, federalTaxDue: makeFromInt 10123, stateTaxDue: makeFromInt 3204 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13134, ordinaryIncomeNonSS: makeFromInt 136441, qualifiedIncome: makeFromInt 14826, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19331, stateTaxDue: makeFromInt 7088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47071, ordinaryIncomeNonSS: makeFromInt 38000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3382, stateTaxDue: makeFromInt 1225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8013, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46477, ordinaryIncomeNonSS: makeFromInt 18417, qualifiedIncome: makeFromInt 75967, itemizedDeductions: makeFromInt 17975, federalTaxDue: makeFromInt 15724, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42884, ordinaryIncomeNonSS: makeFromInt 120074, qualifiedIncome: makeFromInt 30043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26968, stateTaxDue: makeFromInt 7003 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42076, ordinaryIncomeNonSS: makeFromInt 67238, qualifiedIncome: makeFromInt 73317, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23122, stateTaxDue: makeFromInt 6653 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37547, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1262 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30695, ordinaryIncomeNonSS: makeFromInt 18551, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 353 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33352, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36628, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1215 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2469, qualifiedIncome: makeFromInt 31188, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1108 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28191, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19582, federalTaxDue: makeFromInt 704, stateTaxDue: makeFromInt 1035 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29407, ordinaryIncomeNonSS: makeFromInt 61884, qualifiedIncome: makeFromInt 12101, itemizedDeductions: makeFromInt 15687, federalTaxDue: makeFromInt 10393, stateTaxDue: makeFromInt 3124 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80250, itemizedDeductions: makeFromInt 25937, federalTaxDue: makeFromInt 34149, stateTaxDue: makeFromInt 10938 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10090, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8207, federalTaxDue: makeFromInt 29305, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66881, qualifiedIncome: makeFromInt 126, itemizedDeductions: makeFromInt 6243, federalTaxDue: makeFromInt 4157, stateTaxDue: makeFromInt 2765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19847, ordinaryIncomeNonSS: makeFromInt 79688, qualifiedIncome: makeFromInt 95565, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25384, stateTaxDue: makeFromInt 8387 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49895, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35587, ordinaryIncomeNonSS: makeFromInt 101463, qualifiedIncome: makeFromInt 73262, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25644, stateTaxDue: makeFromInt 8061 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40275, ordinaryIncomeNonSS: makeFromInt 42183, qualifiedIncome: makeFromInt 18494, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5643, stateTaxDue: makeFromInt 2559 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25167, federalTaxDue: makeFromInt 4954, stateTaxDue: makeFromInt 3675 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30770, ordinaryIncomeNonSS: makeFromInt 65573, qualifiedIncome: makeFromInt 24067, itemizedDeductions: makeFromInt 14837, federalTaxDue: makeFromInt 13254, stateTaxDue: makeFromInt 4107 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21172, ordinaryIncomeNonSS: makeFromInt 129805, qualifiedIncome: makeFromInt 40763, itemizedDeductions: makeFromInt 21858, federalTaxDue: makeFromInt 30630, stateTaxDue: makeFromInt 8475 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115378, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7022, federalTaxDue: makeFromInt 29300, stateTaxDue: makeFromInt 5456 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127779, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28340, stateTaxDue: makeFromInt 10714 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17567, ordinaryIncomeNonSS: makeFromInt 631, qualifiedIncome: makeFromInt 9101, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55887, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16155, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148963, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36189, stateTaxDue: makeFromInt 11873 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9827, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 277 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37229, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 366, stateTaxDue: makeFromInt 1470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73590, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7596, stateTaxDue: makeFromInt 3529 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29859, ordinaryIncomeNonSS: makeFromInt 82351, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25904, federalTaxDue: makeFromInt 12298, stateTaxDue: makeFromInt 3743 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41904, ordinaryIncomeNonSS: makeFromInt 42838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13399, federalTaxDue: makeFromInt 5888, stateTaxDue: makeFromInt 1567 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33028, ordinaryIncomeNonSS: makeFromInt 123027, qualifiedIncome: makeFromInt 13658, itemizedDeductions: makeFromInt 17100, federalTaxDue: makeFromInt 20519, stateTaxDue: makeFromInt 6359 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20967, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29324, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31364, qualifiedIncome: makeFromInt 95366, itemizedDeductions: makeFromInt 18799, federalTaxDue: makeFromInt 22036, stateTaxDue: makeFromInt 5882 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46986, ordinaryIncomeNonSS: makeFromInt 16714, qualifiedIncome: makeFromInt 77737, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18962, stateTaxDue: makeFromInt 4593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25890, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46589, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6892, ordinaryIncomeNonSS: makeFromInt 7648, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 43 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42712, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2691, federalTaxDue: makeFromInt 4749, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23014, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5778, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41559, ordinaryIncomeNonSS: makeFromInt 76247, qualifiedIncome: makeFromInt 15615, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19427, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45695, ordinaryIncomeNonSS: makeFromInt 24878, qualifiedIncome: makeFromInt 62390, itemizedDeductions: makeFromInt 25002, federalTaxDue: makeFromInt 13355, stateTaxDue: makeFromInt 3908 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21388, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15364, federalTaxDue: makeFromInt 24, stateTaxDue: makeFromInt 694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17338, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67188, itemizedDeductions: makeFromInt 8181, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25272, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29958, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 840 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30377, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32538, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 147, stateTaxDue: makeFromInt 1172 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28071, federalTaxDue: makeFromInt 35299, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58365, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2965, stateTaxDue: makeFromInt 2752 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13580, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67565, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2903 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20850, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32582, itemizedDeductions: makeFromInt 45, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1154 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67144, qualifiedIncome: makeFromInt 90788, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17388, stateTaxDue: makeFromInt 7830 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13271, qualifiedIncome: makeFromInt 80957, itemizedDeductions: makeFromInt 27749, federalTaxDue: makeFromInt 4389, stateTaxDue: makeFromInt 4459 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11195, ordinaryIncomeNonSS: makeFromInt 67729, qualifiedIncome: makeFromInt 86565, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19443, stateTaxDue: makeFromInt 7140 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38491, qualifiedIncome: makeFromInt 66206, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3684, stateTaxDue: makeFromInt 4660 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 175, stateTaxDue: makeFromInt 2032 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26928, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11526, federalTaxDue: makeFromInt 2525, stateTaxDue: makeFromInt 925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25528, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3783, federalTaxDue: makeFromInt 4967, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19055, federalTaxDue: makeFromInt 19216, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72877, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29160, stateTaxDue: makeFromInt 10469 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11161, ordinaryIncomeNonSS: makeFromInt 33092, qualifiedIncome: makeFromInt 15444, itemizedDeductions: makeFromInt 15432, federalTaxDue: makeFromInt 3449, stateTaxDue: makeFromInt 2172 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23412, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9027, federalTaxDue: makeFromInt 3189, stateTaxDue: makeFromInt 766 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27634, ordinaryIncomeNonSS: makeFromInt 72566, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7546, stateTaxDue: makeFromInt 3048 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14845, itemizedDeductions: makeFromInt 3303, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 545, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36247, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20709, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49054, ordinaryIncomeNonSS: makeFromInt 9928, qualifiedIncome: makeFromInt 17395, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 891 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23983, ordinaryIncomeNonSS: makeFromInt 92233, qualifiedIncome: makeFromInt 61982, itemizedDeductions: makeFromInt 14992, federalTaxDue: makeFromInt 26989, stateTaxDue: makeFromInt 7518 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18708, ordinaryIncomeNonSS: makeFromInt 111018, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13151, stateTaxDue: makeFromInt 5076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46643, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28797, ordinaryIncomeNonSS: makeFromInt 116154, qualifiedIncome: makeFromInt 90475, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38551, stateTaxDue: makeFromInt 10110 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22945, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10189, federalTaxDue: makeFromInt 46975, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21840, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 563 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7330, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84422, itemizedDeductions: makeFromInt 8749, federalTaxDue: makeFromInt 161, stateTaxDue: makeFromInt 3746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6461, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48434, itemizedDeductions: makeFromInt 5615, federalTaxDue: makeFromInt 1618, stateTaxDue: makeFromInt 2246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32121, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 985 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71892, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2414, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80519, itemizedDeductions: makeFromInt 3278, federalTaxDue: makeFromInt 48097, stateTaxDue: makeFromInt 11206 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40792, qualifiedIncome: makeFromInt 89551, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11303, stateTaxDue: makeFromInt 6037 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18736, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12474, ordinaryIncomeNonSS: makeFromInt 113484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3305, federalTaxDue: makeFromInt 14352, stateTaxDue: makeFromInt 5135 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19696, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5097, federalTaxDue: makeFromInt 30325, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36277, qualifiedIncome: makeFromInt 46675, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 816, stateTaxDue: makeFromInt 3884 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24513, qualifiedIncome: makeFromInt 35781, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 336, stateTaxDue: makeFromInt 2440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16063, ordinaryIncomeNonSS: makeFromInt 101908, qualifiedIncome: makeFromInt 50569, itemizedDeductions: makeFromInt 3318, federalTaxDue: makeFromInt 27436, stateTaxDue: makeFromInt 7430 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81990, qualifiedIncome: makeFromInt 57506, itemizedDeductions: makeFromInt 6033, federalTaxDue: makeFromInt 19047, stateTaxDue: makeFromInt 6520 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34184, ordinaryIncomeNonSS: makeFromInt 120373, qualifiedIncome: makeFromInt 60780, itemizedDeductions: makeFromInt 10465, federalTaxDue: makeFromInt 39875, stateTaxDue: makeFromInt 9014 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4826, ordinaryIncomeNonSS: makeFromInt 149782, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27240, stateTaxDue: makeFromInt 7034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49848, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99932, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10635, stateTaxDue: makeFromInt 4546 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27140, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34624, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1419 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4237, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27712, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99166, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9227, stateTaxDue: makeFromInt 4629 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14168, ordinaryIncomeNonSS: makeFromInt 19548, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38436, ordinaryIncomeNonSS: makeFromInt 77011, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20850, stateTaxDue: makeFromInt 3703 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20855, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5180, itemizedDeductions: makeFromInt 15932, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31766, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94132, itemizedDeductions: makeFromInt 14316, federalTaxDue: makeFromInt 10586, stateTaxDue: makeFromInt 4576 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16747, ordinaryIncomeNonSS: makeFromInt 130298, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15113, stateTaxDue: makeFromInt 5992 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47965, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1014, federalTaxDue: makeFromInt 15582, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44184, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1446 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34699, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18450, itemizedDeductions: makeFromInt 10932, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58974, itemizedDeductions: makeFromInt 2850, federalTaxDue: makeFromInt 8306, stateTaxDue: makeFromInt 2694 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33938, qualifiedIncome: makeFromInt 99805, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24170, stateTaxDue: makeFromInt 6232 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36849, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13102, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 280 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7926, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25988, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31215, itemizedDeductions: makeFromInt 17448, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1368 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44933, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19822, federalTaxDue: makeFromInt 6968, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1558, ordinaryIncomeNonSS: makeFromInt 17269, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 5488 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31006, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42694, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33782, ordinaryIncomeNonSS: makeFromInt 73003, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6511, federalTaxDue: makeFromInt 9403, stateTaxDue: makeFromInt 3070 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62728, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6279, stateTaxDue: makeFromInt 2681 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46496, ordinaryIncomeNonSS: makeFromInt 148024, qualifiedIncome: makeFromInt 70823, itemizedDeductions: makeFromInt 20702, federalTaxDue: makeFromInt 42894, stateTaxDue: makeFromInt 10567 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30095, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 355, federalTaxDue: makeFromInt 31282, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48859, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1681, stateTaxDue: makeFromInt 2267 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48706, qualifiedIncome: makeFromInt 22839, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3014, stateTaxDue: makeFromInt 3002 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75832, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5585, stateTaxDue: makeFromInt 3439 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2015, ordinaryIncomeNonSS: makeFromInt 129550, qualifiedIncome: makeFromInt 27597, itemizedDeductions: makeFromInt 24156, federalTaxDue: makeFromInt 22599, stateTaxDue: makeFromInt 7391 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9327, ordinaryIncomeNonSS: makeFromInt 1868, qualifiedIncome: makeFromInt 39877, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31910, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1281 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16356, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10663, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146374, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26376, stateTaxDue: makeFromInt 6968 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14718, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27082, ordinaryIncomeNonSS: makeFromInt 11684, qualifiedIncome: makeFromInt 6666, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 443 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1820, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85619, itemizedDeductions: makeFromInt 12285, federalTaxDue: makeFromInt 39203, stateTaxDue: makeFromInt 11588 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125757, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22087, federalTaxDue: makeFromInt 20930, stateTaxDue: makeFromInt 6189 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49979, ordinaryIncomeNonSS: makeFromInt 113446, qualifiedIncome: makeFromInt 32869, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27791, stateTaxDue: makeFromInt 6741 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5921, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64383, itemizedDeductions: makeFromInt 22520, federalTaxDue: makeFromInt 3867, stateTaxDue: makeFromInt 2855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13910, stateTaxDue: makeFromInt 3832 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28659, ordinaryIncomeNonSS: makeFromInt 6787, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 84 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36918, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37676, stateTaxDue: makeFromInt 9308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25229, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13437, itemizedDeductions: makeFromInt 22985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 32 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13458, ordinaryIncomeNonSS: makeFromInt 72695, qualifiedIncome: makeFromInt 9291, itemizedDeductions: makeFromInt 15533, federalTaxDue: makeFromInt 10304, stateTaxDue: makeFromInt 3595 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15523, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16671, ordinaryIncomeNonSS: makeFromInt 66676, qualifiedIncome: makeFromInt 97897, itemizedDeductions: makeFromInt 12093, federalTaxDue: makeFromInt 21596, stateTaxDue: makeFromInt 7944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28993, federalTaxDue: makeFromInt 48149, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43218, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11386, stateTaxDue: makeFromInt 3935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6258, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23524, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37233, ordinaryIncomeNonSS: makeFromInt 26540, qualifiedIncome: makeFromInt 37802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5909, stateTaxDue: makeFromInt 2833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25150, ordinaryIncomeNonSS: makeFromInt 13721, qualifiedIncome: makeFromInt 10970, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 810 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4221, ordinaryIncomeNonSS: makeFromInt 1112, qualifiedIncome: makeFromInt 35064, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21454, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88539, itemizedDeductions: makeFromInt 6663, federalTaxDue: makeFromInt 45888, stateTaxDue: makeFromInt 11737 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62452, qualifiedIncome: makeFromInt 49368, itemizedDeductions: makeFromInt 21686, federalTaxDue: makeFromInt 2150, stateTaxDue: makeFromInt 5050 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15941, federalTaxDue: makeFromInt 24849, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17273, federalTaxDue: makeFromInt 28699, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49485, qualifiedIncome: makeFromInt 64993, itemizedDeductions: makeFromInt 14976, federalTaxDue: makeFromInt 1929, stateTaxDue: makeFromInt 5186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40297, ordinaryIncomeNonSS: makeFromInt 74591, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35615, stateTaxDue: makeFromInt 8680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10173, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81616, qualifiedIncome: makeFromInt 26931, itemizedDeductions: makeFromInt 9307, federalTaxDue: makeFromInt 11459, stateTaxDue: makeFromInt 5052 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92363, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5484, stateTaxDue: makeFromInt 4043 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92639, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5526, stateTaxDue: makeFromInt 4257 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24822, ordinaryIncomeNonSS: makeFromInt 109172, qualifiedIncome: makeFromInt 22369, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22269, stateTaxDue: makeFromInt 6002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34295, ordinaryIncomeNonSS: makeFromInt 125642, qualifiedIncome: makeFromInt 75994, itemizedDeductions: makeFromInt 3853, federalTaxDue: makeFromInt 44880, stateTaxDue: makeFromInt 10059 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29848, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19199, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 707, federalTaxDue: makeFromInt 43960, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43463, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3117, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15510, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142510, qualifiedIncome: makeFromInt 52884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30470, stateTaxDue: makeFromInt 9414 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5114, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45634, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5175, federalTaxDue: makeFromInt 38262, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10072, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5257, federalTaxDue: makeFromInt 26550, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13793, ordinaryIncomeNonSS: makeFromInt 89347, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9753, stateTaxDue: makeFromInt 3892 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2702, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53428, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31825, stateTaxDue: makeFromInt 9796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5556, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26825, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70145, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11491, stateTaxDue: makeFromInt 2925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22631, ordinaryIncomeNonSS: makeFromInt 55141, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5553, stateTaxDue: makeFromInt 2502 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45911, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21733, federalTaxDue: makeFromInt 5713, stateTaxDue: makeFromInt 1689 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36254, qualifiedIncome: makeFromInt 98398, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4496, stateTaxDue: makeFromInt 6058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18685, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95468, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10056, stateTaxDue: makeFromInt 4645 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27049, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2796, stateTaxDue: makeFromInt 777 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37580, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86421, itemizedDeductions: makeFromInt 18883, federalTaxDue: makeFromInt 2216, stateTaxDue: makeFromInt 3646 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36812, itemizedDeductions: makeFromInt 21868, federalTaxDue: makeFromInt 627, stateTaxDue: makeFromInt 1466 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15173, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24391, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6475, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54790, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3831, stateTaxDue: makeFromInt 2365 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132721, qualifiedIncome: makeFromInt 86634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35556, stateTaxDue: makeFromInt 10713 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32972, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79213, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4322, stateTaxDue: makeFromInt 3489 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43512, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20897, itemizedDeductions: makeFromInt 6955, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 370 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56294, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 884, stateTaxDue: makeFromInt 2320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109274, qualifiedIncome: makeFromInt 22642, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8881, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17619, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129345, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28684, stateTaxDue: makeFromInt 10792 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129769, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15148, stateTaxDue: makeFromInt 6169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26289, ordinaryIncomeNonSS: makeFromInt 117079, qualifiedIncome: makeFromInt 31222, itemizedDeductions: makeFromInt 14815, federalTaxDue: makeFromInt 28425, stateTaxDue: makeFromInt 7160 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36308, ordinaryIncomeNonSS: makeFromInt 139746, qualifiedIncome: makeFromInt 54708, itemizedDeductions: makeFromInt 12215, federalTaxDue: makeFromInt 34188, stateTaxDue: makeFromInt 9264 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5238, qualifiedIncome: makeFromInt 98761, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8563, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41789, ordinaryIncomeNonSS: makeFromInt 33088, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8513, federalTaxDue: makeFromInt 3718, stateTaxDue: makeFromInt 1079 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35757, ordinaryIncomeNonSS: makeFromInt 60960, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3187, federalTaxDue: makeFromInt 12481, stateTaxDue: makeFromInt 2593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80586, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31801, stateTaxDue: makeFromInt 8654 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10957, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19183, federalTaxDue: makeFromInt 19184, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25898, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9606, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64384, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4410, stateTaxDue: makeFromInt 2605 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8012, ordinaryIncomeNonSS: makeFromInt 38176, qualifiedIncome: makeFromInt 29331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2082, stateTaxDue: makeFromInt 2965 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4711, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25480, federalTaxDue: makeFromInt 24925, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11354, qualifiedIncome: makeFromInt 62506, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16023, stateTaxDue: makeFromInt 3542 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45711, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98988, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5234, stateTaxDue: makeFromInt 4274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47604, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28628, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1128, stateTaxDue: makeFromInt 1236 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21822, ordinaryIncomeNonSS: makeFromInt 59640, qualifiedIncome: makeFromInt 89809, itemizedDeductions: makeFromInt 4776, federalTaxDue: makeFromInt 26157, stateTaxDue: makeFromInt 7397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49480, qualifiedIncome: makeFromInt 27385, itemizedDeductions: makeFromInt 8615, federalTaxDue: makeFromInt 14013, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42947, ordinaryIncomeNonSS: makeFromInt 130400, qualifiedIncome: makeFromInt 86445, itemizedDeductions: makeFromInt 10608, federalTaxDue: makeFromInt 48633, stateTaxDue: makeFromInt 10835 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20889, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19725, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33528, stateTaxDue: makeFromInt 8031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77710, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4097, stateTaxDue: makeFromInt 3412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46003, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4306, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13994, ordinaryIncomeNonSS: makeFromInt 137223, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28318, stateTaxDue: makeFromInt 6652 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2714, stateTaxDue: makeFromInt 3120 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13910, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7548, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 5381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62424, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16640, stateTaxDue: makeFromInt 7733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91760, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 584, federalTaxDue: makeFromInt 31895, stateTaxDue: makeFromInt 9127 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42290, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76732, itemizedDeductions: makeFromInt 20812, federalTaxDue: makeFromInt 9139, stateTaxDue: makeFromInt 3582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140509, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42489, stateTaxDue: makeFromInt 11715 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46912, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27795, federalTaxDue: makeFromInt 2017, stateTaxDue: makeFromInt 2026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39025, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 637, stateTaxDue: makeFromInt 1542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1613, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8545, federalTaxDue: makeFromInt 594, stateTaxDue: makeFromInt 987 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45381, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1894 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52348, itemizedDeductions: makeFromInt 25251, federalTaxDue: makeFromInt 5741, stateTaxDue: makeFromInt 2362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14280, ordinaryIncomeNonSS: makeFromInt 111023, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29199, federalTaxDue: makeFromInt 33249, stateTaxDue: makeFromInt 10538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41010, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1576 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103996, qualifiedIncome: makeFromInt 79843, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20396, stateTaxDue: makeFromInt 8517 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79489, itemizedDeductions: makeFromInt 6828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30828, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39720, itemizedDeductions: makeFromInt 13686, federalTaxDue: makeFromInt 38830, stateTaxDue: makeFromInt 9247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7673, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36834, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20916, federalTaxDue: makeFromInt 32330, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 876, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26760, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12411, itemizedDeductions: makeFromInt 4243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29656, ordinaryIncomeNonSS: makeFromInt 92654, qualifiedIncome: makeFromInt 94880, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25390, stateTaxDue: makeFromInt 8702 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134716, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35682, stateTaxDue: makeFromInt 11308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138316, qualifiedIncome: makeFromInt 61346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32705, stateTaxDue: makeFromInt 9528 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49423, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11051, federalTaxDue: makeFromInt 7848, stateTaxDue: makeFromInt 6968 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8999, ordinaryIncomeNonSS: makeFromInt 60787, qualifiedIncome: makeFromInt 84673, itemizedDeductions: makeFromInt 26812, federalTaxDue: makeFromInt 15276, stateTaxDue: makeFromInt 6698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49438, ordinaryIncomeNonSS: makeFromInt 42537, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4659, federalTaxDue: makeFromInt 6353, stateTaxDue: makeFromInt 1752 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32072, ordinaryIncomeNonSS: makeFromInt 135437, qualifiedIncome: makeFromInt 41449, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33892, stateTaxDue: makeFromInt 8470 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40176, ordinaryIncomeNonSS: makeFromInt 39007, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5063, stateTaxDue: makeFromInt 1575 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6200, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64467, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3610, stateTaxDue: makeFromInt 2968 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7221, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5215, federalTaxDue: makeFromInt 28181, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21798, ordinaryIncomeNonSS: makeFromInt 24321, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11507, stateTaxDue: makeFromInt 6116 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5586, stateTaxDue: makeFromInt 6147 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45314, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26189, federalTaxDue: makeFromInt 2090, stateTaxDue: makeFromInt 2011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64288, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3152, federalTaxDue: makeFromInt 6218, stateTaxDue: makeFromInt 2830 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86780, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8556, stateTaxDue: makeFromInt 3764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2604, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58970, itemizedDeductions: makeFromInt 24285, federalTaxDue: makeFromInt 3198, stateTaxDue: makeFromInt 2783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41727, ordinaryIncomeNonSS: makeFromInt 99162, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39617, stateTaxDue: makeFromInt 9810 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15595, ordinaryIncomeNonSS: makeFromInt 102276, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14623, stateTaxDue: makeFromInt 4869 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7007, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21165, federalTaxDue: makeFromInt 24163, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69396, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13242, stateTaxDue: makeFromInt 7795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76394, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4760, federalTaxDue: makeFromInt 27756, stateTaxDue: makeFromInt 8547 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41551, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87377, itemizedDeductions: makeFromInt 17725, federalTaxDue: makeFromInt 8947, stateTaxDue: makeFromInt 4109 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1923, ordinaryIncomeNonSS: makeFromInt 31079, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19348, federalTaxDue: makeFromInt 12508, stateTaxDue: makeFromInt 6195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41272, ordinaryIncomeNonSS: makeFromInt 23038, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 921, stateTaxDue: makeFromInt 747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149385, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20376, stateTaxDue: makeFromInt 7170 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37722, ordinaryIncomeNonSS: makeFromInt 69841, qualifiedIncome: makeFromInt 39230, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17101, stateTaxDue: makeFromInt 5216 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1039, ordinaryIncomeNonSS: makeFromInt 70142, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5262, stateTaxDue: makeFromInt 2924 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51698, itemizedDeductions: makeFromInt 21018, federalTaxDue: makeFromInt 1965, stateTaxDue: makeFromInt 2208 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26984, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18605, ordinaryIncomeNonSS: makeFromInt 70111, qualifiedIncome: makeFromInt 38138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14088, stateTaxDue: makeFromInt 4837 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93955, qualifiedIncome: makeFromInt 4428, itemizedDeductions: makeFromInt 21371, federalTaxDue: makeFromInt 12095, stateTaxDue: makeFromInt 4671 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36149, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 36 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17668, ordinaryIncomeNonSS: makeFromInt 63056, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23027, federalTaxDue: makeFromInt 6722, stateTaxDue: makeFromInt 2767 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17129, qualifiedIncome: makeFromInt 37869, itemizedDeductions: makeFromInt 19091, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2356 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20080, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 529 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84143, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38929, stateTaxDue: makeFromInt 11452 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97057, qualifiedIncome: makeFromInt 49355, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13548, stateTaxDue: makeFromInt 6814 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40275, ordinaryIncomeNonSS: makeFromInt 31530, qualifiedIncome: makeFromInt 32993, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1660, stateTaxDue: makeFromInt 2740 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8450, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38395, stateTaxDue: makeFromInt 7468 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9124, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62665, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3149, stateTaxDue: makeFromInt 2678 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46202, itemizedDeductions: makeFromInt 26274, federalTaxDue: makeFromInt 1283, stateTaxDue: makeFromInt 1928 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66359, qualifiedIncome: makeFromInt 15371, itemizedDeductions: makeFromInt 9151, federalTaxDue: makeFromInt 9604, stateTaxDue: makeFromInt 3832 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3960, qualifiedIncome: makeFromInt 31874, itemizedDeductions: makeFromInt 5812, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1379 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83106, qualifiedIncome: makeFromInt 93272, itemizedDeductions: makeFromInt 9025, federalTaxDue: makeFromInt 34444, stateTaxDue: makeFromInt 8364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17371, qualifiedIncome: makeFromInt 55475, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1767, stateTaxDue: makeFromInt 3368 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109971, qualifiedIncome: makeFromInt 69658, itemizedDeductions: makeFromInt 13621, federalTaxDue: makeFromInt 25001, stateTaxDue: makeFromInt 8712 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23832, qualifiedIncome: makeFromInt 23211, itemizedDeductions: makeFromInt 7517, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1848 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17767, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53368, itemizedDeductions: makeFromInt 8166, federalTaxDue: makeFromInt 93, stateTaxDue: makeFromInt 2150 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17069, ordinaryIncomeNonSS: makeFromInt 21951, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9221, federalTaxDue: makeFromInt 4787, stateTaxDue: makeFromInt 5623 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18472, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16799, itemizedDeductions: makeFromInt 15559, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 165 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36157, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15009, federalTaxDue: makeFromInt 2339, stateTaxDue: makeFromInt 1353 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113595, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27829, stateTaxDue: makeFromInt 10241 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121028, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10794, federalTaxDue: makeFromInt 26854, stateTaxDue: makeFromInt 10376 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48083, ordinaryIncomeNonSS: makeFromInt 81218, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24255, stateTaxDue: makeFromInt 3918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36178, ordinaryIncomeNonSS: makeFromInt 143032, qualifiedIncome: makeFromInt 2447, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32529, stateTaxDue: makeFromInt 7195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39169, ordinaryIncomeNonSS: makeFromInt 78888, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28163, federalTaxDue: makeFromInt 21908, stateTaxDue: makeFromInt 8470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35959, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11942, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16923, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29019, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30600, ordinaryIncomeNonSS: makeFromInt 85712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27665, federalTaxDue: makeFromInt 10204, stateTaxDue: makeFromInt 3821 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100142, qualifiedIncome: makeFromInt 66558, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16738, stateTaxDue: makeFromInt 7860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117835, qualifiedIncome: makeFromInt 40144, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17173, stateTaxDue: makeFromInt 7424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9442, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25205, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70374, itemizedDeductions: makeFromInt 4053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2936 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9476, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 219 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27749, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3315, federalTaxDue: makeFromInt 38766, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38631, ordinaryIncomeNonSS: makeFromInt 137712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9456, federalTaxDue: makeFromInt 29510, stateTaxDue: makeFromInt 6473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3482, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10771, stateTaxDue: makeFromInt 2585 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28078, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42250, itemizedDeductions: makeFromInt 28578, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1738 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146525, qualifiedIncome: makeFromInt 48486, itemizedDeductions: makeFromInt 28010, federalTaxDue: makeFromInt 25225, stateTaxDue: makeFromInt 9497 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33992, qualifiedIncome: makeFromInt 6432, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1369, stateTaxDue: makeFromInt 1646 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16004, ordinaryIncomeNonSS: makeFromInt 63467, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13812, federalTaxDue: makeFromInt 9775, stateTaxDue: makeFromInt 2983 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45453, ordinaryIncomeNonSS: makeFromInt 1433, qualifiedIncome: makeFromInt 64808, itemizedDeductions: makeFromInt 7062, federalTaxDue: makeFromInt 11319, stateTaxDue: makeFromInt 2950 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12908, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31722, itemizedDeductions: makeFromInt 10834, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1067 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13903, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86666, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4238, federalTaxDue: makeFromInt 18922, stateTaxDue: makeFromInt 8867 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45210, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14196, federalTaxDue: makeFromInt 14802, stateTaxDue: makeFromInt 7059 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37138, ordinaryIncomeNonSS: makeFromInt 10467, qualifiedIncome: makeFromInt 54556, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3152, stateTaxDue: makeFromInt 2876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29346, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62527, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1009, stateTaxDue: makeFromInt 2551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31097, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2772, stateTaxDue: makeFromInt 6080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90234, qualifiedIncome: makeFromInt 99470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30663, stateTaxDue: makeFromInt 9451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8074, stateTaxDue: makeFromInt 3664 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74608, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3152 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24923, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39323, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1888, stateTaxDue: makeFromInt 1391 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40023, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1605, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2841, stateTaxDue: makeFromInt 1525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42969, ordinaryIncomeNonSS: makeFromInt 47546, qualifiedIncome: makeFromInt 71127, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18945, stateTaxDue: makeFromInt 5828 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91219, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45034, stateTaxDue: makeFromInt 11853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87304, itemizedDeductions: makeFromInt 3879, federalTaxDue: makeFromInt 11769, stateTaxDue: makeFromInt 4024 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38491, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1250 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71712, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14703, stateTaxDue: makeFromInt 8111 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16070, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 265, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30032, ordinaryIncomeNonSS: makeFromInt 63553, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 641, federalTaxDue: makeFromInt 9999, stateTaxDue: makeFromInt 2866 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27301, ordinaryIncomeNonSS: makeFromInt 36611, qualifiedIncome: makeFromInt 99822, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20691, stateTaxDue: makeFromInt 6611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47077, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91621, itemizedDeductions: makeFromInt 26338, federalTaxDue: makeFromInt 8590, stateTaxDue: makeFromInt 4326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5401, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54158, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2033 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7213, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11063, ordinaryIncomeNonSS: makeFromInt 102637, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23479, federalTaxDue: makeFromInt 13601, stateTaxDue: makeFromInt 4757 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34545, ordinaryIncomeNonSS: makeFromInt 67024, qualifiedIncome: makeFromInt 25438, itemizedDeductions: makeFromInt 24556, federalTaxDue: makeFromInt 9556, stateTaxDue: makeFromInt 3948 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84883, itemizedDeductions: makeFromInt 20916, federalTaxDue: makeFromInt 41751, stateTaxDue: makeFromInt 11530 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144109, qualifiedIncome: makeFromInt 74676, itemizedDeductions: makeFromInt 24806, federalTaxDue: makeFromInt 28133, stateTaxDue: makeFromInt 10464 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32440, ordinaryIncomeNonSS: makeFromInt 93647, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29182, federalTaxDue: makeFromInt 26829, stateTaxDue: makeFromInt 9207 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20639, ordinaryIncomeNonSS: makeFromInt 30245, qualifiedIncome: makeFromInt 80795, itemizedDeductions: makeFromInt 24631, federalTaxDue: makeFromInt 11915, stateTaxDue: makeFromInt 5097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35218, itemizedDeductions: makeFromInt 15535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1368 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45006, itemizedDeductions: makeFromInt 12171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1875 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26328, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88807, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28007, federalTaxDue: makeFromInt 9166, stateTaxDue: makeFromInt 4185 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75549, qualifiedIncome: makeFromInt 64435, itemizedDeductions: makeFromInt 916, federalTaxDue: makeFromInt 28322, stateTaxDue: makeFromInt 6711 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106973, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1063, federalTaxDue: makeFromInt 13653, stateTaxDue: makeFromInt 4905 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34132, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1032 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7694, ordinaryIncomeNonSS: makeFromInt 131679, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15838, federalTaxDue: makeFromInt 36125, stateTaxDue: makeFromInt 11367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46775, ordinaryIncomeNonSS: makeFromInt 100945, qualifiedIncome: makeFromInt 44952, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25127, stateTaxDue: makeFromInt 7012 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6475, ordinaryIncomeNonSS: makeFromInt 112421, qualifiedIncome: makeFromInt 94719, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30860, stateTaxDue: makeFromInt 10117 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80644, itemizedDeductions: makeFromInt 3520, federalTaxDue: makeFromInt 802, stateTaxDue: makeFromInt 3460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50736, itemizedDeductions: makeFromInt 18695, federalTaxDue: makeFromInt 4084, stateTaxDue: makeFromInt 2241 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5267, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15834, ordinaryIncomeNonSS: makeFromInt 86103, qualifiedIncome: makeFromInt 53102, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19333, stateTaxDue: makeFromInt 6385 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24668, federalTaxDue: makeFromInt 21863, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15413, ordinaryIncomeNonSS: makeFromInt 135974, qualifiedIncome: makeFromInt 89664, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32845, stateTaxDue: makeFromInt 11059 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27597, stateTaxDue: makeFromInt 8958 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20945, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23278, federalTaxDue: makeFromInt 1273, stateTaxDue: makeFromInt 592 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45163, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96470, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5768, stateTaxDue: makeFromInt 4349 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12553, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10817, itemizedDeductions: makeFromInt 27614, federalTaxDue: makeFromInt 26454, stateTaxDue: makeFromInt 7651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38893, ordinaryIncomeNonSS: makeFromInt 33510, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5454, stateTaxDue: makeFromInt 1362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17430, ordinaryIncomeNonSS: makeFromInt 51242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9698, stateTaxDue: makeFromInt 2389 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11941, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21832, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76541, itemizedDeductions: makeFromInt 85, federalTaxDue: makeFromInt 3441, stateTaxDue: makeFromInt 3452 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56426, itemizedDeductions: makeFromInt 24453, federalTaxDue: makeFromInt 32616, stateTaxDue: makeFromInt 10066 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92150, qualifiedIncome: makeFromInt 68379, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26229, stateTaxDue: makeFromInt 7662 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34843, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33131, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1182 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26091, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110384, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31800, stateTaxDue: makeFromInt 10064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18643, ordinaryIncomeNonSS: makeFromInt 96489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2691, federalTaxDue: makeFromInt 15311, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142934, qualifiedIncome: makeFromInt 14265, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26751, stateTaxDue: makeFromInt 7405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3649, stateTaxDue: makeFromInt 3478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15913, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87729, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1774, stateTaxDue: makeFromInt 3821 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7334, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3988, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15865, ordinaryIncomeNonSS: makeFromInt 13658, qualifiedIncome: makeFromInt 15581, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 615, stateTaxDue: makeFromInt 1007 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21746, federalTaxDue: makeFromInt 32534, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29715, federalTaxDue: makeFromInt 25528, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2570, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53423, itemizedDeductions: makeFromInt 21844, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2276 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14283, itemizedDeductions: makeFromInt 6657, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 382 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12247, itemizedDeductions: makeFromInt 7170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 357 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4380, ordinaryIncomeNonSS: makeFromInt 76980, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2692, federalTaxDue: makeFromInt 6157, stateTaxDue: makeFromInt 3374 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1222, itemizedDeductions: makeFromInt 4354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49037, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33663, stateTaxDue: makeFromInt 9497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38802, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33354, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87392, itemizedDeductions: makeFromInt 20238, federalTaxDue: makeFromInt 6277, stateTaxDue: makeFromInt 4008 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6907, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80485, itemizedDeductions: makeFromInt 10232, federalTaxDue: makeFromInt 37248, stateTaxDue: makeFromInt 11149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87745, qualifiedIncome: makeFromInt 19796, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7307, stateTaxDue: makeFromInt 4832 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48306, itemizedDeductions: makeFromInt 11902, federalTaxDue: makeFromInt 25713, stateTaxDue: makeFromInt 9440 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25720, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50913, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1637, stateTaxDue: makeFromInt 2291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31983, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64187, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37555, ordinaryIncomeNonSS: makeFromInt 30547, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2116, stateTaxDue: makeFromInt 1007 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90345, itemizedDeductions: makeFromInt 24466, federalTaxDue: makeFromInt 5932, stateTaxDue: makeFromInt 4057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3668, stateTaxDue: makeFromInt 3267 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57667, itemizedDeductions: makeFromInt 351, federalTaxDue: makeFromInt 2590, stateTaxDue: makeFromInt 2428 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10636, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 114 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27368, qualifiedIncome: makeFromInt 25760, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8222, stateTaxDue: makeFromInt 2281 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16657, ordinaryIncomeNonSS: makeFromInt 127253, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27820, federalTaxDue: makeFromInt 16570, stateTaxDue: makeFromInt 5688 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75655, qualifiedIncome: makeFromInt 57351, itemizedDeductions: makeFromInt 24801, federalTaxDue: makeFromInt 15408, stateTaxDue: makeFromInt 6395 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47500, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17061, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23536, qualifiedIncome: makeFromInt 42777, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2641 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41399, itemizedDeductions: makeFromInt 11529, federalTaxDue: makeFromInt 210, stateTaxDue: makeFromInt 1615 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40291, ordinaryIncomeNonSS: makeFromInt 50279, qualifiedIncome: makeFromInt 38416, itemizedDeductions: makeFromInt 4962, federalTaxDue: makeFromInt 17533, stateTaxDue: makeFromInt 4055 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114857, qualifiedIncome: makeFromInt 91496, itemizedDeductions: makeFromInt 23233, federalTaxDue: makeFromInt 25342, stateTaxDue: makeFromInt 9774 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37536, ordinaryIncomeNonSS: makeFromInt 68025, qualifiedIncome: makeFromInt 55341, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20072, stateTaxDue: makeFromInt 5593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1027, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18382, stateTaxDue: makeFromInt 6876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44361, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12790, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28052, federalTaxDue: makeFromInt 25712, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26649, ordinaryIncomeNonSS: makeFromInt 139248, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30935, stateTaxDue: makeFromInt 6673 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131868, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27358, federalTaxDue: makeFromInt 29572, stateTaxDue: makeFromInt 10918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36648, ordinaryIncomeNonSS: makeFromInt 44473, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22946, federalTaxDue: makeFromInt 18617, stateTaxDue: makeFromInt 6940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71204, itemizedDeductions: makeFromInt 27213, federalTaxDue: makeFromInt 3121, stateTaxDue: makeFromInt 3081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9755, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43116, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15659, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 141823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9307, federalTaxDue: makeFromInt 36371, stateTaxDue: makeFromInt 6805 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13115, itemizedDeductions: makeFromInt 42, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32994, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29817, federalTaxDue: makeFromInt 36546, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41694, ordinaryIncomeNonSS: makeFromInt 33731, qualifiedIncome: makeFromInt 114, itemizedDeductions: makeFromInt 13756, federalTaxDue: makeFromInt 3867, stateTaxDue: makeFromInt 1117 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20284, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71657, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36440, stateTaxDue: makeFromInt 10850 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16253, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28516, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33648, stateTaxDue: makeFromInt 8880 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31775, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96685, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11430, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42494, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4305, federalTaxDue: makeFromInt 9083, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34055, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18827, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34963, stateTaxDue: makeFromInt 8386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14827, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2558, federalTaxDue: makeFromInt 1093, stateTaxDue: makeFromInt 409 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108014, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24227, federalTaxDue: makeFromInt 12781, stateTaxDue: makeFromInt 4826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86259, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7084, stateTaxDue: makeFromInt 3746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25150, ordinaryIncomeNonSS: makeFromInt 149165, qualifiedIncome: makeFromInt 8571, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27251, stateTaxDue: makeFromInt 7392 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40722, qualifiedIncome: makeFromInt 24751, itemizedDeductions: makeFromInt 6267, federalTaxDue: makeFromInt 13607, stateTaxDue: makeFromInt 2911 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103943, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8901, stateTaxDue: makeFromInt 4722 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4496, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2373, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38917, itemizedDeductions: makeFromInt 14053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1638 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28192, itemizedDeductions: makeFromInt 13006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1091 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77958, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10282, stateTaxDue: makeFromInt 3425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7046, ordinaryIncomeNonSS: makeFromInt 2825, qualifiedIncome: makeFromInt 60185, itemizedDeductions: makeFromInt 8337, federalTaxDue: makeFromInt 913, stateTaxDue: makeFromInt 2576 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1529 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46960, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2241, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65200, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4137, stateTaxDue: makeFromInt 2785 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34742, ordinaryIncomeNonSS: makeFromInt 141807, qualifiedIncome: makeFromInt 52592, itemizedDeductions: makeFromInt 18353, federalTaxDue: makeFromInt 38441, stateTaxDue: makeFromInt 9465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12612, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17877, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5590, ordinaryIncomeNonSS: makeFromInt 52145, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5109, stateTaxDue: makeFromInt 2211 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24438, itemizedDeductions: makeFromInt 2942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 818 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9762, federalTaxDue: makeFromInt 17081, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11092, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111713, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24271, stateTaxDue: makeFromInt 5011 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38282, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37694, stateTaxDue: makeFromInt 9286 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28216, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12199, ordinaryIncomeNonSS: makeFromInt 138889, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2781, federalTaxDue: makeFromInt 26129, stateTaxDue: makeFromInt 6489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25547, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77120, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5921, stateTaxDue: makeFromInt 3505 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3398, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11449, federalTaxDue: makeFromInt 41970, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28455, ordinaryIncomeNonSS: makeFromInt 66400, qualifiedIncome: makeFromInt 17423, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6875, stateTaxDue: makeFromInt 3716 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14088, ordinaryIncomeNonSS: makeFromInt 79553, qualifiedIncome: makeFromInt 17227, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12184, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 357, ordinaryIncomeNonSS: makeFromInt 1490, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21351, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72674, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3159 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 479, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16830, itemizedDeductions: makeFromInt 83, federalTaxDue: makeFromInt 25882, stateTaxDue: makeFromInt 7967 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2976, ordinaryIncomeNonSS: makeFromInt 128004, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14160, federalTaxDue: makeFromInt 18977, stateTaxDue: makeFromInt 6025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56319, itemizedDeductions: makeFromInt 18468, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2220 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7234, ordinaryIncomeNonSS: makeFromInt 67212, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9300, stateTaxDue: makeFromInt 3081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7002, itemizedDeductions: makeFromInt 3526, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35908, ordinaryIncomeNonSS: makeFromInt 123979, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37634, stateTaxDue: makeFromInt 10968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32983, itemizedDeductions: makeFromInt 18051, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1254 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16156, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22438, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 133 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142261, qualifiedIncome: makeFromInt 53466, itemizedDeductions: makeFromInt 4796, federalTaxDue: makeFromInt 33895, stateTaxDue: makeFromInt 9311 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39990, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14492, federalTaxDue: makeFromInt 31418, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10166, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81432, qualifiedIncome: makeFromInt 90719, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15935, stateTaxDue: makeFromInt 7933 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45069, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24827, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40401, ordinaryIncomeNonSS: makeFromInt 67726, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12023, federalTaxDue: makeFromInt 8561, stateTaxDue: makeFromInt 2911 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5993, ordinaryIncomeNonSS: makeFromInt 12780, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4579, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5264 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43945, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24468, federalTaxDue: makeFromInt 31429, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44041, ordinaryIncomeNonSS: makeFromInt 58949, qualifiedIncome: makeFromInt 45548, itemizedDeductions: makeFromInt 27688, federalTaxDue: makeFromInt 14003, stateTaxDue: makeFromInt 4881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45976, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1313, stateTaxDue: makeFromInt 1692 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6462, ordinaryIncomeNonSS: makeFromInt 6598, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37999, ordinaryIncomeNonSS: makeFromInt 83265, qualifiedIncome: makeFromInt 79055, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31709, stateTaxDue: makeFromInt 7932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12987, ordinaryIncomeNonSS: makeFromInt 10024, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5653, ordinaryIncomeNonSS: makeFromInt 54165, qualifiedIncome: makeFromInt 56164, itemizedDeductions: makeFromInt 13639, federalTaxDue: makeFromInt 4062, stateTaxDue: makeFromInt 5041 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97233, qualifiedIncome: makeFromInt 61585, itemizedDeductions: makeFromInt 18386, federalTaxDue: makeFromInt 16702, stateTaxDue: makeFromInt 7374 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20373, ordinaryIncomeNonSS: makeFromInt 121625, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10504, federalTaxDue: makeFromInt 17166, stateTaxDue: makeFromInt 5550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95145, qualifiedIncome: makeFromInt 74453, itemizedDeductions: makeFromInt 21951, federalTaxDue: makeFromInt 24225, stateTaxDue: makeFromInt 8425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11497, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2634, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13941, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10591, itemizedDeductions: makeFromInt 15872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 112 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2266, ordinaryIncomeNonSS: makeFromInt 3408, qualifiedIncome: makeFromInt 20136, itemizedDeductions: makeFromInt 3289, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 602 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67015, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3038, stateTaxDue: makeFromInt 2765 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37753, ordinaryIncomeNonSS: makeFromInt 92892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 88, federalTaxDue: makeFromInt 13845, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37255, qualifiedIncome: makeFromInt 36101, itemizedDeductions: makeFromInt 5521, federalTaxDue: makeFromInt 15344, stateTaxDue: makeFromInt 3413 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 347, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4124, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5655, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18358, itemizedDeductions: makeFromInt 25986, federalTaxDue: makeFromInt 20237, stateTaxDue: makeFromInt 7933 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2591, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12432, qualifiedIncome: makeFromInt 96990, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2046, stateTaxDue: makeFromInt 4996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7940, ordinaryIncomeNonSS: makeFromInt 70963, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19709, federalTaxDue: makeFromInt 4735, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22888, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17396, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 195 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16682, ordinaryIncomeNonSS: makeFromInt 136677, qualifiedIncome: makeFromInt 2388, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24925, stateTaxDue: makeFromInt 6542 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33303, ordinaryIncomeNonSS: makeFromInt 70593, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17404, federalTaxDue: makeFromInt 22261, stateTaxDue: makeFromInt 8055 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10470, federalTaxDue: makeFromInt 13456, stateTaxDue: makeFromInt 2419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80726, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 814, stateTaxDue: makeFromInt 3668 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52252, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32248, stateTaxDue: makeFromInt 9764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43431, ordinaryIncomeNonSS: makeFromInt 134998, qualifiedIncome: makeFromInt 24253, itemizedDeductions: makeFromInt 20911, federalTaxDue: makeFromInt 33714, stateTaxDue: makeFromInt 7708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10983, stateTaxDue: makeFromInt 5378 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56440, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 351, stateTaxDue: makeFromInt 2447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13595, ordinaryIncomeNonSS: makeFromInt 19261, qualifiedIncome: makeFromInt 81097, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 82, stateTaxDue: makeFromInt 4343 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62563, qualifiedIncome: makeFromInt 70079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23090, stateTaxDue: makeFromInt 6057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131903, qualifiedIncome: makeFromInt 80023, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50975, stateTaxDue: makeFromInt 10584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18967, ordinaryIncomeNonSS: makeFromInt 44604, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16638, federalTaxDue: makeFromInt 9929, stateTaxDue: makeFromInt 6722 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80579, qualifiedIncome: makeFromInt 4792, itemizedDeductions: makeFromInt 9544, federalTaxDue: makeFromInt 22388, stateTaxDue: makeFromInt 4007 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12039, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60673, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4310, stateTaxDue: makeFromInt 2646 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30368, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 831, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84395, qualifiedIncome: makeFromInt 64037, itemizedDeductions: makeFromInt 11474, federalTaxDue: makeFromInt 12108, stateTaxDue: makeFromInt 6747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133155, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20669, stateTaxDue: makeFromInt 6342 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49682, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27791, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 815 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12201, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36445, stateTaxDue: makeFromInt 11133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31764, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 347, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4011, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12399, ordinaryIncomeNonSS: makeFromInt 55574, qualifiedIncome: makeFromInt 84118, itemizedDeductions: makeFromInt 26658, federalTaxDue: makeFromInt 10184, stateTaxDue: makeFromInt 6510 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47287, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98656, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15225, stateTaxDue: makeFromInt 4478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95308, itemizedDeductions: makeFromInt 8839, federalTaxDue: makeFromInt 15345, stateTaxDue: makeFromInt 4510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28154, ordinaryIncomeNonSS: makeFromInt 133738, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25202, stateTaxDue: makeFromInt 6474 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78832, qualifiedIncome: makeFromInt 11212, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6144, stateTaxDue: makeFromInt 3901 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139604, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29837, federalTaxDue: makeFromInt 19242, stateTaxDue: makeFromInt 6773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23116, ordinaryIncomeNonSS: makeFromInt 49943, qualifiedIncome: makeFromInt 54556, itemizedDeductions: makeFromInt 5761, federalTaxDue: makeFromInt 14715, stateTaxDue: makeFromInt 4901 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31275, ordinaryIncomeNonSS: makeFromInt 50391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9633, stateTaxDue: makeFromInt 2065 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29131, itemizedDeductions: makeFromInt 29352, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63395, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3150, stateTaxDue: makeFromInt 2682 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16992, ordinaryIncomeNonSS: makeFromInt 21373, qualifiedIncome: makeFromInt 33267, itemizedDeductions: makeFromInt 10965, federalTaxDue: makeFromInt 5440, stateTaxDue: makeFromInt 2358 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31227, qualifiedIncome: makeFromInt 6255, itemizedDeductions: makeFromInt 4217, federalTaxDue: makeFromInt 1458, stateTaxDue: makeFromInt 1463 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32212, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26317, federalTaxDue: makeFromInt 8434, stateTaxDue: makeFromInt 6036 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41249, ordinaryIncomeNonSS: makeFromInt 51040, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13026, federalTaxDue: makeFromInt 22459, stateTaxDue: makeFromInt 7152 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29563, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23680, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 555 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38350, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4618, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6315, federalTaxDue: makeFromInt 6773, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10651, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 666, qualifiedIncome: makeFromInt 79296, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6247, stateTaxDue: makeFromInt 3854 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16194, ordinaryIncomeNonSS: makeFromInt 34573, qualifiedIncome: makeFromInt 29197, itemizedDeductions: makeFromInt 7142, federalTaxDue: makeFromInt 4505, stateTaxDue: makeFromInt 2824 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42141, itemizedDeductions: makeFromInt 13056, federalTaxDue: makeFromInt 5517, stateTaxDue: makeFromInt 1906 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27235, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42169, itemizedDeductions: makeFromInt 6826, federalTaxDue: makeFromInt 39146, stateTaxDue: makeFromInt 9482 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25315, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19507, stateTaxDue: makeFromInt 5891 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35295, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89907, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46994, stateTaxDue: makeFromInt 11540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26912, federalTaxDue: makeFromInt 26367, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85418, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18314, federalTaxDue: makeFromInt 20141, stateTaxDue: makeFromInt 4016 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33886, qualifiedIncome: makeFromInt 52367, itemizedDeductions: makeFromInt 29100, federalTaxDue: makeFromInt 12300, stateTaxDue: makeFromInt 3738 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68341, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20014, federalTaxDue: makeFromInt 15634, stateTaxDue: makeFromInt 3162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23594, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11280, stateTaxDue: makeFromInt 4699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64090, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2820 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25950, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83333, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4357, stateTaxDue: makeFromInt 3792 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25767, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5786, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92389, qualifiedIncome: makeFromInt 8490, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7106, stateTaxDue: makeFromInt 4696 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21202, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1897 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82890, qualifiedIncome: makeFromInt 67789, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17868, stateTaxDue: makeFromInt 7159 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8309, ordinaryIncomeNonSS: makeFromInt 123699, qualifiedIncome: makeFromInt 29375, itemizedDeductions: makeFromInt 25333, federalTaxDue: makeFromInt 24048, stateTaxDue: makeFromInt 7460 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42227, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22387, federalTaxDue: makeFromInt 1823, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23468, federalTaxDue: makeFromInt 28699, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1208, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39596, stateTaxDue: makeFromInt 12080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12451, ordinaryIncomeNonSS: makeFromInt 8517, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23329, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 210 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16755, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29834, ordinaryIncomeNonSS: makeFromInt 106603, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 895, federalTaxDue: makeFromInt 19900, stateTaxDue: makeFromInt 4886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2277, ordinaryIncomeNonSS: makeFromInt 14225, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77855, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1396, federalTaxDue: makeFromInt 19193, stateTaxDue: makeFromInt 3438 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19074, ordinaryIncomeNonSS: makeFromInt 56322, qualifiedIncome: makeFromInt 42446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11578, stateTaxDue: makeFromInt 4563 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54621, itemizedDeductions: makeFromInt 15832, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2056 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32500, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41775, itemizedDeductions: makeFromInt 10077, federalTaxDue: makeFromInt 3346, stateTaxDue: makeFromInt 1906 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29676, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38777, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15632, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 345 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26778, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32461, ordinaryIncomeNonSS: makeFromInt 61361, qualifiedIncome: makeFromInt 22043, itemizedDeductions: makeFromInt 21639, federalTaxDue: makeFromInt 12553, stateTaxDue: makeFromInt 3869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120470, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23232, federalTaxDue: makeFromInt 28544, stateTaxDue: makeFromInt 10693 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7896, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7002, ordinaryIncomeNonSS: makeFromInt 67480, qualifiedIncome: makeFromInt 33189, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10431, stateTaxDue: makeFromInt 4658 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13141, ordinaryIncomeNonSS: makeFromInt 36964, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8046, federalTaxDue: makeFromInt 1873, stateTaxDue: makeFromInt 1232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29338, qualifiedIncome: makeFromInt 67062, itemizedDeductions: makeFromInt 28279, federalTaxDue: makeFromInt 4412, stateTaxDue: makeFromInt 4692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4408, ordinaryIncomeNonSS: makeFromInt 6905, qualifiedIncome: makeFromInt 74344, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3695 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5916, itemizedDeductions: makeFromInt 13879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20482, ordinaryIncomeNonSS: makeFromInt 76572, qualifiedIncome: makeFromInt 76332, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28129, stateTaxDue: makeFromInt 7574 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128283, qualifiedIncome: makeFromInt 84857, itemizedDeductions: makeFromInt 29630, federalTaxDue: makeFromInt 39174, stateTaxDue: makeFromInt 10082 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39013, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114485, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 735, federalTaxDue: makeFromInt 10415, stateTaxDue: makeFromInt 5249 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3560, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21491, federalTaxDue: makeFromInt 23414, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42503, ordinaryIncomeNonSS: makeFromInt 119039, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22332, federalTaxDue: makeFromInt 40716, stateTaxDue: makeFromInt 10697 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49755, ordinaryIncomeNonSS: makeFromInt 12820, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 205 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27558, itemizedDeductions: makeFromInt 28099, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 977 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16818, ordinaryIncomeNonSS: makeFromInt 140659, qualifiedIncome: makeFromInt 63484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35551, stateTaxDue: makeFromInt 9962 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7711, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31434, qualifiedIncome: makeFromInt 54536, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 499, stateTaxDue: makeFromInt 3924 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49417, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56017, itemizedDeductions: makeFromInt 7044, federalTaxDue: makeFromInt 11565, stateTaxDue: makeFromInt 2633 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20872, ordinaryIncomeNonSS: makeFromInt 122888, qualifiedIncome: makeFromInt 20437, itemizedDeductions: makeFromInt 6299, federalTaxDue: makeFromInt 24466, stateTaxDue: makeFromInt 6591 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9078, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11251, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10605, ordinaryIncomeNonSS: makeFromInt 133006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19783, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6258, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28970, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81722, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8488, stateTaxDue: makeFromInt 3831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34271, ordinaryIncomeNonSS: makeFromInt 51764, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3588, federalTaxDue: makeFromInt 25180, stateTaxDue: makeFromInt 7133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25048, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10767, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138135, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27053, federalTaxDue: makeFromInt 20681, stateTaxDue: makeFromInt 6652 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16757, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10383, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37736, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11963, ordinaryIncomeNonSS: makeFromInt 31312, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25387, federalTaxDue: makeFromInt 917, stateTaxDue: makeFromInt 1373 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17832, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46941, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23927, ordinaryIncomeNonSS: makeFromInt 28924, qualifiedIncome: makeFromInt 85436, itemizedDeductions: makeFromInt 19555, federalTaxDue: makeFromInt 12290, stateTaxDue: makeFromInt 5486 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35982, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14007, federalTaxDue: makeFromInt 6810, stateTaxDue: makeFromInt 1611 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35074, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24338, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63334, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4028, stateTaxDue: makeFromInt 2492 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2106, ordinaryIncomeNonSS: makeFromInt 39816, qualifiedIncome: makeFromInt 68916, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11145, stateTaxDue: makeFromInt 4982 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141272, qualifiedIncome: makeFromInt 24268, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19354, stateTaxDue: makeFromInt 7802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86977, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7899, federalTaxDue: makeFromInt 12704, stateTaxDue: makeFromInt 4089 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14819, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72711, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3287, stateTaxDue: makeFromInt 3362 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12244, qualifiedIncome: makeFromInt 60987, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13503, stateTaxDue: makeFromInt 3207 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36282, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27624, qualifiedIncome: makeFromInt 15479, itemizedDeductions: makeFromInt 10501, federalTaxDue: makeFromInt 1406, stateTaxDue: makeFromInt 1700 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18616, federalTaxDue: makeFromInt 25612, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135686, qualifiedIncome: makeFromInt 50190, itemizedDeductions: makeFromInt 24132, federalTaxDue: makeFromInt 28322, stateTaxDue: makeFromInt 9039 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25959, ordinaryIncomeNonSS: makeFromInt 130043, qualifiedIncome: makeFromInt 80002, itemizedDeductions: makeFromInt 20627, federalTaxDue: makeFromInt 36194, stateTaxDue: makeFromInt 10127 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7293, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116597, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29669, stateTaxDue: makeFromInt 10575 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24935, ordinaryIncomeNonSS: makeFromInt 68427, qualifiedIncome: makeFromInt 63819, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14982, stateTaxDue: makeFromInt 6032 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20630, ordinaryIncomeNonSS: makeFromInt 98879, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23568, federalTaxDue: makeFromInt 16119, stateTaxDue: makeFromInt 4489 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29656, itemizedDeductions: makeFromInt 14419, federalTaxDue: makeFromInt 23798, stateTaxDue: makeFromInt 8628 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50234, itemizedDeductions: makeFromInt 11863, federalTaxDue: makeFromInt 8236, stateTaxDue: makeFromInt 2338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71460, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6123, stateTaxDue: makeFromInt 3265 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4163, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34259, ordinaryIncomeNonSS: makeFromInt 121091, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19243, stateTaxDue: makeFromInt 5625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14318, ordinaryIncomeNonSS: makeFromInt 9173, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5017 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4963, ordinaryIncomeNonSS: makeFromInt 31198, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28954, federalTaxDue: makeFromInt 473, stateTaxDue: makeFromInt 1305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39132, ordinaryIncomeNonSS: makeFromInt 116622, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26280, stateTaxDue: makeFromInt 5376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28139, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2201, federalTaxDue: makeFromInt 53836, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5269, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1818 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115063, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32923, stateTaxDue: makeFromInt 10498 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5818, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20373, ordinaryIncomeNonSS: makeFromInt 135100, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24239, federalTaxDue: makeFromInt 21280, stateTaxDue: makeFromInt 6339 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12442, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18344, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3910, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27725, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31489, stateTaxDue: makeFromInt 8411 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31964, ordinaryIncomeNonSS: makeFromInt 19575, qualifiedIncome: makeFromInt 19079, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1188, stateTaxDue: makeFromInt 1478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63572, qualifiedIncome: makeFromInt 2405, itemizedDeductions: makeFromInt 10739, federalTaxDue: makeFromInt 14903, stateTaxDue: makeFromInt 2936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23718, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18486, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36196, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22431, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73565, itemizedDeductions: makeFromInt 8106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3203 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25462, federalTaxDue: makeFromInt 33925, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61940, qualifiedIncome: makeFromInt 84002, itemizedDeductions: makeFromInt 6778, federalTaxDue: makeFromInt 18610, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62740, itemizedDeductions: makeFromInt 16707, federalTaxDue: makeFromInt 3764, stateTaxDue: makeFromInt 2771 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42947, itemizedDeductions: makeFromInt 26933, federalTaxDue: makeFromInt 191, stateTaxDue: makeFromInt 1692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102837, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26362, federalTaxDue: makeFromInt 24828, stateTaxDue: makeFromInt 9916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10101, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5032, federalTaxDue: makeFromInt 26557, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41115, ordinaryIncomeNonSS: makeFromInt 2908, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19374, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41468, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 57008, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133251, qualifiedIncome: makeFromInt 57065, itemizedDeductions: makeFromInt 4258, federalTaxDue: makeFromInt 25202, stateTaxDue: makeFromInt 9053 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66597, qualifiedIncome: makeFromInt 40779, itemizedDeductions: makeFromInt 3898, federalTaxDue: makeFromInt 26734, stateTaxDue: makeFromInt 5252 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42129, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64054, itemizedDeductions: makeFromInt 26069, federalTaxDue: makeFromInt 4003, stateTaxDue: makeFromInt 2628 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39826, itemizedDeductions: makeFromInt 22119, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1616 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57594, qualifiedIncome: makeFromInt 34838, itemizedDeductions: makeFromInt 4004, federalTaxDue: makeFromInt 21152, stateTaxDue: makeFromInt 4367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28523, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5493, ordinaryIncomeNonSS: makeFromInt 89363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9946, stateTaxDue: makeFromInt 4291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26731, stateTaxDue: makeFromInt 5411 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38120, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83163, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9050, stateTaxDue: makeFromInt 3793 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6114, itemizedDeductions: makeFromInt 6935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5624, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112656, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14204, federalTaxDue: makeFromInt 11133, stateTaxDue: makeFromInt 5245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22336, qualifiedIncome: makeFromInt 5660, itemizedDeductions: makeFromInt 8022, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 1145 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4388, ordinaryIncomeNonSS: makeFromInt 84286, qualifiedIncome: makeFromInt 81897, itemizedDeductions: makeFromInt 8360, federalTaxDue: makeFromInt 24823, stateTaxDue: makeFromInt 8170 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147802, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33194, stateTaxDue: makeFromInt 11715 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 57 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39658, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36577, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9935, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21144, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73574, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3069 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34292, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1460 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35153, itemizedDeductions: makeFromInt 18958, federalTaxDue: makeFromInt 1310, stateTaxDue: makeFromInt 1351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65155, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2852, federalTaxDue: makeFromInt 12469, stateTaxDue: makeFromInt 7770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14662, ordinaryIncomeNonSS: makeFromInt 30081, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 983 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2134, ordinaryIncomeNonSS: makeFromInt 86537, qualifiedIncome: makeFromInt 14890, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12072, stateTaxDue: makeFromInt 4577 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5847, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71674, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4845, stateTaxDue: makeFromInt 3195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48427, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50811, itemizedDeductions: makeFromInt 23456, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1939 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47055, ordinaryIncomeNonSS: makeFromInt 106846, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6813, federalTaxDue: makeFromInt 25550, stateTaxDue: makeFromInt 5087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22477, ordinaryIncomeNonSS: makeFromInt 128775, qualifiedIncome: makeFromInt 93525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38379, stateTaxDue: makeFromInt 10889 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97451, qualifiedIncome: makeFromInt 41532, itemizedDeductions: makeFromInt 4540, federalTaxDue: makeFromInt 30126, stateTaxDue: makeFromInt 6694 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22051, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 815, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23002, stateTaxDue: makeFromInt 7286 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5142, ordinaryIncomeNonSS: makeFromInt 130454, qualifiedIncome: makeFromInt 23429, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18956, stateTaxDue: makeFromInt 7297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7851, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19633, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16735, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8925, itemizedDeductions: makeFromInt 28894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10983, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30350, itemizedDeductions: makeFromInt 24937, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118802, qualifiedIncome: makeFromInt 53964, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31498, stateTaxDue: makeFromInt 8587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84768, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13238, stateTaxDue: makeFromInt 3976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98990, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5471, stateTaxDue: makeFromInt 4275 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43160, ordinaryIncomeNonSS: makeFromInt 32322, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1566, federalTaxDue: makeFromInt 25391, stateTaxDue: makeFromInt 6524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95285, itemizedDeductions: makeFromInt 10648, federalTaxDue: makeFromInt 4834, stateTaxDue: makeFromInt 4289 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53944, qualifiedIncome: makeFromInt 55474, itemizedDeductions: makeFromInt 23821, federalTaxDue: makeFromInt 18646, stateTaxDue: makeFromInt 4896 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31586, ordinaryIncomeNonSS: makeFromInt 13567, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23623, federalTaxDue: makeFromInt 13077, stateTaxDue: makeFromInt 5423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34065, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7485, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37086, ordinaryIncomeNonSS: makeFromInt 18213, qualifiedIncome: makeFromInt 61953, itemizedDeductions: makeFromInt 20393, federalTaxDue: makeFromInt 8348, stateTaxDue: makeFromInt 3433 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15208, federalTaxDue: makeFromInt 29590, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13082, ordinaryIncomeNonSS: makeFromInt 3440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25488, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33143, ordinaryIncomeNonSS: makeFromInt 49479, qualifiedIncome: makeFromInt 52728, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17375, stateTaxDue: makeFromInt 4655 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67014, itemizedDeductions: makeFromInt 8824, federalTaxDue: makeFromInt 41484, stateTaxDue: makeFromInt 10843 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24062, ordinaryIncomeNonSS: makeFromInt 58164, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19464, stateTaxDue: makeFromInt 7333 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83363, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7530, stateTaxDue: makeFromInt 3713 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85276, qualifiedIncome: makeFromInt 80458, itemizedDeductions: makeFromInt 12494, federalTaxDue: makeFromInt 15574, stateTaxDue: makeFromInt 7800 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2958, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24298, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14814, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65508, itemizedDeductions: makeFromInt 16873, federalTaxDue: makeFromInt 4179, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5182, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55554, qualifiedIncome: makeFromInt 64403, itemizedDeductions: makeFromInt 14383, federalTaxDue: makeFromInt 6219, stateTaxDue: makeFromInt 5669 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41184, itemizedDeductions: makeFromInt 810, federalTaxDue: makeFromInt 4673, stateTaxDue: makeFromInt 1804 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20541, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10619, federalTaxDue: makeFromInt 9742, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77682, itemizedDeductions: makeFromInt 6465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3409 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33076, ordinaryIncomeNonSS: makeFromInt 144038, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26278, stateTaxDue: makeFromInt 6693 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10700, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6883, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95033, itemizedDeductions: makeFromInt 24842, federalTaxDue: makeFromInt 34734, stateTaxDue: makeFromInt 11946 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28272, ordinaryIncomeNonSS: makeFromInt 68964, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13158, stateTaxDue: makeFromInt 2993 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46583, ordinaryIncomeNonSS: makeFromInt 17601, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 141, stateTaxDue: makeFromInt 469 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5489, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17045, ordinaryIncomeNonSS: makeFromInt 143350, qualifiedIncome: makeFromInt 97726, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42848, stateTaxDue: makeFromInt 11599 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38988, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40879, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 327, stateTaxDue: makeFromInt 1636 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128823, qualifiedIncome: makeFromInt 33314, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31251, stateTaxDue: makeFromInt 7532 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75377, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5611, stateTaxDue: makeFromInt 3314 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14965, ordinaryIncomeNonSS: makeFromInt 78256, qualifiedIncome: makeFromInt 78577, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21441, stateTaxDue: makeFromInt 7448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123222, qualifiedIncome: makeFromInt 85174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37417, stateTaxDue: makeFromInt 10404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22305, ordinaryIncomeNonSS: makeFromInt 149441, qualifiedIncome: makeFromInt 46377, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34633, stateTaxDue: makeFromInt 9216 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147594, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7648, federalTaxDue: makeFromInt 22683, stateTaxDue: makeFromInt 6805 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27877, ordinaryIncomeNonSS: makeFromInt 44649, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6032, stateTaxDue: makeFromInt 1828 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19997, federalTaxDue: makeFromInt 35099, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18061, ordinaryIncomeNonSS: makeFromInt 145257, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23682, stateTaxDue: makeFromInt 6888 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19392, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93341, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2706, stateTaxDue: makeFromInt 4312 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13498, ordinaryIncomeNonSS: makeFromInt 12294, qualifiedIncome: makeFromInt 35536, itemizedDeductions: makeFromInt 22665, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2093 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15756, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 375 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40481, ordinaryIncomeNonSS: makeFromInt 79294, qualifiedIncome: makeFromInt 44259, itemizedDeductions: makeFromInt 18239, federalTaxDue: makeFromInt 17331, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28609, ordinaryIncomeNonSS: makeFromInt 41489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22261, federalTaxDue: makeFromInt 5154, stateTaxDue: makeFromInt 1873 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45046, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3892, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6452, ordinaryIncomeNonSS: makeFromInt 42738, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4270, federalTaxDue: makeFromInt 2787, stateTaxDue: makeFromInt 1751 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33248, ordinaryIncomeNonSS: makeFromInt 142261, qualifiedIncome: makeFromInt 29604, itemizedDeductions: makeFromInt 11315, federalTaxDue: makeFromInt 27633, stateTaxDue: makeFromInt 8118 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15785, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7862, itemizedDeductions: makeFromInt 24410, federalTaxDue: makeFromInt 26877, stateTaxDue: makeFromInt 7318 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107594, qualifiedIncome: makeFromInt 32872, itemizedDeductions: makeFromInt 29570, federalTaxDue: makeFromInt 26611, stateTaxDue: makeFromInt 6548 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42355, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65587, itemizedDeductions: makeFromInt 8060, federalTaxDue: makeFromInt 49288, stateTaxDue: makeFromInt 10567 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33547, itemizedDeductions: makeFromInt 3480, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1160 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23379, ordinaryIncomeNonSS: makeFromInt 119500, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17782, federalTaxDue: makeFromInt 20709, stateTaxDue: makeFromInt 5400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6178, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39303, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46312, itemizedDeductions: makeFromInt 19226, federalTaxDue: makeFromInt 3398, stateTaxDue: makeFromInt 2138 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11450, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5325, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1433, itemizedDeductions: makeFromInt 27280, federalTaxDue: makeFromInt 24590, stateTaxDue: makeFromInt 7117 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63282, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3915, federalTaxDue: makeFromInt 13645, stateTaxDue: makeFromInt 7675 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113176, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17428, stateTaxDue: makeFromInt 5344 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10211, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29938, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22568, federalTaxDue: makeFromInt 9469, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19539, ordinaryIncomeNonSS: makeFromInt 149212, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12127, federalTaxDue: makeFromInt 24785, stateTaxDue: makeFromInt 6957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24989, ordinaryIncomeNonSS: makeFromInt 64419, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17400, stateTaxDue: makeFromInt 7835 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1562, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107526, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17053, stateTaxDue: makeFromInt 5006 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39388, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29966, stateTaxDue: makeFromInt 8079 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37783, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26769, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137970, qualifiedIncome: makeFromInt 62310, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38117, stateTaxDue: makeFromInt 9990 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9289, qualifiedIncome: makeFromInt 32325, itemizedDeductions: makeFromInt 25756, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1556 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78674, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3099, stateTaxDue: makeFromInt 3259 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37215, qualifiedIncome: makeFromInt 72554, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2607, stateTaxDue: makeFromInt 4945 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30717, qualifiedIncome: makeFromInt 19405, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2128 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25380, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 814 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24520, qualifiedIncome: makeFromInt 23101, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72856, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3267 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15669, ordinaryIncomeNonSS: makeFromInt 87152, qualifiedIncome: makeFromInt 44262, itemizedDeductions: makeFromInt 15155, federalTaxDue: makeFromInt 13936, stateTaxDue: makeFromInt 6049 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4101, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2451, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1237, qualifiedIncome: makeFromInt 95316, itemizedDeductions: makeFromInt 2070, federalTaxDue: makeFromInt 10331, stateTaxDue: makeFromInt 4373 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23285, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144666, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19483, federalTaxDue: makeFromInt 22418, stateTaxDue: makeFromInt 6950 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10770, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25381, stateTaxDue: makeFromInt 7664 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44509, ordinaryIncomeNonSS: makeFromInt 36134, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19972, stateTaxDue: makeFromInt 6494 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 52 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11603, ordinaryIncomeNonSS: makeFromInt 140651, qualifiedIncome: makeFromInt 75386, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34691, stateTaxDue: makeFromInt 10227 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3750, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26395, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7624, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1163, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87056, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4688, stateTaxDue: makeFromInt 3778 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11335, ordinaryIncomeNonSS: makeFromInt 46848, qualifiedIncome: makeFromInt 72181, itemizedDeductions: makeFromInt 19535, federalTaxDue: makeFromInt 12614, stateTaxDue: makeFromInt 5466 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18326, qualifiedIncome: makeFromInt 14071, itemizedDeductions: makeFromInt 11239, federalTaxDue: makeFromInt 3218, stateTaxDue: makeFromInt 1365 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20317, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77137, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7103, stateTaxDue: makeFromInt 3485 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46371, itemizedDeductions: makeFromInt 29550, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121409, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29724, federalTaxDue: makeFromInt 39939, stateTaxDue: makeFromInt 10863 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 612, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9367, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4418, ordinaryIncomeNonSS: makeFromInt 102133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22055, federalTaxDue: makeFromInt 9020, stateTaxDue: makeFromInt 4432 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99057, qualifiedIncome: makeFromInt 50605, itemizedDeductions: makeFromInt 29630, federalTaxDue: makeFromInt 23449, stateTaxDue: makeFromInt 7008 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65202, qualifiedIncome: makeFromInt 52002, itemizedDeductions: makeFromInt 24798, federalTaxDue: makeFromInt 12253, stateTaxDue: makeFromInt 5405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41398, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49072, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41333, stateTaxDue: makeFromInt 9602 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29876, qualifiedIncome: makeFromInt 74581, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4999, stateTaxDue: makeFromInt 4648 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10559, ordinaryIncomeNonSS: makeFromInt 42287, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8346, stateTaxDue: makeFromInt 6639 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24937, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2451, stateTaxDue: makeFromInt 4182 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14705, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88035, itemizedDeductions: makeFromInt 2555, federalTaxDue: makeFromInt 1393, stateTaxDue: makeFromInt 3799 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18145, ordinaryIncomeNonSS: makeFromInt 11489, qualifiedIncome: makeFromInt 69017, itemizedDeductions: makeFromInt 1245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44882, ordinaryIncomeNonSS: makeFromInt 131872, qualifiedIncome: makeFromInt 93451, itemizedDeductions: makeFromInt 10773, federalTaxDue: makeFromInt 45974, stateTaxDue: makeFromInt 11063 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46176, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2710, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5441, federalTaxDue: makeFromInt 37128, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125011, qualifiedIncome: makeFromInt 70138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23861, stateTaxDue: makeFromInt 9082 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57274, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14333, stateTaxDue: makeFromInt 2409 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12102, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25193, itemizedDeductions: makeFromInt 18836, federalTaxDue: makeFromInt 39249, stateTaxDue: makeFromInt 8504 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27409, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62895, qualifiedIncome: makeFromInt 83317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9289, stateTaxDue: makeFromInt 6804 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69008, qualifiedIncome: makeFromInt 54917, itemizedDeductions: makeFromInt 14151, federalTaxDue: makeFromInt 12936, stateTaxDue: makeFromInt 5621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33721, ordinaryIncomeNonSS: makeFromInt 116333, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26202, stateTaxDue: makeFromInt 5505 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120119, qualifiedIncome: makeFromInt 51531, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18790, stateTaxDue: makeFromInt 8108 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27701, ordinaryIncomeNonSS: makeFromInt 132944, qualifiedIncome: makeFromInt 94941, itemizedDeductions: makeFromInt 10474, federalTaxDue: makeFromInt 39935, stateTaxDue: makeFromInt 11071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32517, ordinaryIncomeNonSS: makeFromInt 8307, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18518, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 199 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49700, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3133, stateTaxDue: makeFromInt 2110 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15045, ordinaryIncomeNonSS: makeFromInt 42955, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4720, stateTaxDue: makeFromInt 1893 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87532, itemizedDeductions: makeFromInt 24024, federalTaxDue: makeFromInt 11662, stateTaxDue: makeFromInt 4122 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9122, ordinaryIncomeNonSS: makeFromInt 109179, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27634, federalTaxDue: makeFromInt 15511, stateTaxDue: makeFromInt 5004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21513, ordinaryIncomeNonSS: makeFromInt 51779, qualifiedIncome: makeFromInt 20012, itemizedDeductions: makeFromInt 19684, federalTaxDue: makeFromInt 3592, stateTaxDue: makeFromInt 3009 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75438, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30665, stateTaxDue: makeFromInt 10940 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2316, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33661, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11669, ordinaryIncomeNonSS: makeFromInt 29510, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 852 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74097, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10621, federalTaxDue: makeFromInt 5205, stateTaxDue: makeFromInt 3030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91781, itemizedDeductions: makeFromInt 8018, federalTaxDue: makeFromInt 31995, stateTaxDue: makeFromInt 11614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7715, ordinaryIncomeNonSS: makeFromInt 43552, qualifiedIncome: makeFromInt 3380, itemizedDeductions: makeFromInt 12381, federalTaxDue: makeFromInt 4389, stateTaxDue: makeFromInt 2047 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28881, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22391, federalTaxDue: makeFromInt 30692, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3951, ordinaryIncomeNonSS: makeFromInt 41239, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3468, stateTaxDue: makeFromInt 1807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39985, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68512, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11257, stateTaxDue: makeFromInt 3270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38188, itemizedDeductions: makeFromInt 18149, federalTaxDue: makeFromInt 81, stateTaxDue: makeFromInt 1723 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37539, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10274, ordinaryIncomeNonSS: makeFromInt 93441, qualifiedIncome: makeFromInt 21718, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18119, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41710, ordinaryIncomeNonSS: makeFromInt 28544, qualifiedIncome: makeFromInt 4817, itemizedDeductions: makeFromInt 7618, federalTaxDue: makeFromInt 3196, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39236, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96248, qualifiedIncome: makeFromInt 34732, itemizedDeductions: makeFromInt 19459, federalTaxDue: makeFromInt 19166, stateTaxDue: makeFromInt 6456 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91590, itemizedDeductions: makeFromInt 7604, federalTaxDue: makeFromInt 1926, stateTaxDue: makeFromInt 3979 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65408, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26291, stateTaxDue: makeFromInt 10333 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27116, ordinaryIncomeNonSS: makeFromInt 7164, qualifiedIncome: makeFromInt 21470, itemizedDeductions: makeFromInt 3431, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 757 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57830, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14216, stateTaxDue: makeFromInt 2521 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109201, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10374, stateTaxDue: makeFromInt 4868 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12733, itemizedDeductions: makeFromInt 7227, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142446, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 383, federalTaxDue: makeFromInt 38440, stateTaxDue: makeFromInt 6918 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144705, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3381, federalTaxDue: makeFromInt 17063, stateTaxDue: makeFromInt 6560 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60122, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35896, stateTaxDue: makeFromInt 10251 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2265, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25361, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12970, ordinaryIncomeNonSS: makeFromInt 6907, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 43, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98448, qualifiedIncome: makeFromInt 30754, itemizedDeductions: makeFromInt 3237, federalTaxDue: makeFromInt 15736, stateTaxDue: makeFromInt 6085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87793, itemizedDeductions: makeFromInt 28338, federalTaxDue: makeFromInt 10092, stateTaxDue: makeFromInt 4253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132959, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22831, stateTaxDue: makeFromInt 6353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89802, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28363, federalTaxDue: makeFromInt 9134, stateTaxDue: makeFromInt 4035 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38030, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3156, stateTaxDue: makeFromInt 1447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28208, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 91, stateTaxDue: makeFromInt 935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27784, ordinaryIncomeNonSS: makeFromInt 11159, qualifiedIncome: makeFromInt 75978, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6433, stateTaxDue: makeFromInt 3782 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73526, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18447, stateTaxDue: makeFromInt 3221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21556, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21061, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27742, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5677, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95155, itemizedDeductions: makeFromInt 13363, federalTaxDue: makeFromInt 41739, stateTaxDue: makeFromInt 12003 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24560, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26924, stateTaxDue: makeFromInt 8556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15540, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52459, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1203, itemizedDeductions: makeFromInt 930, federalTaxDue: makeFromInt 25060, stateTaxDue: makeFromInt 7263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137647, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14916, stateTaxDue: makeFromInt 6207 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43420, ordinaryIncomeNonSS: makeFromInt 108401, qualifiedIncome: makeFromInt 69098, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35946, stateTaxDue: makeFromInt 8420 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68999, qualifiedIncome: makeFromInt 82370, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21447, stateTaxDue: makeFromInt 6893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36789, qualifiedIncome: makeFromInt 43560, itemizedDeductions: makeFromInt 22359, federalTaxDue: makeFromInt 1038, stateTaxDue: makeFromInt 3649 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40084, ordinaryIncomeNonSS: makeFromInt 48850, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5526, stateTaxDue: makeFromInt 1839 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15456, ordinaryIncomeNonSS: makeFromInt 117208, qualifiedIncome: makeFromInt 15502, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20583, stateTaxDue: makeFromInt 6480 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43637, ordinaryIncomeNonSS: makeFromInt 42132, qualifiedIncome: makeFromInt 38101, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6487, stateTaxDue: makeFromInt 3337 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22725, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113450, qualifiedIncome: makeFromInt 61183, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26713, stateTaxDue: makeFromInt 8277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8208, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135819, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20807, stateTaxDue: makeFromInt 6376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42236, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4634, federalTaxDue: makeFromInt 6153, stateTaxDue: makeFromInt 1603 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131081, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4472, federalTaxDue: makeFromInt 44308, stateTaxDue: makeFromInt 11179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21952, ordinaryIncomeNonSS: makeFromInt 123595, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17739, federalTaxDue: makeFromInt 17609, stateTaxDue: makeFromInt 5651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72224, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4927, stateTaxDue: makeFromInt 3223 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22548, ordinaryIncomeNonSS: makeFromInt 71016, qualifiedIncome: makeFromInt 3754, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8894, stateTaxDue: makeFromInt 3466 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28050, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22487, stateTaxDue: makeFromInt 8632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113065, qualifiedIncome: makeFromInt 59859, itemizedDeductions: makeFromInt 4602, federalTaxDue: makeFromInt 24625, stateTaxDue: makeFromInt 8370 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33678, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4989, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35006, itemizedDeductions: makeFromInt 23479, federalTaxDue: makeFromInt 24412, stateTaxDue: makeFromInt 8575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24935, federalTaxDue: makeFromInt 37385, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10280, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 177 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70477, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9614, federalTaxDue: makeFromInt 8501, stateTaxDue: makeFromInt 3248 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17647, federalTaxDue: makeFromInt 23618, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108234, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18341, federalTaxDue: makeFromInt 19578, stateTaxDue: makeFromInt 4867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1900, federalTaxDue: makeFromInt 9775, stateTaxDue: makeFromInt 1692 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100537, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18382, federalTaxDue: makeFromInt 13691, stateTaxDue: makeFromInt 4772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16105, federalTaxDue: makeFromInt 22709, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45813, ordinaryIncomeNonSS: makeFromInt 67002, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13089, federalTaxDue: makeFromInt 17972, stateTaxDue: makeFromInt 3193 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2419, ordinaryIncomeNonSS: makeFromInt 52660, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15400, stateTaxDue: makeFromInt 7058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21364, qualifiedIncome: makeFromInt 44783, itemizedDeductions: makeFromInt 13349, federalTaxDue: makeFromInt 21, stateTaxDue: makeFromInt 2932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41401, ordinaryIncomeNonSS: makeFromInt 94956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14845, federalTaxDue: makeFromInt 18060, stateTaxDue: makeFromInt 4292 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26256, itemizedDeductions: makeFromInt 5471, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 638 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18168, federalTaxDue: makeFromInt 24280, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55899, qualifiedIncome: makeFromInt 9253, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 565, stateTaxDue: makeFromInt 2894 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14902, ordinaryIncomeNonSS: makeFromInt 46443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11567, stateTaxDue: makeFromInt 7040 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117179, qualifiedIncome: makeFromInt 14625, itemizedDeductions: makeFromInt 15056, federalTaxDue: makeFromInt 17577, stateTaxDue: makeFromInt 6215 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8161, itemizedDeductions: makeFromInt 14897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113572, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20841, federalTaxDue: makeFromInt 26477, stateTaxDue: makeFromInt 5224 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56048, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18252, federalTaxDue: makeFromInt 1964, stateTaxDue: makeFromInt 2308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19645, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82516, itemizedDeductions: makeFromInt 27965, federalTaxDue: makeFromInt 6126, stateTaxDue: makeFromInt 3871 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5012, ordinaryIncomeNonSS: makeFromInt 98756, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25898, federalTaxDue: makeFromInt 11404, stateTaxDue: makeFromInt 4442 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24414, ordinaryIncomeNonSS: makeFromInt 87447, qualifiedIncome: makeFromInt 46236, itemizedDeductions: makeFromInt 969, federalTaxDue: makeFromInt 15865, stateTaxDue: makeFromInt 6009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68208, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1704, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35665, ordinaryIncomeNonSS: makeFromInt 118647, qualifiedIncome: makeFromInt 56141, itemizedDeductions: makeFromInt 22440, federalTaxDue: makeFromInt 29287, stateTaxDue: makeFromInt 8363 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10305, ordinaryIncomeNonSS: makeFromInt 111279, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26636, stateTaxDue: makeFromInt 10089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1346, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9610, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10174, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20131, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21297, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22713, federalTaxDue: makeFromInt 27229, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13745, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57160, itemizedDeductions: makeFromInt 21689, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2183 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6550, ordinaryIncomeNonSS: makeFromInt 20243, qualifiedIncome: makeFromInt 85311, itemizedDeductions: makeFromInt 22189, federalTaxDue: makeFromInt 1337, stateTaxDue: makeFromInt 4684 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33298, itemizedDeductions: makeFromInt 28853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1338 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42089, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 407, stateTaxDue: makeFromInt 1701 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28107, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29986, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29972, federalTaxDue: makeFromInt 25511, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20655, ordinaryIncomeNonSS: makeFromInt 131374, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20667, stateTaxDue: makeFromInt 6272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3690, ordinaryIncomeNonSS: makeFromInt 14595, qualifiedIncome: makeFromInt 25361, itemizedDeductions: makeFromInt 29455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1385 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39950, ordinaryIncomeNonSS: makeFromInt 36881, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20192, stateTaxDue: makeFromInt 6469 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7946, ordinaryIncomeNonSS: makeFromInt 110127, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4797, federalTaxDue: makeFromInt 10942, stateTaxDue: makeFromInt 4831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66674, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25724, federalTaxDue: makeFromInt 604, stateTaxDue: makeFromInt 1378 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82567, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7900, stateTaxDue: makeFromInt 3987 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3996, qualifiedIncome: makeFromInt 51642, itemizedDeductions: makeFromInt 28542, federalTaxDue: makeFromInt 4404, stateTaxDue: makeFromInt 2264 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14816, ordinaryIncomeNonSS: makeFromInt 54319, qualifiedIncome: makeFromInt 48987, itemizedDeductions: makeFromInt 2497, federalTaxDue: makeFromInt 11611, stateTaxDue: makeFromInt 4790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48974, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36601, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37629, stateTaxDue: makeFromInt 9292 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38888, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30569, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6286, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15453, itemizedDeductions: makeFromInt 10691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 441 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26831, federalTaxDue: makeFromInt 22173, stateTaxDue: makeFromInt 4665 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77627, qualifiedIncome: makeFromInt 23068, itemizedDeductions: makeFromInt 27087, federalTaxDue: makeFromInt 6436, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 724, qualifiedIncome: makeFromInt 72936, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2434, stateTaxDue: makeFromInt 3275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58298, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29575, stateTaxDue: makeFromInt 9970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14420, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17674, itemizedDeductions: makeFromInt 22904, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37490, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36470, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 781, ordinaryIncomeNonSS: makeFromInt 143401, qualifiedIncome: makeFromInt 32934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24286, stateTaxDue: makeFromInt 8340 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7029, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12064, itemizedDeductions: makeFromInt 21326, federalTaxDue: makeFromInt 26981, stateTaxDue: makeFromInt 8041 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4331, ordinaryIncomeNonSS: makeFromInt 47576, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4922, federalTaxDue: makeFromInt 8555, stateTaxDue: makeFromInt 6904 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6448, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16193, federalTaxDue: makeFromInt 30903, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15347, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4083, ordinaryIncomeNonSS: makeFromInt 65564, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4391, stateTaxDue: makeFromInt 2703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44630, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21100, ordinaryIncomeNonSS: makeFromInt 132186, qualifiedIncome: makeFromInt 30311, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30883, stateTaxDue: makeFromInt 7670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27496, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89902, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11281, stateTaxDue: makeFromInt 4361 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14390, ordinaryIncomeNonSS: makeFromInt 138520, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19399, federalTaxDue: makeFromInt 25814, stateTaxDue: makeFromInt 6840 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69253, itemizedDeductions: makeFromInt 4820, federalTaxDue: makeFromInt 2273, stateTaxDue: makeFromInt 3088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52483, qualifiedIncome: makeFromInt 61225, itemizedDeductions: makeFromInt 18048, federalTaxDue: makeFromInt 13967, stateTaxDue: makeFromInt 5146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30664, ordinaryIncomeNonSS: makeFromInt 74618, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22748, federalTaxDue: makeFromInt 8395, stateTaxDue: makeFromInt 3256 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 282, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11655, itemizedDeductions: makeFromInt 6001, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6019, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13470, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80298, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 750, stateTaxDue: makeFromInt 3442 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74391, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5511, stateTaxDue: makeFromInt 3366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39307, ordinaryIncomeNonSS: makeFromInt 27248, qualifiedIncome: makeFromInt 26396, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2688, stateTaxDue: makeFromInt 2287 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48623, itemizedDeductions: makeFromInt 944, federalTaxDue: makeFromInt 1601, stateTaxDue: makeFromInt 2051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61947, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 965, stateTaxDue: makeFromInt 2506 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64266, itemizedDeductions: makeFromInt 2138, federalTaxDue: makeFromInt 3580, stateTaxDue: makeFromInt 2758 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24814, ordinaryIncomeNonSS: makeFromInt 44046, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16114, federalTaxDue: makeFromInt 12303, stateTaxDue: makeFromInt 6527 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2114, ordinaryIncomeNonSS: makeFromInt 130652, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11968, federalTaxDue: makeFromInt 14367, stateTaxDue: makeFromInt 6058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2287, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56635, itemizedDeductions: makeFromInt 29925, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2236 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20539, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57325, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 71, stateTaxDue: makeFromInt 2475 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16566, stateTaxDue: makeFromInt 6294 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18818, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20940, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28349, stateTaxDue: makeFromInt 8172 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27897, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41673, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1805, stateTaxDue: makeFromInt 3583 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3075, ordinaryIncomeNonSS: makeFromInt 47324, qualifiedIncome: makeFromInt 52780, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6525, stateTaxDue: makeFromInt 4881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2632, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17050, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136453, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27272, federalTaxDue: makeFromInt 18004, stateTaxDue: makeFromInt 6531 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34751, qualifiedIncome: makeFromInt 62023, itemizedDeductions: makeFromInt 27056, federalTaxDue: makeFromInt 770, stateTaxDue: makeFromInt 4164 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39328, itemizedDeductions: makeFromInt 23779, federalTaxDue: makeFromInt 245, stateTaxDue: makeFromInt 1659 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23943, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12262, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12792, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84881, qualifiedIncome: makeFromInt 4370, itemizedDeductions: makeFromInt 14373, federalTaxDue: makeFromInt 12026, stateTaxDue: makeFromInt 4083 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97467, qualifiedIncome: makeFromInt 25562, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9866, stateTaxDue: makeFromInt 5476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22807, ordinaryIncomeNonSS: makeFromInt 13889, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12755, stateTaxDue: makeFromInt 5462 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69445, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5630, federalTaxDue: makeFromInt 4762, stateTaxDue: makeFromInt 2797 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26820, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27161, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46855, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24288, federalTaxDue: makeFromInt 47065, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24536, ordinaryIncomeNonSS: makeFromInt 94703, qualifiedIncome: makeFromInt 64521, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17048, stateTaxDue: makeFromInt 7468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120286, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27887, federalTaxDue: makeFromInt 9895, stateTaxDue: makeFromInt 5482 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26114, ordinaryIncomeNonSS: makeFromInt 77152, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21507, stateTaxDue: makeFromInt 8484 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5962, ordinaryIncomeNonSS: makeFromInt 145337, qualifiedIncome: makeFromInt 28322, itemizedDeductions: makeFromInt 26823, federalTaxDue: makeFromInt 30754, stateTaxDue: makeFromInt 8632 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77494, qualifiedIncome: makeFromInt 71545, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10642, stateTaxDue: makeFromInt 6977 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38915, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7399, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9312, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62750, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1043, stateTaxDue: makeFromInt 2763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89968, qualifiedIncome: makeFromInt 15115, itemizedDeductions: makeFromInt 20583, federalTaxDue: makeFromInt 10322, stateTaxDue: makeFromInt 4931 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23979, ordinaryIncomeNonSS: makeFromInt 936, qualifiedIncome: makeFromInt 55871, itemizedDeductions: makeFromInt 22732, federalTaxDue: makeFromInt 626, stateTaxDue: makeFromInt 2550 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18674, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21720, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86573, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7207, federalTaxDue: makeFromInt 23510, stateTaxDue: makeFromInt 8954 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23679, ordinaryIncomeNonSS: makeFromInt 13820, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4962, stateTaxDue: makeFromInt 5016 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41682, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24479, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29113, federalTaxDue: makeFromInt 17333, stateTaxDue: makeFromInt 6712 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27536, ordinaryIncomeNonSS: makeFromInt 87580, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29959, federalTaxDue: makeFromInt 10787, stateTaxDue: makeFromInt 4018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54409, qualifiedIncome: makeFromInt 98649, itemizedDeductions: makeFromInt 506, federalTaxDue: makeFromInt 25935, stateTaxDue: makeFromInt 7255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87210, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1787, stateTaxDue: makeFromInt 3795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59861, qualifiedIncome: makeFromInt 44977, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14896, stateTaxDue: makeFromInt 5122 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105899, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18489, federalTaxDue: makeFromInt 23265, stateTaxDue: makeFromInt 4720 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40021, ordinaryIncomeNonSS: makeFromInt 83728, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23108, stateTaxDue: makeFromInt 4046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42970, ordinaryIncomeNonSS: makeFromInt 95613, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18528, federalTaxDue: makeFromInt 21102, stateTaxDue: makeFromInt 4326 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14173, ordinaryIncomeNonSS: makeFromInt 42838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5199, federalTaxDue: makeFromInt 3204, stateTaxDue: makeFromInt 1532 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23348, itemizedDeductions: makeFromInt 10054, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 692 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24277, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44896, stateTaxDue: makeFromInt 11657 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6456, ordinaryIncomeNonSS: makeFromInt 48061, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14196, federalTaxDue: makeFromInt 4456, stateTaxDue: makeFromInt 2148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28669, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25867, ordinaryIncomeNonSS: makeFromInt 122275, qualifiedIncome: makeFromInt 81086, itemizedDeductions: makeFromInt 3880, federalTaxDue: makeFromInt 35138, stateTaxDue: makeFromInt 9821 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41255, stateTaxDue: makeFromInt 9489 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38896, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37912, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22212, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27450, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2770, qualifiedIncome: makeFromInt 25435, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1214 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1122, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17439, ordinaryIncomeNonSS: makeFromInt 122320, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20174, stateTaxDue: makeFromInt 5541 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112730, qualifiedIncome: makeFromInt 4906, itemizedDeductions: makeFromInt 331, federalTaxDue: makeFromInt 22439, stateTaxDue: makeFromInt 5775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96249, qualifiedIncome: makeFromInt 54023, itemizedDeductions: makeFromInt 18769, federalTaxDue: makeFromInt 20759, stateTaxDue: makeFromInt 7317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42687, ordinaryIncomeNonSS: makeFromInt 9875, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 55 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9710, ordinaryIncomeNonSS: makeFromInt 71624, qualifiedIncome: makeFromInt 53739, itemizedDeductions: makeFromInt 3485, federalTaxDue: makeFromInt 9947, stateTaxDue: makeFromInt 5741 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30705, ordinaryIncomeNonSS: makeFromInt 143564, qualifiedIncome: makeFromInt 87855, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39033, stateTaxDue: makeFromInt 11196 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7551, ordinaryIncomeNonSS: makeFromInt 23927, qualifiedIncome: makeFromInt 57234, itemizedDeductions: makeFromInt 16296, federalTaxDue: makeFromInt 3525, stateTaxDue: makeFromInt 3792 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52984, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1974 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76154, itemizedDeductions: makeFromInt 3461, federalTaxDue: makeFromInt 30101, stateTaxDue: makeFromInt 10833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121106, qualifiedIncome: makeFromInt 87146, itemizedDeductions: makeFromInt 20274, federalTaxDue: makeFromInt 33208, stateTaxDue: makeFromInt 10396 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11101, itemizedDeductions: makeFromInt 1708, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20734, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40563, itemizedDeductions: makeFromInt 18031, federalTaxDue: makeFromInt 32673, stateTaxDue: makeFromInt 9168 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42359, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1506, stateTaxDue: makeFromInt 1643 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8068, qualifiedIncome: makeFromInt 70580, itemizedDeductions: makeFromInt 676, federalTaxDue: makeFromInt 11096, stateTaxDue: makeFromInt 3426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9033, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43508, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29322, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51548, itemizedDeductions: makeFromInt 9184, federalTaxDue: makeFromInt 32612, stateTaxDue: makeFromInt 9830 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8847, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25398, ordinaryIncomeNonSS: makeFromInt 37690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2862, stateTaxDue: makeFromInt 1575 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13203, ordinaryIncomeNonSS: makeFromInt 44391, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2987, stateTaxDue: makeFromInt 1545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103069, qualifiedIncome: makeFromInt 33515, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12571, stateTaxDue: makeFromInt 6154 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20711, ordinaryIncomeNonSS: makeFromInt 83746, qualifiedIncome: makeFromInt 26602, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16169, stateTaxDue: makeFromInt 4942 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33581, ordinaryIncomeNonSS: makeFromInt 35498, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4696, stateTaxDue: makeFromInt 1520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24783, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109487, qualifiedIncome: makeFromInt 28661, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20805, stateTaxDue: makeFromInt 6617 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18193, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14624, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 232 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32335, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139095, qualifiedIncome: makeFromInt 8435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33914, stateTaxDue: makeFromInt 7177 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24826, ordinaryIncomeNonSS: makeFromInt 42440, qualifiedIncome: makeFromInt 4116, itemizedDeductions: makeFromInt 17031, federalTaxDue: makeFromInt 6708, stateTaxDue: makeFromInt 1927 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7456, ordinaryIncomeNonSS: makeFromInt 28660, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 235, stateTaxDue: makeFromInt 858 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33078, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94375, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5786, stateTaxDue: makeFromInt 4144 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1338, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18454, itemizedDeductions: makeFromInt 8499, federalTaxDue: makeFromInt 30288, stateTaxDue: makeFromInt 8083 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42987, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79209, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11641, stateTaxDue: makeFromInt 3706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7263, ordinaryIncomeNonSS: makeFromInt 40556, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22987, federalTaxDue: makeFromInt 2291, stateTaxDue: makeFromInt 1722 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35766, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3315, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21812, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 47835, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11581, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44021, itemizedDeductions: makeFromInt 8154, federalTaxDue: makeFromInt 352, stateTaxDue: makeFromInt 1946 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34970, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13133, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19547, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8446, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38514, itemizedDeductions: makeFromInt 3796, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1515 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74457, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3048 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15723, ordinaryIncomeNonSS: makeFromInt 93244, qualifiedIncome: makeFromInt 19221, itemizedDeductions: makeFromInt 17038, federalTaxDue: makeFromInt 18216, stateTaxDue: makeFromInt 5368 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23943, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29686, itemizedDeductions: makeFromInt 21425, federalTaxDue: makeFromInt 34370, stateTaxDue: makeFromInt 8650 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49974, ordinaryIncomeNonSS: makeFromInt 133821, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29572, stateTaxDue: makeFromInt 6316 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15494, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85803, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7207, stateTaxDue: makeFromInt 3909 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4158, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22130, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4525, itemizedDeductions: makeFromInt 4454, federalTaxDue: makeFromInt 29974, stateTaxDue: makeFromInt 7330 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146141, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11890, federalTaxDue: makeFromInt 17379, stateTaxDue: makeFromInt 6632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135974, qualifiedIncome: makeFromInt 89241, itemizedDeductions: makeFromInt 16604, federalTaxDue: makeFromInt 46077, stateTaxDue: makeFromInt 11058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42633, ordinaryIncomeNonSS: makeFromInt 146417, qualifiedIncome: makeFromInt 4274, itemizedDeductions: makeFromInt 23765, federalTaxDue: makeFromInt 32610, stateTaxDue: makeFromInt 7280 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3511, ordinaryIncomeNonSS: makeFromInt 142690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7785, federalTaxDue: makeFromInt 19749, stateTaxDue: makeFromInt 6624 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33431, qualifiedIncome: makeFromInt 18764, itemizedDeductions: makeFromInt 20108, federalTaxDue: makeFromInt 1400, stateTaxDue: makeFromInt 2355 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49306, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18955, itemizedDeductions: makeFromInt 16357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 273 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114759, qualifiedIncome: makeFromInt 79705, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32960, stateTaxDue: makeFromInt 9367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1753, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32556, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83425, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4144, stateTaxDue: makeFromInt 3596 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20840, qualifiedIncome: makeFromInt 27787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4378, stateTaxDue: makeFromInt 2031 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66433, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1618, stateTaxDue: makeFromInt 2735 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77611, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25536, federalTaxDue: makeFromInt 5741, stateTaxDue: makeFromInt 3206 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143544, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10566, federalTaxDue: makeFromInt 24758, stateTaxDue: makeFromInt 6722 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13607, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51611, itemizedDeductions: makeFromInt 16035, federalTaxDue: makeFromInt 30604, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42574, qualifiedIncome: makeFromInt 83721, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14062, stateTaxDue: makeFromInt 6060 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21481, qualifiedIncome: makeFromInt 56545, itemizedDeductions: makeFromInt 17041, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6980, ordinaryIncomeNonSS: makeFromInt 110023, qualifiedIncome: makeFromInt 49254, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22307, stateTaxDue: makeFromInt 7695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28819, ordinaryIncomeNonSS: makeFromInt 138781, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25672, federalTaxDue: makeFromInt 20881, stateTaxDue: makeFromInt 6425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26354, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16019, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25598, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35824, ordinaryIncomeNonSS: makeFromInt 140781, qualifiedIncome: makeFromInt 33826, itemizedDeductions: makeFromInt 26543, federalTaxDue: makeFromInt 33635, stateTaxDue: makeFromInt 8275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127223, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29497, federalTaxDue: makeFromInt 21536, stateTaxDue: makeFromInt 5836 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16498, ordinaryIncomeNonSS: makeFromInt 136352, qualifiedIncome: makeFromInt 62331, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30183, stateTaxDue: makeFromInt 9480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71922, qualifiedIncome: makeFromInt 9629, itemizedDeductions: makeFromInt 15014, federalTaxDue: makeFromInt 7001, stateTaxDue: makeFromInt 3710 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34055, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41347, itemizedDeductions: makeFromInt 23821, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1592 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139322, qualifiedIncome: makeFromInt 48900, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27905, stateTaxDue: makeFromInt 9253 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20846, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55258, itemizedDeductions: makeFromInt 3000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19663, ordinaryIncomeNonSS: makeFromInt 81561, qualifiedIncome: makeFromInt 59483, itemizedDeductions: makeFromInt 22358, federalTaxDue: makeFromInt 18610, stateTaxDue: makeFromInt 6765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29080, ordinaryIncomeNonSS: makeFromInt 97207, qualifiedIncome: makeFromInt 24600, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17501, stateTaxDue: makeFromInt 5559 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147033, qualifiedIncome: makeFromInt 39168, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25873, stateTaxDue: makeFromInt 8843 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92411, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13029, stateTaxDue: makeFromInt 4166 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26100, qualifiedIncome: makeFromInt 13625, itemizedDeductions: makeFromInt 2368, federalTaxDue: makeFromInt 170, stateTaxDue: makeFromInt 1562 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21404, ordinaryIncomeNonSS: makeFromInt 118068, qualifiedIncome: makeFromInt 43395, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21121, stateTaxDue: makeFromInt 7598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64890, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13267, stateTaxDue: makeFromInt 3085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 29880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4148, federalTaxDue: makeFromInt 1323, stateTaxDue: makeFromInt 1075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32931, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27610, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9722, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82100, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7526, stateTaxDue: makeFromInt 3730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9844, federalTaxDue: makeFromInt 31147, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102204, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33756, stateTaxDue: makeFromInt 10088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37794, ordinaryIncomeNonSS: makeFromInt 8841, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 187 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92811, qualifiedIncome: makeFromInt 51889, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17460, stateTaxDue: makeFromInt 7085 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12826, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82666, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3517, stateTaxDue: makeFromInt 3563 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17244, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3244, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7261, qualifiedIncome: makeFromInt 50331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2590 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32727, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23754, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21494, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22066, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 5400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71663, itemizedDeductions: makeFromInt 12995, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3002 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9484, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24397, stateTaxDue: makeFromInt 7630 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15018, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75633, itemizedDeductions: makeFromInt 24378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3107 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42717, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16108, stateTaxDue: makeFromInt 6881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5895, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25727, ordinaryIncomeNonSS: makeFromInt 65005, qualifiedIncome: makeFromInt 80032, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15629, stateTaxDue: makeFromInt 6948 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43513, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5308, federalTaxDue: makeFromInt 32137, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45833, ordinaryIncomeNonSS: makeFromInt 71574, qualifiedIncome: makeFromInt 13896, itemizedDeductions: makeFromInt 16803, federalTaxDue: makeFromInt 13000, stateTaxDue: makeFromInt 3706 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25273, ordinaryIncomeNonSS: makeFromInt 93220, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14789, stateTaxDue: makeFromInt 4086 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13961, ordinaryIncomeNonSS: makeFromInt 133270, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18279, stateTaxDue: makeFromInt 6084 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5654, qualifiedIncome: makeFromInt 63190, itemizedDeductions: makeFromInt 14274, federalTaxDue: makeFromInt 3689, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23316, federalTaxDue: makeFromInt 7091, stateTaxDue: makeFromInt 2302 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113697, qualifiedIncome: makeFromInt 97738, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26273, stateTaxDue: makeFromInt 10130 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73353, itemizedDeductions: makeFromInt 2997, federalTaxDue: makeFromInt 3443, stateTaxDue: makeFromInt 3190 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37214, ordinaryIncomeNonSS: makeFromInt 5892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49207, qualifiedIncome: makeFromInt 44029, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10496, stateTaxDue: makeFromInt 4486 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42983, ordinaryIncomeNonSS: makeFromInt 32207, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18280, stateTaxDue: makeFromInt 6294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8570, ordinaryIncomeNonSS: makeFromInt 93960, qualifiedIncome: makeFromInt 19879, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21477, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128677, qualifiedIncome: makeFromInt 23865, itemizedDeductions: makeFromInt 29618, federalTaxDue: makeFromInt 32475, stateTaxDue: makeFromInt 7433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69937, qualifiedIncome: makeFromInt 90271, itemizedDeductions: makeFromInt 6509, federalTaxDue: makeFromInt 21985, stateTaxDue: makeFromInt 7824 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46141, ordinaryIncomeNonSS: makeFromInt 69477, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13377, stateTaxDue: makeFromInt 2899 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34423, ordinaryIncomeNonSS: makeFromInt 22941, qualifiedIncome: makeFromInt 49185, itemizedDeductions: makeFromInt 17686, federalTaxDue: makeFromInt 2737, stateTaxDue: makeFromInt 2931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36375, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95225, itemizedDeductions: makeFromInt 23135, federalTaxDue: makeFromInt 7860, stateTaxDue: makeFromInt 4186 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33602, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66011, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32537, stateTaxDue: makeFromInt 10546 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39276, ordinaryIncomeNonSS: makeFromInt 50215, qualifiedIncome: makeFromInt 53608, itemizedDeductions: makeFromInt 23365, federalTaxDue: makeFromInt 17083, stateTaxDue: makeFromInt 4936 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91646, qualifiedIncome: makeFromInt 36174, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18287, stateTaxDue: makeFromInt 5936 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37765, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 480, stateTaxDue: makeFromInt 2384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40209, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2277, itemizedDeductions: makeFromInt 24898, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2391, ordinaryIncomeNonSS: makeFromInt 6131, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6244, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20410, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88226, itemizedDeductions: makeFromInt 1777, federalTaxDue: makeFromInt 35279, stateTaxDue: makeFromInt 11436 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42246, stateTaxDue: makeFromInt 12201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45652, ordinaryIncomeNonSS: makeFromInt 136653, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44370, stateTaxDue: makeFromInt 11258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90392, qualifiedIncome: makeFromInt 76087, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16453, stateTaxDue: makeFromInt 7838 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15798, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35907, itemizedDeductions: makeFromInt 27997, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91491, qualifiedIncome: makeFromInt 622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16621, stateTaxDue: makeFromInt 4249 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42371, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14392, federalTaxDue: makeFromInt 4677, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38528, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17132, federalTaxDue: makeFromInt 40433, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2239, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114577, qualifiedIncome: makeFromInt 3241, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30070, stateTaxDue: makeFromInt 5580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43931, ordinaryIncomeNonSS: makeFromInt 145386, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29012, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24547, federalTaxDue: makeFromInt 34394, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15654, ordinaryIncomeNonSS: makeFromInt 113446, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21830, stateTaxDue: makeFromInt 5561 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43648, ordinaryIncomeNonSS: makeFromInt 137698, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38684, stateTaxDue: makeFromInt 11210 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133325, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19764, stateTaxDue: makeFromInt 6091 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1656, ordinaryIncomeNonSS: makeFromInt 106115, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11603, stateTaxDue: makeFromInt 5065 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21366, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80499, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6427, stateTaxDue: makeFromInt 3677 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37228, ordinaryIncomeNonSS: makeFromInt 137002, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22940, stateTaxDue: makeFromInt 6375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145983, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1932, federalTaxDue: makeFromInt 42914, stateTaxDue: makeFromInt 7221 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57666, qualifiedIncome: makeFromInt 32673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11661, stateTaxDue: makeFromInt 4042 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19758, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 506, stateTaxDue: makeFromInt 533 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40425, ordinaryIncomeNonSS: makeFromInt 8260, qualifiedIncome: makeFromInt 43003, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3585, stateTaxDue: makeFromInt 2188 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23975, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28756, federalTaxDue: makeFromInt 41325, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9545, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24692, stateTaxDue: makeFromInt 7602 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24962, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23597, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1201, stateTaxDue: makeFromInt 979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23147, itemizedDeductions: makeFromInt 20943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 902 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38363, ordinaryIncomeNonSS: makeFromInt 116079, qualifiedIncome: makeFromInt 6710, itemizedDeductions: makeFromInt 14326, federalTaxDue: makeFromInt 26999, stateTaxDue: makeFromInt 5884 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19321, ordinaryIncomeNonSS: makeFromInt 75540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7464, stateTaxDue: makeFromInt 3102 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30499, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 903 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18819, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3762, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31791, ordinaryIncomeNonSS: makeFromInt 5679, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40689, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5164, itemizedDeductions: makeFromInt 10663, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80779, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8360, stateTaxDue: makeFromInt 3773 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8940, itemizedDeductions: makeFromInt 13107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 109 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9140, ordinaryIncomeNonSS: makeFromInt 119753, qualifiedIncome: makeFromInt 34533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27032, stateTaxDue: makeFromInt 7367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126936, qualifiedIncome: makeFromInt 43664, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27322, stateTaxDue: makeFromInt 8075 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25839, ordinaryIncomeNonSS: makeFromInt 143458, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9250, federalTaxDue: makeFromInt 28645, stateTaxDue: makeFromInt 6868 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63291, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3494, stateTaxDue: makeFromInt 2710 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13098, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63072, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10510, stateTaxDue: makeFromInt 2699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46899, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48989, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49899, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 974, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8357, qualifiedIncome: makeFromInt 491, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 67 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1091, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2898, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7237, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75971, itemizedDeductions: makeFromInt 18057, federalTaxDue: makeFromInt 5144, stateTaxDue: makeFromInt 3544 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16877, ordinaryIncomeNonSS: makeFromInt 10122, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8002, stateTaxDue: makeFromInt 4931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118723, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16874, federalTaxDue: makeFromInt 11347, stateTaxDue: makeFromInt 5461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1284, ordinaryIncomeNonSS: makeFromInt 88514, qualifiedIncome: makeFromInt 19839, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18561, stateTaxDue: makeFromInt 5302 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15290, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26663, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25740, federalTaxDue: makeFromInt 92, stateTaxDue: makeFromInt 958 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12472, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26589, itemizedDeductions: makeFromInt 12196, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1074 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15432, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22196, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66316, itemizedDeductions: makeFromInt 13821, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2841 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89886, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6434, federalTaxDue: makeFromInt 11572, stateTaxDue: makeFromInt 4156 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81627, qualifiedIncome: makeFromInt 92197, itemizedDeductions: makeFromInt 15318, federalTaxDue: makeFromInt 24208, stateTaxDue: makeFromInt 8436 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103339, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14883, federalTaxDue: makeFromInt 23204, stateTaxDue: makeFromInt 4822 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47727, ordinaryIncomeNonSS: makeFromInt 109188, qualifiedIncome: makeFromInt 23916, itemizedDeductions: makeFromInt 8458, federalTaxDue: makeFromInt 21762, stateTaxDue: makeFromInt 5980 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102680, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8635, stateTaxDue: makeFromInt 4659 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12815, federalTaxDue: makeFromInt 48564, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22306, ordinaryIncomeNonSS: makeFromInt 26356, qualifiedIncome: makeFromInt 48310, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1599, stateTaxDue: makeFromInt 3380 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42254, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48389, stateTaxDue: makeFromInt 12036 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 643, ordinaryIncomeNonSS: makeFromInt 127563, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29975, federalTaxDue: makeFromInt 32388, stateTaxDue: makeFromInt 10923 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5388, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4421, itemizedDeductions: makeFromInt 13633, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48667, ordinaryIncomeNonSS: makeFromInt 22482, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28758, federalTaxDue: makeFromInt 507, stateTaxDue: makeFromInt 922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28859, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30987, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32230, itemizedDeductions: makeFromInt 9459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1093 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7089, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2309, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13713, ordinaryIncomeNonSS: makeFromInt 31961, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8948, federalTaxDue: makeFromInt 252, stateTaxDue: makeFromInt 977 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5304, ordinaryIncomeNonSS: makeFromInt 119675, qualifiedIncome: makeFromInt 25843, itemizedDeductions: makeFromInt 21423, federalTaxDue: makeFromInt 16425, stateTaxDue: makeFromInt 6801 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83460, itemizedDeductions: makeFromInt 21457, federalTaxDue: makeFromInt 399, stateTaxDue: makeFromInt 3498 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20326, ordinaryIncomeNonSS: makeFromInt 134839, qualifiedIncome: makeFromInt 78055, itemizedDeductions: makeFromInt 9628, federalTaxDue: makeFromInt 38817, stateTaxDue: makeFromInt 10190 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21363, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36629, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87819, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8183, stateTaxDue: makeFromInt 3816 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22521, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3404, federalTaxDue: makeFromInt 2652, stateTaxDue: makeFromInt 871 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29514, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28391, federalTaxDue: makeFromInt 112, stateTaxDue: makeFromInt 1101 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40169, ordinaryIncomeNonSS: makeFromInt 51001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4768, stateTaxDue: makeFromInt 2173 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19123, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13781, federalTaxDue: makeFromInt 31952, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22415, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25852, ordinaryIncomeNonSS: makeFromInt 92031, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21904, stateTaxDue: makeFromInt 9141 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143295, qualifiedIncome: makeFromInt 22903, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20798, stateTaxDue: makeFromInt 7635 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89853, qualifiedIncome: makeFromInt 5860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10111, stateTaxDue: makeFromInt 4411 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17821, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87666, itemizedDeductions: makeFromInt 16882, federalTaxDue: makeFromInt 36410, stateTaxDue: makeFromInt 11508 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28279, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99912, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2484, stateTaxDue: makeFromInt 4521 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45842, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99365, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17378, stateTaxDue: makeFromInt 4843 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25621, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13459, itemizedDeductions: makeFromInt 11113, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59300, qualifiedIncome: makeFromInt 10030, itemizedDeductions: makeFromInt 7252, federalTaxDue: makeFromInt 13864, stateTaxDue: makeFromInt 2985 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12713, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52540, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2091, stateTaxDue: makeFromInt 2251 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80320, itemizedDeductions: makeFromInt 17332, federalTaxDue: makeFromInt 4428, stateTaxDue: makeFromInt 3546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32237, itemizedDeductions: makeFromInt 21315, federalTaxDue: makeFromInt 28056, stateTaxDue: makeFromInt 8537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43057, ordinaryIncomeNonSS: makeFromInt 107636, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25932, federalTaxDue: makeFromInt 25028, stateTaxDue: makeFromInt 5265 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83124, qualifiedIncome: makeFromInt 26200, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18545, stateTaxDue: makeFromInt 5147 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39658, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2875, stateTaxDue: makeFromInt 1728 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17168, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92682, itemizedDeductions: makeFromInt 16904, federalTaxDue: makeFromInt 44438, stateTaxDue: makeFromInt 12030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22360, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9859, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2405, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127619, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13914, stateTaxDue: makeFromInt 5906 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60907, qualifiedIncome: makeFromInt 28621, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5478, stateTaxDue: makeFromInt 4015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29635, ordinaryIncomeNonSS: makeFromInt 57304, qualifiedIncome: makeFromInt 36305, itemizedDeductions: makeFromInt 3182, federalTaxDue: makeFromInt 15977, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51374, qualifiedIncome: makeFromInt 65177, itemizedDeductions: makeFromInt 26213, federalTaxDue: makeFromInt 7888, stateTaxDue: makeFromInt 5597 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86888, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14181, federalTaxDue: makeFromInt 12936, stateTaxDue: makeFromInt 4207 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35458, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9688, itemizedDeductions: makeFromInt 28112, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 45 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29471, ordinaryIncomeNonSS: makeFromInt 135667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29449, federalTaxDue: makeFromInt 23347, stateTaxDue: makeFromInt 6470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26836, ordinaryIncomeNonSS: makeFromInt 43115, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21103, federalTaxDue: makeFromInt 3023, stateTaxDue: makeFromInt 1648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86997, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8570, stateTaxDue: makeFromInt 4212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16295, ordinaryIncomeNonSS: makeFromInt 134142, qualifiedIncome: makeFromInt 69254, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30416, stateTaxDue: makeFromInt 9924 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13841, ordinaryIncomeNonSS: makeFromInt 120374, qualifiedIncome: makeFromInt 16386, itemizedDeductions: makeFromInt 7439, federalTaxDue: makeFromInt 22403, stateTaxDue: makeFromInt 6424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20975, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77781, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39518, stateTaxDue: makeFromInt 11270 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4448, ordinaryIncomeNonSS: makeFromInt 24410, qualifiedIncome: makeFromInt 72044, itemizedDeductions: makeFromInt 29312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4348 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23249, qualifiedIncome: makeFromInt 19703, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5096, stateTaxDue: makeFromInt 1624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15833, ordinaryIncomeNonSS: makeFromInt 15700, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4507, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95525, itemizedDeductions: makeFromInt 23152, federalTaxDue: makeFromInt 35276, stateTaxDue: makeFromInt 11971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12444, ordinaryIncomeNonSS: makeFromInt 96070, qualifiedIncome: makeFromInt 35071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18187, stateTaxDue: makeFromInt 6182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8380, ordinaryIncomeNonSS: makeFromInt 35874, qualifiedIncome: makeFromInt 31601, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1015, stateTaxDue: makeFromInt 2788 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26901, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18710, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92727, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6723, federalTaxDue: makeFromInt 8054, stateTaxDue: makeFromInt 4076 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11882, ordinaryIncomeNonSS: makeFromInt 62850, qualifiedIncome: makeFromInt 79549, itemizedDeductions: makeFromInt 22901, federalTaxDue: makeFromInt 18802, stateTaxDue: makeFromInt 6969 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20070, ordinaryIncomeNonSS: makeFromInt 129221, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25415, stateTaxDue: makeFromInt 6006 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94944, itemizedDeductions: makeFromInt 18664, federalTaxDue: makeFromInt 5872, stateTaxDue: makeFromInt 4372 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19678, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45277, ordinaryIncomeNonSS: makeFromInt 138069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32681, stateTaxDue: makeFromInt 6448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2300, ordinaryIncomeNonSS: makeFromInt 121520, qualifiedIncome: makeFromInt 27061, itemizedDeductions: makeFromInt 2083, federalTaxDue: makeFromInt 16452, stateTaxDue: makeFromInt 6754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65790, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 986, stateTaxDue: makeFromInt 2702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9373, ordinaryIncomeNonSS: makeFromInt 52549, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10579, federalTaxDue: makeFromInt 5652, stateTaxDue: makeFromInt 2231 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19257, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22597, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5689, federalTaxDue: makeFromInt 911, stateTaxDue: makeFromInt 602 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33018, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45808, itemizedDeductions: makeFromInt 16195, federalTaxDue: makeFromInt 3879, stateTaxDue: makeFromInt 1835 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87657, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39856, stateTaxDue: makeFromInt 11428 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42901, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18807, federalTaxDue: makeFromInt 35340, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46784, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75566, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46588, stateTaxDue: makeFromInt 10953 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62695, qualifiedIncome: makeFromInt 64846, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20708, stateTaxDue: makeFromInt 5895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44139, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4871, stateTaxDue: makeFromInt 1598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29087, ordinaryIncomeNonSS: makeFromInt 73672, qualifiedIncome: makeFromInt 90156, itemizedDeductions: makeFromInt 12300, federalTaxDue: makeFromInt 24635, stateTaxDue: makeFromInt 7616 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4620, ordinaryIncomeNonSS: makeFromInt 18148, qualifiedIncome: makeFromInt 52640, itemizedDeductions: makeFromInt 28181, federalTaxDue: makeFromInt 1645, stateTaxDue: makeFromInt 3284 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43057, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23705, stateTaxDue: makeFromInt 6578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32856, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37562, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22600, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29697, stateTaxDue: makeFromInt 8375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26817, itemizedDeductions: makeFromInt 12106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1086 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20408, ordinaryIncomeNonSS: makeFromInt 29352, qualifiedIncome: makeFromInt 86566, itemizedDeductions: makeFromInt 20086, federalTaxDue: makeFromInt 13911, stateTaxDue: makeFromInt 5341 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16730, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64243, itemizedDeductions: makeFromInt 29502, federalTaxDue: makeFromInt 36617, stateTaxDue: makeFromInt 10580 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29077, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23666, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7934, ordinaryIncomeNonSS: makeFromInt 34398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 709, stateTaxDue: makeFromInt 1407 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123324, qualifiedIncome: makeFromInt 48639, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31897, stateTaxDue: makeFromInt 8546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40396, ordinaryIncomeNonSS: makeFromInt 82564, qualifiedIncome: makeFromInt 33254, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15934, stateTaxDue: makeFromInt 5316 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24498, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19101, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10198, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32680, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55817, itemizedDeductions: makeFromInt 20225, federalTaxDue: makeFromInt 350, stateTaxDue: makeFromInt 2398 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27643, qualifiedIncome: makeFromInt 21190, itemizedDeductions: makeFromInt 16833, federalTaxDue: makeFromInt 6625, stateTaxDue: makeFromInt 1867 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121040, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19357, stateTaxDue: makeFromInt 5797 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5057, federalTaxDue: makeFromInt 15522, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17898, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47664, ordinaryIncomeNonSS: makeFromInt 123873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23952, federalTaxDue: makeFromInt 21524, stateTaxDue: makeFromInt 5665 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42350, ordinaryIncomeNonSS: makeFromInt 7537, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96249, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30022, stateTaxDue: makeFromInt 9662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110812, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19346, federalTaxDue: makeFromInt 18957, stateTaxDue: makeFromInt 4866 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12337, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36505, itemizedDeductions: makeFromInt 25248, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1209 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21808, ordinaryIncomeNonSS: makeFromInt 50974, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15119, federalTaxDue: makeFromInt 13483, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39046, ordinaryIncomeNonSS: makeFromInt 50904, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29297, federalTaxDue: makeFromInt 6283, stateTaxDue: makeFromInt 1970 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36197, ordinaryIncomeNonSS: makeFromInt 106848, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18397, stateTaxDue: makeFromInt 4967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101583, qualifiedIncome: makeFromInt 3010, itemizedDeductions: makeFromInt 7075, federalTaxDue: makeFromInt 23852, stateTaxDue: makeFromInt 4885 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32501, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77337, itemizedDeductions: makeFromInt 11078, federalTaxDue: makeFromInt 8634, stateTaxDue: makeFromInt 3412 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41634, itemizedDeductions: makeFromInt 28948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42884, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30584, itemizedDeductions: makeFromInt 7526, federalTaxDue: makeFromInt 36596, stateTaxDue: makeFromInt 8654 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25126, stateTaxDue: makeFromInt 6996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41013, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6091, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50691, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34205, stateTaxDue: makeFromInt 9780 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10367, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32525, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1051 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7373, ordinaryIncomeNonSS: makeFromInt 83416, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25653, federalTaxDue: makeFromInt 8435, stateTaxDue: makeFromInt 3596 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36258, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22130, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27150, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8577, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93617, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2748, stateTaxDue: makeFromInt 4122 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16070, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6693, federalTaxDue: makeFromInt 386, stateTaxDue: makeFromInt 371 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17422, ordinaryIncomeNonSS: makeFromInt 82049, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17978, federalTaxDue: makeFromInt 28102, stateTaxDue: makeFromInt 8647 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21708, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 410 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31278, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3105, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24543, stateTaxDue: makeFromInt 7180 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47224, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23837, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 767 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48614, ordinaryIncomeNonSS: makeFromInt 142905, qualifiedIncome: makeFromInt 83411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38270, stateTaxDue: makeFromInt 10641 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17519, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 241 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20032, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73286, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5107, stateTaxDue: makeFromInt 3189 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8114, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22421, ordinaryIncomeNonSS: makeFromInt 3123, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2408, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87100, qualifiedIncome: makeFromInt 83936, itemizedDeductions: makeFromInt 23883, federalTaxDue: makeFromInt 15823, stateTaxDue: makeFromInt 8077 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49512, ordinaryIncomeNonSS: makeFromInt 96499, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17088, stateTaxDue: makeFromInt 4269 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47944, ordinaryIncomeNonSS: makeFromInt 39910, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15163, federalTaxDue: makeFromInt 5659, stateTaxDue: makeFromInt 1421 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8849, ordinaryIncomeNonSS: makeFromInt 116723, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27129, federalTaxDue: makeFromInt 17143, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6441, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19240, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44776, qualifiedIncome: makeFromInt 89161, itemizedDeductions: makeFromInt 10056, federalTaxDue: makeFromInt 15038, stateTaxDue: makeFromInt 6442 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10932, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47683, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36629, stateTaxDue: makeFromInt 9761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10830, qualifiedIncome: makeFromInt 16546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22774, stateTaxDue: makeFromInt 5733 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16262, itemizedDeductions: makeFromInt 26527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 138 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97193, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5581, stateTaxDue: makeFromInt 4304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4027, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119097, qualifiedIncome: makeFromInt 9980, itemizedDeductions: makeFromInt 24590, federalTaxDue: makeFromInt 11552, stateTaxDue: makeFromInt 5930 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33965, qualifiedIncome: makeFromInt 32789, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 957, stateTaxDue: makeFromInt 2725 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5537, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71071, qualifiedIncome: makeFromInt 79016, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16828, stateTaxDue: makeFromInt 7430 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45081, ordinaryIncomeNonSS: makeFromInt 3520, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1846, federalTaxDue: makeFromInt 12362, stateTaxDue: makeFromInt 4601 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118295, qualifiedIncome: makeFromInt 31790, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21722, stateTaxDue: makeFromInt 7206 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24276, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117179, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18431, stateTaxDue: makeFromInt 5404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6861, ordinaryIncomeNonSS: makeFromInt 28656, qualifiedIncome: makeFromInt 7803, itemizedDeductions: makeFromInt 11221, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1207 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13789, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50750, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2063 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1285, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90846, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9629, federalTaxDue: makeFromInt 19263, stateTaxDue: makeFromInt 4167 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3606, federalTaxDue: makeFromInt 48564, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30205, ordinaryIncomeNonSS: makeFromInt 138773, qualifiedIncome: makeFromInt 27850, itemizedDeductions: makeFromInt 16809, federalTaxDue: makeFromInt 37419, stateTaxDue: makeFromInt 8273 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16976, ordinaryIncomeNonSS: makeFromInt 40158, qualifiedIncome: makeFromInt 33259, itemizedDeductions: makeFromInt 6184, federalTaxDue: makeFromInt 2333, stateTaxDue: makeFromInt 3091 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18919, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30138, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59076, itemizedDeductions: makeFromInt 15319, federalTaxDue: makeFromInt 41846, stateTaxDue: makeFromInt 10234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47329, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15298, federalTaxDue: makeFromInt 34832, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6068, federalTaxDue: makeFromInt 26708, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16160, ordinaryIncomeNonSS: makeFromInt 110401, qualifiedIncome: makeFromInt 85137, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31064, stateTaxDue: makeFromInt 9748 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14558, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80668, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30328, stateTaxDue: makeFromInt 10858 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74552, qualifiedIncome: makeFromInt 47853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7466, stateTaxDue: makeFromInt 5590 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29232, itemizedDeductions: makeFromInt 14946, federalTaxDue: makeFromInt 31459, stateTaxDue: makeFromInt 8794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20260, ordinaryIncomeNonSS: makeFromInt 131685, qualifiedIncome: makeFromInt 1141, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23169, stateTaxDue: makeFromInt 6266 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2846, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7647, ordinaryIncomeNonSS: makeFromInt 101488, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14287, stateTaxDue: makeFromInt 4727 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27975, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4907, federalTaxDue: makeFromInt 11019, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42609, ordinaryIncomeNonSS: makeFromInt 143689, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3326, federalTaxDue: makeFromInt 28307, stateTaxDue: makeFromInt 6675 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49580, ordinaryIncomeNonSS: makeFromInt 110067, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21382, stateTaxDue: makeFromInt 4961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46722, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98173, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12564, stateTaxDue: makeFromInt 4578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49524, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35031, stateTaxDue: makeFromInt 9747 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100952, qualifiedIncome: makeFromInt 41499, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22418, stateTaxDue: makeFromInt 6448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40979, ordinaryIncomeNonSS: makeFromInt 29726, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7774, federalTaxDue: makeFromInt 2930, stateTaxDue: makeFromInt 1111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40424, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22745, federalTaxDue: makeFromInt 37155, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141412, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34075, stateTaxDue: makeFromInt 11696 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15979, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89377, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7846, stateTaxDue: makeFromInt 4089 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89465, itemizedDeductions: makeFromInt 17159, federalTaxDue: makeFromInt 14003, stateTaxDue: makeFromInt 4218 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34550, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 191, federalTaxDue: makeFromInt 13709, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6880, ordinaryIncomeNonSS: makeFromInt 64967, qualifiedIncome: makeFromInt 62105, itemizedDeductions: makeFromInt 12458, federalTaxDue: makeFromInt 15292, stateTaxDue: makeFromInt 5872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30206, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7816, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97394, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6239, stateTaxDue: makeFromInt 4495 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48972, ordinaryIncomeNonSS: makeFromInt 85579, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16227, stateTaxDue: makeFromInt 4018 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22998, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48221, ordinaryIncomeNonSS: makeFromInt 47093, qualifiedIncome: makeFromInt 7273, itemizedDeductions: makeFromInt 27905, federalTaxDue: makeFromInt 4209, stateTaxDue: makeFromInt 2120 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35793, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4111, federalTaxDue: makeFromInt 849, stateTaxDue: makeFromInt 1115 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49185, itemizedDeductions: makeFromInt 17783, federalTaxDue: makeFromInt 1127, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76610, qualifiedIncome: makeFromInt 39092, itemizedDeductions: makeFromInt 20756, federalTaxDue: makeFromInt 8107, stateTaxDue: makeFromInt 5452 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37481, ordinaryIncomeNonSS: makeFromInt 125455, qualifiedIncome: makeFromInt 18195, itemizedDeductions: makeFromInt 1294, federalTaxDue: makeFromInt 22566, stateTaxDue: makeFromInt 6508 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90794, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8240, federalTaxDue: makeFromInt 9439, stateTaxDue: makeFromInt 3965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23895, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28492, federalTaxDue: makeFromInt 31612, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19783, ordinaryIncomeNonSS: makeFromInt 29840, qualifiedIncome: makeFromInt 18208, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2768, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29194, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144638, qualifiedIncome: makeFromInt 72202, itemizedDeductions: makeFromInt 10472, federalTaxDue: makeFromInt 40300, stateTaxDue: makeFromInt 10834 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28090, ordinaryIncomeNonSS: makeFromInt 118105, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24522, federalTaxDue: makeFromInt 20526, stateTaxDue: makeFromInt 5330 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5065, qualifiedIncome: makeFromInt 35219, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1388 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14362, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35557, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40707, qualifiedIncome: makeFromInt 91317, itemizedDeductions: makeFromInt 7984, federalTaxDue: makeFromInt 11328, stateTaxDue: makeFromInt 6305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88857, itemizedDeductions: makeFromInt 11275, federalTaxDue: makeFromInt 7681, stateTaxDue: makeFromInt 4103 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48143, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30462, stateTaxDue: makeFromInt 9758 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29456, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13915, itemizedDeductions: makeFromInt 27977, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 21 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92292, qualifiedIncome: makeFromInt 24400, itemizedDeductions: makeFromInt 4308, federalTaxDue: makeFromInt 17264, stateTaxDue: makeFromInt 5727 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112925, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29362, stateTaxDue: makeFromInt 10071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19643, itemizedDeductions: makeFromInt 14883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 349 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94372, qualifiedIncome: makeFromInt 2182, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11179, stateTaxDue: makeFromInt 4700 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17703, federalTaxDue: makeFromInt 9824, stateTaxDue: makeFromInt 3829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35622, stateTaxDue: makeFromInt 6405 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22172, ordinaryIncomeNonSS: makeFromInt 106793, qualifiedIncome: makeFromInt 98887, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32635, stateTaxDue: makeFromInt 9909 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8736, ordinaryIncomeNonSS: makeFromInt 2358, qualifiedIncome: makeFromInt 43400, itemizedDeductions: makeFromInt 24753, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15522, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143904, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13742, federalTaxDue: makeFromInt 26237, stateTaxDue: makeFromInt 6720 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9503, federalTaxDue: makeFromInt 41308, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43634, ordinaryIncomeNonSS: makeFromInt 27430, qualifiedIncome: makeFromInt 5368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1648, stateTaxDue: makeFromInt 1326 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38619, qualifiedIncome: makeFromInt 88170, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9474, stateTaxDue: makeFromInt 5979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19861, ordinaryIncomeNonSS: makeFromInt 96226, qualifiedIncome: makeFromInt 72422, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28317, stateTaxDue: makeFromInt 7977 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49997, ordinaryIncomeNonSS: makeFromInt 127095, qualifiedIncome: makeFromInt 24323, itemizedDeductions: makeFromInt 22730, federalTaxDue: makeFromInt 32137, stateTaxDue: makeFromInt 7294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19238, ordinaryIncomeNonSS: makeFromInt 142553, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27106, stateTaxDue: makeFromInt 6821 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70021, itemizedDeductions: makeFromInt 8238, federalTaxDue: makeFromInt 38081, stateTaxDue: makeFromInt 10326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 380, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19550, ordinaryIncomeNonSS: makeFromInt 92297, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13763, federalTaxDue: makeFromInt 18547, stateTaxDue: makeFromInt 4483 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44053, qualifiedIncome: makeFromInt 71949, itemizedDeductions: makeFromInt 20847, federalTaxDue: makeFromInt 15373, stateTaxDue: makeFromInt 5414 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11580, federalTaxDue: makeFromInt 4843, stateTaxDue: makeFromInt 2305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39126, ordinaryIncomeNonSS: makeFromInt 148495, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30256, stateTaxDue: makeFromInt 6970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4300, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46804, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3647, stateTaxDue: makeFromInt 1885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41172, qualifiedIncome: makeFromInt 74097, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6460, stateTaxDue: makeFromInt 5328 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58525, itemizedDeductions: makeFromInt 14771, federalTaxDue: makeFromInt 9724, stateTaxDue: makeFromInt 2760 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39178, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79544, itemizedDeductions: makeFromInt 13126, federalTaxDue: makeFromInt 930, stateTaxDue: makeFromInt 3502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82499, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 688, federalTaxDue: makeFromInt 29580, stateTaxDue: makeFromInt 8655 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28206, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3829, itemizedDeductions: makeFromInt 29954, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10384, ordinaryIncomeNonSS: makeFromInt 147911, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16519, federalTaxDue: makeFromInt 24290, stateTaxDue: makeFromInt 6993 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120447, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19047, federalTaxDue: makeFromInt 14540, stateTaxDue: makeFromInt 5592 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 48021, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5779, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12574, ordinaryIncomeNonSS: makeFromInt 108205, qualifiedIncome: makeFromInt 42635, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20368, stateTaxDue: makeFromInt 7167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15431, qualifiedIncome: makeFromInt 43882, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2372 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134828, qualifiedIncome: makeFromInt 35990, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20289, stateTaxDue: makeFromInt 7866 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29085, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23962, stateTaxDue: makeFromInt 8685 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60506, qualifiedIncome: makeFromInt 58306, itemizedDeductions: makeFromInt 6083, federalTaxDue: makeFromInt 23790, stateTaxDue: makeFromInt 5686 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1502, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13130, federalTaxDue: makeFromInt 10610, stateTaxDue: makeFromInt 3835 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22928, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6699, itemizedDeductions: makeFromInt 14477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36401, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84616, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1397, stateTaxDue: makeFromInt 3663 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46652, ordinaryIncomeNonSS: makeFromInt 143974, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16400, federalTaxDue: makeFromInt 31331, stateTaxDue: makeFromInt 6624 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100154, qualifiedIncome: makeFromInt 72631, itemizedDeductions: makeFromInt 14359, federalTaxDue: makeFromInt 22393, stateTaxDue: makeFromInt 8264 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97067, itemizedDeductions: makeFromInt 15751, federalTaxDue: makeFromInt 38910, stateTaxDue: makeFromInt 11931 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136424, qualifiedIncome: makeFromInt 96467, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 54639, stateTaxDue: makeFromInt 11653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41864, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34287, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41476, ordinaryIncomeNonSS: makeFromInt 23042, qualifiedIncome: makeFromInt 6773, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3024, stateTaxDue: makeFromInt 1236 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2944, federalTaxDue: makeFromInt 12101, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19809, itemizedDeductions: makeFromInt 12385, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23143, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7355, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 113 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28606, ordinaryIncomeNonSS: makeFromInt 57868, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6335, stateTaxDue: makeFromInt 2418 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5829, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92339, itemizedDeductions: makeFromInt 28447, federalTaxDue: makeFromInt 7791, stateTaxDue: makeFromInt 4162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79468, qualifiedIncome: makeFromInt 44596, itemizedDeductions: makeFromInt 8254, federalTaxDue: makeFromInt 17516, stateTaxDue: makeFromInt 5980 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25867, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26063, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3552, ordinaryIncomeNonSS: makeFromInt 12481, qualifiedIncome: makeFromInt 11670, itemizedDeductions: makeFromInt 21313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50401, itemizedDeductions: makeFromInt 14664, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2020 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20465, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145046, qualifiedIncome: makeFromInt 65230, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36273, stateTaxDue: makeFromInt 10039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104601, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13060, stateTaxDue: makeFromInt 4784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19703, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56563, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2837, stateTaxDue: makeFromInt 2660 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39504, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32527, stateTaxDue: makeFromInt 9020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45989, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7489, stateTaxDue: makeFromInt 1724 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10127, ordinaryIncomeNonSS: makeFromInt 44962, qualifiedIncome: makeFromInt 7690, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2180, stateTaxDue: makeFromInt 2032 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47830, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94725, itemizedDeductions: makeFromInt 21711, federalTaxDue: makeFromInt 48591, stateTaxDue: makeFromInt 11981 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5481, federalTaxDue: makeFromInt 28407, stateTaxDue: makeFromInt 5496 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119353, qualifiedIncome: makeFromInt 1634, itemizedDeductions: makeFromInt 17895, federalTaxDue: makeFromInt 12852, stateTaxDue: makeFromInt 5665 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115791, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29491, stateTaxDue: makeFromInt 10335 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3305, ordinaryIncomeNonSS: makeFromInt 14744, qualifiedIncome: makeFromInt 22333, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1463 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40015, ordinaryIncomeNonSS: makeFromInt 103266, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20207, stateTaxDue: makeFromInt 4588 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41538, ordinaryIncomeNonSS: makeFromInt 6660, qualifiedIncome: makeFromInt 62136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7765, stateTaxDue: makeFromInt 3162 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23622, stateTaxDue: makeFromInt 6686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12533, ordinaryIncomeNonSS: makeFromInt 131413, qualifiedIncome: makeFromInt 31573, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27632, stateTaxDue: makeFromInt 7863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8134, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2248, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17809, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29437, stateTaxDue: makeFromInt 7935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3821, ordinaryIncomeNonSS: makeFromInt 28319, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1016 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43562, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14891, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74228, qualifiedIncome: makeFromInt 61684, itemizedDeductions: makeFromInt 8399, federalTaxDue: makeFromInt 15984, stateTaxDue: makeFromInt 6520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90627, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24971, stateTaxDue: makeFromInt 9273 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117507, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 925, federalTaxDue: makeFromInt 18509, stateTaxDue: makeFromInt 5420 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18880, ordinaryIncomeNonSS: makeFromInt 64663, qualifiedIncome: makeFromInt 52885, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21249, stateTaxDue: makeFromInt 5771 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100441, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27167, federalTaxDue: makeFromInt 22229, stateTaxDue: makeFromInt 4776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47638, ordinaryIncomeNonSS: makeFromInt 90809, qualifiedIncome: makeFromInt 23981, itemizedDeductions: makeFromInt 11660, federalTaxDue: makeFromInt 22875, stateTaxDue: makeFromInt 5365 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12999, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20978, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26276, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76692, itemizedDeductions: makeFromInt 26245, federalTaxDue: makeFromInt 3944, stateTaxDue: makeFromInt 3360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95111, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2371, federalTaxDue: makeFromInt 10389, stateTaxDue: makeFromInt 4181 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17554, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 555, stateTaxDue: makeFromInt 467 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80174, qualifiedIncome: makeFromInt 62503, itemizedDeductions: makeFromInt 18136, federalTaxDue: makeFromInt 14454, stateTaxDue: makeFromInt 6828 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90377, qualifiedIncome: makeFromInt 57847, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31485, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98874, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22225, stateTaxDue: makeFromInt 9694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18505, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89799, itemizedDeductions: makeFromInt 13144, federalTaxDue: makeFromInt 1657, stateTaxDue: makeFromInt 3888 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124921, qualifiedIncome: makeFromInt 7051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14023, stateTaxDue: makeFromInt 6180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37199, ordinaryIncomeNonSS: makeFromInt 14753, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16562, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 202 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118017, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18648, stateTaxDue: makeFromInt 5590 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22290, ordinaryIncomeNonSS: makeFromInt 30003, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1103, stateTaxDue: makeFromInt 979 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5874, ordinaryIncomeNonSS: makeFromInt 144736, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17920, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26379, qualifiedIncome: makeFromInt 29045, itemizedDeductions: makeFromInt 9442, federalTaxDue: makeFromInt 523, stateTaxDue: makeFromInt 2396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 47475, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6268, stateTaxDue: makeFromInt 1999 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12914, ordinaryIncomeNonSS: makeFromInt 60360, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12268, federalTaxDue: makeFromInt 5729, stateTaxDue: makeFromInt 2443 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93658, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7797, stateTaxDue: makeFromInt 4228 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74434, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3125, stateTaxDue: makeFromInt 3347 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18811, ordinaryIncomeNonSS: makeFromInt 12975, qualifiedIncome: makeFromInt 45418, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1554, stateTaxDue: makeFromInt 2605 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103805, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25813, federalTaxDue: makeFromInt 22998, stateTaxDue: makeFromInt 4735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17985, ordinaryIncomeNonSS: makeFromInt 4770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25950, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51600, qualifiedIncome: makeFromInt 60853, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22213, stateTaxDue: makeFromInt 5168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4437, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48330, ordinaryIncomeNonSS: makeFromInt 83410, qualifiedIncome: makeFromInt 87463, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33305, stateTaxDue: makeFromInt 8089 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32478, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83028, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 642, stateTaxDue: makeFromInt 3749 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22863, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11779, stateTaxDue: makeFromInt 5780 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21136, ordinaryIncomeNonSS: makeFromInt 63482, qualifiedIncome: makeFromInt 2404, itemizedDeductions: makeFromInt 17324, federalTaxDue: makeFromInt 10326, stateTaxDue: makeFromInt 3105 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10422, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79512, qualifiedIncome: makeFromInt 56884, itemizedDeductions: makeFromInt 9272, federalTaxDue: makeFromInt 15169, stateTaxDue: makeFromInt 6507 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7468, ordinaryIncomeNonSS: makeFromInt 605, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12617, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19966, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 623 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17494, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20882, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8489, itemizedDeductions: makeFromInt 23596, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13961, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15843, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1056, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25014, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45422, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64140, itemizedDeductions: makeFromInt 20199, federalTaxDue: makeFromInt 3974, stateTaxDue: makeFromInt 2843 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14016, ordinaryIncomeNonSS: makeFromInt 105324, qualifiedIncome: makeFromInt 53222, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18983, stateTaxDue: makeFromInt 7535 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75345, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18004, federalTaxDue: makeFromInt 7061, stateTaxDue: makeFromInt 3394 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 775 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1937, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105684, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12714, stateTaxDue: makeFromInt 4709 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39756, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89691, itemizedDeductions: makeFromInt 10546, federalTaxDue: makeFromInt 13184, stateTaxDue: makeFromInt 4105 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3968, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128619, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23113, federalTaxDue: makeFromInt 16842, stateTaxDue: makeFromInt 6111 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108863, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42915, stateTaxDue: makeFromInt 10224 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7101, ordinaryIncomeNonSS: makeFromInt 26129, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15433, stateTaxDue: makeFromInt 6208 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51741, itemizedDeductions: makeFromInt 29588, federalTaxDue: makeFromInt 25749, stateTaxDue: makeFromInt 9412 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1434, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69255, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2788 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37440, ordinaryIncomeNonSS: makeFromInt 95741, qualifiedIncome: makeFromInt 51800, itemizedDeductions: makeFromInt 3024, federalTaxDue: makeFromInt 28987, stateTaxDue: makeFromInt 6922 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4713, ordinaryIncomeNonSS: makeFromInt 61286, qualifiedIncome: makeFromInt 19783, itemizedDeductions: makeFromInt 7858, federalTaxDue: makeFromInt 9945, stateTaxDue: makeFromInt 3598 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8189, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26500, ordinaryIncomeNonSS: makeFromInt 138234, qualifiedIncome: makeFromInt 50853, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38243, stateTaxDue: makeFromInt 9215 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23319, ordinaryIncomeNonSS: makeFromInt 77525, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24561, federalTaxDue: makeFromInt 8905, stateTaxDue: makeFromInt 3525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80978, qualifiedIncome: makeFromInt 45309, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8376, stateTaxDue: makeFromInt 5639 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30648, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1265, stateTaxDue: makeFromInt 1216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37506, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44888, itemizedDeductions: makeFromInt 12194, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1636 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63361, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20860, federalTaxDue: makeFromInt 3916, stateTaxDue: makeFromInt 2493 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114702, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14190, federalTaxDue: makeFromInt 11608, stateTaxDue: makeFromInt 5197 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79503, itemizedDeductions: makeFromInt 26010, federalTaxDue: makeFromInt 35519, stateTaxDue: makeFromInt 11220 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6615, stateTaxDue: makeFromInt 1445 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45349, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1535, stateTaxDue: makeFromInt 1592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49503, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1545, stateTaxDue: makeFromInt 2076 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5192, ordinaryIncomeNonSS: makeFromInt 79564, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28484, federalTaxDue: makeFromInt 6366, stateTaxDue: makeFromInt 3603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48284, ordinaryIncomeNonSS: makeFromInt 123950, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29700, stateTaxDue: makeFromInt 6097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8533, ordinaryIncomeNonSS: makeFromInt 124767, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2262, federalTaxDue: makeFromInt 16335, stateTaxDue: makeFromInt 5710 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15600, ordinaryIncomeNonSS: makeFromInt 6874, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131758, qualifiedIncome: makeFromInt 60465, itemizedDeductions: makeFromInt 17020, federalTaxDue: makeFromInt 30896, stateTaxDue: makeFromInt 9375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23701, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11642, federalTaxDue: makeFromInt 801, stateTaxDue: makeFromInt 984 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43260, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27885, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 973 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23163, itemizedDeductions: makeFromInt 20037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 783 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4657, ordinaryIncomeNonSS: makeFromInt 67533, qualifiedIncome: makeFromInt 19693, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11787, stateTaxDue: makeFromInt 4102 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77883, qualifiedIncome: makeFromInt 74858, itemizedDeductions: makeFromInt 6581, federalTaxDue: makeFromInt 20746, stateTaxDue: makeFromInt 7382 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23159, ordinaryIncomeNonSS: makeFromInt 123679, qualifiedIncome: makeFromInt 76273, itemizedDeductions: makeFromInt 15113, federalTaxDue: makeFromInt 29984, stateTaxDue: makeFromInt 9545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20131, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4632, federalTaxDue: makeFromInt 25108, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30200, ordinaryIncomeNonSS: makeFromInt 25905, qualifiedIncome: makeFromInt 47932, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6742, stateTaxDue: makeFromInt 3117 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79612, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6847, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42898, ordinaryIncomeNonSS: makeFromInt 3955, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5017, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15532, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1894, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49919, ordinaryIncomeNonSS: makeFromInt 12346, qualifiedIncome: makeFromInt 90546, itemizedDeductions: makeFromInt 15031, federalTaxDue: makeFromInt 17857, stateTaxDue: makeFromInt 4690 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59700, qualifiedIncome: makeFromInt 46438, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8711, stateTaxDue: makeFromInt 4932 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5547, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107031, qualifiedIncome: makeFromInt 93730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31777, stateTaxDue: makeFromInt 9892 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80328, itemizedDeductions: makeFromInt 12114, federalTaxDue: makeFromInt 4294, stateTaxDue: makeFromInt 3546 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9873, itemizedDeductions: makeFromInt 29399, federalTaxDue: makeFromInt 19593, stateTaxDue: makeFromInt 7519 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10937, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61290, itemizedDeductions: makeFromInt 3145, federalTaxDue: makeFromInt 824, stateTaxDue: makeFromInt 2690 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8283, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 370 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58586, qualifiedIncome: makeFromInt 55748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8851, stateTaxDue: makeFromInt 5280 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24987, ordinaryIncomeNonSS: makeFromInt 147158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21944, stateTaxDue: makeFromInt 6883 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54299, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4546, stateTaxDue: makeFromInt 2460 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23034, ordinaryIncomeNonSS: makeFromInt 90680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8953, federalTaxDue: makeFromInt 25856, stateTaxDue: makeFromInt 9072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8543, ordinaryIncomeNonSS: makeFromInt 149517, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 713, federalTaxDue: makeFromInt 24887, stateTaxDue: makeFromInt 7101 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2731, ordinaryIncomeNonSS: makeFromInt 7132, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 5102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15073, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33585, ordinaryIncomeNonSS: makeFromInt 92300, qualifiedIncome: makeFromInt 33519, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18570, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17127, ordinaryIncomeNonSS: makeFromInt 118318, qualifiedIncome: makeFromInt 82928, itemizedDeductions: makeFromInt 29036, federalTaxDue: makeFromInt 29697, stateTaxDue: makeFromInt 9687 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24316, federalTaxDue: makeFromInt 22918, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140154, qualifiedIncome: makeFromInt 53035, itemizedDeductions: makeFromInt 8411, federalTaxDue: makeFromInt 31900, stateTaxDue: makeFromInt 9204 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16870, ordinaryIncomeNonSS: makeFromInt 66182, qualifiedIncome: makeFromInt 27328, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15190, stateTaxDue: makeFromInt 4422 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20596, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23532, federalTaxDue: makeFromInt 29495, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20660, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 605 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39423, itemizedDeductions: makeFromInt 27039, federalTaxDue: makeFromInt 332, stateTaxDue: makeFromInt 1396 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14395, ordinaryIncomeNonSS: makeFromInt 91255, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8847, stateTaxDue: makeFromInt 4088 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1291, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25282, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44223, qualifiedIncome: makeFromInt 54338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1137, stateTaxDue: makeFromInt 4374 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73209, qualifiedIncome: makeFromInt 55794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12989, stateTaxDue: makeFromInt 6130 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31119, qualifiedIncome: makeFromInt 31881, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1437, stateTaxDue: makeFromInt 2764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11156, ordinaryIncomeNonSS: makeFromInt 82433, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13586, federalTaxDue: makeFromInt 7343, stateTaxDue: makeFromInt 3647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39451, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11557, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98288, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6373, stateTaxDue: makeFromInt 4539 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19415, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23883, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140839, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15184, federalTaxDue: makeFromInt 35604, stateTaxDue: makeFromInt 11732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93771, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12040, federalTaxDue: makeFromInt 21448, stateTaxDue: makeFromInt 4334 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30880, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12693, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4828, ordinaryIncomeNonSS: makeFromInt 47172, qualifiedIncome: makeFromInt 98677, itemizedDeductions: makeFromInt 20404, federalTaxDue: makeFromInt 11877, stateTaxDue: makeFromInt 7010 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68225, qualifiedIncome: makeFromInt 21473, itemizedDeductions: makeFromInt 28242, federalTaxDue: makeFromInt 4403, stateTaxDue: makeFromInt 4010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42603, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46174, qualifiedIncome: makeFromInt 76931, itemizedDeductions: makeFromInt 11406, federalTaxDue: makeFromInt 14016, stateTaxDue: makeFromInt 5900 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49765, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19951, federalTaxDue: makeFromInt 6248, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4748, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37955, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27532, stateTaxDue: makeFromInt 8933 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22345, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12627, ordinaryIncomeNonSS: makeFromInt 45180, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4231, stateTaxDue: makeFromInt 1736 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41555, ordinaryIncomeNonSS: makeFromInt 22568, qualifiedIncome: makeFromInt 35479, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6655, stateTaxDue: makeFromInt 2647 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46137, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65730, itemizedDeductions: makeFromInt 13247, federalTaxDue: makeFromInt 2240, stateTaxDue: makeFromInt 2801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1616, stateTaxDue: makeFromInt 2954 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57163, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26488, federalTaxDue: makeFromInt 36979, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58235, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3301, stateTaxDue: makeFromInt 2237 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4175, ordinaryIncomeNonSS: makeFromInt 81178, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10315, stateTaxDue: makeFromInt 3712 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110242, qualifiedIncome: makeFromInt 78263, itemizedDeductions: makeFromInt 10694, federalTaxDue: makeFromInt 26680, stateTaxDue: makeFromInt 9165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124984, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25134, stateTaxDue: makeFromInt 6150 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26834, ordinaryIncomeNonSS: makeFromInt 40174, qualifiedIncome: makeFromInt 85542, itemizedDeductions: makeFromInt 22991, federalTaxDue: makeFromInt 9552, stateTaxDue: makeFromInt 5611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15562, ordinaryIncomeNonSS: makeFromInt 29722, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 765, stateTaxDue: makeFromInt 965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47113, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4362, federalTaxDue: makeFromInt 9797, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120608, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4566, federalTaxDue: makeFromInt 21112, stateTaxDue: makeFromInt 5555 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11652, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 328 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49743, ordinaryIncomeNonSS: makeFromInt 30484, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24183, stateTaxDue: makeFromInt 6367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39382, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 260, stateTaxDue: makeFromInt 1784 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47995, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1293, stateTaxDue: makeFromInt 2202 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10628, ordinaryIncomeNonSS: makeFromInt 98643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25385, federalTaxDue: makeFromInt 9808, stateTaxDue: makeFromInt 4480 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28316, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6037, federalTaxDue: makeFromInt 20976, stateTaxDue: makeFromInt 5935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17773, ordinaryIncomeNonSS: makeFromInt 118390, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16704, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137955, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33617, stateTaxDue: makeFromInt 6443 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7227, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24034, federalTaxDue: makeFromInt 17971, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77318, itemizedDeductions: makeFromInt 5829, federalTaxDue: makeFromInt 10271, stateTaxDue: makeFromInt 3515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23723, ordinaryIncomeNonSS: makeFromInt 144677, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28275, stateTaxDue: makeFromInt 6828 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57195, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5196, stateTaxDue: makeFromInt 2405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39528, qualifiedIncome: makeFromInt 9582, itemizedDeductions: makeFromInt 20008, federalTaxDue: makeFromInt 9251, stateTaxDue: makeFromInt 2158 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38961, ordinaryIncomeNonSS: makeFromInt 61979, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27139, federalTaxDue: makeFromInt 7757, stateTaxDue: makeFromInt 2424 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39245, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17362, federalTaxDue: makeFromInt 13060, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 995, stateTaxDue: makeFromInt 1079 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29876, ordinaryIncomeNonSS: makeFromInt 123013, qualifiedIncome: makeFromInt 69464, itemizedDeductions: makeFromInt 6073, federalTaxDue: makeFromInt 34615, stateTaxDue: makeFromInt 9266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136837, qualifiedIncome: makeFromInt 36985, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23087, stateTaxDue: makeFromInt 8212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41929, ordinaryIncomeNonSS: makeFromInt 117935, qualifiedIncome: makeFromInt 65962, itemizedDeductions: makeFromInt 8035, federalTaxDue: makeFromInt 42548, stateTaxDue: makeFromInt 9154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17234, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 58, stateTaxDue: makeFromInt 430 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11553, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37231, stateTaxDue: makeFromInt 10566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46029, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65844, itemizedDeductions: makeFromInt 8276, federalTaxDue: makeFromInt 6067, stateTaxDue: makeFromInt 2917 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 681, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7991, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19931, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51359, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 144, stateTaxDue: makeFromInt 2069 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11005, federalTaxDue: makeFromInt 49417, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19117, federalTaxDue: makeFromInt 35714, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26706, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77927, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3319, stateTaxDue: makeFromInt 3321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12423, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29774, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39225, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14920, federalTaxDue: makeFromInt 18391, stateTaxDue: makeFromInt 7715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31540, ordinaryIncomeNonSS: makeFromInt 38037, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3645, federalTaxDue: makeFromInt 4431, stateTaxDue: makeFromInt 1491 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5747, ordinaryIncomeNonSS: makeFromInt 95999, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21809, federalTaxDue: makeFromInt 26513, stateTaxDue: makeFromInt 9225 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25409, ordinaryIncomeNonSS: makeFromInt 101262, qualifiedIncome: makeFromInt 41783, itemizedDeductions: makeFromInt 25044, federalTaxDue: makeFromInt 21186, stateTaxDue: makeFromInt 6846 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39852, ordinaryIncomeNonSS: makeFromInt 139259, qualifiedIncome: makeFromInt 15040, itemizedDeductions: makeFromInt 13026, federalTaxDue: makeFromInt 26694, stateTaxDue: makeFromInt 7348 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11133, ordinaryIncomeNonSS: makeFromInt 14965, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 72, stateTaxDue: makeFromInt 493 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60142, itemizedDeductions: makeFromInt 20087, federalTaxDue: makeFromInt 3870, stateTaxDue: makeFromInt 2639 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36872, ordinaryIncomeNonSS: makeFromInt 146961, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25575, stateTaxDue: makeFromInt 6977 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17963, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40362, itemizedDeductions: makeFromInt 21513, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1443 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69950, qualifiedIncome: makeFromInt 87097, itemizedDeductions: makeFromInt 29674, federalTaxDue: makeFromInt 26892, stateTaxDue: makeFromInt 7397 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31442, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60132, qualifiedIncome: makeFromInt 74479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12124, stateTaxDue: makeFromInt 6314 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35120, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7516, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11399, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25205, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18240, ordinaryIncomeNonSS: makeFromInt 7663, qualifiedIncome: makeFromInt 71050, itemizedDeductions: makeFromInt 7756, federalTaxDue: makeFromInt 992, stateTaxDue: makeFromInt 3566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41261, ordinaryIncomeNonSS: makeFromInt 54755, qualifiedIncome: makeFromInt 66133, itemizedDeductions: makeFromInt 20828, federalTaxDue: makeFromInt 20717, stateTaxDue: makeFromInt 5789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28886, qualifiedIncome: makeFromInt 52752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16001, stateTaxDue: makeFromInt 3627 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49132, ordinaryIncomeNonSS: makeFromInt 18364, qualifiedIncome: makeFromInt 60804, itemizedDeductions: makeFromInt 19985, federalTaxDue: makeFromInt 6914, stateTaxDue: makeFromInt 3589 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3382, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45897, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5514, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12317, stateTaxDue: makeFromInt 4830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5168, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3528, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 39 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129247, qualifiedIncome: makeFromInt 62577, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27666, stateTaxDue: makeFromInt 9016 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11093, ordinaryIncomeNonSS: makeFromInt 39365, qualifiedIncome: makeFromInt 98930, itemizedDeductions: makeFromInt 3701, federalTaxDue: makeFromInt 18023, stateTaxDue: makeFromInt 6460 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23887, itemizedDeductions: makeFromInt 5388, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 739 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91029, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5899, stateTaxDue: makeFromInt 4296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22304, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3217, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43480, ordinaryIncomeNonSS: makeFromInt 51412, qualifiedIncome: makeFromInt 14482, itemizedDeductions: makeFromInt 20142, federalTaxDue: makeFromInt 12799, stateTaxDue: makeFromInt 2840 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19820, qualifiedIncome: makeFromInt 8434, itemizedDeductions: makeFromInt 13707, federalTaxDue: makeFromInt 2772, stateTaxDue: makeFromInt 1094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18873, ordinaryIncomeNonSS: makeFromInt 40167, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 43, federalTaxDue: makeFromInt 1808, stateTaxDue: makeFromInt 1396 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85785, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6962, stateTaxDue: makeFromInt 4110 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31486, itemizedDeductions: makeFromInt 16760, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84579, qualifiedIncome: makeFromInt 84636, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30454, stateTaxDue: makeFromInt 7886 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34096, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16560, itemizedDeductions: makeFromInt 8198, federalTaxDue: makeFromInt 37608, stateTaxDue: makeFromInt 8066 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61592, itemizedDeductions: makeFromInt 3623, federalTaxDue: makeFromInt 12773, stateTaxDue: makeFromInt 2917 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39123, ordinaryIncomeNonSS: makeFromInt 120372, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19026, stateTaxDue: makeFromInt 5544 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23876, ordinaryIncomeNonSS: makeFromInt 91547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13622, stateTaxDue: makeFromInt 4322 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9492, qualifiedIncome: makeFromInt 41187, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 272, stateTaxDue: makeFromInt 2135 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42569, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43659, ordinaryIncomeNonSS: makeFromInt 56716, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9918, federalTaxDue: makeFromInt 10106, stateTaxDue: makeFromInt 2261 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4613, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29332, qualifiedIncome: makeFromInt 32248, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2504 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45598, ordinaryIncomeNonSS: makeFromInt 32623, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13988, stateTaxDue: makeFromInt 6156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113997, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23231, federalTaxDue: makeFromInt 22551, stateTaxDue: makeFromInt 5263 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21071, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9595, ordinaryIncomeNonSS: makeFromInt 15224, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 386 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7074, ordinaryIncomeNonSS: makeFromInt 92845, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20366, federalTaxDue: makeFromInt 7804, stateTaxDue: makeFromInt 4082 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30588, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14687, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31098, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2949, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8116, ordinaryIncomeNonSS: makeFromInt 107493, qualifiedIncome: makeFromInt 346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11890, stateTaxDue: makeFromInt 4847 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70675, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2859 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1529, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35955, itemizedDeductions: makeFromInt 27203, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46848, itemizedDeductions: makeFromInt 14519, federalTaxDue: makeFromInt 6346, stateTaxDue: makeFromInt 2165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3846, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48499, ordinaryIncomeNonSS: makeFromInt 104584, qualifiedIncome: makeFromInt 60211, itemizedDeductions: makeFromInt 26454, federalTaxDue: makeFromInt 34299, stateTaxDue: makeFromInt 8180 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6031, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87319, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26824, stateTaxDue: makeFromInt 9111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42158, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23893, itemizedDeductions: makeFromInt 17299, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 872 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32313, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13299, stateTaxDue: makeFromInt 6161 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32155, ordinaryIncomeNonSS: makeFromInt 134048, qualifiedIncome: makeFromInt 4716, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21191, stateTaxDue: makeFromInt 6463 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47186, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5090, itemizedDeductions: makeFromInt 29890, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2111, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29038, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92531, itemizedDeductions: makeFromInt 28381, federalTaxDue: makeFromInt 2300, stateTaxDue: makeFromInt 4066 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141922, qualifiedIncome: makeFromInt 32750, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24528, stateTaxDue: makeFromInt 8478 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20114, ordinaryIncomeNonSS: makeFromInt 138201, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28886, federalTaxDue: makeFromInt 24513, stateTaxDue: makeFromInt 6555 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39663, ordinaryIncomeNonSS: makeFromInt 82674, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15193, stateTaxDue: makeFromInt 3559 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7072, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47586, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29497, federalTaxDue: makeFromInt 9165, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35909, ordinaryIncomeNonSS: makeFromInt 62923, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14315, federalTaxDue: makeFromInt 10492, stateTaxDue: makeFromInt 2781 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123316, qualifiedIncome: makeFromInt 58487, itemizedDeductions: makeFromInt 15684, federalTaxDue: makeFromInt 35829, stateTaxDue: makeFromInt 8715 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91294, qualifiedIncome: makeFromInt 42548, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12243, stateTaxDue: makeFromInt 6315 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10565, ordinaryIncomeNonSS: makeFromInt 63888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27030, federalTaxDue: makeFromInt 5208, stateTaxDue: makeFromInt 2819 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18403, ordinaryIncomeNonSS: makeFromInt 53394, qualifiedIncome: makeFromInt 79699, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16038, stateTaxDue: makeFromInt 6200 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120800, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11732, federalTaxDue: makeFromInt 31758, stateTaxDue: makeFromInt 10665 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87471, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7061, stateTaxDue: makeFromInt 4119 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17134, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82660, qualifiedIncome: makeFromInt 73879, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18662, stateTaxDue: makeFromInt 7535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26019, ordinaryIncomeNonSS: makeFromInt 73814, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28230, federalTaxDue: makeFromInt 24011, stateTaxDue: makeFromInt 8116 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18298, ordinaryIncomeNonSS: makeFromInt 29274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12199, federalTaxDue: makeFromInt 12730, stateTaxDue: makeFromInt 5889 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17196, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59576, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35080, stateTaxDue: makeFromInt 10024 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70655, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7927, stateTaxDue: makeFromInt 3278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34094, ordinaryIncomeNonSS: makeFromInt 103085, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12038, federalTaxDue: makeFromInt 20396, stateTaxDue: makeFromInt 4809 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40402, ordinaryIncomeNonSS: makeFromInt 122190, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37704, stateTaxDue: makeFromInt 10535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17161, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46929, ordinaryIncomeNonSS: makeFromInt 5324, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6976, stateTaxDue: makeFromInt 4791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19479, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6013, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17550, ordinaryIncomeNonSS: makeFromInt 20305, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 366, stateTaxDue: makeFromInt 587 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89420, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11600, stateTaxDue: makeFromInt 4336 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149604, qualifiedIncome: makeFromInt 77257, itemizedDeductions: makeFromInt 19770, federalTaxDue: makeFromInt 39845, stateTaxDue: makeFromInt 11346 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5969, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67375, itemizedDeductions: makeFromInt 29377, federalTaxDue: makeFromInt 29639, stateTaxDue: makeFromInt 10433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66888, qualifiedIncome: makeFromInt 75966, itemizedDeductions: makeFromInt 14141, federalTaxDue: makeFromInt 19340, stateTaxDue: makeFromInt 7061 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138915, qualifiedIncome: makeFromInt 22344, itemizedDeductions: makeFromInt 2704, federalTaxDue: makeFromInt 26999, stateTaxDue: makeFromInt 7608 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6465, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77013, itemizedDeductions: makeFromInt 9870, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3376 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34497, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69314, itemizedDeductions: makeFromInt 13890, federalTaxDue: makeFromInt 202, stateTaxDue: makeFromInt 2991 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12981, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33368, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66745, itemizedDeductions: makeFromInt 11257, federalTaxDue: makeFromInt 2452, stateTaxDue: makeFromInt 2853 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3658, ordinaryIncomeNonSS: makeFromInt 132175, qualifiedIncome: makeFromInt 45439, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26544, stateTaxDue: makeFromInt 8506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7864, qualifiedIncome: makeFromInt 39600, itemizedDeductions: makeFromInt 8140, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2074 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12431, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16930, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133277, qualifiedIncome: makeFromInt 37067, itemizedDeductions: makeFromInt 16406, federalTaxDue: makeFromInt 20109, stateTaxDue: makeFromInt 7842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34888, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78421, itemizedDeductions: makeFromInt 21667, federalTaxDue: makeFromInt 43366, stateTaxDue: makeFromInt 11221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31479, ordinaryIncomeNonSS: makeFromInt 26555, qualifiedIncome: makeFromInt 26792, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7785, stateTaxDue: makeFromInt 2374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3659, itemizedDeductions: makeFromInt 7942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27885, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18580, federalTaxDue: makeFromInt 526, stateTaxDue: makeFromInt 973 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56510, qualifiedIncome: makeFromInt 96696, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15682, stateTaxDue: makeFromInt 7385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96131, itemizedDeductions: makeFromInt 19734, federalTaxDue: makeFromInt 8568, stateTaxDue: makeFromInt 4552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2390, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13561, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 345 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7085, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43103, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43657, ordinaryIncomeNonSS: makeFromInt 133392, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39360, stateTaxDue: makeFromInt 11352 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30383, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71257, itemizedDeductions: makeFromInt 12221, federalTaxDue: makeFromInt 8361, stateTaxDue: makeFromInt 2988 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43671, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66102, itemizedDeductions: makeFromInt 10575, federalTaxDue: makeFromInt 3929, stateTaxDue: makeFromInt 2820 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18202, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7743, itemizedDeductions: makeFromInt 13385, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39754, ordinaryIncomeNonSS: makeFromInt 48358, qualifiedIncome: makeFromInt 35926, itemizedDeductions: makeFromInt 4260, federalTaxDue: makeFromInt 14050, stateTaxDue: makeFromInt 3748 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40000, ordinaryIncomeNonSS: makeFromInt 78672, qualifiedIncome: makeFromInt 77981, itemizedDeductions: makeFromInt 2849, federalTaxDue: makeFromInt 21713, stateTaxDue: makeFromInt 7158 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20810, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22624, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35949, stateTaxDue: makeFromInt 8375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115963, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10740, stateTaxDue: makeFromInt 5123 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39959, ordinaryIncomeNonSS: makeFromInt 76695, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21168, federalTaxDue: makeFromInt 10694, stateTaxDue: makeFromInt 3429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48293, qualifiedIncome: makeFromInt 33514, itemizedDeductions: makeFromInt 7409, federalTaxDue: makeFromInt 9257, stateTaxDue: makeFromInt 3615 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15486, ordinaryIncomeNonSS: makeFromInt 34482, qualifiedIncome: makeFromInt 2686, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 721, stateTaxDue: makeFromInt 1447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71944, itemizedDeductions: makeFromInt 9484, federalTaxDue: makeFromInt 2752, stateTaxDue: makeFromInt 3222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24077, stateTaxDue: makeFromInt 7031 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2079, ordinaryIncomeNonSS: makeFromInt 147416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37439, stateTaxDue: makeFromInt 11916 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43278, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17731, ordinaryIncomeNonSS: makeFromInt 53656, qualifiedIncome: makeFromInt 10677, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4236, stateTaxDue: makeFromInt 2542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36146, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24657, stateTaxDue: makeFromInt 8943 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9507, ordinaryIncomeNonSS: makeFromInt 56321, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25373, federalTaxDue: makeFromInt 4390, stateTaxDue: makeFromInt 2241 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31285, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5467, federalTaxDue: makeFromInt 24078, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132266, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23153, stateTaxDue: makeFromInt 6521 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5108, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75574, itemizedDeductions: makeFromInt 13741, federalTaxDue: makeFromInt 2966, stateTaxDue: makeFromInt 3204 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38577, ordinaryIncomeNonSS: makeFromInt 64176, qualifiedIncome: makeFromInt 3795, itemizedDeductions: makeFromInt 11672, federalTaxDue: makeFromInt 16652, stateTaxDue: makeFromInt 3242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34854, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13523, federalTaxDue: makeFromInt 20507, stateTaxDue: makeFromInt 6297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18254, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19786, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21702, federalTaxDue: makeFromInt 18554, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76055, qualifiedIncome: makeFromInt 90310, itemizedDeductions: makeFromInt 26062, federalTaxDue: makeFromInt 20162, stateTaxDue: makeFromInt 7863 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32015, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6767, federalTaxDue: makeFromInt 44791, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22216, itemizedDeductions: makeFromInt 4276, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 856 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28966, ordinaryIncomeNonSS: makeFromInt 85843, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26555, federalTaxDue: makeFromInt 26442, stateTaxDue: makeFromInt 9029 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43636, ordinaryIncomeNonSS: makeFromInt 29925, qualifiedIncome: makeFromInt 74838, itemizedDeductions: makeFromInt 21992, federalTaxDue: makeFromInt 14719, stateTaxDue: makeFromInt 4863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127601, qualifiedIncome: makeFromInt 58592, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27599, stateTaxDue: makeFromInt 8945 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70720, qualifiedIncome: makeFromInt 28068, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12152, stateTaxDue: makeFromInt 4484 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40980, ordinaryIncomeNonSS: makeFromInt 29724, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2930, stateTaxDue: makeFromInt 911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22770, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 814 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67395, qualifiedIncome: makeFromInt 66528, itemizedDeductions: makeFromInt 6629, federalTaxDue: makeFromInt 19994, stateTaxDue: makeFromInt 6221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31926, qualifiedIncome: makeFromInt 71848, itemizedDeductions: makeFromInt 13618, federalTaxDue: makeFromInt 6832, stateTaxDue: makeFromInt 4946 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2324, qualifiedIncome: makeFromInt 51380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1137, stateTaxDue: makeFromInt 2010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25373, ordinaryIncomeNonSS: makeFromInt 17354, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8658, stateTaxDue: makeFromInt 5638 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113221, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9889, stateTaxDue: makeFromInt 5186 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125795, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16002, federalTaxDue: makeFromInt 22253, stateTaxDue: makeFromInt 5815 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15341, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37986, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6081, federalTaxDue: makeFromInt 32358, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7860, ordinaryIncomeNonSS: makeFromInt 73754, qualifiedIncome: makeFromInt 89955, itemizedDeductions: makeFromInt 14549, federalTaxDue: makeFromInt 23572, stateTaxDue: makeFromInt 7730 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2771, itemizedDeductions: makeFromInt 1003, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81748, qualifiedIncome: makeFromInt 63518, itemizedDeductions: makeFromInt 23111, federalTaxDue: makeFromInt 28097, stateTaxDue: makeFromInt 7062 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34735, ordinaryIncomeNonSS: makeFromInt 27883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1195, stateTaxDue: makeFromInt 819 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 726, ordinaryIncomeNonSS: makeFromInt 70537, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10485, federalTaxDue: makeFromInt 4851, stateTaxDue: makeFromInt 2852 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35362, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4513, stateTaxDue: makeFromInt 6293 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20676, itemizedDeductions: makeFromInt 1568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 359 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68496, qualifiedIncome: makeFromInt 2160, itemizedDeductions: makeFromInt 28871, federalTaxDue: makeFromInt 2442, stateTaxDue: makeFromInt 3175 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122778, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19212, federalTaxDue: makeFromInt 17754, stateTaxDue: makeFromInt 5711 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40635, ordinaryIncomeNonSS: makeFromInt 20089, qualifiedIncome: makeFromInt 38542, itemizedDeductions: makeFromInt 24439, federalTaxDue: makeFromInt 5401, stateTaxDue: makeFromInt 2643 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6478, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45435, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73178, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3052, stateTaxDue: makeFromInt 3283 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27129, itemizedDeductions: makeFromInt 13211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1102 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24965, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55385, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2194 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62968, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4445, stateTaxDue: makeFromInt 2836 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1593, ordinaryIncomeNonSS: makeFromInt 21408, qualifiedIncome: makeFromInt 64766, itemizedDeductions: makeFromInt 14668, federalTaxDue: makeFromInt 404, stateTaxDue: makeFromInt 3946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71400, itemizedDeductions: makeFromInt 2659, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125180, qualifiedIncome: makeFromInt 46052, itemizedDeductions: makeFromInt 15523, federalTaxDue: makeFromInt 29515, stateTaxDue: makeFromInt 8508 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11894, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79550, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5681, stateTaxDue: makeFromInt 3523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48772, itemizedDeductions: makeFromInt 18469, federalTaxDue: makeFromInt 401, stateTaxDue: makeFromInt 1964 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24308, ordinaryIncomeNonSS: makeFromInt 35181, qualifiedIncome: makeFromInt 83047, itemizedDeductions: makeFromInt 22272, federalTaxDue: makeFromInt 12858, stateTaxDue: makeFromInt 5536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46500, ordinaryIncomeNonSS: makeFromInt 80069, qualifiedIncome: makeFromInt 87416, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24746, stateTaxDue: makeFromInt 7991 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36672, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28337, federalTaxDue: makeFromInt 44016, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43670, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52320, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31614, stateTaxDue: makeFromInt 9541 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57400, itemizedDeductions: makeFromInt 4118, federalTaxDue: makeFromInt 240, stateTaxDue: makeFromInt 2295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21274, ordinaryIncomeNonSS: makeFromInt 134055, qualifiedIncome: makeFromInt 23595, itemizedDeductions: makeFromInt 28132, federalTaxDue: makeFromInt 21021, stateTaxDue: makeFromInt 7387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12612, stateTaxDue: makeFromInt 4361 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113265, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1059, federalTaxDue: makeFromInt 32491, stateTaxDue: makeFromInt 10408 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40720, ordinaryIncomeNonSS: makeFromInt 25101, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29680, federalTaxDue: makeFromInt 11824, stateTaxDue: makeFromInt 5952 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46406, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145392, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19678, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108838, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7437, federalTaxDue: makeFromInt 9374, stateTaxDue: makeFromInt 4767 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21373, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 641 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14547, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15600, federalTaxDue: makeFromInt 14011, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8555, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10532, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48998, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65897, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3825, stateTaxDue: makeFromInt 2840 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9637, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8246, ordinaryIncomeNonSS: makeFromInt 2789, qualifiedIncome: makeFromInt 30731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1159 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123028, qualifiedIncome: makeFromInt 28895, itemizedDeductions: makeFromInt 28275, federalTaxDue: makeFromInt 16760, stateTaxDue: makeFromInt 7121 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22178, ordinaryIncomeNonSS: makeFromInt 73434, qualifiedIncome: makeFromInt 54688, itemizedDeductions: makeFromInt 21506, federalTaxDue: makeFromInt 13678, stateTaxDue: makeFromInt 5731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22706, ordinaryIncomeNonSS: makeFromInt 12059, qualifiedIncome: makeFromInt 13026, itemizedDeductions: makeFromInt 10641, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 851 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16353, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6546, federalTaxDue: makeFromInt 21286, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30672, ordinaryIncomeNonSS: makeFromInt 83896, qualifiedIncome: makeFromInt 43160, itemizedDeductions: makeFromInt 28717, federalTaxDue: makeFromInt 15846, stateTaxDue: makeFromInt 5678 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1138, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1254, stateTaxDue: makeFromInt 2748 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69665, itemizedDeductions: makeFromInt 25161, federalTaxDue: makeFromInt 4390, stateTaxDue: makeFromInt 3228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 976, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11968, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 60 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30745, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40269, itemizedDeductions: makeFromInt 18860, federalTaxDue: makeFromInt 798, stateTaxDue: makeFromInt 1759 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19492, ordinaryIncomeNonSS: makeFromInt 45231, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15644, federalTaxDue: makeFromInt 6013, stateTaxDue: makeFromInt 1860 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97991, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25127, stateTaxDue: makeFromInt 4569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 111424, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7587, federalTaxDue: makeFromInt 40391, stateTaxDue: makeFromInt 10232 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1786, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2866, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14524, ordinaryIncomeNonSS: makeFromInt 27451, qualifiedIncome: makeFromInt 2147, itemizedDeductions: makeFromInt 8831, federalTaxDue: makeFromInt 258, stateTaxDue: makeFromInt 1005 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45419, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35179, itemizedDeductions: makeFromInt 21504, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8659, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10525, itemizedDeductions: makeFromInt 17306, federalTaxDue: makeFromInt 27122, stateTaxDue: makeFromInt 7738 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91110, itemizedDeductions: makeFromInt 14502, federalTaxDue: makeFromInt 32344, stateTaxDue: makeFromInt 11381 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139077, qualifiedIncome: makeFromInt 13081, itemizedDeductions: makeFromInt 12226, federalTaxDue: makeFromInt 18237, stateTaxDue: makeFromInt 7133 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21539, ordinaryIncomeNonSS: makeFromInt 52382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5652, stateTaxDue: makeFromInt 2244 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19574, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73957, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5327, stateTaxDue: makeFromInt 3243 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42982, ordinaryIncomeNonSS: makeFromInt 45125, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4544, federalTaxDue: makeFromInt 26140, stateTaxDue: makeFromInt 6905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41601, qualifiedIncome: makeFromInt 22805, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 875, stateTaxDue: makeFromInt 2632 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35699, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21350, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127602, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22650, stateTaxDue: makeFromInt 5905 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91843, qualifiedIncome: makeFromInt 98317, itemizedDeductions: makeFromInt 8378, federalTaxDue: makeFromInt 28128, stateTaxDue: makeFromInt 9179 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149672, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18453, federalTaxDue: makeFromInt 35888, stateTaxDue: makeFromInt 7286 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55691, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11825, stateTaxDue: makeFromInt 2616 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38860, ordinaryIncomeNonSS: makeFromInt 18929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1393, stateTaxDue: makeFromInt 619 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42872, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11867, itemizedDeductions: makeFromInt 3851, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46945, ordinaryIncomeNonSS: makeFromInt 46504, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27309, stateTaxDue: makeFromInt 7247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40829, itemizedDeductions: makeFromInt 5353, federalTaxDue: makeFromInt 31004, stateTaxDue: makeFromInt 9283 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37234, ordinaryIncomeNonSS: makeFromInt 98998, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28790, federalTaxDue: makeFromInt 18749, stateTaxDue: makeFromInt 4702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47840, ordinaryIncomeNonSS: makeFromInt 23195, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2260, ordinaryIncomeNonSS: makeFromInt 91640, qualifiedIncome: makeFromInt 37606, itemizedDeductions: makeFromInt 4087, federalTaxDue: makeFromInt 16411, stateTaxDue: makeFromInt 6143 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29462, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84200, itemizedDeductions: makeFromInt 15900, federalTaxDue: makeFromInt 8664, stateTaxDue: makeFromInt 3755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37930, ordinaryIncomeNonSS: makeFromInt 27309, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20401, federalTaxDue: makeFromInt 19418, stateTaxDue: makeFromInt 6268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9702, stateTaxDue: makeFromInt 3481 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26761, ordinaryIncomeNonSS: makeFromInt 149648, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8065, federalTaxDue: makeFromInt 31682, stateTaxDue: makeFromInt 7027 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4940, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20907, federalTaxDue: makeFromInt 24268, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17726, ordinaryIncomeNonSS: makeFromInt 20967, qualifiedIncome: makeFromInt 60454, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4863, stateTaxDue: makeFromInt 3696 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68768, qualifiedIncome: makeFromInt 72776, itemizedDeductions: makeFromInt 14822, federalTaxDue: makeFromInt 13568, stateTaxDue: makeFromInt 6770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82238, qualifiedIncome: makeFromInt 90636, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23289, stateTaxDue: makeFromInt 8388 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6695, federalTaxDue: makeFromInt 52867, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6521, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31280, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2156, federalTaxDue: makeFromInt 173, stateTaxDue: makeFromInt 1044 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45128, ordinaryIncomeNonSS: makeFromInt 20389, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29436, federalTaxDue: makeFromInt 306, stateTaxDue: makeFromInt 444 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21978, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24508, stateTaxDue: makeFromInt 8918 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69167, qualifiedIncome: makeFromInt 52258, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6230, stateTaxDue: makeFromInt 5396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45863, ordinaryIncomeNonSS: makeFromInt 119274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3375, federalTaxDue: makeFromInt 43289, stateTaxDue: makeFromInt 10509 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84273, itemizedDeductions: makeFromInt 25686, federalTaxDue: makeFromInt 2220, stateTaxDue: makeFromInt 3739 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49467, ordinaryIncomeNonSS: makeFromInt 25009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1189, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73069, itemizedDeductions: makeFromInt 19525, federalTaxDue: makeFromInt 36296, stateTaxDue: makeFromInt 10898 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50564, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29755, federalTaxDue: makeFromInt 56, stateTaxDue: makeFromInt 2150 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149852, qualifiedIncome: makeFromInt 50852, itemizedDeductions: makeFromInt 4529, federalTaxDue: makeFromInt 26944, stateTaxDue: makeFromInt 9691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6731, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46406, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10554, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14825, ordinaryIncomeNonSS: makeFromInt 17806, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22757, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 5580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6819, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123392, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17758, stateTaxDue: makeFromInt 5742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22119, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28606, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132969, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50786, stateTaxDue: makeFromInt 11535 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85001, itemizedDeductions: makeFromInt 13774, federalTaxDue: makeFromInt 1365, stateTaxDue: makeFromInt 3682 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49616, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37023, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57593, qualifiedIncome: makeFromInt 44975, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6937, stateTaxDue: makeFromInt 4680 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93216, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12013, federalTaxDue: makeFromInt 27891, stateTaxDue: makeFromInt 9406 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 22 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 238 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27713, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28833, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1022 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1799, federalTaxDue: makeFromInt 3925, stateTaxDue: makeFromInt 2404 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37334, ordinaryIncomeNonSS: makeFromInt 56723, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24195, stateTaxDue: makeFromInt 7544 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14407, qualifiedIncome: makeFromInt 22039, itemizedDeductions: makeFromInt 10721, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35161, ordinaryIncomeNonSS: makeFromInt 77938, qualifiedIncome: makeFromInt 17290, itemizedDeductions: makeFromInt 24440, federalTaxDue: makeFromInt 16555, stateTaxDue: makeFromInt 4306 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10796, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15498, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130826, qualifiedIncome: makeFromInt 31794, itemizedDeductions: makeFromInt 27462, federalTaxDue: makeFromInt 18743, stateTaxDue: makeFromInt 7656 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30187, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1354, stateTaxDue: makeFromInt 1091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18311, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28170, federalTaxDue: makeFromInt 30373, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43804, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1476, stateTaxDue: makeFromInt 1683 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58, qualifiedIncome: makeFromInt 13432, itemizedDeductions: makeFromInt 3388, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 260 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10791, federalTaxDue: makeFromInt 34917, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16763, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69207, itemizedDeductions: makeFromInt 20857, federalTaxDue: makeFromInt 42378, stateTaxDue: makeFromInt 10955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33899, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29606, federalTaxDue: makeFromInt 25613, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41474, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4486, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34334, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40899, itemizedDeductions: makeFromInt 14422, federalTaxDue: makeFromInt 381, stateTaxDue: makeFromInt 1670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7081, ordinaryIncomeNonSS: makeFromInt 32672, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3787, stateTaxDue: makeFromInt 1442 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33077, qualifiedIncome: makeFromInt 36653, itemizedDeductions: makeFromInt 4442, federalTaxDue: makeFromInt 1542, stateTaxDue: makeFromInt 3209 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27182, itemizedDeductions: makeFromInt 25527, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23286, ordinaryIncomeNonSS: makeFromInt 107097, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9491, federalTaxDue: makeFromInt 35238, stateTaxDue: makeFromInt 10134 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71925, itemizedDeductions: makeFromInt 15289, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8030, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79073, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5610, stateTaxDue: makeFromInt 3699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15296, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36305, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4150, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97229, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2082, stateTaxDue: makeFromInt 4387 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71641, itemizedDeductions: makeFromInt 22013, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137639, qualifiedIncome: makeFromInt 13612, itemizedDeductions: makeFromInt 28220, federalTaxDue: makeFromInt 22138, stateTaxDue: makeFromInt 7308 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18126, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49415, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7655, federalTaxDue: makeFromInt 3987, stateTaxDue: makeFromInt 2071 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29592, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4194, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49037, ordinaryIncomeNonSS: makeFromInt 35654, qualifiedIncome: makeFromInt 44342, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7247, stateTaxDue: makeFromInt 3525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31673, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23859, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13909, ordinaryIncomeNonSS: makeFromInt 1454, qualifiedIncome: makeFromInt 38795, itemizedDeductions: makeFromInt 7889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1502 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27213, stateTaxDue: makeFromInt 7056 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62644, qualifiedIncome: makeFromInt 76993, itemizedDeductions: makeFromInt 6058, federalTaxDue: makeFromInt 8179, stateTaxDue: makeFromInt 6307 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30986, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25144, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38124, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73070, itemizedDeductions: makeFromInt 8281, federalTaxDue: makeFromInt 9284, stateTaxDue: makeFromInt 3199 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53987, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6779, stateTaxDue: makeFromInt 2080 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18738, qualifiedIncome: makeFromInt 67288, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3826 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 951, qualifiedIncome: makeFromInt 35382, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49646, ordinaryIncomeNonSS: makeFromInt 113504, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18321, federalTaxDue: makeFromInt 24629, stateTaxDue: makeFromInt 5300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34939, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77554, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3600, stateTaxDue: makeFromInt 3507 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44672, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28874, federalTaxDue: makeFromInt 21943, stateTaxDue: makeFromInt 6859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31241, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47517, ordinaryIncomeNonSS: makeFromInt 17097, qualifiedIncome: makeFromInt 82412, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6611, stateTaxDue: makeFromInt 4524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27078, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28160, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39730, qualifiedIncome: makeFromInt 14822, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7967, stateTaxDue: makeFromInt 2333 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57073, itemizedDeductions: makeFromInt 11261, federalTaxDue: makeFromInt 31821, stateTaxDue: makeFromInt 9779 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20293, ordinaryIncomeNonSS: makeFromInt 138791, qualifiedIncome: makeFromInt 87128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37779, stateTaxDue: makeFromInt 10721 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25306, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83620, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6292, stateTaxDue: makeFromInt 3926 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31128, itemizedDeductions: makeFromInt 10422, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 236, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9367, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46377, itemizedDeductions: makeFromInt 20953, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85339, qualifiedIncome: makeFromInt 22700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6946, stateTaxDue: makeFromInt 4857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12940, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9838, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22963, ordinaryIncomeNonSS: makeFromInt 33963, qualifiedIncome: makeFromInt 29556, itemizedDeductions: makeFromInt 9426, federalTaxDue: makeFromInt 3353, stateTaxDue: makeFromInt 2689 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15366, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33791, ordinaryIncomeNonSS: makeFromInt 48871, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16508, stateTaxDue: makeFromInt 6969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9989, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24688, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 606 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11602, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7613, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48040, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1521, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30397, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2391, stateTaxDue: makeFromInt 2832 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38326, ordinaryIncomeNonSS: makeFromInt 59053, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24000, federalTaxDue: makeFromInt 6180, stateTaxDue: makeFromInt 2359 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21255, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11029, ordinaryIncomeNonSS: makeFromInt 111259, qualifiedIncome: makeFromInt 23048, itemizedDeductions: makeFromInt 27450, federalTaxDue: makeFromInt 13115, stateTaxDue: makeFromInt 6197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27253, ordinaryIncomeNonSS: makeFromInt 65391, qualifiedIncome: makeFromInt 81482, itemizedDeductions: makeFromInt 21511, federalTaxDue: makeFromInt 18898, stateTaxDue: makeFromInt 7042 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91272, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27595, stateTaxDue: makeFromInt 4431 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24874, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4407, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5860, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7277, itemizedDeductions: makeFromInt 15230, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47493, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11694, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38200, stateTaxDue: makeFromInt 7630 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13047, ordinaryIncomeNonSS: makeFromInt 77775, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7290, stateTaxDue: makeFromInt 3518 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5429, qualifiedIncome: makeFromInt 82577, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6135, stateTaxDue: makeFromInt 4145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2227, ordinaryIncomeNonSS: makeFromInt 32954, qualifiedIncome: makeFromInt 20755, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 200, stateTaxDue: makeFromInt 2086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29960, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81988, qualifiedIncome: makeFromInt 5961, itemizedDeductions: makeFromInt 18574, federalTaxDue: makeFromInt 10462, stateTaxDue: makeFromInt 3942 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22766, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18872, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32860, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36150, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45382, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77468, itemizedDeductions: makeFromInt 18796, federalTaxDue: makeFromInt 51061, stateTaxDue: makeFromInt 11376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98441, itemizedDeductions: makeFromInt 5686, federalTaxDue: makeFromInt 7206, stateTaxDue: makeFromInt 4470 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56445, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 97, stateTaxDue: makeFromInt 2247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38430, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74861, itemizedDeductions: makeFromInt 7720, federalTaxDue: makeFromInt 3938, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20345, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45325, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4126, ordinaryIncomeNonSS: makeFromInt 54290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5098, stateTaxDue: makeFromInt 2460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6177, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20302, ordinaryIncomeNonSS: makeFromInt 50099, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25023, stateTaxDue: makeFromInt 7431 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36910, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 15435, itemizedDeductions: makeFromInt 15498, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 97 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63074, itemizedDeductions: makeFromInt 25340, federalTaxDue: makeFromInt 3210, stateTaxDue: makeFromInt 2899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85402, qualifiedIncome: makeFromInt 10469, itemizedDeductions: makeFromInt 24282, federalTaxDue: makeFromInt 18005, stateTaxDue: makeFromInt 4441 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17039, ordinaryIncomeNonSS: makeFromInt 8328, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23763, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24713, itemizedDeductions: makeFromInt 26316, federalTaxDue: makeFromInt 35897, stateTaxDue: makeFromInt 8686 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33331, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66847, itemizedDeductions: makeFromInt 18450, federalTaxDue: makeFromInt 10540, stateTaxDue: makeFromInt 3185 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99228, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10106, federalTaxDue: makeFromInt 17018, stateTaxDue: makeFromInt 4286 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39929, ordinaryIncomeNonSS: makeFromInt 113887, qualifiedIncome: makeFromInt 62606, itemizedDeductions: makeFromInt 2534, federalTaxDue: makeFromInt 32635, stateTaxDue: makeFromInt 8250 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107554, qualifiedIncome: makeFromInt 16362, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31034, stateTaxDue: makeFromInt 5973 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27677, federalTaxDue: makeFromInt 18628, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28352, qualifiedIncome: makeFromInt 25444, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1588, stateTaxDue: makeFromInt 2397 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21496, ordinaryIncomeNonSS: makeFromInt 119792, qualifiedIncome: makeFromInt 1534, itemizedDeductions: makeFromInt 29407, federalTaxDue: makeFromInt 15852, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120618, qualifiedIncome: makeFromInt 49417, itemizedDeductions: makeFromInt 4094, federalTaxDue: makeFromInt 24711, stateTaxDue: makeFromInt 8041 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32563, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56453, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64990, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4504, stateTaxDue: makeFromInt 2875 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24555, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124197, qualifiedIncome: makeFromInt 34377, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27058, stateTaxDue: makeFromInt 7254 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5473, qualifiedIncome: makeFromInt 47708, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1984 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88625, itemizedDeductions: makeFromInt 9172, federalTaxDue: makeFromInt 4591, stateTaxDue: makeFromInt 3756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16836, ordinaryIncomeNonSS: makeFromInt 66778, qualifiedIncome: makeFromInt 63693, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16736, stateTaxDue: makeFromInt 6103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84306, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9000, federalTaxDue: makeFromInt 22662, stateTaxDue: makeFromInt 3953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19161, ordinaryIncomeNonSS: makeFromInt 41765, qualifiedIncome: makeFromInt 4024, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3137, stateTaxDue: makeFromInt 2111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 320, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25442, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99637, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3651, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28865, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30466, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47980, qualifiedIncome: makeFromInt 27773, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3187, stateTaxDue: makeFromInt 3413 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14709, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50483, itemizedDeductions: makeFromInt 12010, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1067, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7880, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29872, ordinaryIncomeNonSS: makeFromInt 49255, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25095, federalTaxDue: makeFromInt 22114, stateTaxDue: makeFromInt 7388 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 898, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 89, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5483, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32982, stateTaxDue: makeFromInt 7705 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44800, ordinaryIncomeNonSS: makeFromInt 53420, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23615, stateTaxDue: makeFromInt 7478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7899, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34705, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38461, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2153, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39712, ordinaryIncomeNonSS: makeFromInt 137989, qualifiedIncome: makeFromInt 93626, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45570, stateTaxDue: makeFromInt 11126 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82634, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6229, stateTaxDue: makeFromInt 3657 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48862, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18742, federalTaxDue: makeFromInt 51610, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2913, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77599, itemizedDeductions: makeFromInt 12278, federalTaxDue: makeFromInt 30413, stateTaxDue: makeFromInt 10905 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5096, ordinaryIncomeNonSS: makeFromInt 93429, qualifiedIncome: makeFromInt 31705, itemizedDeductions: makeFromInt 28594, federalTaxDue: makeFromInt 15589, stateTaxDue: makeFromInt 6002 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22497, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82801, itemizedDeductions: makeFromInt 23279, federalTaxDue: makeFromInt 41258, stateTaxDue: makeFromInt 11185 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22743, itemizedDeductions: makeFromInt 8802, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 562 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 484 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52332, qualifiedIncome: makeFromInt 30496, itemizedDeductions: makeFromInt 20842, federalTaxDue: makeFromInt 3019, stateTaxDue: makeFromInt 3571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22267, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89697, itemizedDeductions: makeFromInt 8751, federalTaxDue: makeFromInt 7289, stateTaxDue: makeFromInt 4228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2679, itemizedDeductions: makeFromInt 455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7610, ordinaryIncomeNonSS: makeFromInt 114893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13748, federalTaxDue: makeFromInt 17433, stateTaxDue: makeFromInt 5411 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136163, qualifiedIncome: makeFromInt 75616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34329, stateTaxDue: makeFromInt 10134 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9829, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30041, itemizedDeductions: makeFromInt 16541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34444, ordinaryIncomeNonSS: makeFromInt 126183, qualifiedIncome: makeFromInt 22337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23230, stateTaxDue: makeFromInt 6751 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 746, stateTaxDue: makeFromInt 1298 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 771, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22938, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110600, qualifiedIncome: makeFromInt 78751, itemizedDeductions: makeFromInt 3972, federalTaxDue: makeFromInt 22703, stateTaxDue: makeFromInt 9004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56931, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 419, stateTaxDue: makeFromInt 2455 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56155, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1964, federalTaxDue: makeFromInt 3967, stateTaxDue: makeFromInt 2436 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136715, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2824, federalTaxDue: makeFromInt 38119, stateTaxDue: makeFromInt 11581 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22711, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17815, ordinaryIncomeNonSS: makeFromInt 90695, qualifiedIncome: makeFromInt 86406, itemizedDeductions: makeFromInt 24150, federalTaxDue: makeFromInt 23913, stateTaxDue: makeFromInt 8583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42699, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24217, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 684 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18121, ordinaryIncomeNonSS: makeFromInt 86708, qualifiedIncome: makeFromInt 13906, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10187, stateTaxDue: makeFromInt 4683 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36182, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36029, itemizedDeductions: makeFromInt 19885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53201, itemizedDeductions: makeFromInt 16240, federalTaxDue: makeFromInt 420, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27516, stateTaxDue: makeFromInt 5088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48359, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29638, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47599, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55519, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 197, stateTaxDue: makeFromInt 2383 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21874, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43089, ordinaryIncomeNonSS: makeFromInt 102671, qualifiedIncome: makeFromInt 88420, itemizedDeductions: makeFromInt 11007, federalTaxDue: makeFromInt 34570, stateTaxDue: makeFromInt 9195 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5344, itemizedDeductions: makeFromInt 17652, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70717, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32162, stateTaxDue: makeFromInt 10803 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38354, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39082, ordinaryIncomeNonSS: makeFromInt 40278, qualifiedIncome: makeFromInt 20320, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11916, stateTaxDue: makeFromInt 2575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5640, ordinaryIncomeNonSS: makeFromInt 68611, qualifiedIncome: makeFromInt 41528, itemizedDeductions: makeFromInt 1436, federalTaxDue: makeFromInt 15540, stateTaxDue: makeFromInt 5270 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7784, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31035, ordinaryIncomeNonSS: makeFromInt 8816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23700, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 66 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16740, ordinaryIncomeNonSS: makeFromInt 82689, qualifiedIncome: makeFromInt 30970, itemizedDeductions: makeFromInt 14410, federalTaxDue: makeFromInt 18587, stateTaxDue: makeFromInt 5228 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29322, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99006, itemizedDeductions: makeFromInt 26312, federalTaxDue: makeFromInt 10823, stateTaxDue: makeFromInt 4575 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13323, qualifiedIncome: makeFromInt 64147, itemizedDeductions: makeFromInt 12640, federalTaxDue: makeFromInt 2002, stateTaxDue: makeFromInt 3400 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7133, ordinaryIncomeNonSS: makeFromInt 131508, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24661, federalTaxDue: makeFromInt 20934, stateTaxDue: makeFromInt 6320 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137350, qualifiedIncome: makeFromInt 7273, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24363, stateTaxDue: makeFromInt 6976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27927, ordinaryIncomeNonSS: makeFromInt 43606, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2555, federalTaxDue: makeFromInt 25020, stateTaxDue: makeFromInt 7100 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95812, itemizedDeductions: makeFromInt 26113, federalTaxDue: makeFromInt 6002, stateTaxDue: makeFromInt 4416 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85861, itemizedDeductions: makeFromInt 14478, federalTaxDue: makeFromInt 38192, stateTaxDue: makeFromInt 11601 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34994, ordinaryIncomeNonSS: makeFromInt 17615, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6198, federalTaxDue: makeFromInt 8128, stateTaxDue: makeFromInt 5206 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31206, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78509, itemizedDeductions: makeFromInt 13109, federalTaxDue: makeFromInt 8512, stateTaxDue: makeFromInt 3670 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7996, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6647, ordinaryIncomeNonSS: makeFromInt 103138, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28397, stateTaxDue: makeFromInt 9582 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17899, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4216, federalTaxDue: makeFromInt 881, stateTaxDue: makeFromInt 520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22169, ordinaryIncomeNonSS: makeFromInt 24658, qualifiedIncome: makeFromInt 22013, itemizedDeductions: makeFromInt 9314, federalTaxDue: makeFromInt 4121, stateTaxDue: makeFromInt 2033 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13801, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38525, itemizedDeductions: makeFromInt 9402, federalTaxDue: makeFromInt 32360, stateTaxDue: makeFromInt 8851 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138981, qualifiedIncome: makeFromInt 77955, itemizedDeductions: makeFromInt 16838, federalTaxDue: makeFromInt 35297, stateTaxDue: makeFromInt 10635 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17336, ordinaryIncomeNonSS: makeFromInt 92558, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2195, federalTaxDue: makeFromInt 25111, stateTaxDue: makeFromInt 9168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19649, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3629, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5674 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45393, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4876, stateTaxDue: makeFromInt 3910 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9486, ordinaryIncomeNonSS: makeFromInt 137252, qualifiedIncome: makeFromInt 88992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38932, stateTaxDue: makeFromInt 11057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29221, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45249, ordinaryIncomeNonSS: makeFromInt 140536, qualifiedIncome: makeFromInt 56120, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40656, stateTaxDue: makeFromInt 9479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11094, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9902, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11668, ordinaryIncomeNonSS: makeFromInt 57549, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7226, stateTaxDue: makeFromInt 2623 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75150, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33543, stateTaxDue: makeFromInt 8503 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 335, ordinaryIncomeNonSS: makeFromInt 111541, qualifiedIncome: makeFromInt 48057, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17038, stateTaxDue: makeFromInt 7305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91857, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8131, stateTaxDue: makeFromInt 4460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46318, ordinaryIncomeNonSS: makeFromInt 20543, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23162, stateTaxDue: makeFromInt 5923 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48443, qualifiedIncome: makeFromInt 94067, itemizedDeductions: makeFromInt 14850, federalTaxDue: makeFromInt 13387, stateTaxDue: makeFromInt 6751 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40387, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43141, itemizedDeductions: makeFromInt 8253, federalTaxDue: makeFromInt 3993, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38512, ordinaryIncomeNonSS: makeFromInt 107011, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25130, federalTaxDue: makeFromInt 21344, stateTaxDue: makeFromInt 4896 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11396, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70825, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3163 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71672, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1459, federalTaxDue: makeFromInt 4914, stateTaxDue: makeFromInt 2909 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77549, qualifiedIncome: makeFromInt 55361, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32057, stateTaxDue: makeFromInt 6554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2137, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51743, itemizedDeductions: makeFromInt 3122, federalTaxDue: makeFromInt 2114, stateTaxDue: makeFromInt 2414 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97238, itemizedDeductions: makeFromInt 21431, federalTaxDue: makeFromInt 8938, stateTaxDue: makeFromInt 4531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33715, ordinaryIncomeNonSS: makeFromInt 91465, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14276, federalTaxDue: makeFromInt 19747, stateTaxDue: makeFromInt 4318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83959, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 179, federalTaxDue: makeFromInt 7935, stateTaxDue: makeFromInt 3623 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54081, qualifiedIncome: makeFromInt 82172, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24162, stateTaxDue: makeFromInt 6602 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27542, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86149, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10757, federalTaxDue: makeFromInt 8417, stateTaxDue: makeFromInt 3732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3410, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7826, ordinaryIncomeNonSS: makeFromInt 92253, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8224, federalTaxDue: makeFromInt 8182, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48033, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5772, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108254, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18287, federalTaxDue: makeFromInt 13280, stateTaxDue: makeFromInt 5038 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65414, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6774, stateTaxDue: makeFromInt 2816 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96971, qualifiedIncome: makeFromInt 86495, itemizedDeductions: makeFromInt 21399, federalTaxDue: makeFromInt 19497, stateTaxDue: makeFromInt 8498 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54725, qualifiedIncome: makeFromInt 84253, itemizedDeductions: makeFromInt 15762, federalTaxDue: makeFromInt 16899, stateTaxDue: makeFromInt 6694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22011, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 776 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127026, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22095, federalTaxDue: makeFromInt 32752, stateTaxDue: makeFromInt 10976 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27294, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49668, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12080, federalTaxDue: makeFromInt 9969, stateTaxDue: makeFromInt 6980 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89823, qualifiedIncome: makeFromInt 54116, itemizedDeductions: makeFromInt 7659, federalTaxDue: makeFromInt 21533, stateTaxDue: makeFromInt 6994 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47055, qualifiedIncome: makeFromInt 74769, itemizedDeductions: makeFromInt 11673, federalTaxDue: makeFromInt 12392, stateTaxDue: makeFromInt 5866 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38839, ordinaryIncomeNonSS: makeFromInt 88810, qualifiedIncome: makeFromInt 86400, itemizedDeductions: makeFromInt 23115, federalTaxDue: makeFromInt 24052, stateTaxDue: makeFromInt 8283 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48751, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82446, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7095, federalTaxDue: makeFromInt 22602, stateTaxDue: makeFromInt 8547 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1906, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47259, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28692, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16113, federalTaxDue: makeFromInt 8284, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48172, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86892, itemizedDeductions: makeFromInt 19463, federalTaxDue: makeFromInt 10645, stateTaxDue: makeFromInt 4045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19340, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17462, federalTaxDue: makeFromInt 27774, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86086, qualifiedIncome: makeFromInt 54174, itemizedDeductions: makeFromInt 11286, federalTaxDue: makeFromInt 26686, stateTaxDue: makeFromInt 6602 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5630, ordinaryIncomeNonSS: makeFromInt 50239, qualifiedIncome: makeFromInt 51631, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11944, stateTaxDue: makeFromInt 4849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31889, ordinaryIncomeNonSS: makeFromInt 56110, qualifiedIncome: makeFromInt 51568, itemizedDeductions: makeFromInt 13259, federalTaxDue: makeFromInt 18509, stateTaxDue: makeFromInt 5145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5279, itemizedDeductions: makeFromInt 6011, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37186, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8729, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 17 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3833, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3071, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98400, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2258, stateTaxDue: makeFromInt 4245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20419, federalTaxDue: makeFromInt 29500, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87282, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16517, stateTaxDue: makeFromInt 3989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60860, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9085, federalTaxDue: makeFromInt 4034, stateTaxDue: makeFromInt 2553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118404, qualifiedIncome: makeFromInt 74827, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29949, stateTaxDue: makeFromInt 9407 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36730, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25707, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146237, qualifiedIncome: makeFromInt 38195, itemizedDeductions: makeFromInt 13035, federalTaxDue: makeFromInt 28086, stateTaxDue: makeFromInt 8647 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34131, itemizedDeductions: makeFromInt 15466, federalTaxDue: makeFromInt 536, stateTaxDue: makeFromInt 1132 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72207, itemizedDeductions: makeFromInt 1028, federalTaxDue: makeFromInt 12315, stateTaxDue: makeFromInt 3155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21974, ordinaryIncomeNonSS: makeFromInt 88742, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19688, federalTaxDue: makeFromInt 9195, stateTaxDue: makeFromInt 3873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5064, itemizedDeductions: makeFromInt 11285, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5643, itemizedDeductions: makeFromInt 12736, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46366, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53445, qualifiedIncome: makeFromInt 8089, itemizedDeductions: makeFromInt 4595, federalTaxDue: makeFromInt 5653, stateTaxDue: makeFromInt 2622 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46310, ordinaryIncomeNonSS: makeFromInt 23479, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19080, stateTaxDue: makeFromInt 5747 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115940, qualifiedIncome: makeFromInt 43978, itemizedDeductions: makeFromInt 15017, federalTaxDue: makeFromInt 17332, stateTaxDue: makeFromInt 7321 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38846, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11317, federalTaxDue: makeFromInt 3719, stateTaxDue: makeFromInt 1267 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17759, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24153, federalTaxDue: makeFromInt 26580, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36745, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128557, qualifiedIncome: makeFromInt 11442, itemizedDeductions: makeFromInt 21759, federalTaxDue: makeFromInt 19684, stateTaxDue: makeFromInt 6625 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29858, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8845, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31967, ordinaryIncomeNonSS: makeFromInt 65175, qualifiedIncome: makeFromInt 3913, itemizedDeductions: makeFromInt 4981, federalTaxDue: makeFromInt 14576, stateTaxDue: makeFromInt 3177 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30587, ordinaryIncomeNonSS: makeFromInt 76237, qualifiedIncome: makeFromInt 50754, itemizedDeductions: makeFromInt 5470, federalTaxDue: makeFromInt 14932, stateTaxDue: makeFromInt 5875 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12744, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87288, itemizedDeductions: makeFromInt 20492, federalTaxDue: makeFromInt 7446, stateTaxDue: makeFromInt 4227 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47888, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2347, federalTaxDue: makeFromInt 27793, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15466, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35335, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30852, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22856, stateTaxDue: makeFromInt 8368 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 496, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25529, federalTaxDue: makeFromInt 37310, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20584, ordinaryIncomeNonSS: makeFromInt 78606, qualifiedIncome: makeFromInt 68039, itemizedDeductions: makeFromInt 21829, federalTaxDue: makeFromInt 20663, stateTaxDue: makeFromInt 6757 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49255, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32172, ordinaryIncomeNonSS: makeFromInt 97550, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16611, stateTaxDue: makeFromInt 4623 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3951, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18227, stateTaxDue: makeFromInt 7223 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16412, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27698, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64271, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2829 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23209, ordinaryIncomeNonSS: makeFromInt 144907, qualifiedIncome: makeFromInt 91189, itemizedDeductions: makeFromInt 13299, federalTaxDue: makeFromInt 40840, stateTaxDue: makeFromInt 11230 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18938, ordinaryIncomeNonSS: makeFromInt 81294, qualifiedIncome: makeFromInt 18964, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9698, stateTaxDue: makeFromInt 4338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50179, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29328, federalTaxDue: makeFromInt 1680, stateTaxDue: makeFromInt 2110 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39804, ordinaryIncomeNonSS: makeFromInt 36177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15895, federalTaxDue: makeFromInt 4302, stateTaxDue: makeFromInt 1234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 117140, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26806, federalTaxDue: makeFromInt 22444, stateTaxDue: makeFromInt 5423 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143669, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24153, federalTaxDue: makeFromInt 21020, stateTaxDue: makeFromInt 6808 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39635, ordinaryIncomeNonSS: makeFromInt 132663, qualifiedIncome: makeFromInt 2017, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29000, stateTaxDue: makeFromInt 6318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123826, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28690, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5358, ordinaryIncomeNonSS: makeFromInt 137542, qualifiedIncome: makeFromInt 42829, itemizedDeductions: makeFromInt 11818, federalTaxDue: makeFromInt 25188, stateTaxDue: makeFromInt 8546 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27740, ordinaryIncomeNonSS: makeFromInt 46350, qualifiedIncome: makeFromInt 77687, itemizedDeductions: makeFromInt 15194, federalTaxDue: makeFromInt 18622, stateTaxDue: makeFromInt 5979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36592, ordinaryIncomeNonSS: makeFromInt 94656, qualifiedIncome: makeFromInt 48088, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20108, stateTaxDue: makeFromInt 6462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67555, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13667, stateTaxDue: makeFromInt 3221 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38518, ordinaryIncomeNonSS: makeFromInt 100646, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35591, stateTaxDue: makeFromInt 9682 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54797, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10300, stateTaxDue: makeFromInt 2545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55559, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 219, stateTaxDue: makeFromInt 2203 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70437, qualifiedIncome: makeFromInt 51880, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15661, stateTaxDue: makeFromInt 5861 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29285, qualifiedIncome: makeFromInt 75850, itemizedDeductions: makeFromInt 8004, federalTaxDue: makeFromInt 9890, stateTaxDue: makeFromInt 4885 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 596, ordinaryIncomeNonSS: makeFromInt 21363, qualifiedIncome: makeFromInt 31352, itemizedDeductions: makeFromInt 13809, federalTaxDue: makeFromInt 782, stateTaxDue: makeFromInt 2181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45699, ordinaryIncomeNonSS: makeFromInt 19597, qualifiedIncome: makeFromInt 48013, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12442, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49455, ordinaryIncomeNonSS: makeFromInt 85761, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13954, stateTaxDue: makeFromInt 3613 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37574, ordinaryIncomeNonSS: makeFromInt 107824, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18897, federalTaxDue: makeFromInt 23182, stateTaxDue: makeFromInt 5021 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29674, federalTaxDue: makeFromInt 6678, stateTaxDue: makeFromInt 3711 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48748, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1406, stateTaxDue: makeFromInt 2038 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46630, ordinaryIncomeNonSS: makeFromInt 111862, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10880, federalTaxDue: makeFromInt 23619, stateTaxDue: makeFromInt 5218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14777, ordinaryIncomeNonSS: makeFromInt 27795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19631, federalTaxDue: makeFromInt 11780, stateTaxDue: makeFromInt 6171 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49167, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46562, ordinaryIncomeNonSS: makeFromInt 58334, qualifiedIncome: makeFromInt 9647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9442, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35240, ordinaryIncomeNonSS: makeFromInt 63624, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20871, stateTaxDue: makeFromInt 7692 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17316, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29198, stateTaxDue: makeFromInt 7911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35796, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66109, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9828, stateTaxDue: makeFromInt 3147 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39345, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37900, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3089, stateTaxDue: makeFromInt 1505 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9289, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21140, qualifiedIncome: makeFromInt 27831, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2049 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28781, ordinaryIncomeNonSS: makeFromInt 87199, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26102, federalTaxDue: makeFromInt 26920, stateTaxDue: makeFromInt 9098 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36343, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76363, itemizedDeductions: makeFromInt 24958, federalTaxDue: makeFromInt 6687, stateTaxDue: makeFromInt 3563 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74063, qualifiedIncome: makeFromInt 71338, itemizedDeductions: makeFromInt 22675, federalTaxDue: makeFromInt 12680, stateTaxDue: makeFromInt 6967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15208, ordinaryIncomeNonSS: makeFromInt 23176, qualifiedIncome: makeFromInt 17920, itemizedDeductions: makeFromInt 24013, federalTaxDue: makeFromInt 1245, stateTaxDue: makeFromInt 1600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30383, ordinaryIncomeNonSS: makeFromInt 95617, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13391, stateTaxDue: makeFromInt 4428 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30615, ordinaryIncomeNonSS: makeFromInt 53188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5494, stateTaxDue: makeFromInt 2184 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6299, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8630, ordinaryIncomeNonSS: makeFromInt 88621, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8949, stateTaxDue: makeFromInt 3930 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28246, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18314, federalTaxDue: makeFromInt 1001, stateTaxDue: makeFromInt 1216 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5399, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49761, itemizedDeductions: makeFromInt 14771, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58140, itemizedDeductions: makeFromInt 28257, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2516 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1149, itemizedDeductions: makeFromInt 3998, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71950, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2923 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123725, qualifiedIncome: makeFromInt 24327, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23651, stateTaxDue: makeFromInt 7148 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19307, ordinaryIncomeNonSS: makeFromInt 94456, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29257, stateTaxDue: makeFromInt 9148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10895, federalTaxDue: makeFromInt 922, stateTaxDue: makeFromInt 871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5997, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18639, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114865, qualifiedIncome: makeFromInt 54875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20101, stateTaxDue: makeFromInt 8208 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33418, ordinaryIncomeNonSS: makeFromInt 6263, qualifiedIncome: makeFromInt 29074, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1149 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143464, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31196, stateTaxDue: makeFromInt 11698 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33434, qualifiedIncome: makeFromInt 61482, itemizedDeductions: makeFromInt 24618, federalTaxDue: makeFromInt 3575, stateTaxDue: makeFromInt 4412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35677, ordinaryIncomeNonSS: makeFromInt 149415, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23047, federalTaxDue: makeFromInt 29726, stateTaxDue: makeFromInt 7171 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24417, ordinaryIncomeNonSS: makeFromInt 16609, qualifiedIncome: makeFromInt 8450, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 798 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66351, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8251, federalTaxDue: makeFromInt 5234, stateTaxDue: makeFromInt 2956 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43232, ordinaryIncomeNonSS: makeFromInt 41035, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11752, federalTaxDue: makeFromInt 15717, stateTaxDue: makeFromInt 6577 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22636, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1421, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28651, itemizedDeductions: makeFromInt 2412, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 978 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4323, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31626, itemizedDeductions: makeFromInt 12697, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23098, ordinaryIncomeNonSS: makeFromInt 28926, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1651, stateTaxDue: makeFromInt 1026 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36492, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15612, itemizedDeductions: makeFromInt 28193, federalTaxDue: makeFromInt 31356, stateTaxDue: makeFromInt 7906 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17939, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44228, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6372, federalTaxDue: makeFromInt 34850, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66009, qualifiedIncome: makeFromInt 39279, itemizedDeductions: makeFromInt 12914, federalTaxDue: makeFromInt 13028, stateTaxDue: makeFromInt 4809 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 846, ordinaryIncomeNonSS: makeFromInt 149274, qualifiedIncome: makeFromInt 85037, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37332, stateTaxDue: makeFromInt 11603 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37086, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7043, itemizedDeductions: makeFromInt 25813, federalTaxDue: makeFromInt 27030, stateTaxDue: makeFromInt 7284 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136395, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24959, federalTaxDue: makeFromInt 20580, stateTaxDue: makeFromInt 6365 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16569, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14650, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32974, ordinaryIncomeNonSS: makeFromInt 104465, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23335, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 4848 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67820, itemizedDeductions: makeFromInt 12858, federalTaxDue: makeFromInt 4267, stateTaxDue: makeFromInt 3203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19663, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6965, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1735, ordinaryIncomeNonSS: makeFromInt 122547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10574, federalTaxDue: makeFromInt 17531, stateTaxDue: makeFromInt 5752 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70826, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 493, federalTaxDue: makeFromInt 29458, stateTaxDue: makeFromInt 8166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30032, ordinaryIncomeNonSS: makeFromInt 102976, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9797, federalTaxDue: makeFromInt 13499, stateTaxDue: makeFromInt 4674 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73333, itemizedDeductions: makeFromInt 8823, federalTaxDue: makeFromInt 37307, stateTaxDue: makeFromInt 10712 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56648, itemizedDeductions: makeFromInt 894, federalTaxDue: makeFromInt 26725, stateTaxDue: makeFromInt 9857 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12102, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7552, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6602, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97570, itemizedDeductions: makeFromInt 10438, federalTaxDue: makeFromInt 8384, stateTaxDue: makeFromInt 4624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6181, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42904, ordinaryIncomeNonSS: makeFromInt 10571, qualifiedIncome: makeFromInt 52532, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9684, stateTaxDue: makeFromInt 2871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63760, qualifiedIncome: makeFromInt 43908, itemizedDeductions: makeFromInt 21652, federalTaxDue: makeFromInt 9292, stateTaxDue: makeFromInt 4808 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94417, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8289, stateTaxDue: makeFromInt 4146 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1265, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25690, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17566, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41029, ordinaryIncomeNonSS: makeFromInt 121006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19522, stateTaxDue: makeFromInt 5375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10531, ordinaryIncomeNonSS: makeFromInt 54437, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15227, federalTaxDue: makeFromInt 5689, stateTaxDue: makeFromInt 2327 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11526, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31809, itemizedDeductions: makeFromInt 13205, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1115 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 236, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48587, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27928, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54733, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2562, stateTaxDue: makeFromInt 2363 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11678, ordinaryIncomeNonSS: makeFromInt 80023, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25995, federalTaxDue: makeFromInt 9860, stateTaxDue: makeFromInt 3746 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71583, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1468, federalTaxDue: makeFromInt 4903, stateTaxDue: makeFromInt 3104 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 819, qualifiedIncome: makeFromInt 97016, itemizedDeductions: makeFromInt 1069, federalTaxDue: makeFromInt 2740, stateTaxDue: makeFromInt 4496 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18770, ordinaryIncomeNonSS: makeFromInt 106653, qualifiedIncome: makeFromInt 75238, itemizedDeductions: makeFromInt 11056, federalTaxDue: makeFromInt 23937, stateTaxDue: makeFromInt 8620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51257, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1961 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1305, ordinaryIncomeNonSS: makeFromInt 90520, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7469, stateTaxDue: makeFromInt 4051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47469, itemizedDeductions: makeFromInt 19314, federalTaxDue: makeFromInt 5492, stateTaxDue: makeFromInt 1918 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48302, ordinaryIncomeNonSS: makeFromInt 92096, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2790, federalTaxDue: makeFromInt 20668, stateTaxDue: makeFromInt 4248 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7403, ordinaryIncomeNonSS: makeFromInt 98801, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5624, federalTaxDue: makeFromInt 19496, stateTaxDue: makeFromInt 4814 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74801, qualifiedIncome: makeFromInt 39405, itemizedDeductions: makeFromInt 13174, federalTaxDue: makeFromInt 21323, stateTaxDue: makeFromInt 5135 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14956, ordinaryIncomeNonSS: makeFromInt 37041, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1957, stateTaxDue: makeFromInt 1236 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33196, itemizedDeductions: makeFromInt 4850, federalTaxDue: makeFromInt 2163, stateTaxDue: makeFromInt 1252 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23450, itemizedDeductions: makeFromInt 15920, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 747 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15283, ordinaryIncomeNonSS: makeFromInt 145250, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24978, federalTaxDue: makeFromInt 21197, stateTaxDue: makeFromInt 6959 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22732, ordinaryIncomeNonSS: makeFromInt 106564, qualifiedIncome: makeFromInt 3989, itemizedDeductions: makeFromInt 29482, federalTaxDue: makeFromInt 17571, stateTaxDue: makeFromInt 5073 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129581, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22346, stateTaxDue: makeFromInt 6120 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7728, ordinaryIncomeNonSS: makeFromInt 80489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11852, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21156, qualifiedIncome: makeFromInt 32430, itemizedDeductions: makeFromInt 17629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2304 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3557, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73887, itemizedDeductions: makeFromInt 4582, federalTaxDue: makeFromInt 34849, stateTaxDue: makeFromInt 10619 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41964, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82877, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2269, stateTaxDue: makeFromInt 3574 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31517, qualifiedIncome: makeFromInt 26809, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2105, stateTaxDue: makeFromInt 2461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92559, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20690, stateTaxDue: makeFromInt 9168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12842, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2856, stateTaxDue: makeFromInt 4158 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72900, itemizedDeductions: makeFromInt 24634, federalTaxDue: makeFromInt 4684, stateTaxDue: makeFromInt 3190 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29382, federalTaxDue: makeFromInt 18365, stateTaxDue: makeFromInt 6277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116682, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25902, federalTaxDue: makeFromInt 10898, stateTaxDue: makeFromInt 5159 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39230, itemizedDeductions: makeFromInt 16432, federalTaxDue: makeFromInt 25757, stateTaxDue: makeFromInt 8998 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37774, ordinaryIncomeNonSS: makeFromInt 9694, qualifiedIncome: makeFromInt 64777, itemizedDeductions: makeFromInt 19921, federalTaxDue: makeFromInt 9168, stateTaxDue: makeFromInt 3469 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12136, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26516, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37655, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18061, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5328 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43117, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53904, itemizedDeductions: makeFromInt 27926, federalTaxDue: makeFromInt 2438, stateTaxDue: makeFromInt 2525 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27452, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2087, federalTaxDue: makeFromInt 23812, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22565, ordinaryIncomeNonSS: makeFromInt 35132, qualifiedIncome: makeFromInt 95856, itemizedDeductions: makeFromInt 26766, federalTaxDue: makeFromInt 13153, stateTaxDue: makeFromInt 5974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48831, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2042 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20617, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21386, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 594 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92879, qualifiedIncome: makeFromInt 51092, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21397, stateTaxDue: makeFromInt 7118 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10096, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 250 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33534, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75752, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8633, stateTaxDue: makeFromInt 3533 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22944, ordinaryIncomeNonSS: makeFromInt 64325, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6743, stateTaxDue: makeFromInt 2602 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30545, ordinaryIncomeNonSS: makeFromInt 31708, qualifiedIncome: makeFromInt 16188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2793, stateTaxDue: makeFromInt 1920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9285, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44240, ordinaryIncomeNonSS: makeFromInt 71222, qualifiedIncome: makeFromInt 54405, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17259, stateTaxDue: makeFromInt 5806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39603, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40534, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1516 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34174, qualifiedIncome: makeFromInt 9937, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 122, stateTaxDue: makeFromInt 1597 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28339, federalTaxDue: makeFromInt 19650, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5602, ordinaryIncomeNonSS: makeFromInt 2421, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14780, federalTaxDue: makeFromInt 26743, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69899, qualifiedIncome: makeFromInt 54875, itemizedDeductions: makeFromInt 23763, federalTaxDue: makeFromInt 20920, stateTaxDue: makeFromInt 5915 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33349, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31310, stateTaxDue: makeFromInt 8712 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2572, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2658, ordinaryIncomeNonSS: makeFromInt 58874, qualifiedIncome: makeFromInt 9360, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1088, stateTaxDue: makeFromInt 2929 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39645, qualifiedIncome: makeFromInt 35170, itemizedDeductions: makeFromInt 14468, federalTaxDue: makeFromInt 1235, stateTaxDue: makeFromInt 3266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144772, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20200, federalTaxDue: makeFromInt 34147, stateTaxDue: makeFromInt 6955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93410, qualifiedIncome: makeFromInt 98925, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15564, stateTaxDue: makeFromInt 9156 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7998, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26192, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33673, itemizedDeductions: makeFromInt 13018, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1167 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87115, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1067, stateTaxDue: makeFromInt 3681 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2721, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15571, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45013, qualifiedIncome: makeFromInt 54766, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4501, stateTaxDue: makeFromInt 4640 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86900, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13361, federalTaxDue: makeFromInt 9496, stateTaxDue: makeFromInt 3983 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31898, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7637, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48925, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1986, federalTaxDue: makeFromInt 2610, stateTaxDue: makeFromInt 2046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36195, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7214, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49346, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49814, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 792, stateTaxDue: makeFromInt 2092 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32335, itemizedDeductions: makeFromInt 2531, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1411 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23323, itemizedDeductions: makeFromInt 10443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 691 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19931, federalTaxDue: makeFromInt 35120, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74152, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3083, stateTaxDue: makeFromInt 3133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18638, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94580, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38978, stateTaxDue: makeFromInt 11821 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119974, qualifiedIncome: makeFromInt 52140, itemizedDeductions: makeFromInt 24533, federalTaxDue: makeFromInt 23296, stateTaxDue: makeFromInt 8231 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12821, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5375, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4459, ordinaryIncomeNonSS: makeFromInt 78587, qualifiedIncome: makeFromInt 18969, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10341, stateTaxDue: makeFromInt 4527 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104084, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27362, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124113, qualifiedIncome: makeFromInt 43175, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21400, stateTaxDue: makeFromInt 7789 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25208, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73994, itemizedDeductions: makeFromInt 1409, federalTaxDue: makeFromInt 3341, stateTaxDue: makeFromInt 3125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27757, ordinaryIncomeNonSS: makeFromInt 123643, qualifiedIncome: makeFromInt 2659, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18629, stateTaxDue: makeFromInt 5640 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2035, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10660, itemizedDeductions: makeFromInt 27516, federalTaxDue: makeFromInt 25246, stateTaxDue: makeFromInt 7778 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18416, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38180, itemizedDeductions: makeFromInt 18731, federalTaxDue: makeFromInt 31693, stateTaxDue: makeFromInt 9046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51906, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8495, stateTaxDue: makeFromInt 7094 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12803, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34550, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16737, qualifiedIncome: makeFromInt 83139, itemizedDeductions: makeFromInt 3347, federalTaxDue: makeFromInt 4911, stateTaxDue: makeFromInt 4543 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60669, qualifiedIncome: makeFromInt 91296, itemizedDeductions: makeFromInt 6436, federalTaxDue: makeFromInt 20341, stateTaxDue: makeFromInt 7322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25695, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12665, ordinaryIncomeNonSS: makeFromInt 118833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23455, federalTaxDue: makeFromInt 17212, stateTaxDue: makeFromInt 5632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44235, qualifiedIncome: makeFromInt 99312, itemizedDeductions: makeFromInt 16233, federalTaxDue: makeFromInt 13860, stateTaxDue: makeFromInt 6974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104574, qualifiedIncome: makeFromInt 68233, itemizedDeductions: makeFromInt 14411, federalTaxDue: makeFromInt 26061, stateTaxDue: makeFromInt 8466 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62767, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6517, stateTaxDue: makeFromInt 2763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17711, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10371, federalTaxDue: makeFromInt 10986, stateTaxDue: makeFromInt 5350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4737, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 162, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67365, qualifiedIncome: makeFromInt 15188, itemizedDeductions: makeFromInt 15202, federalTaxDue: makeFromInt 19229, stateTaxDue: makeFromInt 3863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93712, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8634, stateTaxDue: makeFromInt 4351 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80304, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28387, federalTaxDue: makeFromInt 5819, stateTaxDue: makeFromInt 3340 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92068, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15443, stateTaxDue: makeFromInt 4128 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133222, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20552, stateTaxDue: makeFromInt 6244 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2524, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3326, itemizedDeductions: makeFromInt 4830, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7254, ordinaryIncomeNonSS: makeFromInt 13688, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47051, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61799, qualifiedIncome: makeFromInt 42223, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3435, stateTaxDue: makeFromInt 4856 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4291, qualifiedIncome: makeFromInt 92581, itemizedDeductions: makeFromInt 11802, federalTaxDue: makeFromInt 1385, stateTaxDue: makeFromInt 4369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23929, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38183, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2049, stateTaxDue: makeFromInt 1723 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13193, ordinaryIncomeNonSS: makeFromInt 148189, qualifiedIncome: makeFromInt 45689, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31746, stateTaxDue: makeFromInt 9439 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35634, ordinaryIncomeNonSS: makeFromInt 96264, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13070, stateTaxDue: makeFromInt 4338 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6413, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7995, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 25 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 825, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22804, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4951, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82501, itemizedDeductions: makeFromInt 21995, federalTaxDue: makeFromInt 375, stateTaxDue: makeFromInt 3450 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 91 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27462, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20941, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 714 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4514, ordinaryIncomeNonSS: makeFromInt 24407, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 776, stateTaxDue: makeFromInt 796 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22958, ordinaryIncomeNonSS: makeFromInt 96680, qualifiedIncome: makeFromInt 92359, itemizedDeductions: makeFromInt 26901, federalTaxDue: makeFromInt 29305, stateTaxDue: makeFromInt 9197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137922, qualifiedIncome: makeFromInt 44647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32138, stateTaxDue: makeFromInt 8964 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87166, itemizedDeductions: makeFromInt 14633, federalTaxDue: makeFromInt 1690, stateTaxDue: makeFromInt 3997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46231, ordinaryIncomeNonSS: makeFromInt 89427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18456, federalTaxDue: makeFromInt 16802, stateTaxDue: makeFromInt 4010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35600, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21212, stateTaxDue: makeFromInt 6467 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16391, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1861, federalTaxDue: makeFromInt 7100, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137528, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22455, federalTaxDue: makeFromInt 24068, stateTaxDue: makeFromInt 6790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21699, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28023, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92682, qualifiedIncome: makeFromInt 85305, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22203, stateTaxDue: makeFromInt 8444 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43269, ordinaryIncomeNonSS: makeFromInt 123918, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21704, federalTaxDue: makeFromInt 27379, stateTaxDue: makeFromInt 5741 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12916, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20584, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 171 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20004, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42730, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132019, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10246, federalTaxDue: makeFromInt 40999, stateTaxDue: makeFromInt 11609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13863, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24715, stateTaxDue: makeFromInt 7738 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56687, qualifiedIncome: makeFromInt 97042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25841, stateTaxDue: makeFromInt 7111 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111969, qualifiedIncome: makeFromInt 55526, itemizedDeductions: makeFromInt 13903, federalTaxDue: makeFromInt 25509, stateTaxDue: makeFromInt 7920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97860, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44383, stateTaxDue: makeFromInt 12416 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79206, itemizedDeductions: makeFromInt 17961, federalTaxDue: makeFromInt 586, stateTaxDue: makeFromInt 3591 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44780, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37742, qualifiedIncome: makeFromInt 30810, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1868, stateTaxDue: makeFromInt 3068 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17943, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81478, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33805, stateTaxDue: makeFromInt 10899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56368, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9833, stateTaxDue: makeFromInt 7322 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17368, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30882, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1089 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24784, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78398, itemizedDeductions: makeFromInt 318, federalTaxDue: makeFromInt 1569, stateTaxDue: makeFromInt 3549 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45423, ordinaryIncomeNonSS: makeFromInt 71830, qualifiedIncome: makeFromInt 60637, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23558, stateTaxDue: makeFromInt 6205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40304, qualifiedIncome: makeFromInt 38830, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3839, stateTaxDue: makeFromInt 3607 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16700, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4983, qualifiedIncome: makeFromInt 39773, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1763 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32866, qualifiedIncome: makeFromInt 34436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 847, stateTaxDue: makeFromInt 2752 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14641, itemizedDeductions: makeFromInt 19459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 57 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17405, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67348, itemizedDeductions: makeFromInt 8806, federalTaxDue: makeFromInt 4102, stateTaxDue: makeFromInt 2912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131718, qualifiedIncome: makeFromInt 60145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25281, stateTaxDue: makeFromInt 9132 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65292, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25049, federalTaxDue: makeFromInt 4552, stateTaxDue: makeFromInt 2752 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30129, stateTaxDue: makeFromInt 7072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15949, ordinaryIncomeNonSS: makeFromInt 121880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17982, federalTaxDue: makeFromInt 15024, stateTaxDue: makeFromInt 5419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37550, stateTaxDue: makeFromInt 9266 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71063, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2289, stateTaxDue: makeFromInt 3178 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22334, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20705, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20880, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22113, ordinaryIncomeNonSS: makeFromInt 61885, qualifiedIncome: makeFromInt 86886, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20569, stateTaxDue: makeFromInt 6864 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3739, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20149, qualifiedIncome: makeFromInt 4645, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3695, stateTaxDue: makeFromInt 1040 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21369, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55309, itemizedDeductions: makeFromInt 2815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2190 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38131, ordinaryIncomeNonSS: makeFromInt 119241, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25870, federalTaxDue: makeFromInt 19389, stateTaxDue: makeFromInt 5375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66153, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23332, federalTaxDue: makeFromInt 5153, stateTaxDue: makeFromInt 3027 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25490, itemizedDeductions: makeFromInt 5661, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1065 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49762, ordinaryIncomeNonSS: makeFromInt 120751, qualifiedIncome: makeFromInt 32898, itemizedDeductions: makeFromInt 14905, federalTaxDue: makeFromInt 38318, stateTaxDue: makeFromInt 7612 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49369, ordinaryIncomeNonSS: makeFromInt 120046, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21991, stateTaxDue: makeFromInt 5416 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21565, ordinaryIncomeNonSS: makeFromInt 149005, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21673, federalTaxDue: makeFromInt 28794, stateTaxDue: makeFromInt 7195 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121205, qualifiedIncome: makeFromInt 77661, itemizedDeductions: makeFromInt 26320, federalTaxDue: makeFromInt 23542, stateTaxDue: makeFromInt 9268 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8302, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37856, ordinaryIncomeNonSS: makeFromInt 136870, qualifiedIncome: makeFromInt 30206, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32723, stateTaxDue: makeFromInt 8174 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136116, qualifiedIncome: makeFromInt 19819, itemizedDeductions: makeFromInt 13115, federalTaxDue: makeFromInt 22901, stateTaxDue: makeFromInt 7422 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15750, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25528, itemizedDeductions: makeFromInt 17169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 701 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142877, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17836, federalTaxDue: makeFromInt 34045, stateTaxDue: makeFromInt 6689 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18207, ordinaryIncomeNonSS: makeFromInt 58596, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14715, stateTaxDue: makeFromInt 7455 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63139, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3681, stateTaxDue: makeFromInt 2792 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143170, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11048, federalTaxDue: makeFromInt 35934, stateTaxDue: makeFromInt 6704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92882, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14455, stateTaxDue: makeFromInt 4390 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20784, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32018, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22820, federalTaxDue: makeFromInt 25587, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18954, ordinaryIncomeNonSS: makeFromInt 94698, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26032, stateTaxDue: makeFromInt 9277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20767, ordinaryIncomeNonSS: makeFromInt 146472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26650, stateTaxDue: makeFromInt 6949 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66068, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7582, stateTaxDue: makeFromInt 2928 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5728, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84021, itemizedDeductions: makeFromInt 22716, federalTaxDue: makeFromInt 5043, stateTaxDue: makeFromInt 3938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95889, qualifiedIncome: makeFromInt 66514, itemizedDeductions: makeFromInt 802, federalTaxDue: makeFromInt 20537, stateTaxDue: makeFromInt 7545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39860, ordinaryIncomeNonSS: makeFromInt 115528, qualifiedIncome: makeFromInt 81355, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39308, stateTaxDue: makeFromInt 9518 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92168, qualifiedIncome: makeFromInt 31948, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14533, stateTaxDue: makeFromInt 5831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28026, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86576, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36455, stateTaxDue: makeFromInt 11154 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21681, ordinaryIncomeNonSS: makeFromInt 23441, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 497 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9592, ordinaryIncomeNonSS: makeFromInt 122345, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26976, federalTaxDue: makeFromInt 29654, stateTaxDue: makeFromInt 10891 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17255, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5205, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43548, ordinaryIncomeNonSS: makeFromInt 34539, qualifiedIncome: makeFromInt 94644, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22322, stateTaxDue: makeFromInt 6004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104819, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31388, stateTaxDue: makeFromInt 5121 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 543, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96810, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8270, stateTaxDue: makeFromInt 4386 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14189, ordinaryIncomeNonSS: makeFromInt 125342, qualifiedIncome: makeFromInt 49417, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23319, stateTaxDue: makeFromInt 8263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91293, itemizedDeductions: makeFromInt 4037, federalTaxDue: makeFromInt 5324, stateTaxDue: makeFromInt 3990 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23300, federalTaxDue: makeFromInt 27379, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47311, ordinaryIncomeNonSS: makeFromInt 73506, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15340, stateTaxDue: makeFromInt 3198 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 188 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40477, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3377, federalTaxDue: makeFromInt 6387, stateTaxDue: makeFromInt 6549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6580, ordinaryIncomeNonSS: makeFromInt 79425, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12214, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35496, qualifiedIncome: makeFromInt 17698, itemizedDeductions: makeFromInt 22359, federalTaxDue: makeFromInt 820, stateTaxDue: makeFromInt 1985 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112148, qualifiedIncome: makeFromInt 22641, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13297, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14574, itemizedDeductions: makeFromInt 21754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 154 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45349, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21846, federalTaxDue: makeFromInt 32344, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25146, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40899, stateTaxDue: makeFromInt 8502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17246, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43895, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82946, itemizedDeductions: makeFromInt 3472, federalTaxDue: makeFromInt 4190, stateTaxDue: makeFromInt 3781 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41731, ordinaryIncomeNonSS: makeFromInt 8701, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23130, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99792, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14037, stateTaxDue: makeFromInt 4661 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11097, ordinaryIncomeNonSS: makeFromInt 111189, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12719, federalTaxDue: makeFromInt 17527, stateTaxDue: makeFromInt 5324 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3771, federalTaxDue: makeFromInt 6589, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17570, itemizedDeductions: makeFromInt 4497, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 665 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40961, ordinaryIncomeNonSS: makeFromInt 29085, qualifiedIncome: makeFromInt 38098, itemizedDeductions: makeFromInt 4035, federalTaxDue: makeFromInt 4527, stateTaxDue: makeFromInt 2774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32292, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21784, federalTaxDue: makeFromInt 584, stateTaxDue: makeFromInt 940 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36717, ordinaryIncomeNonSS: makeFromInt 91192, qualifiedIncome: makeFromInt 60024, itemizedDeductions: makeFromInt 21647, federalTaxDue: makeFromInt 21160, stateTaxDue: makeFromInt 7086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4774, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13115, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3734, qualifiedIncome: makeFromInt 85384, itemizedDeductions: makeFromInt 7872, federalTaxDue: makeFromInt 1513, stateTaxDue: makeFromInt 3892 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21803, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 153 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25575, ordinaryIncomeNonSS: makeFromInt 43186, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12245, stateTaxDue: makeFromInt 6684 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92070, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 723, federalTaxDue: makeFromInt 19574, stateTaxDue: makeFromInt 8929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 870, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62060, qualifiedIncome: makeFromInt 65308, itemizedDeductions: makeFromInt 14235, federalTaxDue: makeFromInt 12179, stateTaxDue: makeFromInt 5993 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14959, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8145, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46930, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84811, itemizedDeductions: makeFromInt 14945, federalTaxDue: makeFromInt 3962, stateTaxDue: makeFromInt 3566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49700, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1882 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33746, ordinaryIncomeNonSS: makeFromInt 63585, qualifiedIncome: makeFromInt 90702, itemizedDeductions: makeFromInt 6304, federalTaxDue: makeFromInt 27633, stateTaxDue: makeFromInt 7522 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89261, qualifiedIncome: makeFromInt 5334, itemizedDeductions: makeFromInt 21846, federalTaxDue: makeFromInt 6147, stateTaxDue: makeFromInt 4172 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81079, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 349, stateTaxDue: makeFromInt 3650 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58223, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17210, federalTaxDue: makeFromInt 29163, stateTaxDue: makeFromInt 7723 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30621, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2375, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18628, ordinaryIncomeNonSS: makeFromInt 115022, qualifiedIncome: makeFromInt 67022, itemizedDeductions: makeFromInt 2, federalTaxDue: makeFromInt 29677, stateTaxDue: makeFromInt 8733 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42864, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23546, federalTaxDue: makeFromInt 32929, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45559, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74206, itemizedDeductions: makeFromInt 9534, federalTaxDue: makeFromInt 38999, stateTaxDue: makeFromInt 10676 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 448, qualifiedIncome: makeFromInt 23405, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35118, qualifiedIncome: makeFromInt 60079, itemizedDeductions: makeFromInt 1028, federalTaxDue: makeFromInt 17550, stateTaxDue: makeFromInt 4427 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5977, ordinaryIncomeNonSS: makeFromInt 139093, qualifiedIncome: makeFromInt 61846, itemizedDeductions: makeFromInt 7874, federalTaxDue: makeFromInt 31139, stateTaxDue: makeFromInt 9472 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20292, ordinaryIncomeNonSS: makeFromInt 55476, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5411, stateTaxDue: makeFromInt 2155 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34495, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47185, itemizedDeductions: makeFromInt 21371, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1754 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143153, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22641, stateTaxDue: makeFromInt 6750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71982, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29873, federalTaxDue: makeFromInt 5286, stateTaxDue: makeFromInt 3447 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14361, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15584, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 243 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24686, ordinaryIncomeNonSS: makeFromInt 58496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9997, federalTaxDue: makeFromInt 6047, stateTaxDue: makeFromInt 2330 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30492, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11370, federalTaxDue: makeFromInt 12153, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15167, ordinaryIncomeNonSS: makeFromInt 125508, qualifiedIncome: makeFromInt 50232, itemizedDeductions: makeFromInt 24547, federalTaxDue: makeFromInt 31316, stateTaxDue: makeFromInt 8738 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91276, itemizedDeductions: makeFromInt 20785, federalTaxDue: makeFromInt 1189, stateTaxDue: makeFromInt 4089 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31900, ordinaryIncomeNonSS: makeFromInt 17117, qualifiedIncome: makeFromInt 4394, itemizedDeductions: makeFromInt 10797, federalTaxDue: makeFromInt 1289, stateTaxDue: makeFromInt 662 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60966, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5064, federalTaxDue: makeFromInt 6112, stateTaxDue: makeFromInt 2593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9336, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22158, federalTaxDue: makeFromInt 29920, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74530, itemizedDeductions: makeFromInt 5182, federalTaxDue: makeFromInt 2810, stateTaxDue: makeFromInt 3352 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24733, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44486, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133617, qualifiedIncome: makeFromInt 23336, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26447, stateTaxDue: makeFromInt 7576 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16890, federalTaxDue: makeFromInt 8045, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8720, stateTaxDue: makeFromInt 3856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16027, ordinaryIncomeNonSS: makeFromInt 115173, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7884, federalTaxDue: makeFromInt 19109, stateTaxDue: makeFromInt 5323 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10750, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27849, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55666, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2886, stateTaxDue: makeFromInt 2387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21010, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22751, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26777, itemizedDeductions: makeFromInt 5662, federalTaxDue: makeFromInt 27783, stateTaxDue: makeFromInt 8264 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52013, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2556, stateTaxDue: makeFromInt 2102 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22085, ordinaryIncomeNonSS: makeFromInt 72582, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7614, federalTaxDue: makeFromInt 7391, stateTaxDue: makeFromInt 2954 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46838, ordinaryIncomeNonSS: makeFromInt 144659, qualifiedIncome: makeFromInt 10602, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27402, stateTaxDue: makeFromInt 7288 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27324, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10964, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37182, ordinaryIncomeNonSS: makeFromInt 25200, qualifiedIncome: makeFromInt 80821, itemizedDeductions: makeFromInt 25800, federalTaxDue: makeFromInt 11987, stateTaxDue: makeFromInt 5060 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42184, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31118, stateTaxDue: makeFromInt 9353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6266, ordinaryIncomeNonSS: makeFromInt 138427, qualifiedIncome: makeFromInt 40616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30901, stateTaxDue: makeFromInt 8697 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22908, ordinaryIncomeNonSS: makeFromInt 24408, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10111, federalTaxDue: makeFromInt 16422, stateTaxDue: makeFromInt 5965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22910, ordinaryIncomeNonSS: makeFromInt 6908, qualifiedIncome: makeFromInt 81684, itemizedDeductions: makeFromInt 5201, federalTaxDue: makeFromInt 10951, stateTaxDue: makeFromInt 4294 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29782, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61002, itemizedDeductions: makeFromInt 17793, federalTaxDue: makeFromInt 41035, stateTaxDue: makeFromInt 10295 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37525, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17435, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39031, ordinaryIncomeNonSS: makeFromInt 138550, qualifiedIncome: makeFromInt 43327, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34973, stateTaxDue: makeFromInt 8719 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45739, ordinaryIncomeNonSS: makeFromInt 71488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20972, stateTaxDue: makeFromInt 3421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21039, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11236, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51506, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12653, stateTaxDue: makeFromInt 2120 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16883, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 469 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20577, ordinaryIncomeNonSS: makeFromInt 112428, qualifiedIncome: makeFromInt 183, itemizedDeductions: makeFromInt 18375, federalTaxDue: makeFromInt 18590, stateTaxDue: makeFromInt 5315 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47852, qualifiedIncome: makeFromInt 51050, itemizedDeductions: makeFromInt 16711, federalTaxDue: makeFromInt 9868, stateTaxDue: makeFromInt 4690 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12928, ordinaryIncomeNonSS: makeFromInt 45021, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29028, federalTaxDue: makeFromInt 9767, stateTaxDue: makeFromInt 6576 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91509, qualifiedIncome: makeFromInt 82512, itemizedDeductions: makeFromInt 19295, federalTaxDue: makeFromInt 25189, stateTaxDue: makeFromInt 8651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84582, qualifiedIncome: makeFromInt 51074, itemizedDeductions: makeFromInt 13146, federalTaxDue: makeFromInt 16857, stateTaxDue: makeFromInt 6368 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6142, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27647, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37016, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45223, itemizedDeductions: makeFromInt 27489, federalTaxDue: makeFromInt 228, stateTaxDue: makeFromInt 1886 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29551, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40062, stateTaxDue: makeFromInt 12280 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22811, ordinaryIncomeNonSS: makeFromInt 25982, qualifiedIncome: makeFromInt 75403, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3326, stateTaxDue: makeFromInt 4394 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7032, ordinaryIncomeNonSS: makeFromInt 80985, qualifiedIncome: makeFromInt 73528, itemizedDeductions: makeFromInt 22943, federalTaxDue: makeFromInt 19230, stateTaxDue: makeFromInt 7351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109816, qualifiedIncome: makeFromInt 57691, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17843, stateTaxDue: makeFromInt 7992 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49951, ordinaryIncomeNonSS: makeFromInt 81334, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12946, federalTaxDue: makeFromInt 20997, stateTaxDue: makeFromInt 3801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38757, ordinaryIncomeNonSS: makeFromInt 62239, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4076, federalTaxDue: makeFromInt 8422, stateTaxDue: makeFromInt 2521 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24755, qualifiedIncome: makeFromInt 61240, itemizedDeductions: makeFromInt 13622, federalTaxDue: makeFromInt 76, stateTaxDue: makeFromInt 3733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1266, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5941, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39473, stateTaxDue: makeFromInt 7606 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43567, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30301, stateTaxDue: makeFromInt 9303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15467, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35691, itemizedDeductions: makeFromInt 10228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19618, ordinaryIncomeNonSS: makeFromInt 14694, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7304, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56423, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26086, federalTaxDue: makeFromInt 3281, stateTaxDue: makeFromInt 2531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39229, ordinaryIncomeNonSS: makeFromInt 58258, qualifiedIncome: makeFromInt 36202, itemizedDeductions: makeFromInt 7135, federalTaxDue: makeFromInt 15694, stateTaxDue: makeFromInt 4369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4062, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30015, itemizedDeductions: makeFromInt 27234, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1102 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46863, ordinaryIncomeNonSS: makeFromInt 24271, qualifiedIncome: makeFromInt 58831, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1385, stateTaxDue: makeFromInt 3585 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70386, qualifiedIncome: makeFromInt 27875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4874, stateTaxDue: makeFromInt 4438 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26602, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88163, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34361, stateTaxDue: makeFromInt 11533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19918, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90196, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6864, stateTaxDue: makeFromInt 4253 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26682, ordinaryIncomeNonSS: makeFromInt 76270, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8302, stateTaxDue: makeFromInt 3139 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74671, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7756, stateTaxDue: makeFromInt 3359 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2099, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82337, itemizedDeductions: makeFromInt 21120, federalTaxDue: makeFromInt 6099, stateTaxDue: makeFromInt 3662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1241, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89959, qualifiedIncome: makeFromInt 76303, itemizedDeductions: makeFromInt 2182, federalTaxDue: makeFromInt 27119, stateTaxDue: makeFromInt 8255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1089, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55501, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8279, federalTaxDue: makeFromInt 3582, stateTaxDue: makeFromInt 2402 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65882, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1512, stateTaxDue: makeFromInt 2719 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71025, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30003, stateTaxDue: makeFromInt 10717 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101508, qualifiedIncome: makeFromInt 54193, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19719, stateTaxDue: makeFromInt 7641 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43694, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1713, federalTaxDue: makeFromInt 1639, stateTaxDue: makeFromInt 1510 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33780, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11902, federalTaxDue: makeFromInt 7988, stateTaxDue: makeFromInt 6374 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8475, qualifiedIncome: makeFromInt 53059, itemizedDeductions: makeFromInt 4924, federalTaxDue: makeFromInt 2311, stateTaxDue: makeFromInt 2914 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48003, ordinaryIncomeNonSS: makeFromInt 138161, qualifiedIncome: makeFromInt 52760, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36936, stateTaxDue: makeFromInt 9309 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17089, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30733, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48072, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69592, itemizedDeductions: makeFromInt 18414, federalTaxDue: makeFromInt 38106, stateTaxDue: makeFromInt 10305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94693, qualifiedIncome: makeFromInt 14638, itemizedDeductions: makeFromInt 1720, federalTaxDue: makeFromInt 19053, stateTaxDue: makeFromInt 5351 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26833, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113608, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2023, federalTaxDue: makeFromInt 30692, stateTaxDue: makeFromInt 10445 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5563, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7954, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36595, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23798, federalTaxDue: makeFromInt 1280, stateTaxDue: makeFromInt 1455 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21865, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36826, itemizedDeductions: makeFromInt 15693, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1450 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6102, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65531, qualifiedIncome: makeFromInt 37603, itemizedDeductions: makeFromInt 6258, federalTaxDue: makeFromInt 15207, stateTaxDue: makeFromInt 5035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124332, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14292, stateTaxDue: makeFromInt 5913 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68074, itemizedDeductions: makeFromInt 11500, federalTaxDue: makeFromInt 2171, stateTaxDue: makeFromInt 2829 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55478, qualifiedIncome: makeFromInt 49337, itemizedDeductions: makeFromInt 4014, federalTaxDue: makeFromInt 18420, stateTaxDue: makeFromInt 4866 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10085, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33707, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3588, stateTaxDue: makeFromInt 2786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30970, stateTaxDue: makeFromInt 9329 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14850, ordinaryIncomeNonSS: makeFromInt 112664, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24877, federalTaxDue: makeFromInt 31434, stateTaxDue: makeFromInt 10258 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53840, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1897, stateTaxDue: makeFromInt 2297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39363, ordinaryIncomeNonSS: makeFromInt 5948, qualifiedIncome: makeFromInt 84936, itemizedDeductions: makeFromInt 26941, federalTaxDue: makeFromInt 9197, stateTaxDue: makeFromInt 4411 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122476, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25384, federalTaxDue: makeFromInt 17138, stateTaxDue: makeFromInt 5869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96580, qualifiedIncome: makeFromInt 69206, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17278, stateTaxDue: makeFromInt 7802 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10572, qualifiedIncome: makeFromInt 24748, itemizedDeductions: makeFromInt 9721, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1311 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99805, qualifiedIncome: makeFromInt 82005, itemizedDeductions: makeFromInt 13180, federalTaxDue: makeFromInt 27380, stateTaxDue: makeFromInt 8844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95093, qualifiedIncome: makeFromInt 82788, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32701, stateTaxDue: makeFromInt 8319 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3420, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40955, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28395, stateTaxDue: makeFromInt 9098 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5749, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17304, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97928, itemizedDeductions: makeFromInt 19139, federalTaxDue: makeFromInt 37949, stateTaxDue: makeFromInt 12021 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13249, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23310, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41958, ordinaryIncomeNonSS: makeFromInt 64009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12298, stateTaxDue: makeFromInt 2816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15522, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60510, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1517, stateTaxDue: makeFromInt 2535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3851, ordinaryIncomeNonSS: makeFromInt 43075, qualifiedIncome: makeFromInt 4967, itemizedDeductions: makeFromInt 25955, federalTaxDue: makeFromInt 14, stateTaxDue: makeFromInt 1899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30369, ordinaryIncomeNonSS: makeFromInt 40309, qualifiedIncome: makeFromInt 87660, itemizedDeductions: makeFromInt 15817, federalTaxDue: makeFromInt 16054, stateTaxDue: makeFromInt 6098 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18322, itemizedDeductions: makeFromInt 9006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 282 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 949, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92208, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2536, stateTaxDue: makeFromInt 4254 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28956, ordinaryIncomeNonSS: makeFromInt 132500, qualifiedIncome: makeFromInt 13005, itemizedDeductions: makeFromInt 7362, federalTaxDue: makeFromInt 27307, stateTaxDue: makeFromInt 6700 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89036, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5795, stateTaxDue: makeFromInt 4194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21717, ordinaryIncomeNonSS: makeFromInt 128999, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20798, federalTaxDue: makeFromInt 22832, stateTaxDue: makeFromInt 6151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21959, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13281, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16231, itemizedDeductions: makeFromInt 15777, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55242, qualifiedIncome: makeFromInt 66082, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14258, stateTaxDue: makeFromInt 5841 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96553, itemizedDeductions: makeFromInt 20548, federalTaxDue: makeFromInt 49996, stateTaxDue: makeFromInt 12146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25727, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8343, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14082, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19442, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46588, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39149, stateTaxDue: makeFromInt 9598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7673, ordinaryIncomeNonSS: makeFromInt 122214, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13919, stateTaxDue: makeFromInt 5682 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26186, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76243, itemizedDeductions: makeFromInt 22597, federalTaxDue: makeFromInt 5376, stateTaxDue: makeFromInt 3557 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4224, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15391, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28852, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69569, itemizedDeductions: makeFromInt 18329, federalTaxDue: makeFromInt 4788, stateTaxDue: makeFromInt 3324 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148964, qualifiedIncome: makeFromInt 10377, itemizedDeductions: makeFromInt 15709, federalTaxDue: makeFromInt 30771, stateTaxDue: makeFromInt 7902 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28756, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48247, ordinaryIncomeNonSS: makeFromInt 33652, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4172, stateTaxDue: makeFromInt 1108 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23098, ordinaryIncomeNonSS: makeFromInt 129886, qualifiedIncome: makeFromInt 93630, itemizedDeductions: makeFromInt 12273, federalTaxDue: makeFromInt 41273, stateTaxDue: makeFromInt 10971 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48232, ordinaryIncomeNonSS: makeFromInt 83243, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31800, stateTaxDue: makeFromInt 8999 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45187, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69748, itemizedDeductions: makeFromInt 11924, federalTaxDue: makeFromInt 1332, stateTaxDue: makeFromInt 3012 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8029, qualifiedIncome: makeFromInt 98748, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15832, stateTaxDue: makeFromInt 5017 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13754, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75291, itemizedDeductions: makeFromInt 4240, federalTaxDue: makeFromInt 40807, stateTaxDue: makeFromInt 10810 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24052, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10548, federalTaxDue: makeFromInt 22670, stateTaxDue: makeFromInt 6487 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23236, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8356, federalTaxDue: makeFromInt 21845, stateTaxDue: makeFromInt 5907 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40678, ordinaryIncomeNonSS: makeFromInt 35664, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28898, federalTaxDue: makeFromInt 3397, stateTaxDue: makeFromInt 1328 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31039, ordinaryIncomeNonSS: makeFromInt 44296, qualifiedIncome: makeFromInt 2767, itemizedDeductions: makeFromInt 14072, federalTaxDue: makeFromInt 5211, stateTaxDue: makeFromInt 1972 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24788, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18068, itemizedDeductions: makeFromInt 22085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109742, qualifiedIncome: makeFromInt 84523, itemizedDeductions: makeFromInt 21819, federalTaxDue: makeFromInt 26139, stateTaxDue: makeFromInt 9138 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141394, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22729, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14729, ordinaryIncomeNonSS: makeFromInt 135104, qualifiedIncome: makeFromInt 47066, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27296, stateTaxDue: makeFromInt 8638 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16866, ordinaryIncomeNonSS: makeFromInt 27203, qualifiedIncome: makeFromInt 42258, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7129, stateTaxDue: makeFromInt 3018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8886, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71547, itemizedDeductions: makeFromInt 21878, federalTaxDue: makeFromInt 35181, stateTaxDue: makeFromInt 10850 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18181, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1002, federalTaxDue: makeFromInt 28287, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19456, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37848, ordinaryIncomeNonSS: makeFromInt 49525, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5470, stateTaxDue: makeFromInt 1801 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12349, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83457, itemizedDeductions: makeFromInt 29660, federalTaxDue: makeFromInt 4149, stateTaxDue: makeFromInt 3598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28004, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18595, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20112, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19955, federalTaxDue: makeFromInt 1502, stateTaxDue: makeFromInt 597 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131707, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41948, stateTaxDue: makeFromInt 11593 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45969, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98444, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9515, stateTaxDue: makeFromInt 4470 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16610, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5721, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9599, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67475, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26093, federalTaxDue: makeFromInt 14421, stateTaxDue: makeFromInt 3013 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35932, ordinaryIncomeNonSS: makeFromInt 23815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4514, federalTaxDue: makeFromInt 19251, stateTaxDue: makeFromInt 5736 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14314, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49947, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23222, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9416, ordinaryIncomeNonSS: makeFromInt 102528, qualifiedIncome: makeFromInt 5384, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15350, stateTaxDue: makeFromInt 4953 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60041, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 891, stateTaxDue: makeFromInt 2627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110716, qualifiedIncome: makeFromInt 69056, itemizedDeductions: makeFromInt 19546, federalTaxDue: makeFromInt 24190, stateTaxDue: makeFromInt 8614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16555, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 321, stateTaxDue: makeFromInt 498 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29934, ordinaryIncomeNonSS: makeFromInt 91210, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12494, stateTaxDue: makeFromInt 3999 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14905, ordinaryIncomeNonSS: makeFromInt 8465, qualifiedIncome: makeFromInt 3783, itemizedDeductions: makeFromInt 16545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 357 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45327, ordinaryIncomeNonSS: makeFromInt 34756, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19898, stateTaxDue: makeFromInt 6322 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149017, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21531, federalTaxDue: makeFromInt 18287, stateTaxDue: makeFromInt 6947 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43320, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69669, itemizedDeductions: makeFromInt 21842, federalTaxDue: makeFromInt 1131, stateTaxDue: makeFromInt 2809 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2664, stateTaxDue: makeFromInt 2517 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89889, qualifiedIncome: makeFromInt 53238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13815, stateTaxDue: makeFromInt 6647 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35321, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7396, itemizedDeductions: makeFromInt 11628, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80529, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27294, stateTaxDue: makeFromInt 8551 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67090, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4524, stateTaxDue: makeFromInt 2880 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36915, ordinaryIncomeNonSS: makeFromInt 59626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16482, federalTaxDue: makeFromInt 13389, stateTaxDue: makeFromInt 2817 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3610, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72229, itemizedDeductions: makeFromInt 10024, federalTaxDue: makeFromInt 6331, stateTaxDue: makeFromInt 3133 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68989, qualifiedIncome: makeFromInt 21376, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12962, stateTaxDue: makeFromInt 3843 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11237, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 176, federalTaxDue: makeFromInt 84, stateTaxDue: makeFromInt 349 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40176, stateTaxDue: makeFromInt 11251 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105680, qualifiedIncome: makeFromInt 70065, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20109, stateTaxDue: makeFromInt 8229 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31360, ordinaryIncomeNonSS: makeFromInt 59769, qualifiedIncome: makeFromInt 96422, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16785, stateTaxDue: makeFromInt 7135 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5845, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2280, itemizedDeductions: makeFromInt 1754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4482, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94449, qualifiedIncome: makeFromInt 89425, itemizedDeductions: makeFromInt 28656, federalTaxDue: makeFromInt 33425, stateTaxDue: makeFromInt 8939 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27135, ordinaryIncomeNonSS: makeFromInt 37491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29002, federalTaxDue: makeFromInt 2049, stateTaxDue: makeFromInt 1400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18794, ordinaryIncomeNonSS: makeFromInt 48725, qualifiedIncome: makeFromInt 88437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18574, stateTaxDue: makeFromInt 6567 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15321, ordinaryIncomeNonSS: makeFromInt 14224, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10947, stateTaxDue: makeFromInt 5479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36923, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7249, stateTaxDue: makeFromInt 1536 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15679, ordinaryIncomeNonSS: makeFromInt 22460, qualifiedIncome: makeFromInt 36343, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4688, stateTaxDue: makeFromInt 2485 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3322, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35613, qualifiedIncome: makeFromInt 39347, itemizedDeductions: makeFromInt 12639, federalTaxDue: makeFromInt 6708, stateTaxDue: makeFromInt 3273 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10558, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59069, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40548, stateTaxDue: makeFromInt 10010 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17364, qualifiedIncome: makeFromInt 75066, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49718, ordinaryIncomeNonSS: makeFromInt 147760, qualifiedIncome: makeFromInt 40701, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49450, stateTaxDue: makeFromInt 9387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114283, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29502, stateTaxDue: makeFromInt 5400 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13025, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9169, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3609, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3070, ordinaryIncomeNonSS: makeFromInt 124522, qualifiedIncome: makeFromInt 80954, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24746, stateTaxDue: makeFromInt 9799 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55819, itemizedDeductions: makeFromInt 10133, federalTaxDue: makeFromInt 953, stateTaxDue: makeFromInt 2296 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6515, federalTaxDue: makeFromInt 6968, stateTaxDue: makeFromInt 3899 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89444, qualifiedIncome: makeFromInt 47947, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19483, stateTaxDue: makeFromInt 6615 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128903, qualifiedIncome: makeFromInt 8129, itemizedDeductions: makeFromInt 5130, federalTaxDue: makeFromInt 15416, stateTaxDue: makeFromInt 6377 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12548, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9337, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81427, itemizedDeductions: makeFromInt 17307, federalTaxDue: makeFromInt 6424, stateTaxDue: makeFromInt 3724 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86882, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4330, stateTaxDue: makeFromInt 3669 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96094, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8246, federalTaxDue: makeFromInt 43400, stateTaxDue: makeFromInt 9776 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64328, itemizedDeductions: makeFromInt 8092, federalTaxDue: makeFromInt 10699, stateTaxDue: makeFromInt 2961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23136, ordinaryIncomeNonSS: makeFromInt 70358, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18116, federalTaxDue: makeFromInt 27736, stateTaxDue: makeFromInt 8464 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34109, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13797, federalTaxDue: makeFromInt 2124, stateTaxDue: makeFromInt 1250 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127978, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15347, federalTaxDue: makeFromInt 33364, stateTaxDue: makeFromInt 11024 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21401, ordinaryIncomeNonSS: makeFromInt 101233, qualifiedIncome: makeFromInt 61340, itemizedDeductions: makeFromInt 17457, federalTaxDue: makeFromInt 27933, stateTaxDue: makeFromInt 7944 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139674, qualifiedIncome: makeFromInt 13472, itemizedDeductions: makeFromInt 10680, federalTaxDue: makeFromInt 38166, stateTaxDue: makeFromInt 7382 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4347, ordinaryIncomeNonSS: makeFromInt 27015, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17337, federalTaxDue: makeFromInt 262, stateTaxDue: makeFromInt 920 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85488, itemizedDeductions: makeFromInt 27087, federalTaxDue: makeFromInt 321, stateTaxDue: makeFromInt 3799 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134336, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23487, stateTaxDue: makeFromInt 6360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49594, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23817, federalTaxDue: makeFromInt 34237, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11153, ordinaryIncomeNonSS: makeFromInt 131626, qualifiedIncome: makeFromInt 54839, itemizedDeductions: makeFromInt 14678, federalTaxDue: makeFromInt 33118, stateTaxDue: makeFromInt 9163 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84642, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7691, federalTaxDue: makeFromInt 6470, stateTaxDue: makeFromInt 3757 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24136, ordinaryIncomeNonSS: makeFromInt 40606, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24554, federalTaxDue: makeFromInt 4087, stateTaxDue: makeFromInt 1655 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8095, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18586, itemizedDeductions: makeFromInt 3808, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 674 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2166, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12204, federalTaxDue: makeFromInt 33633, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42641, ordinaryIncomeNonSS: makeFromInt 92611, qualifiedIncome: makeFromInt 6376, itemizedDeductions: makeFromInt 5624, federalTaxDue: makeFromInt 14533, stateTaxDue: makeFromInt 4474 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13952, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46772, ordinaryIncomeNonSS: makeFromInt 33732, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4115, stateTaxDue: makeFromInt 1312 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30888, ordinaryIncomeNonSS: makeFromInt 133756, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3665, federalTaxDue: makeFromInt 28710, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41293, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6045, stateTaxDue: makeFromInt 1490 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71852, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12854, federalTaxDue: makeFromInt 10996, stateTaxDue: makeFromInt 3118 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36940, qualifiedIncome: makeFromInt 91737, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20496, stateTaxDue: makeFromInt 6074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13584, ordinaryIncomeNonSS: makeFromInt 36574, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17129, stateTaxDue: makeFromInt 6618 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7446, ordinaryIncomeNonSS: makeFromInt 131500, qualifiedIncome: makeFromInt 46622, itemizedDeductions: makeFromInt 12909, federalTaxDue: makeFromInt 27413, stateTaxDue: makeFromInt 8533 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1403, itemizedDeductions: makeFromInt 27859, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3694, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28482, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31542, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 670, stateTaxDue: makeFromInt 2032 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8877, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40967, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17539, itemizedDeductions: makeFromInt 17816, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87579, itemizedDeductions: makeFromInt 28186, federalTaxDue: makeFromInt 634, stateTaxDue: makeFromInt 3704 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1894 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47983, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13632, federalTaxDue: makeFromInt 36579, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31480, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15533, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4753, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4636, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26198, stateTaxDue: makeFromInt 7662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9757, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31561, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1103 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27089, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22587, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137649, qualifiedIncome: makeFromInt 98245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43348, stateTaxDue: makeFromInt 11806 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24859, ordinaryIncomeNonSS: makeFromInt 57827, qualifiedIncome: makeFromInt 87449, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22871, stateTaxDue: makeFromInt 6809 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36136, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25524, ordinaryIncomeNonSS: makeFromInt 43892, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4080, stateTaxDue: makeFromInt 2014 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47139, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1438, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15615, qualifiedIncome: makeFromInt 21807, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 92, stateTaxDue: makeFromInt 1616 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38066, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16585, federalTaxDue: makeFromInt 32380, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3906, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38998, itemizedDeductions: makeFromInt 2364, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11594, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37767, itemizedDeductions: makeFromInt 21109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3818, ordinaryIncomeNonSS: makeFromInt 120641, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16993, stateTaxDue: makeFromInt 5457 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23083, ordinaryIncomeNonSS: makeFromInt 119596, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26549, federalTaxDue: makeFromInt 20876, stateTaxDue: makeFromInt 5725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44146, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86029, itemizedDeductions: makeFromInt 23867, federalTaxDue: makeFromInt 46095, stateTaxDue: makeFromInt 11609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127475, qualifiedIncome: makeFromInt 40636, itemizedDeductions: makeFromInt 29808, federalTaxDue: makeFromInt 28166, stateTaxDue: makeFromInt 7731 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127421, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18347, stateTaxDue: makeFromInt 5996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49575, ordinaryIncomeNonSS: makeFromInt 108389, qualifiedIncome: makeFromInt 54240, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36939, stateTaxDue: makeFromInt 7947 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39931, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27614, federalTaxDue: makeFromInt 827, stateTaxDue: makeFromInt 1588 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6694, itemizedDeductions: makeFromInt 17987, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10497, ordinaryIncomeNonSS: makeFromInt 118275, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29450, federalTaxDue: makeFromInt 15146, stateTaxDue: makeFromInt 5604 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30034, ordinaryIncomeNonSS: makeFromInt 123060, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33368, stateTaxDue: makeFromInt 10478 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11452, ordinaryIncomeNonSS: makeFromInt 130449, qualifiedIncome: makeFromInt 47752, itemizedDeductions: makeFromInt 3912, federalTaxDue: makeFromInt 28456, stateTaxDue: makeFromInt 8535 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6863, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2003, stateTaxDue: makeFromInt 2908 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20111, federalTaxDue: makeFromInt 14848, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37626, ordinaryIncomeNonSS: makeFromInt 58951, qualifiedIncome: makeFromInt 77783, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19421, stateTaxDue: makeFromInt 6262 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22775, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2154, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44967, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44728, itemizedDeductions: makeFromInt 22762, federalTaxDue: makeFromInt 997, stateTaxDue: makeFromInt 1661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61471, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12871, federalTaxDue: makeFromInt 17394, stateTaxDue: makeFromInt 7807 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37313, qualifiedIncome: makeFromInt 57807, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3052, stateTaxDue: makeFromInt 4300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99410, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18036, stateTaxDue: makeFromInt 4846 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5586, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1446, ordinaryIncomeNonSS: makeFromInt 106627, qualifiedIncome: makeFromInt 2017, itemizedDeductions: makeFromInt 25184, federalTaxDue: makeFromInt 11679, stateTaxDue: makeFromInt 5112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27735, qualifiedIncome: makeFromInt 47984, itemizedDeductions: makeFromInt 20140, federalTaxDue: makeFromInt 2845, stateTaxDue: makeFromInt 3331 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77178, itemizedDeductions: makeFromInt 10473, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42755, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67554, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5572, stateTaxDue: makeFromInt 3003 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56803, itemizedDeductions: makeFromInt 1059, federalTaxDue: makeFromInt 150, stateTaxDue: makeFromInt 2465 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23172, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3931, stateTaxDue: makeFromInt 957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71215, itemizedDeductions: makeFromInt 29748, federalTaxDue: makeFromInt 5035, stateTaxDue: makeFromInt 3408 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32836, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48601, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99751, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 58668, stateTaxDue: makeFromInt 12513 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39388, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33453, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13154, itemizedDeductions: makeFromInt 15745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141692, qualifiedIncome: makeFromInt 40201, itemizedDeductions: makeFromInt 1443, federalTaxDue: makeFromInt 27296, stateTaxDue: makeFromInt 8720 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85933, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6422, stateTaxDue: makeFromInt 3922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14566, ordinaryIncomeNonSS: makeFromInt 24173, qualifiedIncome: makeFromInt 6754, itemizedDeductions: makeFromInt 17262, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1149 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34337, ordinaryIncomeNonSS: makeFromInt 60866, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11602, stateTaxDue: makeFromInt 2676 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98520, qualifiedIncome: makeFromInt 85409, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20650, stateTaxDue: makeFromInt 8952 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59926, itemizedDeductions: makeFromInt 29062, federalTaxDue: makeFromInt 619, stateTaxDue: makeFromInt 2421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3719, ordinaryIncomeNonSS: makeFromInt 47138, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3099, stateTaxDue: makeFromInt 1976 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25238, ordinaryIncomeNonSS: makeFromInt 105266, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7088, federalTaxDue: makeFromInt 13106, stateTaxDue: makeFromInt 4588 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3387, ordinaryIncomeNonSS: makeFromInt 52604, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16046, stateTaxDue: makeFromInt 7055 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4493, ordinaryIncomeNonSS: makeFromInt 91800, qualifiedIncome: makeFromInt 77376, itemizedDeductions: makeFromInt 20004, federalTaxDue: makeFromInt 17139, stateTaxDue: makeFromInt 7784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34003, ordinaryIncomeNonSS: makeFromInt 112311, qualifiedIncome: makeFromInt 62251, itemizedDeductions: makeFromInt 16647, federalTaxDue: makeFromInt 36119, stateTaxDue: makeFromInt 8678 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44451, ordinaryIncomeNonSS: makeFromInt 123461, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30682, stateTaxDue: makeFromInt 5868 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92152, itemizedDeductions: makeFromInt 17155, federalTaxDue: makeFromInt 12154, stateTaxDue: makeFromInt 4310 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9737, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16857, qualifiedIncome: makeFromInt 727, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 504 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47213, qualifiedIncome: makeFromInt 17301, itemizedDeductions: makeFromInt 3090, federalTaxDue: makeFromInt 1991, stateTaxDue: makeFromInt 2551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9016, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56848, itemizedDeductions: makeFromInt 1004, federalTaxDue: makeFromInt 967, stateTaxDue: makeFromInt 2552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28855, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22692, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 144, stateTaxDue: makeFromInt 680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107824, qualifiedIncome: makeFromInt 75745, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25228, stateTaxDue: makeFromInt 8811 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50865, qualifiedIncome: makeFromInt 22397, itemizedDeductions: makeFromInt 15120, federalTaxDue: makeFromInt 2417, stateTaxDue: makeFromInt 2988 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3291, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39233, itemizedDeductions: makeFromInt 18343, federalTaxDue: makeFromInt 29816, stateTaxDue: makeFromInt 9087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 65, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9945, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22628, stateTaxDue: makeFromInt 7422 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28175, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96866, itemizedDeductions: makeFromInt 28550, federalTaxDue: makeFromInt 8470, stateTaxDue: makeFromInt 4388 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32360, qualifiedIncome: makeFromInt 38714, itemizedDeductions: makeFromInt 2372, federalTaxDue: makeFromInt 506, stateTaxDue: makeFromInt 3079 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35037, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11649, federalTaxDue: makeFromInt 2235, stateTaxDue: makeFromInt 1497 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19507, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80249, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 225, stateTaxDue: makeFromInt 3608 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10308, ordinaryIncomeNonSS: makeFromInt 67485, qualifiedIncome: makeFromInt 94738, itemizedDeductions: makeFromInt 3980, federalTaxDue: makeFromInt 23368, stateTaxDue: makeFromInt 7656 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135192, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13920, federalTaxDue: makeFromInt 30295, stateTaxDue: makeFromInt 6385 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28323, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27071, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30544, stateTaxDue: makeFromInt 8582 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4854, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148160, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17195, federalTaxDue: makeFromInt 25511, stateTaxDue: makeFromInt 6953 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101315, qualifiedIncome: makeFromInt 1322, itemizedDeductions: makeFromInt 7187, federalTaxDue: makeFromInt 14871, stateTaxDue: makeFromInt 4677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6652, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5695, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25471, stateTaxDue: makeFromInt 7410 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18545, itemizedDeductions: makeFromInt 26273, federalTaxDue: makeFromInt 20193, stateTaxDue: makeFromInt 7943 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50577, qualifiedIncome: makeFromInt 55691, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6439, stateTaxDue: makeFromInt 4869 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24549, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20061, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 628 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34080, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54516, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2151 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15887, ordinaryIncomeNonSS: makeFromInt 11789, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 134 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19838, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13301, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24016, qualifiedIncome: makeFromInt 96069, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6850, stateTaxDue: makeFromInt 5574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39333, itemizedDeductions: makeFromInt 13215, federalTaxDue: makeFromInt 40823, stateTaxDue: makeFromInt 9105 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109386, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16192, federalTaxDue: makeFromInt 12488, stateTaxDue: makeFromInt 5028 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7255, qualifiedIncome: makeFromInt 59669, itemizedDeductions: makeFromInt 14459, federalTaxDue: makeFromInt 2699, stateTaxDue: makeFromInt 2891 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17162, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27174, ordinaryIncomeNonSS: makeFromInt 131956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19340, stateTaxDue: makeFromInt 5923 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22324, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36281, ordinaryIncomeNonSS: makeFromInt 72810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13292, stateTaxDue: makeFromInt 3265 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45811, qualifiedIncome: makeFromInt 47893, itemizedDeductions: makeFromInt 6176, federalTaxDue: makeFromInt 10743, stateTaxDue: makeFromInt 4010 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40120, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1185, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30998, stateTaxDue: makeFromInt 7304 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54132, itemizedDeductions: makeFromInt 13989, federalTaxDue: makeFromInt 26348, stateTaxDue: makeFromInt 9732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25473, ordinaryIncomeNonSS: makeFromInt 86169, qualifiedIncome: makeFromInt 25562, itemizedDeductions: makeFromInt 14890, federalTaxDue: makeFromInt 13416, stateTaxDue: makeFromInt 5045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41846, ordinaryIncomeNonSS: makeFromInt 48609, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7792, stateTaxDue: makeFromInt 1855 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42572, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33760, stateTaxDue: makeFromInt 9070 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41727, ordinaryIncomeNonSS: makeFromInt 60471, qualifiedIncome: makeFromInt 15880, itemizedDeductions: makeFromInt 3758, federalTaxDue: makeFromInt 8961, stateTaxDue: makeFromInt 3241 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28877, ordinaryIncomeNonSS: makeFromInt 21217, qualifiedIncome: makeFromInt 88980, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9281, stateTaxDue: makeFromInt 5135 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3215, ordinaryIncomeNonSS: makeFromInt 145102, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41996, stateTaxDue: makeFromInt 12072 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12213, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59058, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27697, stateTaxDue: makeFromInt 9978 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7412, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78538, qualifiedIncome: makeFromInt 82261, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19082, stateTaxDue: makeFromInt 7465 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16769, ordinaryIncomeNonSS: makeFromInt 26117, qualifiedIncome: makeFromInt 66657, itemizedDeductions: makeFromInt 28214, federalTaxDue: makeFromInt 4668, stateTaxDue: makeFromInt 4264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4394, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22618, itemizedDeductions: makeFromInt 22109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 705 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21231, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41341, ordinaryIncomeNonSS: makeFromInt 63437, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11151, stateTaxDue: makeFromInt 2597 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61021, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17102, stateTaxDue: makeFromInt 7476 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39385, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9618, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28955, ordinaryIncomeNonSS: makeFromInt 117918, qualifiedIncome: makeFromInt 55370, itemizedDeductions: makeFromInt 14742, federalTaxDue: makeFromInt 29487, stateTaxDue: makeFromInt 8287 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88121, qualifiedIncome: makeFromInt 75072, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14040, stateTaxDue: makeFromInt 7485 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108318, qualifiedIncome: makeFromInt 40537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15042, stateTaxDue: makeFromInt 6768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93090, itemizedDeductions: makeFromInt 25446, federalTaxDue: makeFromInt 11753, stateTaxDue: makeFromInt 4523 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75742, qualifiedIncome: makeFromInt 25916, itemizedDeductions: makeFromInt 11559, federalTaxDue: makeFromInt 5517, stateTaxDue: makeFromInt 4608 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26248, ordinaryIncomeNonSS: makeFromInt 101526, qualifiedIncome: makeFromInt 93498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38838, stateTaxDue: makeFromInt 9722 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 955, stateTaxDue: makeFromInt 2632 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100576, qualifiedIncome: makeFromInt 68571, itemizedDeductions: makeFromInt 23463, federalTaxDue: makeFromInt 32828, stateTaxDue: makeFromInt 8202 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28889, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31911, stateTaxDue: makeFromInt 8469 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61699, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43672, stateTaxDue: makeFromInt 10210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63442, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40852, stateTaxDue: makeFromInt 10097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56511, itemizedDeductions: makeFromInt 27253, federalTaxDue: makeFromInt 2829, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28114, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1198 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25091, qualifiedIncome: makeFromInt 97620, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2831, stateTaxDue: makeFromInt 5753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19750, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20707, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22841, stateTaxDue: makeFromInt 8802 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 92, stateTaxDue: makeFromInt 3596 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46926, ordinaryIncomeNonSS: makeFromInt 144357, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34526, stateTaxDue: makeFromInt 6763 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81355, qualifiedIncome: makeFromInt 27762, itemizedDeductions: makeFromInt 27097, federalTaxDue: makeFromInt 11960, stateTaxDue: makeFromInt 5288 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20239, itemizedDeductions: makeFromInt 4606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 379 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2727, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37345, stateTaxDue: makeFromInt 11634 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10627, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82910, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4524, stateTaxDue: makeFromInt 3642 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18579, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86512, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34679, stateTaxDue: makeFromInt 11151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26995, ordinaryIncomeNonSS: makeFromInt 44481, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3339, federalTaxDue: makeFromInt 5929, stateTaxDue: makeFromInt 1820 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11423, ordinaryIncomeNonSS: makeFromInt 48686, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6022, stateTaxDue: makeFromInt 2034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23706, ordinaryIncomeNonSS: makeFromInt 44116, qualifiedIncome: makeFromInt 61371, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11398, stateTaxDue: makeFromInt 4829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50579, itemizedDeductions: makeFromInt 14260, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33047, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44020, ordinaryIncomeNonSS: makeFromInt 69267, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20529, federalTaxDue: makeFromInt 14571, stateTaxDue: makeFromInt 3008 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28083, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43847, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75235, qualifiedIncome: makeFromInt 62953, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32547, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4506, ordinaryIncomeNonSS: makeFromInt 95151, qualifiedIncome: makeFromInt 20573, itemizedDeductions: makeFromInt 16697, federalTaxDue: makeFromInt 16805, stateTaxDue: makeFromInt 5531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11820, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7469, ordinaryIncomeNonSS: makeFromInt 16840, qualifiedIncome: makeFromInt 80415, itemizedDeductions: makeFromInt 363, federalTaxDue: makeFromInt 4502, stateTaxDue: makeFromInt 4409 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45003, ordinaryIncomeNonSS: makeFromInt 85831, qualifiedIncome: makeFromInt 49220, itemizedDeductions: makeFromInt 24383, federalTaxDue: makeFromInt 23647, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29415, ordinaryIncomeNonSS: makeFromInt 24676, qualifiedIncome: makeFromInt 59929, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13182, stateTaxDue: makeFromInt 3886 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88137, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12994, stateTaxDue: makeFromInt 4148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35157, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11310, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26885, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22988, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2389, ordinaryIncomeNonSS: makeFromInt 87398, qualifiedIncome: makeFromInt 18171, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7429, stateTaxDue: makeFromInt 4603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17375, qualifiedIncome: makeFromInt 54624, itemizedDeductions: makeFromInt 1482, federalTaxDue: makeFromInt 2611, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4021, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33099, ordinaryIncomeNonSS: makeFromInt 15561, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 577, stateTaxDue: makeFromInt 447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23459, ordinaryIncomeNonSS: makeFromInt 131323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15043, federalTaxDue: makeFromInt 29989, stateTaxDue: makeFromInt 6473 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34548, ordinaryIncomeNonSS: makeFromInt 31016, qualifiedIncome: makeFromInt 72798, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12849, stateTaxDue: makeFromInt 4816 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48211, ordinaryIncomeNonSS: makeFromInt 100384, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36576, stateTaxDue: makeFromInt 9644 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33117, stateTaxDue: makeFromInt 12181 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46373, ordinaryIncomeNonSS: makeFromInt 137113, qualifiedIncome: makeFromInt 73329, itemizedDeductions: makeFromInt 13916, federalTaxDue: makeFromInt 41016, stateTaxDue: makeFromInt 9947 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83873, qualifiedIncome: makeFromInt 21426, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18047, stateTaxDue: makeFromInt 4717 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121895, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14161, federalTaxDue: makeFromInt 26715, stateTaxDue: makeFromInt 5520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46906, ordinaryIncomeNonSS: makeFromInt 116364, qualifiedIncome: makeFromInt 36656, itemizedDeductions: makeFromInt 5997, federalTaxDue: makeFromInt 31937, stateTaxDue: makeFromInt 7355 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12407, ordinaryIncomeNonSS: makeFromInt 47752, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17052, federalTaxDue: makeFromInt 10456, stateTaxDue: makeFromInt 6713 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5768, ordinaryIncomeNonSS: makeFromInt 60117, qualifiedIncome: makeFromInt 7831, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5058, stateTaxDue: makeFromInt 2822 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7204, ordinaryIncomeNonSS: makeFromInt 34817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13365, federalTaxDue: makeFromInt 733, stateTaxDue: makeFromInt 1225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101568, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6950, federalTaxDue: makeFromInt 34347, stateTaxDue: makeFromInt 9627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70965, itemizedDeductions: makeFromInt 21408, federalTaxDue: makeFromInt 1942, stateTaxDue: makeFromInt 3073 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118961, qualifiedIncome: makeFromInt 78960, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40902, stateTaxDue: makeFromInt 9441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45944, ordinaryIncomeNonSS: makeFromInt 130700, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17244, federalTaxDue: makeFromInt 34605, stateTaxDue: makeFromInt 6441 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142201, qualifiedIncome: makeFromInt 54292, itemizedDeductions: makeFromInt 7725, federalTaxDue: makeFromInt 32580, stateTaxDue: makeFromInt 9570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3744, ordinaryIncomeNonSS: makeFromInt 4618, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96570, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50709, stateTaxDue: makeFromInt 12126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17700, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14240, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14284, ordinaryIncomeNonSS: makeFromInt 79738, qualifiedIncome: makeFromInt 63584, itemizedDeductions: makeFromInt 21856, federalTaxDue: makeFromInt 15904, stateTaxDue: makeFromInt 6657 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18115, ordinaryIncomeNonSS: makeFromInt 30681, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12077, federalTaxDue: makeFromInt 2375, stateTaxDue: makeFromInt 1218 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15337, stateTaxDue: makeFromInt 6368 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29233, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82245, itemizedDeductions: makeFromInt 16216, federalTaxDue: makeFromInt 2187, stateTaxDue: makeFromInt 3746 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38086, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65504, itemizedDeductions: makeFromInt 7828, federalTaxDue: makeFromInt 4804, stateTaxDue: makeFromInt 2700 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30571, ordinaryIncomeNonSS: makeFromInt 26720, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12853, federalTaxDue: makeFromInt 2705, stateTaxDue: makeFromInt 1138 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46711, ordinaryIncomeNonSS: makeFromInt 66930, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7525, stateTaxDue: makeFromInt 2761 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5895, ordinaryIncomeNonSS: makeFromInt 83774, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6656, stateTaxDue: makeFromInt 3714 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29557, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 93 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36148, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1132 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11102, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136713, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19006, federalTaxDue: makeFromInt 20460, stateTaxDue: makeFromInt 6461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18392, ordinaryIncomeNonSS: makeFromInt 9634, qualifiedIncome: makeFromInt 59194, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 862, stateTaxDue: makeFromInt 3061 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106574, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10624, federalTaxDue: makeFromInt 20598, stateTaxDue: makeFromInt 4782 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17954, qualifiedIncome: makeFromInt 91223, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19512, stateTaxDue: makeFromInt 5221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25296, ordinaryIncomeNonSS: makeFromInt 131753, qualifiedIncome: makeFromInt 32723, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34475, stateTaxDue: makeFromInt 8041 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 74742, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24192, federalTaxDue: makeFromInt 5794, stateTaxDue: makeFromInt 3465 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19108, ordinaryIncomeNonSS: makeFromInt 76302, qualifiedIncome: makeFromInt 13113, itemizedDeductions: makeFromInt 14380, federalTaxDue: makeFromInt 8165, stateTaxDue: makeFromInt 3869 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28967, qualifiedIncome: makeFromInt 4491, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 457, stateTaxDue: makeFromInt 1245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24063, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35828, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1276 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22758, ordinaryIncomeNonSS: makeFromInt 132163, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6353, federalTaxDue: makeFromInt 23622, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6668, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12374, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12563, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17379, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 53 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13731, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38704, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 158, stateTaxDue: makeFromInt 1750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32534, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28144, federalTaxDue: makeFromInt 34, stateTaxDue: makeFromInt 1435 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64606, qualifiedIncome: makeFromInt 969, itemizedDeductions: makeFromInt 14071, federalTaxDue: makeFromInt 5009, stateTaxDue: makeFromInt 2904 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38979, ordinaryIncomeNonSS: makeFromInt 100405, qualifiedIncome: makeFromInt 71439, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23015, stateTaxDue: makeFromInt 8111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44310, ordinaryIncomeNonSS: makeFromInt 86310, qualifiedIncome: makeFromInt 48912, itemizedDeductions: makeFromInt 3891, federalTaxDue: makeFromInt 27652, stateTaxDue: makeFromInt 6468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73142, qualifiedIncome: makeFromInt 80057, itemizedDeductions: makeFromInt 8483, federalTaxDue: makeFromInt 16864, stateTaxDue: makeFromInt 7262 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 309, ordinaryIncomeNonSS: makeFromInt 99302, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29049, federalTaxDue: makeFromInt 10062, stateTaxDue: makeFromInt 4514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76782, qualifiedIncome: makeFromInt 72128, itemizedDeductions: makeFromInt 6555, federalTaxDue: makeFromInt 23135, stateTaxDue: makeFromInt 7370 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22278, ordinaryIncomeNonSS: makeFromInt 23290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12196, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 759 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10820, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88504, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29049, stateTaxDue: makeFromInt 8750 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23662, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96266, itemizedDeductions: makeFromInt 8520, federalTaxDue: makeFromInt 2320, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30759, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39814, ordinaryIncomeNonSS: makeFromInt 128890, qualifiedIncome: makeFromInt 45963, itemizedDeductions: makeFromInt 27330, federalTaxDue: makeFromInt 33680, stateTaxDue: makeFromInt 8489 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35862, ordinaryIncomeNonSS: makeFromInt 93282, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24481, federalTaxDue: makeFromInt 19647, stateTaxDue: makeFromInt 4533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48913, ordinaryIncomeNonSS: makeFromInt 2888, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3717, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6576, ordinaryIncomeNonSS: makeFromInt 84102, qualifiedIncome: makeFromInt 19957, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6910, stateTaxDue: makeFromInt 4609 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9988, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20593, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46429, qualifiedIncome: makeFromInt 50934, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10637, stateTaxDue: makeFromInt 4193 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48932, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16836, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34539, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9876, federalTaxDue: makeFromInt 30306, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12133, federalTaxDue: makeFromInt 14673, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8709, ordinaryIncomeNonSS: makeFromInt 5910, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4572, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78507, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 481, stateTaxDue: makeFromInt 3351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2625 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1714, ordinaryIncomeNonSS: makeFromInt 95643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5053, federalTaxDue: makeFromInt 11244, stateTaxDue: makeFromInt 4207 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16960, qualifiedIncome: makeFromInt 99840, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8319, stateTaxDue: makeFromInt 5610 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17974, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8233, ordinaryIncomeNonSS: makeFromInt 52758, qualifiedIncome: makeFromInt 7756, itemizedDeductions: makeFromInt 12006, federalTaxDue: makeFromInt 7827, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3098, ordinaryIncomeNonSS: makeFromInt 76623, qualifiedIncome: makeFromInt 6619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7446, stateTaxDue: makeFromInt 3907 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40788, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4925, stateTaxDue: makeFromInt 1584 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14810, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47805, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15184, itemizedDeductions: makeFromInt 25121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98178, qualifiedIncome: makeFromInt 5799, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11486, stateTaxDue: makeFromInt 4944 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75304, itemizedDeductions: makeFromInt 14143, federalTaxDue: makeFromInt 3676, stateTaxDue: makeFromInt 3494 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10803, ordinaryIncomeNonSS: makeFromInt 32097, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 755, stateTaxDue: makeFromInt 1130 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40240, ordinaryIncomeNonSS: makeFromInt 43620, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 167, federalTaxDue: makeFromInt 21907, stateTaxDue: makeFromInt 6606 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48345, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3892, stateTaxDue: makeFromInt 1962 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64521, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10727, stateTaxDue: makeFromInt 2971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9970, ordinaryIncomeNonSS: makeFromInt 50204, qualifiedIncome: makeFromInt 79530, itemizedDeductions: makeFromInt 18886, federalTaxDue: makeFromInt 14430, stateTaxDue: makeFromInt 6270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31684, ordinaryIncomeNonSS: makeFromInt 126024, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28967, federalTaxDue: makeFromInt 17477, stateTaxDue: makeFromInt 5774 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145569, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25244, stateTaxDue: makeFromInt 7023 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13859, ordinaryIncomeNonSS: makeFromInt 96662, qualifiedIncome: makeFromInt 63510, itemizedDeductions: makeFromInt 4946, federalTaxDue: makeFromInt 19062, stateTaxDue: makeFromInt 7534 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11160, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34122, ordinaryIncomeNonSS: makeFromInt 44131, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23473, stateTaxDue: makeFromInt 6952 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32513, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40421, itemizedDeductions: makeFromInt 25419, federalTaxDue: makeFromInt 30532, stateTaxDue: makeFromInt 9059 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26418, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27539, federalTaxDue: makeFromInt 26759, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131146, qualifiedIncome: makeFromInt 89371, itemizedDeductions: makeFromInt 4507, federalTaxDue: makeFromInt 32141, stateTaxDue: makeFromInt 10451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10830, ordinaryIncomeNonSS: makeFromInt 129770, qualifiedIncome: makeFromInt 55291, itemizedDeductions: makeFromInt 10815, federalTaxDue: makeFromInt 36081, stateTaxDue: makeFromInt 9214 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39270, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25572, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86057, qualifiedIncome: makeFromInt 41147, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18404, stateTaxDue: makeFromInt 6263 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18454, qualifiedIncome: makeFromInt 47519, itemizedDeductions: makeFromInt 26809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2824 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7171, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16916, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24891, stateTaxDue: makeFromInt 7860 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11450, qualifiedIncome: makeFromInt 5591, itemizedDeductions: makeFromInt 21541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 377 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19692, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14863, federalTaxDue: makeFromInt 78, stateTaxDue: makeFromInt 657 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18227, federalTaxDue: makeFromInt 24836, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20344, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9492, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124509, qualifiedIncome: makeFromInt 52382, itemizedDeductions: makeFromInt 5070, federalTaxDue: makeFromInt 28047, stateTaxDue: makeFromInt 8390 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91370, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5975, federalTaxDue: makeFromInt 13276, stateTaxDue: makeFromInt 4392 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 847, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17594, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31721, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23304, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57993, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1151, stateTaxDue: makeFromInt 2383 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15541, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50991, itemizedDeductions: makeFromInt 10113, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 9595 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29494, qualifiedIncome: makeFromInt 34423, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2701, stateTaxDue: makeFromInt 2741 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45214, itemizedDeductions: makeFromInt 25545, federalTaxDue: makeFromInt 30673, stateTaxDue: makeFromInt 9506 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31195, ordinaryIncomeNonSS: makeFromInt 22440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1784, federalTaxDue: makeFromInt 1675, stateTaxDue: makeFromInt 667 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23887, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33365, stateTaxDue: makeFromInt 7271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37211, ordinaryIncomeNonSS: makeFromInt 49922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4775, federalTaxDue: makeFromInt 9522, stateTaxDue: makeFromInt 2118 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 635, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52021, itemizedDeductions: makeFromInt 2938, federalTaxDue: makeFromInt 1552, stateTaxDue: makeFromInt 2146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44041, ordinaryIncomeNonSS: makeFromInt 20949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1999, stateTaxDue: makeFromInt 593 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32213, itemizedDeductions: makeFromInt 14290, federalTaxDue: makeFromInt 589, stateTaxDue: makeFromInt 1296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43580, qualifiedIncome: makeFromInt 57691, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1628, stateTaxDue: makeFromInt 4389 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47230, ordinaryIncomeNonSS: makeFromInt 110406, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22768, stateTaxDue: makeFromInt 5265 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79549, itemizedDeductions: makeFromInt 19635, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3303 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34554, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33918, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42262, ordinaryIncomeNonSS: makeFromInt 25779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 695, stateTaxDue: makeFromInt 614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21657, ordinaryIncomeNonSS: makeFromInt 92520, qualifiedIncome: makeFromInt 25872, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14943, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46856, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96750, itemizedDeductions: makeFromInt 3834, federalTaxDue: makeFromInt 10892, stateTaxDue: makeFromInt 4463 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113383, qualifiedIncome: makeFromInt 81132, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30089, stateTaxDue: makeFromInt 9471 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68593, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19147, stateTaxDue: makeFromInt 8055 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29353, ordinaryIncomeNonSS: makeFromInt 33069, qualifiedIncome: makeFromInt 88027, itemizedDeductions: makeFromInt 8975, federalTaxDue: makeFromInt 20224, stateTaxDue: makeFromInt 5951 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48922, itemizedDeductions: makeFromInt 16901, federalTaxDue: makeFromInt 27028, stateTaxDue: makeFromInt 9492 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28672, ordinaryIncomeNonSS: makeFromInt 45263, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8415, federalTaxDue: makeFromInt 8019, stateTaxDue: makeFromInt 2008 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70954, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5536, stateTaxDue: makeFromInt 3068 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139527, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2987, federalTaxDue: makeFromInt 21253, stateTaxDue: makeFromInt 6401 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19439, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2289, stateTaxDue: makeFromInt 2440 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37127, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14162, federalTaxDue: makeFromInt 41542, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38433, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27699, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25890, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64195, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16598, federalTaxDue: makeFromInt 6658, stateTaxDue: makeFromInt 3050 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47, ordinaryIncomeNonSS: makeFromInt 46552, qualifiedIncome: makeFromInt 31279, itemizedDeductions: makeFromInt 19722, federalTaxDue: makeFromInt 1929, stateTaxDue: makeFromInt 3417 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4056, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23240, itemizedDeductions: makeFromInt 25160, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140805, qualifiedIncome: makeFromInt 2858, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16634, stateTaxDue: makeFromInt 6708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5721, stateTaxDue: makeFromInt 2776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12100, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33424, ordinaryIncomeNonSS: makeFromInt 110141, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27984, federalTaxDue: makeFromInt 15559, stateTaxDue: makeFromInt 4832 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23312, ordinaryIncomeNonSS: makeFromInt 141280, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18949, federalTaxDue: makeFromInt 39727, stateTaxDue: makeFromInt 11754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40108, itemizedDeductions: makeFromInt 11229, federalTaxDue: makeFromInt 2493, stateTaxDue: makeFromInt 1699 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33889, stateTaxDue: makeFromInt 6584 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15958, ordinaryIncomeNonSS: makeFromInt 17667, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 308 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7929, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16559, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64107, itemizedDeductions: makeFromInt 27249, federalTaxDue: makeFromInt 3365, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134738, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37645, stateTaxDue: makeFromInt 11282 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9857, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6340, ordinaryIncomeNonSS: makeFromInt 44721, qualifiedIncome: makeFromInt 57657, itemizedDeductions: makeFromInt 4147, federalTaxDue: makeFromInt 6464, stateTaxDue: makeFromInt 4772 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2442, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8982, federalTaxDue: makeFromInt 28465, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46801, ordinaryIncomeNonSS: makeFromInt 3866, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7179, stateTaxDue: makeFromInt 4718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17338, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25093, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1150, ordinaryIncomeNonSS: makeFromInt 77655, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8233, federalTaxDue: makeFromInt 7085, stateTaxDue: makeFromInt 3508 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39005, itemizedDeductions: makeFromInt 17355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16286, ordinaryIncomeNonSS: makeFromInt 66296, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8596, stateTaxDue: makeFromInt 2932 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30384, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80499, itemizedDeductions: makeFromInt 29499, federalTaxDue: makeFromInt 4162, stateTaxDue: makeFromInt 3520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46516, ordinaryIncomeNonSS: makeFromInt 52621, qualifiedIncome: makeFromInt 26366, itemizedDeductions: makeFromInt 17553, federalTaxDue: makeFromInt 11842, stateTaxDue: makeFromInt 3478 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18068, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22342, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 711 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68874, qualifiedIncome: makeFromInt 60822, itemizedDeductions: makeFromInt 11385, federalTaxDue: makeFromInt 16781, stateTaxDue: makeFromInt 6268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132053, qualifiedIncome: makeFromInt 98449, itemizedDeductions: makeFromInt 22918, federalTaxDue: makeFromInt 43496, stateTaxDue: makeFromInt 10950 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43424, ordinaryIncomeNonSS: makeFromInt 85519, qualifiedIncome: makeFromInt 69560, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22596, stateTaxDue: makeFromInt 7079 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99251, qualifiedIncome: makeFromInt 92170, itemizedDeductions: makeFromInt 24971, federalTaxDue: makeFromInt 25784, stateTaxDue: makeFromInt 9316 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49207, ordinaryIncomeNonSS: makeFromInt 136557, qualifiedIncome: makeFromInt 95614, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 47737, stateTaxDue: makeFromInt 11616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31351, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18189, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4378, itemizedDeductions: makeFromInt 9406, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43646, ordinaryIncomeNonSS: makeFromInt 91396, qualifiedIncome: makeFromInt 7883, itemizedDeductions: makeFromInt 874, federalTaxDue: makeFromInt 14679, stateTaxDue: makeFromInt 4489 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101025, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18217, federalTaxDue: makeFromInt 15428, stateTaxDue: makeFromInt 4928 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13581, itemizedDeductions: makeFromInt 3143, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 468 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7185, ordinaryIncomeNonSS: makeFromInt 71274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25248, stateTaxDue: makeFromInt 8388 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145068, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22007, stateTaxDue: makeFromInt 7052 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34397, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24089, federalTaxDue: makeFromInt 626, stateTaxDue: makeFromInt 1530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30201, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46054, ordinaryIncomeNonSS: makeFromInt 70632, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13316, federalTaxDue: makeFromInt 13996, stateTaxDue: makeFromInt 3157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32220, ordinaryIncomeNonSS: makeFromInt 108775, qualifiedIncome: makeFromInt 54752, itemizedDeductions: makeFromInt 13072, federalTaxDue: makeFromInt 32270, stateTaxDue: makeFromInt 7993 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81674, itemizedDeductions: makeFromInt 9513, federalTaxDue: makeFromInt 6604, stateTaxDue: makeFromInt 3737 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46238, ordinaryIncomeNonSS: makeFromInt 121177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27500, stateTaxDue: makeFromInt 5731 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101944, qualifiedIncome: makeFromInt 88662, itemizedDeductions: makeFromInt 15379, federalTaxDue: makeFromInt 28096, stateTaxDue: makeFromInt 9275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46057, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21651, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12498, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29552, stateTaxDue: makeFromInt 7750 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2032, ordinaryIncomeNonSS: makeFromInt 3377, qualifiedIncome: makeFromInt 3260, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22240, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75637, itemizedDeductions: makeFromInt 6582, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3307 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39868, ordinaryIncomeNonSS: makeFromInt 126377, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19566, federalTaxDue: makeFromInt 25724, stateTaxDue: makeFromInt 5744 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18155, ordinaryIncomeNonSS: makeFromInt 45646, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4030, stateTaxDue: makeFromInt 1879 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4231, ordinaryIncomeNonSS: makeFromInt 142888, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11555, federalTaxDue: makeFromInt 17455, stateTaxDue: makeFromInt 6469 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36592, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1355 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39291, ordinaryIncomeNonSS: makeFromInt 77534, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21131, stateTaxDue: makeFromInt 3730 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39404, ordinaryIncomeNonSS: makeFromInt 135825, qualifiedIncome: makeFromInt 27185, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31974, stateTaxDue: makeFromInt 7776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30403, ordinaryIncomeNonSS: makeFromInt 30806, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19900, federalTaxDue: makeFromInt 536, stateTaxDue: makeFromInt 1143 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66412, itemizedDeductions: makeFromInt 20319, federalTaxDue: makeFromInt 7179, stateTaxDue: makeFromInt 3040 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29417, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38830, itemizedDeductions: makeFromInt 5426, federalTaxDue: makeFromInt 2941, stateTaxDue: makeFromInt 1756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146597, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26650, stateTaxDue: makeFromInt 7048 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44200, ordinaryIncomeNonSS: makeFromInt 23364, qualifiedIncome: makeFromInt 38641, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5959, stateTaxDue: makeFromInt 2788 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5230, itemizedDeductions: makeFromInt 15754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79792, itemizedDeductions: makeFromInt 4975, federalTaxDue: makeFromInt 12492, stateTaxDue: makeFromInt 3723 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77413, qualifiedIncome: makeFromInt 52745, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18927, stateTaxDue: makeFromInt 6033 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23820, federalTaxDue: makeFromInt 24119, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28467, ordinaryIncomeNonSS: makeFromInt 19088, qualifiedIncome: makeFromInt 63599, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5183, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7053, ordinaryIncomeNonSS: makeFromInt 9309, qualifiedIncome: makeFromInt 47520, itemizedDeductions: makeFromInt 21417, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1968, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83308, itemizedDeductions: makeFromInt 11156, federalTaxDue: makeFromInt 36158, stateTaxDue: makeFromInt 11090 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34769, ordinaryIncomeNonSS: makeFromInt 61544, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17898, federalTaxDue: makeFromInt 24505, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68398, qualifiedIncome: makeFromInt 7063, itemizedDeductions: makeFromInt 14157, federalTaxDue: makeFromInt 5377, stateTaxDue: makeFromInt 3398 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68690, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 54273, stateTaxDue: makeFromInt 10929 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36709, ordinaryIncomeNonSS: makeFromInt 115071, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17408, stateTaxDue: makeFromInt 5279 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16371, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26573, federalTaxDue: makeFromInt 5173, stateTaxDue: makeFromInt 1899 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25711, ordinaryIncomeNonSS: makeFromInt 39633, qualifiedIncome: makeFromInt 39597, itemizedDeductions: makeFromInt 22896, federalTaxDue: makeFromInt 8037, stateTaxDue: makeFromInt 3587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77557, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6539, stateTaxDue: makeFromInt 3405 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 740, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81985, qualifiedIncome: makeFromInt 82079, itemizedDeductions: makeFromInt 6487, federalTaxDue: makeFromInt 14164, stateTaxDue: makeFromInt 7728 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21503, itemizedDeductions: makeFromInt 4222, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11695, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6397, itemizedDeductions: makeFromInt 5827, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4321, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17348, ordinaryIncomeNonSS: makeFromInt 126521, qualifiedIncome: makeFromInt 85589, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27070, stateTaxDue: makeFromInt 10165 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2528, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34235, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10028, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40105, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17292, federalTaxDue: makeFromInt 46441, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26159, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24514, ordinaryIncomeNonSS: makeFromInt 105289, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5066, federalTaxDue: makeFromInt 14347, stateTaxDue: makeFromInt 4921 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42384, ordinaryIncomeNonSS: makeFromInt 18222, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22760, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12946, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63076, itemizedDeductions: makeFromInt 7515, federalTaxDue: makeFromInt 41198, stateTaxDue: makeFromInt 10520 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21416, ordinaryIncomeNonSS: makeFromInt 108659, qualifiedIncome: makeFromInt 21139, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15715, stateTaxDue: makeFromInt 6015 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90406, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45353, stateTaxDue: makeFromInt 11918 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74454, itemizedDeductions: makeFromInt 5660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3048 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13597, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12565, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7104, federalTaxDue: makeFromInt 52127, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23590, ordinaryIncomeNonSS: makeFromInt 68766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7397, stateTaxDue: makeFromInt 3058 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9104, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80633, itemizedDeductions: makeFromInt 27064, federalTaxDue: makeFromInt 710, stateTaxDue: makeFromInt 3663 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63191, qualifiedIncome: makeFromInt 64049, itemizedDeductions: makeFromInt 23919, federalTaxDue: makeFromInt 13754, stateTaxDue: makeFromInt 6107 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46649, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1957 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26997, federalTaxDue: makeFromInt 22159, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13776, ordinaryIncomeNonSS: makeFromInt 123633, qualifiedIncome: makeFromInt 4269, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20261, stateTaxDue: makeFromInt 6176 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106680, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10069, stateTaxDue: makeFromInt 4992 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19809, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46386, ordinaryIncomeNonSS: makeFromInt 88547, qualifiedIncome: makeFromInt 49139, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21874, stateTaxDue: makeFromInt 6509 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62861, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2757 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13461, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17512, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32099, ordinaryIncomeNonSS: makeFromInt 74017, qualifiedIncome: makeFromInt 90904, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32145, stateTaxDue: makeFromInt 8187 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39392, ordinaryIncomeNonSS: makeFromInt 9083, qualifiedIncome: makeFromInt 98738, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17083, stateTaxDue: makeFromInt 5070 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3729, ordinaryIncomeNonSS: makeFromInt 71535, qualifiedIncome: makeFromInt 27488, itemizedDeductions: makeFromInt 25823, federalTaxDue: makeFromInt 10667, stateTaxDue: makeFromInt 4496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125530, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8163, federalTaxDue: makeFromInt 48703, stateTaxDue: makeFromInt 11155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19038, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 869, stateTaxDue: makeFromInt 747 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96957, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10149, stateTaxDue: makeFromInt 4394 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35251, ordinaryIncomeNonSS: makeFromInt 118338, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37228, stateTaxDue: makeFromInt 10662 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145497, qualifiedIncome: makeFromInt 80206, itemizedDeductions: makeFromInt 28796, federalTaxDue: makeFromInt 42575, stateTaxDue: makeFromInt 10710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41630, ordinaryIncomeNonSS: makeFromInt 51947, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17902, stateTaxDue: makeFromInt 7198 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18297, ordinaryIncomeNonSS: makeFromInt 100458, qualifiedIncome: makeFromInt 83052, itemizedDeductions: makeFromInt 16808, federalTaxDue: makeFromInt 30556, stateTaxDue: makeFromInt 9135 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26636, itemizedDeductions: makeFromInt 4667, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33815, ordinaryIncomeNonSS: makeFromInt 148511, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23240, federalTaxDue: makeFromInt 44033, stateTaxDue: makeFromInt 12225 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40985, ordinaryIncomeNonSS: makeFromInt 116664, qualifiedIncome: makeFromInt 4978, itemizedDeductions: makeFromInt 8329, federalTaxDue: makeFromInt 24873, stateTaxDue: makeFromInt 5707 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2174, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3625, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63811, itemizedDeductions: makeFromInt 20889, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41037, ordinaryIncomeNonSS: makeFromInt 130445, qualifiedIncome: makeFromInt 8530, itemizedDeductions: makeFromInt 570, federalTaxDue: makeFromInt 25941, stateTaxDue: makeFromInt 6435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29360, ordinaryIncomeNonSS: makeFromInt 137752, qualifiedIncome: makeFromInt 38177, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29434, stateTaxDue: makeFromInt 8524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12516, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22167, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17955, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41923, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99533, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3635, stateTaxDue: makeFromInt 4423 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48379, ordinaryIncomeNonSS: makeFromInt 114536, qualifiedIncome: makeFromInt 28845, itemizedDeductions: makeFromInt 9857, federalTaxDue: makeFromInt 28945, stateTaxDue: makeFromInt 6794 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95274, qualifiedIncome: makeFromInt 21801, itemizedDeductions: makeFromInt 6176, federalTaxDue: makeFromInt 31986, stateTaxDue: makeFromInt 5746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91278, qualifiedIncome: makeFromInt 82735, itemizedDeductions: makeFromInt 16966, federalTaxDue: makeFromInt 16406, stateTaxDue: makeFromInt 8222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15158, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14098, ordinaryIncomeNonSS: makeFromInt 126803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29116, federalTaxDue: makeFromInt 16653, stateTaxDue: makeFromInt 5916 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49671, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30540, stateTaxDue: makeFromInt 9959 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47314, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38719, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94213, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4395, federalTaxDue: makeFromInt 36558, stateTaxDue: makeFromInt 9456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46564, ordinaryIncomeNonSS: makeFromInt 14811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15593, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 103 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68871, itemizedDeductions: makeFromInt 14288, federalTaxDue: makeFromInt 5541, stateTaxDue: makeFromInt 3069 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18589, ordinaryIncomeNonSS: makeFromInt 125489, qualifiedIncome: makeFromInt 8650, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26454, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61123, qualifiedIncome: makeFromInt 84183, itemizedDeductions: makeFromInt 29909, federalTaxDue: makeFromInt 8142, stateTaxDue: makeFromInt 6790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19945, ordinaryIncomeNonSS: makeFromInt 92667, qualifiedIncome: makeFromInt 2174, itemizedDeductions: makeFromInt 153, federalTaxDue: makeFromInt 21159, stateTaxDue: makeFromInt 4612 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37723, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88583, itemizedDeductions: makeFromInt 4006, federalTaxDue: makeFromInt 11519, stateTaxDue: makeFromInt 3974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132262, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20205, federalTaxDue: makeFromInt 23279, stateTaxDue: makeFromInt 6521 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130381, qualifiedIncome: makeFromInt 19852, itemizedDeductions: makeFromInt 5967, federalTaxDue: makeFromInt 25087, stateTaxDue: makeFromInt 7233 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70302, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 8461 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63921, itemizedDeductions: makeFromInt 5173, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 2721 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 50626, stateTaxDue: makeFromInt 12282 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10783, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22585, ordinaryIncomeNonSS: makeFromInt 119637, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24476, stateTaxDue: makeFromInt 5673 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115021, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16135, stateTaxDue: makeFromInt 5417 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23467, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48642, ordinaryIncomeNonSS: makeFromInt 86657, qualifiedIncome: makeFromInt 78063, itemizedDeductions: makeFromInt 21149, federalTaxDue: makeFromInt 33531, stateTaxDue: makeFromInt 8176 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10196, ordinaryIncomeNonSS: makeFromInt 108182, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2294, federalTaxDue: makeFromInt 15810, stateTaxDue: makeFromInt 4834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9067, ordinaryIncomeNonSS: makeFromInt 78803, qualifiedIncome: makeFromInt 99153, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23410, stateTaxDue: makeFromInt 8525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7358, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24563, itemizedDeductions: makeFromInt 18200, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1986, ordinaryIncomeNonSS: makeFromInt 123559, qualifiedIncome: makeFromInt 21085, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17683, stateTaxDue: makeFromInt 6948 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34, ordinaryIncomeNonSS: makeFromInt 128104, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17387, stateTaxDue: makeFromInt 6150 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80013, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21493, federalTaxDue: makeFromInt 16319, stateTaxDue: makeFromInt 8526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29684, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3766, federalTaxDue: makeFromInt 5850, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7726, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7780, stateTaxDue: makeFromInt 3788 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140488, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26082, stateTaxDue: makeFromInt 6818 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32679, ordinaryIncomeNonSS: makeFromInt 62327, qualifiedIncome: makeFromInt 77827, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15702, stateTaxDue: makeFromInt 6431 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74883, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45649, stateTaxDue: makeFromInt 10669 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38652, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33445, ordinaryIncomeNonSS: makeFromInt 91892, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30865, stateTaxDue: makeFromInt 9440 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143457, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21690, stateTaxDue: makeFromInt 6598 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32874, ordinaryIncomeNonSS: makeFromInt 7540, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6127, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 38 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149962, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17465, federalTaxDue: makeFromInt 25974, stateTaxDue: makeFromInt 7351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54566, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10841, federalTaxDue: makeFromInt 2859, stateTaxDue: makeFromInt 2232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87222, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24459, federalTaxDue: makeFromInt 19532, stateTaxDue: makeFromInt 8998 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29297, qualifiedIncome: makeFromInt 63145, itemizedDeductions: makeFromInt 18091, federalTaxDue: makeFromInt 716, stateTaxDue: makeFromInt 4266 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97272, itemizedDeductions: makeFromInt 2580, federalTaxDue: makeFromInt 8340, stateTaxDue: makeFromInt 4409 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10037, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 47 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26915, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 899, itemizedDeductions: makeFromInt 6437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29517, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26987, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51302, itemizedDeductions: makeFromInt 5372, federalTaxDue: makeFromInt 135, stateTaxDue: makeFromInt 2270 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46636, ordinaryIncomeNonSS: makeFromInt 105505, qualifiedIncome: makeFromInt 28321, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27387, stateTaxDue: makeFromInt 6274 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 15030, qualifiedIncome: makeFromInt 74164, itemizedDeductions: makeFromInt 21114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 4100 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28289, ordinaryIncomeNonSS: makeFromInt 91824, qualifiedIncome: makeFromInt 5503, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10951, stateTaxDue: makeFromInt 4391 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75422, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3558, stateTaxDue: makeFromInt 3296 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60577, qualifiedIncome: makeFromInt 86169, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20695, stateTaxDue: makeFromInt 6831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112680, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 551, federalTaxDue: makeFromInt 11500, stateTaxDue: makeFromInt 5094 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19003, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5117, stateTaxDue: makeFromInt 3213 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35536, itemizedDeductions: makeFromInt 9019, federalTaxDue: makeFromInt 32740, stateTaxDue: makeFromInt 9034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72849, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43794, stateTaxDue: makeFromInt 10937 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48985, ordinaryIncomeNonSS: makeFromInt 37399, qualifiedIncome: makeFromInt 11319, itemizedDeductions: makeFromInt 1400, federalTaxDue: makeFromInt 7636, stateTaxDue: makeFromInt 2061 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23697, ordinaryIncomeNonSS: makeFromInt 4755, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7136, federalTaxDue: makeFromInt 3312, stateTaxDue: makeFromInt 4644 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17504, ordinaryIncomeNonSS: makeFromInt 49897, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27528, federalTaxDue: makeFromInt 4264, stateTaxDue: makeFromInt 2240 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86121, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8559, federalTaxDue: makeFromInt 7063, stateTaxDue: makeFromInt 3739 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46934, itemizedDeductions: makeFromInt 20397, federalTaxDue: makeFromInt 789, stateTaxDue: makeFromInt 2092 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20983, ordinaryIncomeNonSS: makeFromInt 32532, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12625, federalTaxDue: makeFromInt 1364, stateTaxDue: makeFromInt 996 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14512, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 87 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24884, ordinaryIncomeNonSS: makeFromInt 100445, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11565, federalTaxDue: makeFromInt 16443, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9192, ordinaryIncomeNonSS: makeFromInt 56281, qualifiedIncome: makeFromInt 95642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 7141 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5355, ordinaryIncomeNonSS: makeFromInt 49894, qualifiedIncome: makeFromInt 62045, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3723, stateTaxDue: makeFromInt 5122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16075, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 613, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17690, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87721, itemizedDeductions: makeFromInt 1369, federalTaxDue: makeFromInt 10260, stateTaxDue: makeFromInt 4011 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17246, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18374, ordinaryIncomeNonSS: makeFromInt 4624, qualifiedIncome: makeFromInt 20670, itemizedDeductions: makeFromInt 536, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 790 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14844, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5636, federalTaxDue: makeFromInt 29736, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27262, federalTaxDue: makeFromInt 6412, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13625, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 42 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129985, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2756, federalTaxDue: makeFromInt 23175, stateTaxDue: makeFromInt 6024 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17592, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23705, ordinaryIncomeNonSS: makeFromInt 99126, qualifiedIncome: makeFromInt 72966, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27674, stateTaxDue: makeFromInt 8226 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44984, qualifiedIncome: makeFromInt 60285, itemizedDeductions: makeFromInt 14739, federalTaxDue: makeFromInt 4679, stateTaxDue: makeFromInt 4920 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46254, qualifiedIncome: makeFromInt 85110, itemizedDeductions: makeFromInt 22969, federalTaxDue: makeFromInt 7833, stateTaxDue: makeFromInt 6271 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17634, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28190, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 887 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35299, ordinaryIncomeNonSS: makeFromInt 93777, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27460, stateTaxDue: makeFromInt 9214 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25569, ordinaryIncomeNonSS: makeFromInt 61574, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26627, stateTaxDue: makeFromInt 8016 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51090, qualifiedIncome: makeFromInt 22492, itemizedDeductions: makeFromInt 4089, federalTaxDue: makeFromInt 3413, stateTaxDue: makeFromInt 3304 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49870, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45572, itemizedDeductions: makeFromInt 13843, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1671 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16819, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10860, federalTaxDue: makeFromInt 10732, stateTaxDue: makeFromInt 5366 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21060, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7508, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 159 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2140, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46795, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1950, stateTaxDue: makeFromInt 1865 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25623, ordinaryIncomeNonSS: makeFromInt 120201, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12155, federalTaxDue: makeFromInt 22875, stateTaxDue: makeFromInt 5681 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48732, ordinaryIncomeNonSS: makeFromInt 116398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21925, federalTaxDue: makeFromInt 20558, stateTaxDue: makeFromInt 5145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139977, qualifiedIncome: makeFromInt 95102, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32290, stateTaxDue: makeFromInt 11540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9854, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23183, ordinaryIncomeNonSS: makeFromInt 136155, qualifiedIncome: makeFromInt 31035, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31799, stateTaxDue: makeFromInt 8302 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9966, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11142, ordinaryIncomeNonSS: makeFromInt 13656, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 44 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45112, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15089, federalTaxDue: makeFromInt 34363, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39428, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9878, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5150, ordinaryIncomeNonSS: makeFromInt 29857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1922, stateTaxDue: makeFromInt 1038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33157, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116103, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22648, stateTaxDue: makeFromInt 5697 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58175, itemizedDeductions: makeFromInt 14632, federalTaxDue: makeFromInt 1200, stateTaxDue: makeFromInt 2234 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62659, qualifiedIncome: makeFromInt 67941, itemizedDeductions: makeFromInt 12964, federalTaxDue: makeFromInt 6825, stateTaxDue: makeFromInt 6055 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36588, ordinaryIncomeNonSS: makeFromInt 63246, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19951, federalTaxDue: makeFromInt 10638, stateTaxDue: makeFromInt 2787 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80483, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5821, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123006, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1350, federalTaxDue: makeFromInt 17662, stateTaxDue: makeFromInt 5723 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20530, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25880, ordinaryIncomeNonSS: makeFromInt 103289, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6131, federalTaxDue: makeFromInt 33647, stateTaxDue: makeFromInt 10021 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46772, ordinaryIncomeNonSS: makeFromInt 114977, qualifiedIncome: makeFromInt 55230, itemizedDeductions: makeFromInt 1038, federalTaxDue: makeFromInt 33069, stateTaxDue: makeFromInt 7935 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108155, qualifiedIncome: makeFromInt 4254, itemizedDeductions: makeFromInt 3851, federalTaxDue: makeFromInt 17842, stateTaxDue: makeFromInt 5252 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31430, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18866, ordinaryIncomeNonSS: makeFromInt 35372, qualifiedIncome: makeFromInt 91398, itemizedDeductions: makeFromInt 13636, federalTaxDue: makeFromInt 12855, stateTaxDue: makeFromInt 6037 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46614, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69707, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5000, stateTaxDue: makeFromInt 3106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27413, ordinaryIncomeNonSS: makeFromInt 145316, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21888, federalTaxDue: makeFromInt 22324, stateTaxDue: makeFromInt 6791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91519, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 53231, stateTaxDue: makeFromInt 11889 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19908, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26365, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 943 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16270, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24864, qualifiedIncome: makeFromInt 51499, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 821, stateTaxDue: makeFromInt 3446 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18072, ordinaryIncomeNonSS: makeFromInt 76606, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24090, federalTaxDue: makeFromInt 10872, stateTaxDue: makeFromInt 3683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 38, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28827, federalTaxDue: makeFromInt 22917, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15339, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 92 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 285, ordinaryIncomeNonSS: makeFromInt 88544, qualifiedIncome: makeFromInt 3051, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9008, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10664, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15442, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17140, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11050, stateTaxDue: makeFromInt 5750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41777, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81371, itemizedDeductions: makeFromInt 7590, federalTaxDue: makeFromInt 13256, stateTaxDue: makeFromInt 3926 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29471, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89395, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10067, stateTaxDue: makeFromInt 4015 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 723, ordinaryIncomeNonSS: makeFromInt 148139, qualifiedIncome: makeFromInt 26899, itemizedDeductions: makeFromInt 18458, federalTaxDue: makeFromInt 27829, stateTaxDue: makeFromInt 8499 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15497, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26628, ordinaryIncomeNonSS: makeFromInt 97671, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11499, federalTaxDue: makeFromInt 19581, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89144, itemizedDeductions: makeFromInt 17495, federalTaxDue: makeFromInt 5002, stateTaxDue: makeFromInt 4082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21321, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27172, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3421, ordinaryIncomeNonSS: makeFromInt 112786, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16117, stateTaxDue: makeFromInt 5150 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7964, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22025, stateTaxDue: makeFromInt 7403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57338, qualifiedIncome: makeFromInt 36046, itemizedDeductions: makeFromInt 27362, federalTaxDue: makeFromInt 12580, stateTaxDue: makeFromInt 3994 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41933, ordinaryIncomeNonSS: makeFromInt 83837, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14229, stateTaxDue: makeFromInt 3688 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44235, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25335, federalTaxDue: makeFromInt 1814, stateTaxDue: makeFromInt 1537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47293, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21613, federalTaxDue: makeFromInt 2582, stateTaxDue: makeFromInt 2065 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49174, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65092, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6492, stateTaxDue: makeFromInt 2800 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27218, itemizedDeductions: makeFromInt 17800, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 886 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25283, ordinaryIncomeNonSS: makeFromInt 126438, qualifiedIncome: makeFromInt 72758, itemizedDeductions: makeFromInt 5895, federalTaxDue: makeFromInt 29807, stateTaxDue: makeFromInt 9615 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16962, ordinaryIncomeNonSS: makeFromInt 17428, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24687, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 196 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44456, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40209, ordinaryIncomeNonSS: makeFromInt 18603, qualifiedIncome: makeFromInt 17254, itemizedDeductions: makeFromInt 4017, federalTaxDue: makeFromInt 3601, stateTaxDue: makeFromInt 1482 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23364, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 493 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 689, qualifiedIncome: makeFromInt 14895, itemizedDeductions: makeFromInt 85, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7736, ordinaryIncomeNonSS: makeFromInt 9413, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 16 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133108, qualifiedIncome: makeFromInt 80359, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35322, stateTaxDue: makeFromInt 9998 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16283, ordinaryIncomeNonSS: makeFromInt 53325, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17736, federalTaxDue: makeFromInt 4799, stateTaxDue: makeFromInt 2067 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82221, itemizedDeductions: makeFromInt 26479, federalTaxDue: makeFromInt 6273, stateTaxDue: makeFromInt 3856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72479, itemizedDeductions: makeFromInt 21648, federalTaxDue: makeFromInt 44562, stateTaxDue: makeFromInt 10898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26976, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12073, ordinaryIncomeNonSS: makeFromInt 57868, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13111, federalTaxDue: makeFromInt 4288, stateTaxDue: makeFromInt 2299 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25547, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 720, stateTaxDue: makeFromInt 745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77075, itemizedDeductions: makeFromInt 27427, federalTaxDue: makeFromInt 3191, stateTaxDue: makeFromInt 3479 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14869, ordinaryIncomeNonSS: makeFromInt 46847, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3451, stateTaxDue: makeFromInt 1867 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75922, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5116, stateTaxDue: makeFromInt 3321 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16693, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11836, federalTaxDue: makeFromInt 29713, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22820, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33970, ordinaryIncomeNonSS: makeFromInt 122252, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29210, federalTaxDue: makeFromInt 33319, stateTaxDue: makeFromInt 10438 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7401, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44877, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11270, federalTaxDue: makeFromInt 15193, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44019, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1295, ordinaryIncomeNonSS: makeFromInt 109215, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9551, stateTaxDue: makeFromInt 4986 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19534, federalTaxDue: makeFromInt 48153, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122439, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31717, stateTaxDue: makeFromInt 5816 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46475, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6361, stateTaxDue: makeFromInt 1869 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6894, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113208, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2858, federalTaxDue: makeFromInt 17878, stateTaxDue: makeFromInt 5205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11575, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40556, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31828, stateTaxDue: makeFromInt 9372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35643, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47966, itemizedDeductions: makeFromInt 13464, federalTaxDue: makeFromInt 4919, stateTaxDue: makeFromInt 2222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3282, qualifiedIncome: makeFromInt 64962, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2937 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28570, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84052, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38111, stateTaxDue: makeFromInt 11712 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33014, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47539, itemizedDeductions: makeFromInt 12850, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27993, ordinaryIncomeNonSS: makeFromInt 29844, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3242, stateTaxDue: makeFromInt 1237 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4162, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1804 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17921, stateTaxDue: makeFromInt 7982 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41809, ordinaryIncomeNonSS: makeFromInt 55941, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9780, stateTaxDue: makeFromInt 2302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9219, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12504, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22949, stateTaxDue: makeFromInt 7560 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21693, federalTaxDue: makeFromInt 22607, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8408, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21726, stateTaxDue: makeFromInt 7630 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26339, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111273, qualifiedIncome: makeFromInt 29115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19651, stateTaxDue: makeFromInt 6813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13182, ordinaryIncomeNonSS: makeFromInt 117084, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41060, stateTaxDue: makeFromInt 10847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19522, ordinaryIncomeNonSS: makeFromInt 48029, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20289, stateTaxDue: makeFromInt 7121 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41399, ordinaryIncomeNonSS: makeFromInt 75194, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26553, federalTaxDue: makeFromInt 14409, stateTaxDue: makeFromInt 3611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44264, ordinaryIncomeNonSS: makeFromInt 50520, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18834, federalTaxDue: makeFromInt 23036, stateTaxDue: makeFromInt 7248 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28978, ordinaryIncomeNonSS: makeFromInt 137281, qualifiedIncome: makeFromInt 16590, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31655, stateTaxDue: makeFromInt 7239 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30814, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1946, federalTaxDue: makeFromInt 32594, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114076, qualifiedIncome: makeFromInt 10382, itemizedDeductions: makeFromInt 15321, federalTaxDue: makeFromInt 16776, stateTaxDue: makeFromInt 5899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74247, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 50640, stateTaxDue: makeFromInt 11008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85065, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21062, federalTaxDue: makeFromInt 32156, stateTaxDue: makeFromInt 8990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117716, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18563, stateTaxDue: makeFromInt 5575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34560, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13411, stateTaxDue: makeFromInt 5484 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109930, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4393, federalTaxDue: makeFromInt 13649, stateTaxDue: makeFromInt 4922 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112925, qualifiedIncome: makeFromInt 50101, itemizedDeductions: makeFromInt 4675, federalTaxDue: makeFromInt 26937, stateTaxDue: makeFromInt 7676 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42504, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76178, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44402, stateTaxDue: makeFromInt 11188 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20616, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70202, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3035 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38180, ordinaryIncomeNonSS: makeFromInt 56211, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9855, stateTaxDue: makeFromInt 2418 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38728, ordinaryIncomeNonSS: makeFromInt 53209, qualifiedIncome: makeFromInt 19100, itemizedDeductions: makeFromInt 14819, federalTaxDue: makeFromInt 9882, stateTaxDue: makeFromInt 3137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48355, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5273, stateTaxDue: makeFromInt 2242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18837, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8436, ordinaryIncomeNonSS: makeFromInt 79071, qualifiedIncome: makeFromInt 54000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19456, stateTaxDue: makeFromInt 6399 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22327, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13129, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6165, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12582, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25243, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23773, stateTaxDue: makeFromInt 8087 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9787, stateTaxDue: makeFromInt 3654 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20661, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 658 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41683, itemizedDeductions: makeFromInt 7117, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44211, ordinaryIncomeNonSS: makeFromInt 129141, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30320, stateTaxDue: makeFromInt 6202 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8543, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6270, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85985, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8755, stateTaxDue: makeFromInt 4161 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 138887, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21931, federalTaxDue: makeFromInt 31904, stateTaxDue: makeFromInt 11619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83534, itemizedDeductions: makeFromInt 8974, federalTaxDue: makeFromInt 14341, stateTaxDue: makeFromInt 4036 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27433, ordinaryIncomeNonSS: makeFromInt 91631, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17895, stateTaxDue: makeFromInt 4127 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22102, ordinaryIncomeNonSS: makeFromInt 125009, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22160, stateTaxDue: makeFromInt 5676 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26186, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45864, itemizedDeductions: makeFromInt 18064, federalTaxDue: makeFromInt 34777, stateTaxDue: makeFromInt 9438 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28574, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22432, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 797 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47295, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74466, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1893, stateTaxDue: makeFromInt 3048 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26078, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14120, federalTaxDue: makeFromInt 30105, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45413, ordinaryIncomeNonSS: makeFromInt 134231, qualifiedIncome: makeFromInt 50287, itemizedDeductions: makeFromInt 2095, federalTaxDue: makeFromInt 36283, stateTaxDue: makeFromInt 8651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5268, ordinaryIncomeNonSS: makeFromInt 144551, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18014, stateTaxDue: makeFromInt 6753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35936, ordinaryIncomeNonSS: makeFromInt 39387, qualifiedIncome: makeFromInt 88847, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17219, stateTaxDue: makeFromInt 5989 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29548, ordinaryIncomeNonSS: makeFromInt 13291, qualifiedIncome: makeFromInt 56587, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8432, stateTaxDue: makeFromInt 3039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29579, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15029, federalTaxDue: makeFromInt 2896, stateTaxDue: makeFromInt 1060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46667, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14873, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49152, ordinaryIncomeNonSS: makeFromInt 145508, qualifiedIncome: makeFromInt 67614, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49238, stateTaxDue: makeFromInt 10522 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145234, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25217, federalTaxDue: makeFromInt 41529, stateTaxDue: makeFromInt 11787 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42575, ordinaryIncomeNonSS: makeFromInt 40757, qualifiedIncome: makeFromInt 26047, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11423, stateTaxDue: makeFromInt 3060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78046, qualifiedIncome: makeFromInt 30240, itemizedDeductions: makeFromInt 4077, federalTaxDue: makeFromInt 13181, stateTaxDue: makeFromInt 5094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88718, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41963, stateTaxDue: makeFromInt 11828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24129, ordinaryIncomeNonSS: makeFromInt 80661, qualifiedIncome: makeFromInt 5164, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12496, stateTaxDue: makeFromInt 3716 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46842, ordinaryIncomeNonSS: makeFromInt 71996, qualifiedIncome: makeFromInt 29646, itemizedDeductions: makeFromInt 23738, federalTaxDue: makeFromInt 19750, stateTaxDue: makeFromInt 4837 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120701, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17546, stateTaxDue: makeFromInt 5605 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16991, itemizedDeductions: makeFromInt 1514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 418 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38399, ordinaryIncomeNonSS: makeFromInt 63448, qualifiedIncome: makeFromInt 68315, itemizedDeductions: makeFromInt 10207, federalTaxDue: makeFromInt 21172, stateTaxDue: makeFromInt 6013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9263, qualifiedIncome: makeFromInt 20592, itemizedDeductions: makeFromInt 16214, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1176 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19619, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22195, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30835, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141838, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11870, federalTaxDue: makeFromInt 21690, stateTaxDue: makeFromInt 6517 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50164, itemizedDeductions: makeFromInt 29626, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2212 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8015, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25632, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33075, ordinaryIncomeNonSS: makeFromInt 46829, qualifiedIncome: makeFromInt 57464, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16489, stateTaxDue: makeFromInt 4891 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7983, qualifiedIncome: makeFromInt 13757, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 558 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4132, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35404, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24311, stateTaxDue: makeFromInt 8595 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45864, qualifiedIncome: makeFromInt 54680, itemizedDeductions: makeFromInt 15137, federalTaxDue: makeFromInt 7698, stateTaxDue: makeFromInt 4781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28036, ordinaryIncomeNonSS: makeFromInt 18774, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14648, federalTaxDue: makeFromInt 16061, stateTaxDue: makeFromInt 5833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2756, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6505, itemizedDeductions: makeFromInt 26661, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14787, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 268, ordinaryIncomeNonSS: makeFromInt 129728, qualifiedIncome: makeFromInt 97986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33147, stateTaxDue: makeFromInt 11011 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4231, stateTaxDue: makeFromInt 2946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34712, ordinaryIncomeNonSS: makeFromInt 133045, qualifiedIncome: makeFromInt 14987, itemizedDeductions: makeFromInt 19474, federalTaxDue: makeFromInt 27252, stateTaxDue: makeFromInt 6999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44945, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1945 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142820, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21537, stateTaxDue: makeFromInt 6566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6991, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103049, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28850, federalTaxDue: makeFromInt 11941, stateTaxDue: makeFromInt 4698 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24105, itemizedDeductions: makeFromInt 24036, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 781 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77770, qualifiedIncome: makeFromInt 26892, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5626, stateTaxDue: makeFromInt 4889 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7081, ordinaryIncomeNonSS: makeFromInt 138905, qualifiedIncome: makeFromInt 40702, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26325, stateTaxDue: makeFromInt 8605 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4376, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27690, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15615, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47969, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54738, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11227, stateTaxDue: makeFromInt 2567 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35166, ordinaryIncomeNonSS: makeFromInt 147162, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25551, stateTaxDue: makeFromInt 7056 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 593, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25532, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29187, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48828, itemizedDeductions: makeFromInt 10023, federalTaxDue: makeFromInt 4434, stateTaxDue: makeFromInt 2266 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5707, itemizedDeductions: makeFromInt 18140, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47010, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13791, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 235 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45266, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35861, itemizedDeductions: makeFromInt 29580, federalTaxDue: makeFromInt 34593, stateTaxDue: makeFromInt 8928 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33259, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78740, itemizedDeductions: makeFromInt 14826, federalTaxDue: makeFromInt 49478, stateTaxDue: makeFromInt 11441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16766, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96962, itemizedDeductions: makeFromInt 25957, federalTaxDue: makeFromInt 8897, stateTaxDue: makeFromInt 4517 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44433, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47993, stateTaxDue: makeFromInt 10582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34924, qualifiedIncome: makeFromInt 85753, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11113, stateTaxDue: makeFromInt 5808 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148301, qualifiedIncome: makeFromInt 63805, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45165, stateTaxDue: makeFromInt 10471 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13300, ordinaryIncomeNonSS: makeFromInt 125948, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21223, stateTaxDue: makeFromInt 5873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69818, itemizedDeductions: makeFromInt 4475, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2816 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15566, ordinaryIncomeNonSS: makeFromInt 65581, qualifiedIncome: makeFromInt 86897, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15525, stateTaxDue: makeFromInt 7054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53125, qualifiedIncome: makeFromInt 27029, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2199, stateTaxDue: makeFromInt 3741 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100858, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23692, federalTaxDue: makeFromInt 8526, stateTaxDue: makeFromInt 4593 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6842, ordinaryIncomeNonSS: makeFromInt 120314, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11702, federalTaxDue: makeFromInt 35872, stateTaxDue: makeFromInt 10561 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24293, ordinaryIncomeNonSS: makeFromInt 10158, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11912, federalTaxDue: makeFromInt 7244, stateTaxDue: makeFromInt 5169 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45970, ordinaryIncomeNonSS: makeFromInt 78526, qualifiedIncome: makeFromInt 83355, itemizedDeductions: makeFromInt 25741, federalTaxDue: makeFromInt 27119, stateTaxDue: makeFromInt 7719 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45853, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6986, stateTaxDue: makeFromInt 2038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21766, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62199, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42113, stateTaxDue: makeFromInt 10394 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33230, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28808, ordinaryIncomeNonSS: makeFromInt 109856, qualifiedIncome: makeFromInt 85474, itemizedDeductions: makeFromInt 5526, federalTaxDue: makeFromInt 32829, stateTaxDue: makeFromInt 9392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45799, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39009, stateTaxDue: makeFromInt 9761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8781, ordinaryIncomeNonSS: makeFromInt 98638, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9045, stateTaxDue: makeFromInt 4257 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16986, ordinaryIncomeNonSS: makeFromInt 135957, qualifiedIncome: makeFromInt 20787, itemizedDeductions: makeFromInt 3967, federalTaxDue: makeFromInt 26473, stateTaxDue: makeFromInt 7462 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83347, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4132, stateTaxDue: makeFromInt 3792 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24711, federalTaxDue: makeFromInt 21852, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40766, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37275, itemizedDeductions: makeFromInt 8971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1473 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2790, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3952, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47797, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19272, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40411, stateTaxDue: makeFromInt 8009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40629, ordinaryIncomeNonSS: makeFromInt 131749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14402, federalTaxDue: makeFromInt 28258, stateTaxDue: makeFromInt 6310 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19158, ordinaryIncomeNonSS: makeFromInt 63632, qualifiedIncome: makeFromInt 65438, itemizedDeductions: makeFromInt 15397, federalTaxDue: makeFromInt 10779, stateTaxDue: makeFromInt 5930 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1942, ordinaryIncomeNonSS: makeFromInt 66737, qualifiedIncome: makeFromInt 12013, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4226, stateTaxDue: makeFromInt 3567 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65049, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6694, stateTaxDue: makeFromInt 2798 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20627, ordinaryIncomeNonSS: makeFromInt 17881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 478, stateTaxDue: makeFromInt 639 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17548, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 242 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18408, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23331, itemizedDeductions: makeFromInt 4675, federalTaxDue: makeFromInt 25780, stateTaxDue: makeFromInt 8192 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16407, federalTaxDue: makeFromInt 26237, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49784, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3054, stateTaxDue: makeFromInt 2315 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1193, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3397, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48715, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 27 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18609, itemizedDeductions: makeFromInt 20755, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 296 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14816, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9914, stateTaxDue: makeFromInt 5427 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31590, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21920, federalTaxDue: makeFromInt 31205, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27215, federalTaxDue: makeFromInt 19931, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53793, itemizedDeductions: makeFromInt 2187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48329, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94035, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10215, stateTaxDue: makeFromInt 4571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21453, ordinaryIncomeNonSS: makeFromInt 95093, qualifiedIncome: makeFromInt 58311, itemizedDeductions: makeFromInt 11012, federalTaxDue: makeFromInt 27611, stateTaxDue: makeFromInt 7477 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138363, qualifiedIncome: makeFromInt 26056, itemizedDeductions: makeFromInt 28460, federalTaxDue: makeFromInt 23183, stateTaxDue: makeFromInt 8039 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55135, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6384, federalTaxDue: makeFromInt 4647, stateTaxDue: makeFromInt 2302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 778, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7160, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3179 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8789, ordinaryIncomeNonSS: makeFromInt 105288, qualifiedIncome: makeFromInt 52271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23253, stateTaxDue: makeFromInt 7613 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48111, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98182, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28178, federalTaxDue: makeFromInt 36366, stateTaxDue: makeFromInt 9760 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 883, ordinaryIncomeNonSS: makeFromInt 110980, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1736, federalTaxDue: makeFromInt 11263, stateTaxDue: makeFromInt 5007 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105845, qualifiedIncome: makeFromInt 49498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21178, stateTaxDue: makeFromInt 7501 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45700, ordinaryIncomeNonSS: makeFromInt 45283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8833, stateTaxDue: makeFromInt 1881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15659, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53813, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34779, stateTaxDue: makeFromInt 9736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20387, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 853, ordinaryIncomeNonSS: makeFromInt 23650, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10571, federalTaxDue: makeFromInt 11168, stateTaxDue: makeFromInt 5928 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115493, qualifiedIncome: makeFromInt 48496, itemizedDeductions: makeFromInt 23174, federalTaxDue: makeFromInt 27261, stateTaxDue: makeFromInt 7724 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10450, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75823, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5726, stateTaxDue: makeFromInt 3439 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43800, ordinaryIncomeNonSS: makeFromInt 69183, qualifiedIncome: makeFromInt 44616, itemizedDeductions: makeFromInt 17484, federalTaxDue: makeFromInt 15139, stateTaxDue: makeFromInt 5215 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6637, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15200, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9854, federalTaxDue: makeFromInt 20077, stateTaxDue: makeFromInt 5505 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38957, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14325, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25645, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 749, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34345, ordinaryIncomeNonSS: makeFromInt 32298, qualifiedIncome: makeFromInt 74707, itemizedDeductions: makeFromInt 10768, federalTaxDue: makeFromInt 7524, stateTaxDue: makeFromInt 4675 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2854, qualifiedIncome: makeFromInt 53641, itemizedDeductions: makeFromInt 12680, federalTaxDue: makeFromInt 1795, stateTaxDue: makeFromInt 2570 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97137, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14069, stateTaxDue: makeFromInt 4402 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17489, ordinaryIncomeNonSS: makeFromInt 90544, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9577, federalTaxDue: makeFromInt 27654, stateTaxDue: makeFromInt 8952 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25183, itemizedDeductions: makeFromInt 9883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1004 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58140, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15354, stateTaxDue: makeFromInt 7514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4444, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11492, ordinaryIncomeNonSS: makeFromInt 81712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12906, federalTaxDue: makeFromInt 12509, stateTaxDue: makeFromInt 3831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 54503, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22276, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27257, federalTaxDue: makeFromInt 26339, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7299, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35262, ordinaryIncomeNonSS: makeFromInt 31008, qualifiedIncome: makeFromInt 85377, itemizedDeductions: makeFromInt 28319, federalTaxDue: makeFromInt 8349, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45456, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52553, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34017, stateTaxDue: makeFromInt 9453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4086, ordinaryIncomeNonSS: makeFromInt 108355, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18917, stateTaxDue: makeFromInt 5179 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5410, ordinaryIncomeNonSS: makeFromInt 107788, qualifiedIncome: makeFromInt 42664, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23680, stateTaxDue: makeFromInt 7268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40024, ordinaryIncomeNonSS: makeFromInt 69448, qualifiedIncome: makeFromInt 64952, itemizedDeductions: makeFromInt 28675, federalTaxDue: makeFromInt 21814, stateTaxDue: makeFromInt 6265 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45621, qualifiedIncome: makeFromInt 47207, itemizedDeductions: makeFromInt 11705, federalTaxDue: makeFromInt 1832, stateTaxDue: makeFromInt 4166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36818, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43655, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95135, itemizedDeductions: makeFromInt 5263, federalTaxDue: makeFromInt 7434, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23371, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25472, federalTaxDue: makeFromInt 25288, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28738, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84905, itemizedDeductions: makeFromInt 13692, federalTaxDue: makeFromInt 37459, stateTaxDue: makeFromInt 11418 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22585, ordinaryIncomeNonSS: makeFromInt 36732, qualifiedIncome: makeFromInt 62771, itemizedDeductions: makeFromInt 1062, federalTaxDue: makeFromInt 14419, stateTaxDue: makeFromInt 4520 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 59151, qualifiedIncome: makeFromInt 13344, itemizedDeductions: makeFromInt 25723, federalTaxDue: makeFromInt 10302, stateTaxDue: makeFromInt 3015 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27656, ordinaryIncomeNonSS: makeFromInt 66440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3236, federalTaxDue: makeFromInt 7617, stateTaxDue: makeFromInt 2736 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13588, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113288, qualifiedIncome: makeFromInt 57123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26065, stateTaxDue: makeFromInt 8066 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34763, ordinaryIncomeNonSS: makeFromInt 9306, qualifiedIncome: makeFromInt 41368, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 845, stateTaxDue: makeFromInt 2059 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45353, ordinaryIncomeNonSS: makeFromInt 27704, qualifiedIncome: makeFromInt 29402, itemizedDeductions: makeFromInt 18277, federalTaxDue: makeFromInt 10582, stateTaxDue: makeFromInt 2400 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46469, ordinaryIncomeNonSS: makeFromInt 148359, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 54165, stateTaxDue: makeFromInt 12320 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21156, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19056, federalTaxDue: makeFromInt 17814, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10628, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6543, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51032, qualifiedIncome: makeFromInt 90703, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26122, stateTaxDue: makeFromInt 6800 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39845, ordinaryIncomeNonSS: makeFromInt 129864, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31448, stateTaxDue: makeFromInt 6195 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1821, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80045, itemizedDeductions: makeFromInt 2717, federalTaxDue: makeFromInt 427, stateTaxDue: makeFromInt 3429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 726, itemizedDeductions: makeFromInt 4992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82344, qualifiedIncome: makeFromInt 43617, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31638, stateTaxDue: makeFromInt 6200 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24286, federalTaxDue: makeFromInt 39007, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21528, itemizedDeductions: makeFromInt 10342, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 821 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32258, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49108, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16567, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113617, qualifiedIncome: makeFromInt 99032, itemizedDeductions: makeFromInt 15420, federalTaxDue: makeFromInt 42797, stateTaxDue: makeFromInt 10315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16501, ordinaryIncomeNonSS: makeFromInt 63920, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21166, stateTaxDue: makeFromInt 7911 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36303, ordinaryIncomeNonSS: makeFromInt 49933, qualifiedIncome: makeFromInt 53133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10995, stateTaxDue: makeFromInt 4760 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8785, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21133, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7606, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64793, itemizedDeductions: makeFromInt 13548, federalTaxDue: makeFromInt 34531, stateTaxDue: makeFromInt 10165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42546, qualifiedIncome: makeFromInt 27465, itemizedDeductions: makeFromInt 17024, federalTaxDue: makeFromInt 527, stateTaxDue: makeFromInt 3020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30025, qualifiedIncome: makeFromInt 74364, itemizedDeductions: makeFromInt 18544, federalTaxDue: makeFromInt 273, stateTaxDue: makeFromInt 4744 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20631, ordinaryIncomeNonSS: makeFromInt 71887, qualifiedIncome: makeFromInt 87266, itemizedDeductions: makeFromInt 25585, federalTaxDue: makeFromInt 23776, stateTaxDue: makeFromInt 7892 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51432, qualifiedIncome: makeFromInt 57254, itemizedDeductions: makeFromInt 714, federalTaxDue: makeFromInt 12049, stateTaxDue: makeFromInt 4979 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54340, qualifiedIncome: makeFromInt 55984, itemizedDeductions: makeFromInt 19333, federalTaxDue: makeFromInt 9660, stateTaxDue: makeFromInt 5026 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141742, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15818, stateTaxDue: makeFromInt 6412 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 98801, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20548, stateTaxDue: makeFromInt 4685 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19686, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2104 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52037, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1929, federalTaxDue: makeFromInt 16561, stateTaxDue: makeFromInt 6126 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43303, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29555, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1079 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49804, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 404, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92393, qualifiedIncome: makeFromInt 94752, itemizedDeductions: makeFromInt 22730, federalTaxDue: makeFromInt 26355, stateTaxDue: makeFromInt 9320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 9252, qualifiedIncome: makeFromInt 67112, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2507, stateTaxDue: makeFromInt 3344 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25006, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123716, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29824, federalTaxDue: makeFromInt 30093, stateTaxDue: makeFromInt 6085 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148514, qualifiedIncome: makeFromInt 48610, itemizedDeductions: makeFromInt 9654, federalTaxDue: makeFromInt 34345, stateTaxDue: makeFromInt 9625 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6419, ordinaryIncomeNonSS: makeFromInt 115796, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13024, stateTaxDue: makeFromInt 5403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9453, ordinaryIncomeNonSS: makeFromInt 60762, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4245, stateTaxDue: makeFromInt 2363 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26807, ordinaryIncomeNonSS: makeFromInt 49572, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14789, federalTaxDue: makeFromInt 16096, stateTaxDue: makeFromInt 7179 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16308, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68434, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4751, federalTaxDue: makeFromInt 23068, stateTaxDue: makeFromInt 8243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124528, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16025, federalTaxDue: makeFromInt 12624, stateTaxDue: makeFromInt 5751 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25151, ordinaryIncomeNonSS: makeFromInt 44732, qualifiedIncome: makeFromInt 19154, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7579, stateTaxDue: makeFromInt 2681 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16564, federalTaxDue: makeFromInt 7490, stateTaxDue: makeFromInt 4182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11506, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145605, qualifiedIncome: makeFromInt 45955, itemizedDeductions: makeFromInt 17123, federalTaxDue: makeFromInt 31750, stateTaxDue: makeFromInt 9323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97263, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22321, stateTaxDue: makeFromInt 4512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10068, ordinaryIncomeNonSS: makeFromInt 72969, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15973, federalTaxDue: makeFromInt 8298, stateTaxDue: makeFromInt 3273 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18014, federalTaxDue: makeFromInt 23042, stateTaxDue: makeFromInt 8847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25695, ordinaryIncomeNonSS: makeFromInt 75286, qualifiedIncome: makeFromInt 30286, itemizedDeductions: makeFromInt 79, federalTaxDue: makeFromInt 15735, stateTaxDue: makeFromInt 4833 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4934, itemizedDeductions: makeFromInt 20484, federalTaxDue: makeFromInt 25903, stateTaxDue: makeFromInt 7292 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66467, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8288, federalTaxDue: makeFromInt 7322, stateTaxDue: makeFromInt 2868 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76744, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27714, federalTaxDue: makeFromInt 3853, stateTaxDue: makeFromInt 3486 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42532, itemizedDeductions: makeFromInt 29451, federalTaxDue: makeFromInt 22997, stateTaxDue: makeFromInt 9166 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67416, qualifiedIncome: makeFromInt 16255, itemizedDeductions: makeFromInt 19786, federalTaxDue: makeFromInt 4518, stateTaxDue: makeFromInt 3709 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28754, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9988, itemizedDeductions: makeFromInt 21834, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 244 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41883, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14219, ordinaryIncomeNonSS: makeFromInt 50218, qualifiedIncome: makeFromInt 29453, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6022, stateTaxDue: makeFromInt 3512 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37025, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34590, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75717, qualifiedIncome: makeFromInt 33714, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5318, stateTaxDue: makeFromInt 5132 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107792, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14328, stateTaxDue: makeFromInt 5049 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44784, ordinaryIncomeNonSS: makeFromInt 7528, qualifiedIncome: makeFromInt 99057, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7732, stateTaxDue: makeFromInt 4654 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47012, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19786, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14368, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4489, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5343 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35980, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3026, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70036, itemizedDeductions: makeFromInt 25365, federalTaxDue: makeFromInt 4715, stateTaxDue: makeFromInt 3347 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3121, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72232, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30767, stateTaxDue: makeFromInt 10778 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27470, ordinaryIncomeNonSS: makeFromInt 112305, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14545, federalTaxDue: makeFromInt 35907, stateTaxDue: makeFromInt 10176 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47673, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2890, stateTaxDue: makeFromInt 2009 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26915, itemizedDeductions: makeFromInt 1029, federalTaxDue: makeFromInt 30745, stateTaxDue: makeFromInt 8591 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21601, ordinaryIncomeNonSS: makeFromInt 18293, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 280 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15759, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78385, itemizedDeductions: makeFromInt 17325, federalTaxDue: makeFromInt 5507, stateTaxDue: makeFromInt 3664 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98053, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10240, stateTaxDue: makeFromInt 4552 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24459, ordinaryIncomeNonSS: makeFromInt 14199, qualifiedIncome: makeFromInt 37189, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55476, qualifiedIncome: makeFromInt 69759, itemizedDeductions: makeFromInt 22422, federalTaxDue: makeFromInt 6943, stateTaxDue: makeFromInt 5938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29656, qualifiedIncome: makeFromInt 13151, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8192, stateTaxDue: makeFromInt 1685 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12811, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3359, ordinaryIncomeNonSS: makeFromInt 90289, qualifiedIncome: makeFromInt 64063, itemizedDeductions: makeFromInt 4990, federalTaxDue: makeFromInt 15350, stateTaxDue: makeFromInt 7219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73830, qualifiedIncome: makeFromInt 14494, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16784, stateTaxDue: makeFromInt 3961 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1962, qualifiedIncome: makeFromInt 1205, itemizedDeductions: makeFromInt 23546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42777, ordinaryIncomeNonSS: makeFromInt 35826, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4376, stateTaxDue: makeFromInt 1416 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16658, ordinaryIncomeNonSS: makeFromInt 109511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14248, stateTaxDue: makeFromInt 4932 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8583, ordinaryIncomeNonSS: makeFromInt 95252, qualifiedIncome: makeFromInt 40468, itemizedDeductions: makeFromInt 11504, federalTaxDue: makeFromInt 18513, stateTaxDue: makeFromInt 6211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20886, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42707, ordinaryIncomeNonSS: makeFromInt 134225, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48350, stateTaxDue: makeFromInt 11517 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34016, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2644, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33643, stateTaxDue: makeFromInt 7377 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11395, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23258, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89871, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1668, stateTaxDue: makeFromInt 3892 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31410, itemizedDeductions: makeFromInt 6388, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36853, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55401, itemizedDeductions: makeFromInt 17973, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2173 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17513, itemizedDeductions: makeFromInt 1576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107189, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23857, federalTaxDue: makeFromInt 39035, stateTaxDue: makeFromInt 9904 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110055, qualifiedIncome: makeFromInt 1511, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15030, stateTaxDue: makeFromInt 5241 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25335, ordinaryIncomeNonSS: makeFromInt 111635, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22668, stateTaxDue: makeFromInt 5127 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15540, ordinaryIncomeNonSS: makeFromInt 115695, qualifiedIncome: makeFromInt 10590, itemizedDeductions: makeFromInt 20232, federalTaxDue: makeFromInt 21959, stateTaxDue: makeFromInt 6216 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16681, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 626 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31270, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 989 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25993, itemizedDeductions: makeFromInt 8475, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66639, qualifiedIncome: makeFromInt 22511, itemizedDeductions: makeFromInt 3079, federalTaxDue: makeFromInt 17219, stateTaxDue: makeFromInt 4083 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93106, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25860, federalTaxDue: makeFromInt 6387, stateTaxDue: makeFromInt 4198 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69953, itemizedDeductions: makeFromInt 98, federalTaxDue: makeFromInt 11542, stateTaxDue: makeFromInt 3243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87139, qualifiedIncome: makeFromInt 12983, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10582, stateTaxDue: makeFromInt 4431 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32399, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21079, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76375, itemizedDeductions: makeFromInt 9754, federalTaxDue: makeFromInt 3544, stateTaxDue: makeFromInt 3514 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120057, qualifiedIncome: makeFromInt 23614, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23161, stateTaxDue: makeFromInt 6674 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 6497, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74846, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3164 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26205, ordinaryIncomeNonSS: makeFromInt 133711, qualifiedIncome: makeFromInt 50100, itemizedDeductions: makeFromInt 4737, federalTaxDue: makeFromInt 32211, stateTaxDue: makeFromInt 8616 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24161, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76297, itemizedDeductions: makeFromInt 29192, federalTaxDue: makeFromInt 3075, stateTaxDue: makeFromInt 3240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99137, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7311, stateTaxDue: makeFromInt 4709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49405, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49830, itemizedDeductions: makeFromInt 24918, federalTaxDue: makeFromInt 41623, stateTaxDue: makeFromInt 9763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18168, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 782, stateTaxDue: makeFromInt 702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10477, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 269 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10644, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84749, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33541, stateTaxDue: makeFromInt 11062 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71182, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28439, federalTaxDue: makeFromInt 17878, stateTaxDue: makeFromInt 7984 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47358, ordinaryIncomeNonSS: makeFromInt 111792, qualifiedIncome: makeFromInt 79996, itemizedDeductions: makeFromInt 17929, federalTaxDue: makeFromInt 36140, stateTaxDue: makeFromInt 9014 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34369, ordinaryIncomeNonSS: makeFromInt 39092, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3136, stateTaxDue: makeFromInt 1480 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127475, qualifiedIncome: makeFromInt 23423, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21873, stateTaxDue: makeFromInt 6970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 288, itemizedDeductions: makeFromInt 28127, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19010, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19890, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35515, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46118, stateTaxDue: makeFromInt 10367 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47254, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 43872, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1742, stateTaxDue: makeFromInt 1719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24241, ordinaryIncomeNonSS: makeFromInt 13250, qualifiedIncome: makeFromInt 91807, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2476, stateTaxDue: makeFromInt 4705 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3279, ordinaryIncomeNonSS: makeFromInt 115091, qualifiedIncome: makeFromInt 64098, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20776, stateTaxDue: makeFromInt 8484 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2650, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38088, itemizedDeductions: makeFromInt 24959, federalTaxDue: makeFromInt 24939, stateTaxDue: makeFromInt 8852 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4088, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19476, federalTaxDue: makeFromInt 13627, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18090, ordinaryIncomeNonSS: makeFromInt 60064, qualifiedIncome: makeFromInt 12884, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5441, stateTaxDue: makeFromInt 3068 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36124, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72795, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43840, stateTaxDue: makeFromInt 10914 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107122, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8860, stateTaxDue: makeFromInt 4681 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117035, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8499, federalTaxDue: makeFromInt 18396, stateTaxDue: makeFromInt 5597 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16081, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 329 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16526, itemizedDeductions: makeFromInt 3445, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 125, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36248, ordinaryIncomeNonSS: makeFromInt 142573, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31920, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44885, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19924, itemizedDeductions: makeFromInt 18321, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 741 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27389, ordinaryIncomeNonSS: makeFromInt 27038, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25997, federalTaxDue: makeFromInt 1126, stateTaxDue: makeFromInt 777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128150, qualifiedIncome: makeFromInt 27938, itemizedDeductions: makeFromInt 29969, federalTaxDue: makeFromInt 35484, stateTaxDue: makeFromInt 7736 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91250, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22407, stateTaxDue: makeFromInt 4308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80314, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3341 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116351, qualifiedIncome: makeFromInt 57398, itemizedDeductions: makeFromInt 15889, federalTaxDue: makeFromInt 26800, stateTaxDue: makeFromInt 8432 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72872, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4871, stateTaxDue: makeFromInt 3389 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 367, ordinaryIncomeNonSS: makeFromInt 66776, qualifiedIncome: makeFromInt 6413, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4208, stateTaxDue: makeFromInt 3080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27423, qualifiedIncome: makeFromInt 39905, itemizedDeductions: makeFromInt 8609, federalTaxDue: makeFromInt 338, stateTaxDue: makeFromInt 3005 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19027, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 496 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54848, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3751, stateTaxDue: makeFromInt 2167 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27600, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24178, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21224, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22565, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22098, ordinaryIncomeNonSS: makeFromInt 23886, qualifiedIncome: makeFromInt 92314, itemizedDeductions: makeFromInt 826, federalTaxDue: makeFromInt 10994, stateTaxDue: makeFromInt 5235 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3144, ordinaryIncomeNonSS: makeFromInt 59992, qualifiedIncome: makeFromInt 88362, itemizedDeductions: makeFromInt 1278, federalTaxDue: makeFromInt 11733, stateTaxDue: makeFromInt 7117 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36572, qualifiedIncome: makeFromInt 52934, itemizedDeductions: makeFromInt 26569, federalTaxDue: makeFromInt 15108, stateTaxDue: makeFromInt 4220 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38510, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5445, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65801, itemizedDeductions: makeFromInt 18960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2615 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34882, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50210, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42869, stateTaxDue: makeFromInt 9782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48996, qualifiedIncome: makeFromInt 64937, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23169, stateTaxDue: makeFromInt 5382 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36004, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24630, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48155, qualifiedIncome: makeFromInt 93219, itemizedDeductions: makeFromInt 25440, federalTaxDue: makeFromInt 15250, stateTaxDue: makeFromInt 6557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112119, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8293, federalTaxDue: makeFromInt 43338, stateTaxDue: makeFromInt 10390 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4618, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98476, qualifiedIncome: makeFromInt 75514, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17631, stateTaxDue: makeFromInt 8225 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7279, federalTaxDue: makeFromInt 2531, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40944, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38309, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18164, ordinaryIncomeNonSS: makeFromInt 49932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5014, stateTaxDue: makeFromInt 1922 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89321, qualifiedIncome: makeFromInt 10560, itemizedDeductions: makeFromInt 5010, federalTaxDue: makeFromInt 24468, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118959, qualifiedIncome: makeFromInt 36882, itemizedDeductions: makeFromInt 7962, federalTaxDue: makeFromInt 22125, stateTaxDue: makeFromInt 7397 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18916, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12767, itemizedDeductions: makeFromInt 7029, federalTaxDue: makeFromInt 32081, stateTaxDue: makeFromInt 7883 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47915, ordinaryIncomeNonSS: makeFromInt 47977, qualifiedIncome: makeFromInt 87725, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25057, stateTaxDue: makeFromInt 6330 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59891, itemizedDeductions: makeFromInt 11297, federalTaxDue: makeFromInt 2732, stateTaxDue: makeFromInt 2540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33351, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24465, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17255, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126833, qualifiedIncome: makeFromInt 33882, itemizedDeductions: makeFromInt 25035, federalTaxDue: makeFromInt 18824, stateTaxDue: makeFromInt 7361 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38837, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76180, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38039, stateTaxDue: makeFromInt 10776 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37718, ordinaryIncomeNonSS: makeFromInt 131665, qualifiedIncome: makeFromInt 10621, itemizedDeductions: makeFromInt 6682, federalTaxDue: makeFromInt 23451, stateTaxDue: makeFromInt 6639 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56455, qualifiedIncome: makeFromInt 43218, itemizedDeductions: makeFromInt 2351, federalTaxDue: makeFromInt 7352, stateTaxDue: makeFromInt 4609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32106, ordinaryIncomeNonSS: makeFromInt 107581, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15929, federalTaxDue: makeFromInt 19629, stateTaxDue: makeFromInt 5004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92494, itemizedDeductions: makeFromInt 17487, federalTaxDue: makeFromInt 32102, stateTaxDue: makeFromInt 11650 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46796, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1156, stateTaxDue: makeFromInt 1836 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17109, ordinaryIncomeNonSS: makeFromInt 41, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 271, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18236, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3184, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134206, qualifiedIncome: makeFromInt 49011, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40469, stateTaxDue: makeFromInt 8706 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19245, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 487 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44958, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12161, stateTaxDue: makeFromInt 7168 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23883, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65570, itemizedDeductions: makeFromInt 29075, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2804 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14153, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98333, qualifiedIncome: makeFromInt 40844, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19799, stateTaxDue: makeFromInt 6670 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13566, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22136, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43841, qualifiedIncome: makeFromInt 37499, itemizedDeductions: makeFromInt 13918, federalTaxDue: makeFromInt 4318, stateTaxDue: makeFromInt 3764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22716, qualifiedIncome: makeFromInt 39019, itemizedDeductions: makeFromInt 24058, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2632 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39549, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40319, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1748, stateTaxDue: makeFromInt 1710 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40356, itemizedDeductions: makeFromInt 6887, federalTaxDue: makeFromInt 32361, stateTaxDue: makeFromInt 9263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20087, ordinaryIncomeNonSS: makeFromInt 91605, qualifiedIncome: makeFromInt 15536, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12839, stateTaxDue: makeFromInt 5015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47198, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17466, federalTaxDue: makeFromInt 2833, stateTaxDue: makeFromInt 1785 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78834, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8245, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35707, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84901, itemizedDeductions: makeFromInt 21197, federalTaxDue: makeFromInt 1798, stateTaxDue: makeFromInt 3770 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46856, ordinaryIncomeNonSS: makeFromInt 41768, qualifiedIncome: makeFromInt 28345, itemizedDeductions: makeFromInt 25862, federalTaxDue: makeFromInt 11061, stateTaxDue: makeFromInt 3229 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33971, ordinaryIncomeNonSS: makeFromInt 132435, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10248, federalTaxDue: makeFromInt 27064, stateTaxDue: makeFromInt 6143 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12872, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43977, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95259, itemizedDeductions: makeFromInt 9229, federalTaxDue: makeFromInt 6534, stateTaxDue: makeFromInt 4511 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144438, qualifiedIncome: makeFromInt 30160, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21529, stateTaxDue: makeFromInt 8055 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16365, ordinaryIncomeNonSS: makeFromInt 3040, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43006, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18283, itemizedDeductions: makeFromInt 18948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 504 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22360, ordinaryIncomeNonSS: makeFromInt 97166, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19291, stateTaxDue: makeFromInt 4527 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41600, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14751, federalTaxDue: makeFromInt 11745, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51956, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10818, stateTaxDue: makeFromInt 2425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6464, ordinaryIncomeNonSS: makeFromInt 48129, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12257, federalTaxDue: makeFromInt 13870, stateTaxDue: makeFromInt 7106 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46857, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97120, itemizedDeductions: makeFromInt 19102, federalTaxDue: makeFromInt 3392, stateTaxDue: makeFromInt 4300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22607, qualifiedIncome: makeFromInt 69075, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4714, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91739, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7761, stateTaxDue: makeFromInt 4132 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121248, qualifiedIncome: makeFromInt 62739, itemizedDeductions: makeFromInt 26156, federalTaxDue: makeFromInt 19641, stateTaxDue: makeFromInt 8731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7194, ordinaryIncomeNonSS: makeFromInt 61910, qualifiedIncome: makeFromInt 24956, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4349, stateTaxDue: makeFromInt 3777 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15401, ordinaryIncomeNonSS: makeFromInt 84028, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13749, stateTaxDue: makeFromInt 3946 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72620, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2523, stateTaxDue: makeFromInt 3256 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134106, qualifiedIncome: makeFromInt 48273, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36262, stateTaxDue: makeFromInt 8864 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27508, ordinaryIncomeNonSS: makeFromInt 123586, qualifiedIncome: makeFromInt 32822, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22934, stateTaxDue: makeFromInt 7345 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77353, itemizedDeductions: makeFromInt 19597, federalTaxDue: makeFromInt 33394, stateTaxDue: makeFromInt 11044 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14807, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 102 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98373, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26446, federalTaxDue: makeFromInt 26683, stateTaxDue: makeFromInt 9796 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17046, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81723, itemizedDeductions: makeFromInt 7954, federalTaxDue: makeFromInt 6368, stateTaxDue: makeFromInt 3631 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87834, itemizedDeductions: makeFromInt 11766, federalTaxDue: makeFromInt 7483, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27952, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15433, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11497, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47242, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98007, qualifiedIncome: makeFromInt 93273, itemizedDeductions: makeFromInt 3375, federalTaxDue: makeFromInt 28251, stateTaxDue: makeFromInt 9109 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45053, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3729, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14689, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20699, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92073, qualifiedIncome: makeFromInt 91702, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41574, stateTaxDue: makeFromInt 9148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8072, ordinaryIncomeNonSS: makeFromInt 64943, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19454, stateTaxDue: makeFromInt 7861 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148784, qualifiedIncome: makeFromInt 35415, itemizedDeductions: makeFromInt 2047, federalTaxDue: makeFromInt 32623, stateTaxDue: makeFromInt 8735 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19421, ordinaryIncomeNonSS: makeFromInt 74816, qualifiedIncome: makeFromInt 6306, itemizedDeductions: makeFromInt 6173, federalTaxDue: makeFromInt 11625, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66946, qualifiedIncome: makeFromInt 12725, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4507, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114604, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21312, federalTaxDue: makeFromInt 10441, stateTaxDue: makeFromInt 5055 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34676, ordinaryIncomeNonSS: makeFromInt 10328, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15788, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 261 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46944, qualifiedIncome: makeFromInt 64394, itemizedDeductions: makeFromInt 20261, federalTaxDue: makeFromInt 2892, stateTaxDue: makeFromInt 5092 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17441, ordinaryIncomeNonSS: makeFromInt 47466, qualifiedIncome: makeFromInt 23231, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9572, stateTaxDue: makeFromInt 3080 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126036, qualifiedIncome: makeFromInt 87483, itemizedDeductions: makeFromInt 27682, federalTaxDue: makeFromInt 29365, stateTaxDue: makeFromInt 10301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28312, ordinaryIncomeNonSS: makeFromInt 57716, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24224, federalTaxDue: makeFromInt 6780, stateTaxDue: makeFromInt 2511 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31316, ordinaryIncomeNonSS: makeFromInt 74795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12725, federalTaxDue: makeFromInt 22097, stateTaxDue: makeFromInt 8065 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20957, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7455, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12101, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48653, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 78, federalTaxDue: makeFromInt 40464, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 67119, qualifiedIncome: makeFromInt 9137, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19089, stateTaxDue: makeFromInt 3461 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9012, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49056, itemizedDeductions: makeFromInt 11026, federalTaxDue: makeFromInt 1568, stateTaxDue: makeFromInt 2277 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30946, qualifiedIncome: makeFromInt 68477, itemizedDeductions: makeFromInt 29978, federalTaxDue: makeFromInt 15774, stateTaxDue: makeFromInt 4642 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24144, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34401, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3370, ordinaryIncomeNonSS: makeFromInt 69286, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17528, federalTaxDue: makeFromInt 5940, stateTaxDue: makeFromInt 2889 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17565, ordinaryIncomeNonSS: makeFromInt 112816, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16071, federalTaxDue: makeFromInt 13332, stateTaxDue: makeFromInt 5166 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61696, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1229, stateTaxDue: makeFromInt 2698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10186, itemizedDeductions: makeFromInt 11951, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 34 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14170, ordinaryIncomeNonSS: makeFromInt 10733, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 5162 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21601, stateTaxDue: makeFromInt 4704 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67912, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2567, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22934, ordinaryIncomeNonSS: makeFromInt 96987, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6564, federalTaxDue: makeFromInt 16030, stateTaxDue: makeFromInt 4396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35289, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45734, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2572, stateTaxDue: makeFromInt 1912 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15778, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26803, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1163, stateTaxDue: makeFromInt 2528 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28768, ordinaryIncomeNonSS: makeFromInt 101467, qualifiedIncome: makeFromInt 40233, itemizedDeductions: makeFromInt 15895, federalTaxDue: makeFromInt 24834, stateTaxDue: makeFromInt 6676 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22951, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56104, itemizedDeductions: makeFromInt 16331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59435, itemizedDeductions: makeFromInt 17499, federalTaxDue: makeFromInt 28521, stateTaxDue: makeFromInt 10028 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38396, ordinaryIncomeNonSS: makeFromInt 116985, qualifiedIncome: makeFromInt 48263, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29784, stateTaxDue: makeFromInt 7807 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3855, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17525, stateTaxDue: makeFromInt 4738 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1682, stateTaxDue: makeFromInt 2316 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21682, itemizedDeductions: makeFromInt 7275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99272, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18002, stateTaxDue: makeFromInt 4839 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114505, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21418, federalTaxDue: makeFromInt 25419, stateTaxDue: makeFromInt 10050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30582, qualifiedIncome: makeFromInt 33355, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 103, stateTaxDue: makeFromInt 2710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17418, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6642, itemizedDeductions: makeFromInt 4715, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93803, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38950, stateTaxDue: makeFromInt 11985 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16307, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27066, itemizedDeductions: makeFromInt 22841, federalTaxDue: makeFromInt 31984, stateTaxDue: makeFromInt 8598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24262, ordinaryIncomeNonSS: makeFromInt 128486, qualifiedIncome: makeFromInt 57610, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31688, stateTaxDue: makeFromInt 8730 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63900, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38761, ordinaryIncomeNonSS: makeFromInt 142115, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35672, stateTaxDue: makeFromInt 6901 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20336, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26311, stateTaxDue: makeFromInt 8142 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38929, ordinaryIncomeNonSS: makeFromInt 104507, qualifiedIncome: makeFromInt 57607, itemizedDeductions: makeFromInt 8580, federalTaxDue: makeFromInt 28924, stateTaxDue: makeFromInt 7731 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55560, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10539, stateTaxDue: makeFromInt 2385 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129946, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19856, federalTaxDue: makeFromInt 33199, stateTaxDue: makeFromInt 11299 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128115, qualifiedIncome: makeFromInt 33541, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24129, stateTaxDue: makeFromInt 7618 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 217, itemizedDeductions: makeFromInt 14869, federalTaxDue: makeFromInt 23293, stateTaxDue: makeFromInt 6936 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123663, qualifiedIncome: makeFromInt 99448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32246, stateTaxDue: makeFromInt 10781 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40509, ordinaryIncomeNonSS: makeFromInt 12789, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 203 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9976, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21932, ordinaryIncomeNonSS: makeFromInt 107750, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9541, federalTaxDue: makeFromInt 20642, stateTaxDue: makeFromInt 4933 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50572, qualifiedIncome: makeFromInt 48589, itemizedDeductions: makeFromInt 6498, federalTaxDue: makeFromInt 19641, stateTaxDue: makeFromInt 4629 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18971, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 534 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74741, itemizedDeductions: makeFromInt 11552, federalTaxDue: makeFromInt 3651, stateTaxDue: makeFromInt 3261 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27336, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12593, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8103, ordinaryIncomeNonSS: makeFromInt 47794, qualifiedIncome: makeFromInt 60986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3350, stateTaxDue: makeFromInt 4895 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3871, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24490, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2365, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79726, itemizedDeductions: makeFromInt 9793, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3311 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72980, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5927, stateTaxDue: makeFromInt 3274 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28925, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36374, ordinaryIncomeNonSS: makeFromInt 48249, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1518, federalTaxDue: makeFromInt 9800, stateTaxDue: makeFromInt 1957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49864, ordinaryIncomeNonSS: makeFromInt 16501, qualifiedIncome: makeFromInt 45999, itemizedDeductions: makeFromInt 4417, federalTaxDue: makeFromInt 14805, stateTaxDue: makeFromInt 2963 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43263, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1681, stateTaxDue: makeFromInt 1688 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50252, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2049, stateTaxDue: makeFromInt 2114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85557, qualifiedIncome: makeFromInt 1517, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14801, stateTaxDue: makeFromInt 4216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30337, ordinaryIncomeNonSS: makeFromInt 9924, qualifiedIncome: makeFromInt 93816, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6512, stateTaxDue: makeFromInt 4740 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18221, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14023, federalTaxDue: makeFromInt 24346, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36022, ordinaryIncomeNonSS: makeFromInt 122486, qualifiedIncome: makeFromInt 5414, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25907, stateTaxDue: makeFromInt 6116 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18211, qualifiedIncome: makeFromInt 33082, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4324, stateTaxDue: makeFromInt 2167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1185, ordinaryIncomeNonSS: makeFromInt 74891, qualifiedIncome: makeFromInt 16317, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5530, stateTaxDue: makeFromInt 3999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146724, qualifiedIncome: makeFromInt 50575, itemizedDeductions: makeFromInt 9372, federalTaxDue: makeFromInt 27597, stateTaxDue: makeFromInt 9409 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10885, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49065, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1667, stateTaxDue: makeFromInt 2278 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14954, ordinaryIncomeNonSS: makeFromInt 61889, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6121, stateTaxDue: makeFromInt 2720 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12255, ordinaryIncomeNonSS: makeFromInt 58890, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4440, stateTaxDue: makeFromInt 2429 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19936, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25463, federalTaxDue: makeFromInt 41710, stateTaxDue: makeFromInt 12282 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40103, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5220, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85198, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5020, federalTaxDue: makeFromInt 19562, stateTaxDue: makeFromInt 8996 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28195, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59422, itemizedDeductions: makeFromInt 6433, federalTaxDue: makeFromInt 1665, stateTaxDue: makeFromInt 2596 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22305, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26580, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24740, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39648, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54676, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43253, stateTaxDue: makeFromInt 9779 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19453, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39080, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13543, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48027, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94276, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49895, stateTaxDue: makeFromInt 12009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8247, federalTaxDue: makeFromInt 15680, stateTaxDue: makeFromInt 4321 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20686, ordinaryIncomeNonSS: makeFromInt 84713, qualifiedIncome: makeFromInt 56738, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20206, stateTaxDue: makeFromInt 6818 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31243, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20338, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47041, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19546, ordinaryIncomeNonSS: makeFromInt 4454, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40935, itemizedDeductions: makeFromInt 28522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1472 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17740, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14575, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86817, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39645, stateTaxDue: makeFromInt 11266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14446, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140962, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38025, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36893, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21831, itemizedDeductions: makeFromInt 18458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24374, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5894 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26628, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 478, stateTaxDue: makeFromInt 876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77324, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70887, itemizedDeductions: makeFromInt 28287, federalTaxDue: makeFromInt 4573, stateTaxDue: makeFromInt 3289 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97812, itemizedDeductions: makeFromInt 22641, federalTaxDue: makeFromInt 8979, stateTaxDue: makeFromInt 4560 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9942, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42095, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 524, stateTaxDue: makeFromInt 1718 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28951, ordinaryIncomeNonSS: makeFromInt 8243, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98877, qualifiedIncome: makeFromInt 80164, itemizedDeductions: makeFromInt 14445, federalTaxDue: makeFromInt 23842, stateTaxDue: makeFromInt 8703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8113, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9153, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40848, ordinaryIncomeNonSS: makeFromInt 34852, qualifiedIncome: makeFromInt 98933, itemizedDeductions: makeFromInt 16215, federalTaxDue: makeFromInt 12550, stateTaxDue: makeFromInt 6170 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41934, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22685, federalTaxDue: makeFromInt 10485, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26916, federalTaxDue: makeFromInt 7731, stateTaxDue: makeFromInt 2371 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30181, ordinaryIncomeNonSS: makeFromInt 19520, qualifiedIncome: makeFromInt 61206, itemizedDeductions: makeFromInt 902, federalTaxDue: makeFromInt 5516, stateTaxDue: makeFromInt 3668 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41834, ordinaryIncomeNonSS: makeFromInt 48278, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5396, stateTaxDue: makeFromInt 1739 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37656, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92098, itemizedDeductions: makeFromInt 10590, federalTaxDue: makeFromInt 8702, stateTaxDue: makeFromInt 4230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148289, qualifiedIncome: makeFromInt 48818, itemizedDeductions: makeFromInt 18301, federalTaxDue: makeFromInt 30350, stateTaxDue: makeFromInt 9604 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27033, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 897 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1075, qualifiedIncome: makeFromInt 31953, itemizedDeductions: makeFromInt 13393, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1256 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6475, ordinaryIncomeNonSS: makeFromInt 46317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13807, federalTaxDue: makeFromInt 2902, stateTaxDue: makeFromInt 1693 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 890, ordinaryIncomeNonSS: makeFromInt 116707, qualifiedIncome: makeFromInt 94948, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33141, stateTaxDue: makeFromInt 10328 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59888, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1635, stateTaxDue: makeFromInt 2580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13725, ordinaryIncomeNonSS: makeFromInt 67557, qualifiedIncome: makeFromInt 87757, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19843, stateTaxDue: makeFromInt 7370 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23519, ordinaryIncomeNonSS: makeFromInt 53727, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19831, federalTaxDue: makeFromInt 7472, stateTaxDue: makeFromInt 2231 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82581, qualifiedIncome: makeFromInt 87553, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28288, stateTaxDue: makeFromInt 8132 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37001, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54505, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2331 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52237, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2741, stateTaxDue: makeFromInt 2113 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11278, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2815, itemizedDeductions: makeFromInt 17338, federalTaxDue: makeFromInt 25983, stateTaxDue: makeFromInt 7266 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43851, ordinaryIncomeNonSS: makeFromInt 37637, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6, federalTaxDue: makeFromInt 4485, stateTaxDue: makeFromInt 1369 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28102, federalTaxDue: makeFromInt 21592, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91058, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10124, stateTaxDue: makeFromInt 4420 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84303, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6121, stateTaxDue: makeFromInt 3540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40231, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83708, itemizedDeductions: makeFromInt 227, federalTaxDue: makeFromInt 44023, stateTaxDue: makeFromInt 11110 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30722, ordinaryIncomeNonSS: makeFromInt 72744, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17459, federalTaxDue: makeFromInt 10880, stateTaxDue: makeFromInt 3261 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25830, itemizedDeductions: makeFromInt 5446, federalTaxDue: makeFromInt 411, stateTaxDue: makeFromInt 1037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25133, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28602, itemizedDeductions: makeFromInt 7002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1010 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1129, ordinaryIncomeNonSS: makeFromInt 81533, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21466, federalTaxDue: makeFromInt 5189, stateTaxDue: makeFromInt 3505 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31683, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1109 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66122, itemizedDeductions: makeFromInt 7994, federalTaxDue: makeFromInt 2358, stateTaxDue: makeFromInt 2821 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12921, ordinaryIncomeNonSS: makeFromInt 80839, qualifiedIncome: makeFromInt 25971, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17811, stateTaxDue: makeFromInt 5101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139324, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15879, stateTaxDue: makeFromInt 6491 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49071, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10480, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24135, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7838, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47985, qualifiedIncome: makeFromInt 16233, itemizedDeductions: makeFromInt 8572, federalTaxDue: makeFromInt 5400, stateTaxDue: makeFromInt 2756 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1249, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14320, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21424, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4894, ordinaryIncomeNonSS: makeFromInt 23651, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6959, federalTaxDue: makeFromInt 12083, stateTaxDue: makeFromInt 5928 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22636, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111871, qualifiedIncome: makeFromInt 47188, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18376, stateTaxDue: makeFromInt 7459 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42744, ordinaryIncomeNonSS: makeFromInt 41113, qualifiedIncome: makeFromInt 39705, itemizedDeductions: makeFromInt 12953, federalTaxDue: makeFromInt 8078, stateTaxDue: makeFromInt 3435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109670, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21070, federalTaxDue: makeFromInt 23305, stateTaxDue: makeFromInt 5144 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29741, ordinaryIncomeNonSS: makeFromInt 34552, qualifiedIncome: makeFromInt 3448, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2494, stateTaxDue: makeFromInt 1591 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18041, itemizedDeductions: makeFromInt 15502, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32267, ordinaryIncomeNonSS: makeFromInt 33466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5019, stateTaxDue: makeFromInt 1360 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74368, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29094, federalTaxDue: makeFromInt 6077, stateTaxDue: makeFromInt 3568 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91961, qualifiedIncome: makeFromInt 5776, itemizedDeductions: makeFromInt 21059, federalTaxDue: makeFromInt 12255, stateTaxDue: makeFromInt 4632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 73076, qualifiedIncome: makeFromInt 91091, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18499, stateTaxDue: makeFromInt 7822 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10121, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 615, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51347, itemizedDeductions: makeFromInt 204, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1966 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6048, ordinaryIncomeNonSS: makeFromInt 109942, qualifiedIncome: makeFromInt 82948, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23438, stateTaxDue: makeFromInt 8970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134593, qualifiedIncome: makeFromInt 71047, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42567, stateTaxDue: makeFromInt 10039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 310 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134466, qualifiedIncome: makeFromInt 59999, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26641, stateTaxDue: makeFromInt 9148 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108439, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28321, stateTaxDue: makeFromInt 9847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49742, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54328, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 408, stateTaxDue: makeFromInt 2220 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119737, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11570, stateTaxDue: makeFromInt 5512 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34932, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97682, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8652, stateTaxDue: makeFromInt 4429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48809, ordinaryIncomeNonSS: makeFromInt 19563, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3741, federalTaxDue: makeFromInt 20814, stateTaxDue: makeFromInt 5723 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73546, itemizedDeductions: makeFromInt 22146, federalTaxDue: makeFromInt 5411, stateTaxDue: makeFromInt 3322 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46204, itemizedDeductions: makeFromInt 4716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1735 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29862, ordinaryIncomeNonSS: makeFromInt 134315, qualifiedIncome: makeFromInt 78494, itemizedDeductions: makeFromInt 18836, federalTaxDue: makeFromInt 37362, stateTaxDue: makeFromInt 10065 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34521, ordinaryIncomeNonSS: makeFromInt 94140, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18251, stateTaxDue: makeFromInt 4352 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12156, stateTaxDue: makeFromInt 5228 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134501, qualifiedIncome: makeFromInt 38117, itemizedDeductions: makeFromInt 25959, federalTaxDue: makeFromInt 23530, stateTaxDue: makeFromInt 8375 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108953, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13160, stateTaxDue: makeFromInt 5193 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37199, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3513, stateTaxDue: makeFromInt 1185 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15780, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 580 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16255, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23464, itemizedDeductions: makeFromInt 22757, federalTaxDue: makeFromInt 31663, stateTaxDue: makeFromInt 8622 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17341, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27370, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35835, stateTaxDue: makeFromInt 8617 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10568, ordinaryIncomeNonSS: makeFromInt 107818, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14853, stateTaxDue: makeFromInt 5136 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13906, ordinaryIncomeNonSS: makeFromInt 128174, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23906, stateTaxDue: makeFromInt 6154 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14604, ordinaryIncomeNonSS: makeFromInt 117671, qualifiedIncome: makeFromInt 42653, itemizedDeductions: makeFromInt 11608, federalTaxDue: makeFromInt 24878, stateTaxDue: makeFromInt 7441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17418, ordinaryIncomeNonSS: makeFromInt 38138, qualifiedIncome: makeFromInt 83465, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11185, stateTaxDue: makeFromInt 5753 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23726, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20904, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93928, qualifiedIncome: makeFromInt 50055, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12389, stateTaxDue: makeFromInt 6792 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136348, qualifiedIncome: makeFromInt 4451, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20651, stateTaxDue: makeFromInt 6665 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28749, stateTaxDue: makeFromInt 8825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11211, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18973, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4886 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17325, qualifiedIncome: makeFromInt 91984, itemizedDeductions: makeFromInt 26512, federalTaxDue: makeFromInt 14129, stateTaxDue: makeFromInt 4890 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52664, qualifiedIncome: makeFromInt 93697, itemizedDeductions: makeFromInt 11874, federalTaxDue: makeFromInt 11929, stateTaxDue: makeFromInt 6914 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23266, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24179, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3774, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9238, itemizedDeductions: makeFromInt 25775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2551, itemizedDeductions: makeFromInt 340, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40208, ordinaryIncomeNonSS: makeFromInt 46646, qualifiedIncome: makeFromInt 84968, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15125, stateTaxDue: makeFromInt 6106 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117453, qualifiedIncome: makeFromInt 50050, itemizedDeductions: makeFromInt 25744, federalTaxDue: makeFromInt 25161, stateTaxDue: makeFromInt 8318 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44053, itemizedDeductions: makeFromInt 18856, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49964, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89116, itemizedDeductions: makeFromInt 19001, federalTaxDue: makeFromInt 10971, stateTaxDue: makeFromInt 4198 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17070, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46096, ordinaryIncomeNonSS: makeFromInt 104841, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16913, stateTaxDue: makeFromInt 4767 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15338, itemizedDeductions: makeFromInt 6429, federalTaxDue: makeFromInt 31320, stateTaxDue: makeFromInt 7983 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49575, ordinaryIncomeNonSS: makeFromInt 12953, qualifiedIncome: makeFromInt 27178, itemizedDeductions: makeFromInt 2058, federalTaxDue: makeFromInt 943, stateTaxDue: makeFromInt 1332 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148085, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37806, stateTaxDue: makeFromInt 12306 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125551, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40253, stateTaxDue: makeFromInt 10850 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44900, itemizedDeductions: makeFromInt 8220, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1670 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8646, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6345, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33085, ordinaryIncomeNonSS: makeFromInt 539, qualifiedIncome: makeFromInt 7527, itemizedDeductions: makeFromInt 20942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 28 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19791, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51724, itemizedDeductions: makeFromInt 15068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2011 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19550, ordinaryIncomeNonSS: makeFromInt 360, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15908, ordinaryIncomeNonSS: makeFromInt 132564, qualifiedIncome: makeFromInt 56731, itemizedDeductions: makeFromInt 4558, federalTaxDue: makeFromInt 35016, stateTaxDue: makeFromInt 9226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11032, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41522, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34897, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40056, stateTaxDue: makeFromInt 8990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12891, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34453, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33336, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34188, ordinaryIncomeNonSS: makeFromInt 70349, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13986, stateTaxDue: makeFromInt 3159 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43193, ordinaryIncomeNonSS: makeFromInt 86362, qualifiedIncome: makeFromInt 86276, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25246, stateTaxDue: makeFromInt 8157 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17743, itemizedDeductions: makeFromInt 1693, federalTaxDue: makeFromInt 20890, stateTaxDue: makeFromInt 7912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124430, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18193, federalTaxDue: makeFromInt 17089, stateTaxDue: makeFromInt 5897 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27694, federalTaxDue: makeFromInt 3658, stateTaxDue: makeFromInt 3418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16713, ordinaryIncomeNonSS: makeFromInt 108983, qualifiedIncome: makeFromInt 13646, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21920, stateTaxDue: makeFromInt 5876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23830, ordinaryIncomeNonSS: makeFromInt 103178, qualifiedIncome: makeFromInt 81767, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29149, stateTaxDue: makeFromInt 8872 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111919, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12188, federalTaxDue: makeFromInt 14627, stateTaxDue: makeFromInt 5021 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3389, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13091, itemizedDeductions: makeFromInt 5947, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 200 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14011, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5689, qualifiedIncome: makeFromInt 39228, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7658, stateTaxDue: makeFromInt 1862 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24887, ordinaryIncomeNonSS: makeFromInt 133628, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5802, federalTaxDue: makeFromInt 28394, stateTaxDue: makeFromInt 6526 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29841, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99550, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8034, stateTaxDue: makeFromInt 4603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39593, ordinaryIncomeNonSS: makeFromInt 340, qualifiedIncome: makeFromInt 76616, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4533, stateTaxDue: makeFromInt 3476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41555, ordinaryIncomeNonSS: makeFromInt 32008, qualifiedIncome: makeFromInt 45178, itemizedDeductions: makeFromInt 22190, federalTaxDue: makeFromInt 10881, stateTaxDue: makeFromInt 3590 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40096, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15450, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23813, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141755, qualifiedIncome: makeFromInt 25035, itemizedDeductions: makeFromInt 5797, federalTaxDue: makeFromInt 28378, stateTaxDue: makeFromInt 7885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2197, ordinaryIncomeNonSS: makeFromInt 149810, qualifiedIncome: makeFromInt 97647, itemizedDeductions: makeFromInt 3918, federalTaxDue: makeFromInt 39476, stateTaxDue: makeFromInt 12070 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19793, ordinaryIncomeNonSS: makeFromInt 76192, qualifiedIncome: makeFromInt 60168, itemizedDeductions: makeFromInt 19508, federalTaxDue: makeFromInt 18078, stateTaxDue: makeFromInt 6526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17244, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26754, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7044, ordinaryIncomeNonSS: makeFromInt 98252, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17068, federalTaxDue: makeFromInt 22854, stateTaxDue: makeFromInt 9458 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46360, ordinaryIncomeNonSS: makeFromInt 31674, qualifiedIncome: makeFromInt 2726, itemizedDeductions: makeFromInt 18223, federalTaxDue: makeFromInt 4354, stateTaxDue: makeFromInt 1465 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46728, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1943, stateTaxDue: makeFromInt 1661 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77564, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5383, stateTaxDue: makeFromInt 3623 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10001, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7314, ordinaryIncomeNonSS: makeFromInt 74713, qualifiedIncome: makeFromInt 58502, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16366, stateTaxDue: makeFromInt 6086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29426, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 828, stateTaxDue: makeFromInt 896 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11319, qualifiedIncome: makeFromInt 82539, itemizedDeductions: makeFromInt 11777, federalTaxDue: makeFromInt 12538, stateTaxDue: makeFromInt 4118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38941, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13371, itemizedDeductions: makeFromInt 29510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 131 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44827, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92558, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40494, stateTaxDue: makeFromInt 11653 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18529, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89970, itemizedDeductions: makeFromInt 6906, federalTaxDue: makeFromInt 2201, stateTaxDue: makeFromInt 3936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6436, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42935, ordinaryIncomeNonSS: makeFromInt 114769, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21522, federalTaxDue: makeFromInt 18506, stateTaxDue: makeFromInt 5063 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116646, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18338, federalTaxDue: makeFromInt 15255, stateTaxDue: makeFromInt 5257 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17218, qualifiedIncome: makeFromInt 27741, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37438, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24211, qualifiedIncome: makeFromInt 53956, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77178, qualifiedIncome: makeFromInt 42953, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3112, stateTaxDue: makeFromInt 5474 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72027, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4632, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25012, ordinaryIncomeNonSS: makeFromInt 108441, qualifiedIncome: makeFromInt 97440, itemizedDeductions: makeFromInt 11715, federalTaxDue: makeFromInt 33004, stateTaxDue: makeFromInt 9919 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14868, ordinaryIncomeNonSS: makeFromInt 83584, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29958, stateTaxDue: makeFromInt 9016 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36102, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37554, stateTaxDue: makeFromInt 9267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30012, ordinaryIncomeNonSS: makeFromInt 120366, qualifiedIncome: makeFromInt 6575, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16435, stateTaxDue: makeFromInt 5821 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87328, qualifiedIncome: makeFromInt 17561, itemizedDeductions: makeFromInt 10416, federalTaxDue: makeFromInt 25772, stateTaxDue: makeFromInt 5003 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95476, itemizedDeductions: makeFromInt 29311, federalTaxDue: makeFromInt 2936, stateTaxDue: makeFromInt 4420 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31050, ordinaryIncomeNonSS: makeFromInt 139363, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20392, federalTaxDue: makeFromInt 36694, stateTaxDue: makeFromInt 11293 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46368, ordinaryIncomeNonSS: makeFromInt 33465, qualifiedIncome: makeFromInt 47508, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15858, stateTaxDue: makeFromInt 3594 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27176, itemizedDeductions: makeFromInt 4085, federalTaxDue: makeFromInt 28486, stateTaxDue: makeFromInt 8485 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69102, qualifiedIncome: makeFromInt 58473, itemizedDeductions: makeFromInt 1826, federalTaxDue: makeFromInt 7144, stateTaxDue: makeFromInt 5704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29880, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63172, itemizedDeductions: makeFromInt 3811, federalTaxDue: makeFromInt 965, stateTaxDue: makeFromInt 2569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32485, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4193, stateTaxDue: makeFromInt 3445 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10003, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97574, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14165, stateTaxDue: makeFromInt 4424 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41168, ordinaryIncomeNonSS: makeFromInt 36096, qualifiedIncome: makeFromInt 49900, itemizedDeductions: makeFromInt 17872, federalTaxDue: makeFromInt 12305, stateTaxDue: makeFromInt 3725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17493, ordinaryIncomeNonSS: makeFromInt 131392, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6718, federalTaxDue: makeFromInt 45975, stateTaxDue: makeFromInt 11577 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71765, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9096, stateTaxDue: makeFromInt 3281 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6646, ordinaryIncomeNonSS: makeFromInt 80619, qualifiedIncome: makeFromInt 40378, itemizedDeductions: makeFromInt 14240, federalTaxDue: makeFromInt 15437, stateTaxDue: makeFromInt 5767 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45077, ordinaryIncomeNonSS: makeFromInt 136901, qualifiedIncome: makeFromInt 85817, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45525, stateTaxDue: makeFromInt 10881 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7728, ordinaryIncomeNonSS: makeFromInt 94473, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27113, stateTaxDue: makeFromInt 9367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12680, ordinaryIncomeNonSS: makeFromInt 63039, qualifiedIncome: makeFromInt 21154, itemizedDeductions: makeFromInt 28196, federalTaxDue: makeFromInt 8827, stateTaxDue: makeFromInt 3755 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48795, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64205, itemizedDeductions: makeFromInt 10214, federalTaxDue: makeFromInt 45031, stateTaxDue: makeFromInt 10374 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18005, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29981, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39100, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37552, stateTaxDue: makeFromInt 8991 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142499, qualifiedIncome: makeFromInt 78597, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36697, stateTaxDue: makeFromInt 10800 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45343, itemizedDeductions: makeFromInt 28818, federalTaxDue: makeFromInt 658, stateTaxDue: makeFromInt 1692 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19293, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20063, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3318, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13996, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7076, ordinaryIncomeNonSS: makeFromInt 36323, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29730, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1302 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80304, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38647, stateTaxDue: makeFromInt 11060 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1906, ordinaryIncomeNonSS: makeFromInt 74287, qualifiedIncome: makeFromInt 89285, itemizedDeductions: makeFromInt 21347, federalTaxDue: makeFromInt 19461, stateTaxDue: makeFromInt 7604 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118439, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28190, federalTaxDue: makeFromInt 25881, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23492, ordinaryIncomeNonSS: makeFromInt 126453, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18051, stateTaxDue: makeFromInt 5848 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3637, ordinaryIncomeNonSS: makeFromInt 103030, qualifiedIncome: makeFromInt 9705, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18889, stateTaxDue: makeFromInt 5403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1235, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28654, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12013, ordinaryIncomeNonSS: makeFromInt 42234, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10372, stateTaxDue: makeFromInt 6738 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4200, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22994, federalTaxDue: makeFromInt 19059, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35449, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25384, federalTaxDue: makeFromInt 1857, stateTaxDue: makeFromInt 1257 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13366, federalTaxDue: makeFromInt 7713, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109835, qualifiedIncome: makeFromInt 33157, itemizedDeductions: makeFromInt 2052, federalTaxDue: makeFromInt 21641, stateTaxDue: makeFromInt 6695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1872, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14591, ordinaryIncomeNonSS: makeFromInt 129592, qualifiedIncome: makeFromInt 48368, itemizedDeductions: makeFromInt 10361, federalTaxDue: makeFromInt 24843, stateTaxDue: makeFromInt 8341 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57354, qualifiedIncome: makeFromInt 34786, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3196, stateTaxDue: makeFromInt 3932 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139974, qualifiedIncome: makeFromInt 26542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24835, stateTaxDue: makeFromInt 7751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11915, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26197, stateTaxDue: makeFromInt 7707 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1343, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84234, qualifiedIncome: makeFromInt 150, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11854, stateTaxDue: makeFromInt 3875 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28106, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14485, qualifiedIncome: makeFromInt 45465, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2323 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4555, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60950, itemizedDeductions: makeFromInt 19852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37352, ordinaryIncomeNonSS: makeFromInt 69722, qualifiedIncome: makeFromInt 61302, itemizedDeductions: makeFromInt 10440, federalTaxDue: makeFromInt 18118, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69264, itemizedDeductions: makeFromInt 5648, federalTaxDue: makeFromInt 2350, stateTaxDue: makeFromInt 3088 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12311, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 950, federalTaxDue: makeFromInt 26861, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16850, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14868, itemizedDeductions: makeFromInt 21061, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 407 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27765, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 825, stateTaxDue: makeFromInt 1180 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42963, ordinaryIncomeNonSS: makeFromInt 67336, qualifiedIncome: makeFromInt 17340, itemizedDeductions: makeFromInt 19078, federalTaxDue: makeFromInt 12985, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65607, itemizedDeductions: makeFromInt 5687, federalTaxDue: makeFromInt 41980, stateTaxDue: makeFromInt 10772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71096, itemizedDeductions: makeFromInt 18405, federalTaxDue: makeFromInt 3104, stateTaxDue: makeFromInt 3075 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26871, ordinaryIncomeNonSS: makeFromInt 272, qualifiedIncome: makeFromInt 70086, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4453, stateTaxDue: makeFromInt 3063 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47783, itemizedDeductions: makeFromInt 21880, federalTaxDue: makeFromInt 37902, stateTaxDue: makeFromInt 9536 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14692, ordinaryIncomeNonSS: makeFromInt 90998, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12231, stateTaxDue: makeFromInt 4175 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11350, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26620, ordinaryIncomeNonSS: makeFromInt 8888, qualifiedIncome: makeFromInt 27, itemizedDeductions: makeFromInt 1214, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 191 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29588, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48830, itemizedDeductions: makeFromInt 9726, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29916, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50931, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1992, stateTaxDue: makeFromInt 2169 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32115, ordinaryIncomeNonSS: makeFromInt 4596, qualifiedIncome: makeFromInt 42465, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1228, stateTaxDue: makeFromInt 1778 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28379, federalTaxDue: makeFromInt 22034, stateTaxDue: makeFromInt 7039 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54127, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19189, stateTaxDue: makeFromInt 7451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49965, ordinaryIncomeNonSS: makeFromInt 86197, qualifiedIncome: makeFromInt 48473, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26801, stateTaxDue: makeFromInt 6644 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5990, ordinaryIncomeNonSS: makeFromInt 145335, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8517, federalTaxDue: makeFromInt 23362, stateTaxDue: makeFromInt 6692 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44213, itemizedDeductions: makeFromInt 5542, federalTaxDue: makeFromInt 725, stateTaxDue: makeFromInt 1806 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8588, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 88, stateTaxDue: makeFromInt 10 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101472, qualifiedIncome: makeFromInt 64744, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24419, stateTaxDue: makeFromInt 8056 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38621, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13219, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138354, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12748, federalTaxDue: makeFromInt 30665, stateTaxDue: makeFromInt 6543 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34316, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30111, ordinaryIncomeNonSS: makeFromInt 26605, qualifiedIncome: makeFromInt 58936, itemizedDeductions: makeFromInt 25859, federalTaxDue: makeFromInt 9496, stateTaxDue: makeFromInt 3822 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49273, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13088, federalTaxDue: makeFromInt 13930, stateTaxDue: makeFromInt 7089 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141262, qualifiedIncome: makeFromInt 6375, itemizedDeductions: makeFromInt 19126, federalTaxDue: makeFromInt 22119, stateTaxDue: makeFromInt 7007 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21700, ordinaryIncomeNonSS: makeFromInt 47228, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21966, federalTaxDue: makeFromInt 20653, stateTaxDue: makeFromInt 7284 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15289, ordinaryIncomeNonSS: makeFromInt 9070, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4910 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 13217, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3263, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42088, ordinaryIncomeNonSS: makeFromInt 42505, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25396, stateTaxDue: makeFromInt 6772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47273, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40971, itemizedDeductions: makeFromInt 3586, federalTaxDue: makeFromInt 1490, stateTaxDue: makeFromInt 1661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31397, ordinaryIncomeNonSS: makeFromInt 107378, qualifiedIncome: makeFromInt 28986, itemizedDeductions: makeFromInt 21020, federalTaxDue: makeFromInt 23139, stateTaxDue: makeFromInt 6506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49377, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64094, itemizedDeductions: makeFromInt 4381, federalTaxDue: makeFromInt 9978, stateTaxDue: makeFromInt 2922 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23321, federalTaxDue: makeFromInt 37739, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30193, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11474, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22913, ordinaryIncomeNonSS: makeFromInt 145045, qualifiedIncome: makeFromInt 43251, itemizedDeductions: makeFromInt 18940, federalTaxDue: makeFromInt 33622, stateTaxDue: makeFromInt 8840 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15521, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1997, stateTaxDue: makeFromInt 2017 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46829, ordinaryIncomeNonSS: makeFromInt 131174, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33477, stateTaxDue: makeFromInt 6262 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36223, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31754, ordinaryIncomeNonSS: makeFromInt 143913, qualifiedIncome: makeFromInt 51043, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30483, stateTaxDue: makeFromInt 9273 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12780, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29681, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52847, itemizedDeductions: makeFromInt 12730, federalTaxDue: makeFromInt 1676, stateTaxDue: makeFromInt 2387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32938, ordinaryIncomeNonSS: makeFromInt 76921, qualifiedIncome: makeFromInt 12238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21352, stateTaxDue: makeFromInt 4323 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66653, qualifiedIncome: makeFromInt 71750, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25431, stateTaxDue: makeFromInt 6610 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20997, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4933, federalTaxDue: makeFromInt 675, stateTaxDue: makeFromInt 795 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41212, ordinaryIncomeNonSS: makeFromInt 117303, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29218, stateTaxDue: makeFromInt 5636 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4812, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8412, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30972, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57338, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2271 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20672, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38661, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3745, itemizedDeductions: makeFromInt 27658, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27458, ordinaryIncomeNonSS: makeFromInt 64328, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26670, stateTaxDue: makeFromInt 7761 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16212, ordinaryIncomeNonSS: makeFromInt 37769, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23143, federalTaxDue: makeFromInt 9479, stateTaxDue: makeFromInt 6475 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22850, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81664, itemizedDeductions: makeFromInt 25135, federalTaxDue: makeFromInt 39633, stateTaxDue: makeFromInt 11154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42649, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41679, itemizedDeductions: makeFromInt 19004, federalTaxDue: makeFromInt 44984, stateTaxDue: makeFromInt 9551 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45522, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1873 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 827, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130253, qualifiedIncome: makeFromInt 86110, itemizedDeductions: makeFromInt 22968, federalTaxDue: makeFromInt 32839, stateTaxDue: makeFromInt 10502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26999, ordinaryIncomeNonSS: makeFromInt 67406, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24466, federalTaxDue: makeFromInt 9757, stateTaxDue: makeFromInt 3091 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99444, qualifiedIncome: makeFromInt 18897, itemizedDeductions: makeFromInt 5857, federalTaxDue: makeFromInt 19740, stateTaxDue: makeFromInt 5242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48254, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19913, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68533, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2367, stateTaxDue: makeFromInt 3118 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50741, itemizedDeductions: makeFromInt 14685, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9615, ordinaryIncomeNonSS: makeFromInt 122703, qualifiedIncome: makeFromInt 10093, itemizedDeductions: makeFromInt 17989, federalTaxDue: makeFromInt 15535, stateTaxDue: makeFromInt 6165 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29641, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37284, itemizedDeductions: makeFromInt 23912, federalTaxDue: makeFromInt 37520, stateTaxDue: makeFromInt 9001 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32375, itemizedDeductions: makeFromInt 6835, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1427 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74172, itemizedDeductions: makeFromInt 26686, federalTaxDue: makeFromInt 8939, stateTaxDue: makeFromInt 3454 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12590, ordinaryIncomeNonSS: makeFromInt 123718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22568, stateTaxDue: makeFromInt 5931 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18077, federalTaxDue: makeFromInt 37132, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17289, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17735, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73154, itemizedDeductions: makeFromInt 19782, federalTaxDue: makeFromInt 2603, stateTaxDue: makeFromInt 3283 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96011, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6053, federalTaxDue: makeFromInt 16821, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74445, qualifiedIncome: makeFromInt 12343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20226, stateTaxDue: makeFromInt 3884 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8510, ordinaryIncomeNonSS: makeFromInt 44167, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2481, stateTaxDue: makeFromInt 1533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 654, itemizedDeductions: makeFromInt 10370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39983, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9790, federalTaxDue: makeFromInt 12821, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94248, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2842, stateTaxDue: makeFromInt 4358 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16021, ordinaryIncomeNonSS: makeFromInt 121490, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16720, federalTaxDue: makeFromInt 31077, stateTaxDue: makeFromInt 10643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4884, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22445, itemizedDeductions: makeFromInt 15075, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 696 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30418, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58855, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 911, stateTaxDue: makeFromInt 2553 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11885, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39733, ordinaryIncomeNonSS: makeFromInt 103160, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29759, stateTaxDue: makeFromInt 9683 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30859, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 968 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5072, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24009, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40838, ordinaryIncomeNonSS: makeFromInt 76293, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11081, stateTaxDue: makeFromInt 3238 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83871, itemizedDeductions: makeFromInt 574, federalTaxDue: makeFromInt 4211, stateTaxDue: makeFromInt 3619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10494, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22975, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33029, ordinaryIncomeNonSS: makeFromInt 66855, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3658, federalTaxDue: makeFromInt 7705, stateTaxDue: makeFromInt 2868 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18189, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46307, ordinaryIncomeNonSS: makeFromInt 136172, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29388, stateTaxDue: makeFromInt 6434 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129264, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12347, federalTaxDue: makeFromInt 19696, stateTaxDue: makeFromInt 6144 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22586, ordinaryIncomeNonSS: makeFromInt 51918, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19081, federalTaxDue: makeFromInt 5790, stateTaxDue: makeFromInt 2021 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9673, ordinaryIncomeNonSS: makeFromInt 148198, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17037, federalTaxDue: makeFromInt 19640, stateTaxDue: makeFromInt 6735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130191, qualifiedIncome: makeFromInt 14573, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24242, stateTaxDue: makeFromInt 6955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145252, qualifiedIncome: makeFromInt 17115, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33377, stateTaxDue: makeFromInt 8056 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26989, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49500, ordinaryIncomeNonSS: makeFromInt 21453, qualifiedIncome: makeFromInt 55285, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11025, stateTaxDue: makeFromInt 3689 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24261, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32294, stateTaxDue: makeFromInt 8541 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79084, itemizedDeductions: makeFromInt 16138, federalTaxDue: makeFromInt 5956, stateTaxDue: makeFromInt 3570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5725, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 738, itemizedDeductions: makeFromInt 7943, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89679, itemizedDeductions: makeFromInt 1421, federalTaxDue: makeFromInt 3276, stateTaxDue: makeFromInt 4009 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27360, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23339, stateTaxDue: makeFromInt 8495 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23174, ordinaryIncomeNonSS: makeFromInt 74558, qualifiedIncome: makeFromInt 96622, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31241, stateTaxDue: makeFromInt 8506 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3343, ordinaryIncomeNonSS: makeFromInt 65395, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11400, federalTaxDue: makeFromInt 4501, stateTaxDue: makeFromInt 2595 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35138, ordinaryIncomeNonSS: makeFromInt 70413, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23168, federalTaxDue: makeFromInt 11082, stateTaxDue: makeFromInt 2946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17431, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47804, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52898, qualifiedIncome: makeFromInt 90099, itemizedDeductions: makeFromInt 11533, federalTaxDue: makeFromInt 20484, stateTaxDue: makeFromInt 6575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21026, ordinaryIncomeNonSS: makeFromInt 142178, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30417, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40173, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56594, itemizedDeductions: makeFromInt 4918, federalTaxDue: makeFromInt 6506, stateTaxDue: makeFromInt 2540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44870, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24113, itemizedDeductions: makeFromInt 3131, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 577 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17749, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 633 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14361, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84794, itemizedDeductions: makeFromInt 14015, federalTaxDue: makeFromInt 217, stateTaxDue: makeFromInt 3565 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143400, qualifiedIncome: makeFromInt 2460, itemizedDeductions: makeFromInt 1530, federalTaxDue: makeFromInt 23129, stateTaxDue: makeFromInt 6888 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16809, ordinaryIncomeNonSS: makeFromInt 60352, qualifiedIncome: makeFromInt 53280, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13041, stateTaxDue: makeFromInt 5346 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37245, ordinaryIncomeNonSS: makeFromInt 35120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10613, federalTaxDue: makeFromInt 2356, stateTaxDue: makeFromInt 1281 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26118, federalTaxDue: makeFromInt 10523, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16170, ordinaryIncomeNonSS: makeFromInt 92458, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11287, federalTaxDue: makeFromInt 30796, stateTaxDue: makeFromInt 9168 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22405, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81147, itemizedDeductions: makeFromInt 11306, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3382 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4642, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19539, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99632, itemizedDeductions: makeFromInt 15100, federalTaxDue: makeFromInt 9071, stateTaxDue: makeFromInt 4727 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44512, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25996, federalTaxDue: makeFromInt 11740, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73075, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19835, stateTaxDue: makeFromInt 8276 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92433, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34019, stateTaxDue: makeFromInt 9167 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8116, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11191, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28460, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7368, federalTaxDue: makeFromInt 11122, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22427, ordinaryIncomeNonSS: makeFromInt 144470, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26897, stateTaxDue: makeFromInt 6849 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31945, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1122 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10066, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10632, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42567, ordinaryIncomeNonSS: makeFromInt 13478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 199 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39642, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60552, itemizedDeductions: makeFromInt 15205, federalTaxDue: makeFromInt 7975, stateTaxDue: makeFromInt 2634 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7341, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21512, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112653, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11372, stateTaxDue: makeFromInt 5317 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28612, ordinaryIncomeNonSS: makeFromInt 40824, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4398, stateTaxDue: makeFromInt 1531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121384, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21283, stateTaxDue: makeFromInt 5594 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4944, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105672, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2671, federalTaxDue: makeFromInt 15669, stateTaxDue: makeFromInt 5029 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31044, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1123 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125688, qualifiedIncome: makeFromInt 13615, itemizedDeductions: makeFromInt 25709, federalTaxDue: makeFromInt 18373, stateTaxDue: makeFromInt 6390 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16609, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73010, itemizedDeductions: makeFromInt 12809, federalTaxDue: makeFromInt 4700, stateTaxDue: makeFromInt 3396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97898, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32913, stateTaxDue: makeFromInt 11920 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26416, itemizedDeductions: makeFromInt 24765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 694 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45322, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88257, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6999, stateTaxDue: makeFromInt 4038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26789, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14565, federalTaxDue: makeFromInt 31664, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28296, ordinaryIncomeNonSS: makeFromInt 112794, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27147, federalTaxDue: makeFromInt 18664, stateTaxDue: makeFromInt 5265 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33429, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7597, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7009, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81252, itemizedDeductions: makeFromInt 17651, federalTaxDue: makeFromInt 3818, stateTaxDue: makeFromInt 3488 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21700, stateTaxDue: makeFromInt 6558 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12606, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128808, qualifiedIncome: makeFromInt 76154, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33745, stateTaxDue: makeFromInt 9573 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38455, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42173, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2436, stateTaxDue: makeFromInt 1804 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9449, ordinaryIncomeNonSS: makeFromInt 68349, qualifiedIncome: makeFromInt 49622, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7920, stateTaxDue: makeFromInt 5568 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21145, itemizedDeductions: makeFromInt 16525, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 382 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37054, ordinaryIncomeNonSS: makeFromInt 136525, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3001, federalTaxDue: makeFromInt 44165, stateTaxDue: makeFromInt 11512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11761, federalTaxDue: makeFromInt 20272, stateTaxDue: makeFromInt 6883 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13509, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42106, itemizedDeductions: makeFromInt 21267, federalTaxDue: makeFromInt 65, stateTaxDue: makeFromInt 1850 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17796, ordinaryIncomeNonSS: makeFromInt 74675, qualifiedIncome: makeFromInt 48687, itemizedDeductions: makeFromInt 4384, federalTaxDue: makeFromInt 11265, stateTaxDue: makeFromInt 5493 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15162, ordinaryIncomeNonSS: makeFromInt 63070, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22909, federalTaxDue: makeFromInt 7529, stateTaxDue: makeFromInt 2761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7957, ordinaryIncomeNonSS: makeFromInt 129283, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10437, federalTaxDue: makeFromInt 22959, stateTaxDue: makeFromInt 6009 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49782, ordinaryIncomeNonSS: makeFromInt 79256, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3415, federalTaxDue: makeFromInt 19643, stateTaxDue: makeFromInt 3614 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12691, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 380 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94911, itemizedDeductions: makeFromInt 10216, federalTaxDue: makeFromInt 37497, stateTaxDue: makeFromInt 11871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82327, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25218, federalTaxDue: makeFromInt 6192, stateTaxDue: makeFromInt 3441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81559, qualifiedIncome: makeFromInt 13510, itemizedDeductions: makeFromInt 10711, federalTaxDue: makeFromInt 6379, stateTaxDue: makeFromInt 4196 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14910, qualifiedIncome: makeFromInt 25402, itemizedDeductions: makeFromInt 15117, federalTaxDue: makeFromInt 2051, stateTaxDue: makeFromInt 1607 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 550, qualifiedIncome: makeFromInt 20387, itemizedDeductions: makeFromInt 22457, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 472 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3093, ordinaryIncomeNonSS: makeFromInt 65299, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5010, federalTaxDue: makeFromInt 7558, stateTaxDue: makeFromInt 2810 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146068, qualifiedIncome: makeFromInt 36174, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22789, stateTaxDue: makeFromInt 8437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17662, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85575, itemizedDeductions: makeFromInt 14257, federalTaxDue: makeFromInt 7189, stateTaxDue: makeFromInt 3936 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47024, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31729, itemizedDeductions: makeFromInt 18173, federalTaxDue: makeFromInt 438, stateTaxDue: makeFromInt 1131 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1974, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1979, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130181, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6591, federalTaxDue: makeFromInt 29478, stateTaxDue: makeFromInt 11034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130890, qualifiedIncome: makeFromInt 7054, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27436, stateTaxDue: makeFromInt 6586 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73100, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33845, stateTaxDue: makeFromInt 10700 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82407, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3445 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18610, ordinaryIncomeNonSS: makeFromInt 107998, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14284, stateTaxDue: makeFromInt 4855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13638, ordinaryIncomeNonSS: makeFromInt 99160, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11883, stateTaxDue: makeFromInt 4583 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11918, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64118, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23568, federalTaxDue: makeFromInt 12388, stateTaxDue: makeFromInt 2831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50977, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33954, stateTaxDue: makeFromInt 9594 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18935, ordinaryIncomeNonSS: makeFromInt 129695, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10925, federalTaxDue: makeFromInt 22756, stateTaxDue: makeFromInt 6110 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7116, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102551, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10862, federalTaxDue: makeFromInt 29944, stateTaxDue: makeFromInt 9873 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99312, itemizedDeductions: makeFromInt 22427, federalTaxDue: makeFromInt 2777, stateTaxDue: makeFromInt 4291 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16412, itemizedDeductions: makeFromInt 21796, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 446 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147188, qualifiedIncome: makeFromInt 66140, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34008, stateTaxDue: makeFromInt 10431 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13395, ordinaryIncomeNonSS: makeFromInt 97541, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10440, stateTaxDue: makeFromInt 4546 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43792, ordinaryIncomeNonSS: makeFromInt 88077, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7395, federalTaxDue: makeFromInt 13244, stateTaxDue: makeFromInt 3729 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68019, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6805, stateTaxDue: makeFromInt 2946 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1633, itemizedDeductions: makeFromInt 4386, federalTaxDue: makeFromInt 27779, stateTaxDue: makeFromInt 7305 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30156, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59080, itemizedDeductions: makeFromInt 23501, federalTaxDue: makeFromInt 40718, stateTaxDue: makeFromInt 10316 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18260, ordinaryIncomeNonSS: makeFromInt 96785, qualifiedIncome: makeFromInt 14730, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17513, stateTaxDue: makeFromInt 5086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123129, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14687, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45251, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53993, itemizedDeductions: makeFromInt 3491, federalTaxDue: makeFromInt 43192, stateTaxDue: makeFromInt 9955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22778, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26484, ordinaryIncomeNonSS: makeFromInt 416, qualifiedIncome: makeFromInt 71982, itemizedDeductions: makeFromInt 15604, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3145 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7348, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86407, qualifiedIncome: makeFromInt 10425, itemizedDeductions: makeFromInt 14026, federalTaxDue: makeFromInt 19761, stateTaxDue: makeFromInt 4467 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123111, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19492, federalTaxDue: makeFromInt 12313, stateTaxDue: makeFromInt 5481 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25524, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37181, itemizedDeductions: makeFromInt 26215, federalTaxDue: makeFromInt 32412, stateTaxDue: makeFromInt 9097 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 546, stateTaxDue: makeFromInt 859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39308, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89159, itemizedDeductions: makeFromInt 28585, federalTaxDue: makeFromInt 7921, stateTaxDue: makeFromInt 4323 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21579, itemizedDeductions: makeFromInt 7450, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 754 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14582, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 155 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102292, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8588, stateTaxDue: makeFromInt 4640 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124751, qualifiedIncome: makeFromInt 47138, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19744, stateTaxDue: makeFromInt 8119 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94389, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5804, federalTaxDue: makeFromInt 11167, stateTaxDue: makeFromInt 4423 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46677, ordinaryIncomeNonSS: makeFromInt 56960, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7686, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45048, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1577 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25729, ordinaryIncomeNonSS: makeFromInt 32360, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3659, stateTaxDue: makeFromInt 1363 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19764, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43949, itemizedDeductions: makeFromInt 21493, federalTaxDue: makeFromInt 945, stateTaxDue: makeFromInt 1813 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107539, qualifiedIncome: makeFromInt 35277, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21808, stateTaxDue: makeFromInt 6686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4242, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51925, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31745, stateTaxDue: makeFromInt 7524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23285, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13672, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 248 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127702, qualifiedIncome: makeFromInt 19773, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29534, stateTaxDue: makeFromInt 7093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29033, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82638, itemizedDeductions: makeFromInt 26534, federalTaxDue: makeFromInt 40286, stateTaxDue: makeFromInt 11057 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31744, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96064, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3115, stateTaxDue: makeFromInt 4247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10906, qualifiedIncome: makeFromInt 54348, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8198, stateTaxDue: makeFromInt 2688 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30158, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23868, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81132, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21672, federalTaxDue: makeFromInt 5219, stateTaxDue: makeFromInt 3587 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71563, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4674, stateTaxDue: makeFromInt 3123 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20652, ordinaryIncomeNonSS: makeFromInt 131961, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38533, stateTaxDue: makeFromInt 11223 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88379, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32606, stateTaxDue: makeFromInt 11392 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8099, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27472, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66847, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36767, stateTaxDue: makeFromInt 10467 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124050, qualifiedIncome: makeFromInt 66539, itemizedDeductions: makeFromInt 2481, federalTaxDue: makeFromInt 31953, stateTaxDue: makeFromInt 9373 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39949, ordinaryIncomeNonSS: makeFromInt 10824, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2025, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68152, itemizedDeductions: makeFromInt 8672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2823 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17978, ordinaryIncomeNonSS: makeFromInt 8378, qualifiedIncome: makeFromInt 5529, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47994, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24424, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 646 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23459, ordinaryIncomeNonSS: makeFromInt 137912, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34955, stateTaxDue: makeFromInt 11221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5137, ordinaryIncomeNonSS: makeFromInt 84804, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9951, stateTaxDue: makeFromInt 3876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28177, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45495, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1938, itemizedDeductions: makeFromInt 5696, federalTaxDue: makeFromInt 37185, stateTaxDue: makeFromInt 7342 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7713, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17732, ordinaryIncomeNonSS: makeFromInt 22182, qualifiedIncome: makeFromInt 71878, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10415, stateTaxDue: makeFromInt 4448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134808, qualifiedIncome: makeFromInt 48654, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26912, stateTaxDue: makeFromInt 8598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35639, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24168, itemizedDeductions: makeFromInt 275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 804 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40181, ordinaryIncomeNonSS: makeFromInt 79634, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14958, stateTaxDue: makeFromInt 3607 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39205, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17, stateTaxDue: makeFromInt 1705 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37774, ordinaryIncomeNonSS: makeFromInt 58980, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7244, stateTaxDue: makeFromInt 2474 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2858, ordinaryIncomeNonSS: makeFromInt 92638, qualifiedIncome: makeFromInt 52428, itemizedDeductions: makeFromInt 25265, federalTaxDue: makeFromInt 14750, stateTaxDue: makeFromInt 6950 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71593, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11443, federalTaxDue: makeFromInt 8133, stateTaxDue: makeFromInt 3125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64630, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15438, federalTaxDue: makeFromInt 3878, stateTaxDue: makeFromInt 2868 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32612, qualifiedIncome: makeFromInt 9750, itemizedDeductions: makeFromInt 6658, federalTaxDue: makeFromInt 1944, stateTaxDue: makeFromInt 1863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25729, stateTaxDue: makeFromInt 6717 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29403, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66915, itemizedDeductions: makeFromInt 6784, federalTaxDue: makeFromInt 3170, stateTaxDue: makeFromInt 2971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10096, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86654, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6747, stateTaxDue: makeFromInt 3878 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62288, itemizedDeductions: makeFromInt 23352, federalTaxDue: makeFromInt 5850, stateTaxDue: makeFromInt 2539 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3060, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 297 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44885, ordinaryIncomeNonSS: makeFromInt 69732, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24675, federalTaxDue: makeFromInt 11511, stateTaxDue: makeFromInt 3128 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23722, ordinaryIncomeNonSS: makeFromInt 94419, qualifiedIncome: makeFromInt 19866, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21889, stateTaxDue: makeFromInt 5604 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34154, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29877, ordinaryIncomeNonSS: makeFromInt 48030, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13721, federalTaxDue: makeFromInt 5157, stateTaxDue: makeFromInt 1797 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3607, ordinaryIncomeNonSS: makeFromInt 143754, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18649, stateTaxDue: makeFromInt 6613 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22382, ordinaryIncomeNonSS: makeFromInt 83097, qualifiedIncome: makeFromInt 50899, itemizedDeductions: makeFromInt 8971, federalTaxDue: makeFromInt 20545, stateTaxDue: makeFromInt 6385 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28847, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71192, itemizedDeductions: makeFromInt 20176, federalTaxDue: makeFromInt 35745, stateTaxDue: makeFromInt 10628 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14516, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56091, itemizedDeductions: makeFromInt 6082, federalTaxDue: makeFromInt 3263, stateTaxDue: makeFromInt 2636 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70703, qualifiedIncome: makeFromInt 2993, itemizedDeductions: makeFromInt 10069, federalTaxDue: makeFromInt 4797, stateTaxDue: makeFromInt 3010 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113464, qualifiedIncome: makeFromInt 45624, itemizedDeductions: makeFromInt 2292, federalTaxDue: makeFromInt 24676, stateTaxDue: makeFromInt 7699 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6404, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83327, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9966, stateTaxDue: makeFromInt 3821 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43083, ordinaryIncomeNonSS: makeFromInt 25718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5595, federalTaxDue: makeFromInt 3009, stateTaxDue: makeFromInt 831 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114798, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14812, stateTaxDue: makeFromInt 5165 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29882, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1677, stateTaxDue: makeFromInt 1749 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36783, ordinaryIncomeNonSS: makeFromInt 55384, qualifiedIncome: makeFromInt 11999, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6711, stateTaxDue: makeFromInt 2894 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18936, ordinaryIncomeNonSS: makeFromInt 67252, qualifiedIncome: makeFromInt 50743, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15138, stateTaxDue: makeFromInt 5645 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25858, ordinaryIncomeNonSS: makeFromInt 40205, qualifiedIncome: makeFromInt 94667, itemizedDeductions: makeFromInt 24549, federalTaxDue: makeFromInt 11330, stateTaxDue: makeFromInt 6269 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75263, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26586, stateTaxDue: makeFromInt 8288 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28419, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86399, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23472, stateTaxDue: makeFromInt 8745 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106818, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23602, stateTaxDue: makeFromInt 4966 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17322, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21192, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 659 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 23405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5184, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 527 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8261, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4835, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22621, ordinaryIncomeNonSS: makeFromInt 7685, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 129 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1458, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2758, federalTaxDue: makeFromInt 41605, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20285, ordinaryIncomeNonSS: makeFromInt 39208, qualifiedIncome: makeFromInt 12775, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2896, stateTaxDue: makeFromInt 2427 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34235, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23076, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54260, qualifiedIncome: makeFromInt 95800, itemizedDeductions: makeFromInt 29161, federalTaxDue: makeFromInt 8233, stateTaxDue: makeFromInt 7028 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118779, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15767, stateTaxDue: makeFromInt 5564 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41112, ordinaryIncomeNonSS: makeFromInt 105344, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29420, stateTaxDue: makeFromInt 5148 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2372, ordinaryIncomeNonSS: makeFromInt 37483, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1909, stateTaxDue: makeFromInt 1499 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22559, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26308, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1788, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42907, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 289, stateTaxDue: makeFromInt 1570 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26448, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89352, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5366, stateTaxDue: makeFromInt 3893 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40466, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18715, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36922, ordinaryIncomeNonSS: makeFromInt 97688, qualifiedIncome: makeFromInt 94028, itemizedDeductions: makeFromInt 18629, federalTaxDue: makeFromInt 27728, stateTaxDue: makeFromInt 9111 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20530, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 298, itemizedDeductions: makeFromInt 9844, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145267, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5721, federalTaxDue: makeFromInt 38227, stateTaxDue: makeFromInt 11958 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26288, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10110, federalTaxDue: makeFromInt 32792, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19958, ordinaryIncomeNonSS: makeFromInt 5270, qualifiedIncome: makeFromInt 43086, itemizedDeductions: makeFromInt 17612, federalTaxDue: makeFromInt 193, stateTaxDue: makeFromInt 2043 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6399, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63380, qualifiedIncome: makeFromInt 92824, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31296, stateTaxDue: makeFromInt 7620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34443, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 51852, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66643, itemizedDeductions: makeFromInt 6899, federalTaxDue: makeFromInt 4349, stateTaxDue: makeFromInt 2970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29433, ordinaryIncomeNonSS: makeFromInt 41520, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3788, federalTaxDue: makeFromInt 12884, stateTaxDue: makeFromInt 6565 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42065, ordinaryIncomeNonSS: makeFromInt 93925, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18957, federalTaxDue: makeFromInt 19328, stateTaxDue: makeFromInt 4400 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2138, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12950, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14498, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146629, qualifiedIncome: makeFromInt 96900, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32471, stateTaxDue: makeFromInt 11701 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25827, qualifiedIncome: makeFromInt 71635, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 183, stateTaxDue: makeFromInt 4318 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25882, ordinaryIncomeNonSS: makeFromInt 110782, qualifiedIncome: makeFromInt 36387, itemizedDeductions: makeFromInt 20795, federalTaxDue: makeFromInt 19935, stateTaxDue: makeFromInt 6853 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62395, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6461, stateTaxDue: makeFromInt 2745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21734, ordinaryIncomeNonSS: makeFromInt 47072, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22346, stateTaxDue: makeFromInt 7154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103765, qualifiedIncome: makeFromInt 21937, itemizedDeductions: makeFromInt 19106, federalTaxDue: makeFromInt 17741, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27072, ordinaryIncomeNonSS: makeFromInt 30388, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24246, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40503, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38780, itemizedDeductions: makeFromInt 7728, federalTaxDue: makeFromInt 40387, stateTaxDue: makeFromInt 9184 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45044, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4594, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24182, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20555, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3070, qualifiedIncome: makeFromInt 32805, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1119 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3014, ordinaryIncomeNonSS: makeFromInt 52711, qualifiedIncome: makeFromInt 21803, itemizedDeductions: makeFromInt 15201, federalTaxDue: makeFromInt 3106, stateTaxDue: makeFromInt 3251 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20105, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19518, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13469, itemizedDeductions: makeFromInt 6145, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 218 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101123, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24305, federalTaxDue: makeFromInt 9914, stateTaxDue: makeFromInt 4729 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20061, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90240, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5166, stateTaxDue: makeFromInt 3937 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40294, ordinaryIncomeNonSS: makeFromInt 26291, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18844, federalTaxDue: makeFromInt 2133, stateTaxDue: makeFromInt 940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36898, itemizedDeductions: makeFromInt 21507, federalTaxDue: makeFromInt 551, stateTaxDue: makeFromInt 1657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138221, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29552, federalTaxDue: makeFromInt 20452, stateTaxDue: makeFromInt 6703 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5021, ordinaryIncomeNonSS: makeFromInt 148344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21763, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29241, qualifiedIncome: makeFromInt 28988, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9280, stateTaxDue: makeFromInt 2656 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 141958, qualifiedIncome: makeFromInt 24620, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25023, stateTaxDue: makeFromInt 7954 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40624, ordinaryIncomeNonSS: makeFromInt 83719, qualifiedIncome: makeFromInt 6318, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19635, stateTaxDue: makeFromInt 4047 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34212, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37433, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40333, stateTaxDue: makeFromInt 9243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7569, qualifiedIncome: makeFromInt 57004, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 181, stateTaxDue: makeFromInt 2654 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28739, ordinaryIncomeNonSS: makeFromInt 76657, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26703, stateTaxDue: makeFromInt 8258 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14476, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77658, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5769, stateTaxDue: makeFromInt 3498 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4408, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18271, stateTaxDue: makeFromInt 4848 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5164, ordinaryIncomeNonSS: makeFromInt 26899, qualifiedIncome: makeFromInt 31177, itemizedDeductions: makeFromInt 11027, federalTaxDue: makeFromInt 1, stateTaxDue: makeFromInt 2533 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21454, ordinaryIncomeNonSS: makeFromInt 6825, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17322, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11094, ordinaryIncomeNonSS: makeFromInt 77389, qualifiedIncome: makeFromInt 82829, itemizedDeductions: makeFromInt 19761, federalTaxDue: makeFromInt 23117, stateTaxDue: makeFromInt 7743 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81419, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4059, federalTaxDue: makeFromInt 16699, stateTaxDue: makeFromInt 8396 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39697, ordinaryIncomeNonSS: makeFromInt 42463, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4422, stateTaxDue: makeFromInt 1513 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26868, ordinaryIncomeNonSS: makeFromInt 146858, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28376, stateTaxDue: makeFromInt 6768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49960, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38108, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 737, stateTaxDue: makeFromInt 1515 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17981, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21591, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50686, itemizedDeductions: makeFromInt 28104, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1932 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6740, ordinaryIncomeNonSS: makeFromInt 123976, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14336, federalTaxDue: makeFromInt 29373, stateTaxDue: makeFromInt 10524 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26031, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24207, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26733, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56430, itemizedDeductions: makeFromInt 21198, federalTaxDue: makeFromInt 2817, stateTaxDue: makeFromInt 2654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1011, ordinaryIncomeNonSS: makeFromInt 148311, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1777, federalTaxDue: makeFromInt 20623, stateTaxDue: makeFromInt 6911 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14318, ordinaryIncomeNonSS: makeFromInt 96631, qualifiedIncome: makeFromInt 26069, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17186, stateTaxDue: makeFromInt 5829 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27136, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47923, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1858, stateTaxDue: makeFromInt 1821 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39515, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27361, federalTaxDue: makeFromInt 1215, stateTaxDue: makeFromInt 1551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21925, ordinaryIncomeNonSS: makeFromInt 113905, qualifiedIncome: makeFromInt 79574, itemizedDeductions: makeFromInt 2117, federalTaxDue: makeFromInt 31006, stateTaxDue: makeFromInt 9299 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5124, ordinaryIncomeNonSS: makeFromInt 147736, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23762, stateTaxDue: makeFromInt 6812 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39319, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 912, stateTaxDue: makeFromInt 1391 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11557, itemizedDeductions: makeFromInt 16274, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 365 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142872, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13314, federalTaxDue: makeFromInt 29494, stateTaxDue: makeFromInt 6634 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141202, qualifiedIncome: makeFromInt 89478, itemizedDeductions: makeFromInt 25261, federalTaxDue: makeFromInt 33584, stateTaxDue: makeFromInt 10959 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81973, qualifiedIncome: makeFromInt 17559, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11256, stateTaxDue: makeFromInt 4729 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40675, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110915, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29970, stateTaxDue: makeFromInt 10106 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17014, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42039, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3641, stateTaxDue: makeFromInt 1797 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45294, ordinaryIncomeNonSS: makeFromInt 84753, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17723, stateTaxDue: makeFromInt 3772 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21779, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82684, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46241, stateTaxDue: makeFromInt 11520 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51501, qualifiedIncome: makeFromInt 70476, itemizedDeductions: makeFromInt 19841, federalTaxDue: makeFromInt 4192, stateTaxDue: makeFromInt 5424 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62805, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13134, federalTaxDue: makeFromInt 17584, stateTaxDue: makeFromInt 7765 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29007, ordinaryIncomeNonSS: makeFromInt 96851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8742, federalTaxDue: makeFromInt 11960, stateTaxDue: makeFromInt 4368 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31163, ordinaryIncomeNonSS: makeFromInt 20829, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12155, federalTaxDue: makeFromInt 17785, stateTaxDue: makeFromInt 5786 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73235, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15251, federalTaxDue: makeFromInt 5194, stateTaxDue: makeFromInt 3307 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18926, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 532 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63076, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6260, stateTaxDue: makeFromInt 2699 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11969, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80427, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2897, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71951, itemizedDeductions: makeFromInt 25164, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3123 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16273, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49570, itemizedDeductions: makeFromInt 6665, federalTaxDue: makeFromInt 37063, stateTaxDue: makeFromInt 9524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48736, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2037 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24079, itemizedDeductions: makeFromInt 25625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2256, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113935, qualifiedIncome: makeFromInt 80210, itemizedDeductions: makeFromInt 5455, federalTaxDue: makeFromInt 39883, stateTaxDue: makeFromInt 9452 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41753, itemizedDeductions: makeFromInt 27576, federalTaxDue: makeFromInt 25075, stateTaxDue: makeFromInt 9127 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96566, itemizedDeductions: makeFromInt 18057, federalTaxDue: makeFromInt 52588, stateTaxDue: makeFromInt 12228 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11568, ordinaryIncomeNonSS: makeFromInt 49919, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4339, stateTaxDue: makeFromInt 2121 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22095, ordinaryIncomeNonSS: makeFromInt 60872, qualifiedIncome: makeFromInt 64637, itemizedDeductions: makeFromInt 9831, federalTaxDue: makeFromInt 11389, stateTaxDue: makeFromInt 5748 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34835, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27932, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44066, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15669, federalTaxDue: makeFromInt 35412, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10525, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19213, stateTaxDue: makeFromInt 7551 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27018, itemizedDeductions: makeFromInt 5105, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41806, ordinaryIncomeNonSS: makeFromInt 28711, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 543, stateTaxDue: makeFromInt 1015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86040, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11312, stateTaxDue: makeFromInt 4047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46104, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10012, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48081, qualifiedIncome: makeFromInt 13114, itemizedDeductions: makeFromInt 11494, federalTaxDue: makeFromInt 1984, stateTaxDue: makeFromInt 2693 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79757, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10637, stateTaxDue: makeFromInt 3639 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40465, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66350, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43497, stateTaxDue: makeFromInt 10687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70702, qualifiedIncome: makeFromInt 57756, itemizedDeductions: makeFromInt 9503, federalTaxDue: makeFromInt 7468, stateTaxDue: makeFromInt 5748 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116338, qualifiedIncome: makeFromInt 58813, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37651, stateTaxDue: makeFromInt 8503 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36440, ordinaryIncomeNonSS: makeFromInt 1946, qualifiedIncome: makeFromInt 53620, itemizedDeductions: makeFromInt 8891, federalTaxDue: makeFromInt 3158, stateTaxDue: makeFromInt 2203 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87024, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17483, stateTaxDue: makeFromInt 8676 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7705, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 46 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32408, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4880, stateTaxDue: makeFromInt 1165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15108, ordinaryIncomeNonSS: makeFromInt 70670, qualifiedIncome: makeFromInt 41640, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10113, stateTaxDue: makeFromInt 5299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3257, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23977, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33799, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25158, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90307, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36806, stateTaxDue: makeFromInt 11440 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22507, ordinaryIncomeNonSS: makeFromInt 82705, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9003, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18085, itemizedDeductions: makeFromInt 23225, federalTaxDue: makeFromInt 36258, stateTaxDue: makeFromInt 7829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16329, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53568, itemizedDeductions: makeFromInt 26354, federalTaxDue: makeFromInt 475, stateTaxDue: makeFromInt 2385 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68653, qualifiedIncome: makeFromInt 63406, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13688, stateTaxDue: makeFromInt 6348 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35048, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1377 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20898, ordinaryIncomeNonSS: makeFromInt 5418, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70223, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26684, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 637, stateTaxDue: makeFromInt 708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22071, stateTaxDue: makeFromInt 7838 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47841, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19746, itemizedDeductions: makeFromInt 19265, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121196, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7411, federalTaxDue: makeFromInt 28629, stateTaxDue: makeFromInt 10628 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138891, qualifiedIncome: makeFromInt 21020, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28897, stateTaxDue: makeFromInt 7521 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7443, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36911, ordinaryIncomeNonSS: makeFromInt 22980, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18790, federalTaxDue: makeFromInt 9391, stateTaxDue: makeFromInt 5674 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21950, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97630, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8455, stateTaxDue: makeFromInt 4530 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20563, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26814, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100399, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19402, federalTaxDue: makeFromInt 21556, stateTaxDue: makeFromInt 4445 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72741, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4660, stateTaxDue: makeFromInt 3182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31686, ordinaryIncomeNonSS: makeFromInt 76445, qualifiedIncome: makeFromInt 28520, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23363, stateTaxDue: makeFromInt 5129 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 123, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36398, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 789, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5997, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64486, itemizedDeductions: makeFromInt 8031, federalTaxDue: makeFromInt 29022, stateTaxDue: makeFromInt 10249 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16518, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13596, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23412, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73469, itemizedDeductions: makeFromInt 4516, federalTaxDue: makeFromInt 6069, stateTaxDue: makeFromInt 3418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47014, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9120, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46692, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28559, federalTaxDue: makeFromInt 26697, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10984, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3170, itemizedDeductions: makeFromInt 8345, federalTaxDue: makeFromInt 34039, stateTaxDue: makeFromInt 7284 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16454, federalTaxDue: makeFromInt 9282, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137513, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19639, stateTaxDue: makeFromInt 6421 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16517, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9932, federalTaxDue: makeFromInt 12837, stateTaxDue: makeFromInt 2603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3959, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9260, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31087, ordinaryIncomeNonSS: makeFromInt 99684, qualifiedIncome: makeFromInt 77986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26041, stateTaxDue: makeFromInt 8408 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14411, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61392, itemizedDeductions: makeFromInt 12143, federalTaxDue: makeFromInt 3149, stateTaxDue: makeFromInt 2615 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135517, qualifiedIncome: makeFromInt 94543, itemizedDeductions: makeFromInt 28266, federalTaxDue: makeFromInt 33943, stateTaxDue: makeFromInt 11048 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 74 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20416, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9848, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42989, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1475 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6762, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143616, qualifiedIncome: makeFromInt 92402, itemizedDeductions: makeFromInt 27679, federalTaxDue: makeFromInt 35765, stateTaxDue: makeFromInt 11346 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79429, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35563, stateTaxDue: makeFromInt 10896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22195, ordinaryIncomeNonSS: makeFromInt 55747, qualifiedIncome: makeFromInt 3724, itemizedDeductions: makeFromInt 17833, federalTaxDue: makeFromInt 6982, stateTaxDue: makeFromInt 2584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4525, ordinaryIncomeNonSS: makeFromInt 73459, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21410, federalTaxDue: makeFromInt 8733, stateTaxDue: makeFromInt 3522 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57818, qualifiedIncome: makeFromInt 74772, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8386, stateTaxDue: makeFromInt 6313 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9095, ordinaryIncomeNonSS: makeFromInt 13036, qualifiedIncome: makeFromInt 19356, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1088, itemizedDeductions: makeFromInt 1954, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 22700, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31034, stateTaxDue: makeFromInt 8155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44402, ordinaryIncomeNonSS: makeFromInt 112311, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29015, federalTaxDue: makeFromInt 25793, stateTaxDue: makeFromInt 5504 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8017, ordinaryIncomeNonSS: makeFromInt 45362, qualifiedIncome: makeFromInt 27312, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2574, stateTaxDue: makeFromInt 2959 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142189, qualifiedIncome: makeFromInt 15619, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36976, stateTaxDue: makeFromInt 7435 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4332, ordinaryIncomeNonSS: makeFromInt 84242, qualifiedIncome: makeFromInt 76259, itemizedDeductions: makeFromInt 2445, federalTaxDue: makeFromInt 16737, stateTaxDue: makeFromInt 7737 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26566, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36471, itemizedDeductions: makeFromInt 9426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1309 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24379, ordinaryIncomeNonSS: makeFromInt 123178, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31886, stateTaxDue: makeFromInt 10484 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57798, qualifiedIncome: makeFromInt 25316, itemizedDeductions: makeFromInt 19241, federalTaxDue: makeFromInt 15327, stateTaxDue: makeFromInt 3581 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19005, ordinaryIncomeNonSS: makeFromInt 24577, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16260, federalTaxDue: makeFromInt 531, stateTaxDue: makeFromInt 805 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23059, ordinaryIncomeNonSS: makeFromInt 27240, qualifiedIncome: makeFromInt 38733, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4083, stateTaxDue: makeFromInt 2924 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4519, ordinaryIncomeNonSS: makeFromInt 54236, qualifiedIncome: makeFromInt 86175, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16211, stateTaxDue: makeFromInt 6733 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39635, ordinaryIncomeNonSS: makeFromInt 133239, qualifiedIncome: makeFromInt 12056, itemizedDeductions: makeFromInt 8237, federalTaxDue: makeFromInt 32472, stateTaxDue: makeFromInt 6810 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32900, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1327 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17715, qualifiedIncome: makeFromInt 69644, itemizedDeductions: makeFromInt 5475, federalTaxDue: makeFromInt 12331, stateTaxDue: makeFromInt 3793 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43382, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37928, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2649, ordinaryIncomeNonSS: makeFromInt 11274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4973 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 30900, qualifiedIncome: makeFromInt 18707, itemizedDeductions: makeFromInt 29761, federalTaxDue: makeFromInt 114, stateTaxDue: makeFromInt 2225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35146, ordinaryIncomeNonSS: makeFromInt 46000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27152, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17339, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8572, federalTaxDue: makeFromInt 1502, stateTaxDue: makeFromInt 612 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118490, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11296, stateTaxDue: makeFromInt 5250 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1475, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76720, qualifiedIncome: makeFromInt 30448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13829, stateTaxDue: makeFromInt 4903 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40647, qualifiedIncome: makeFromInt 52484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 770, stateTaxDue: makeFromInt 4097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28525, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14193, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10376, ordinaryIncomeNonSS: makeFromInt 89830, qualifiedIncome: makeFromInt 20229, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12254, stateTaxDue: makeFromInt 4928 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21993, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97709, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43721, stateTaxDue: makeFromInt 12082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17858, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78717, itemizedDeductions: makeFromInt 4027, federalTaxDue: makeFromInt 40482, stateTaxDue: makeFromInt 11216 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29021, ordinaryIncomeNonSS: makeFromInt 127178, qualifiedIncome: makeFromInt 18901, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27856, stateTaxDue: makeFromInt 6899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78224, qualifiedIncome: makeFromInt 92789, itemizedDeductions: makeFromInt 7079, federalTaxDue: makeFromInt 20298, stateTaxDue: makeFromInt 8171 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31291, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80123, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8774, stateTaxDue: makeFromInt 3751 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89741, itemizedDeductions: makeFromInt 25486, federalTaxDue: makeFromInt 7769, stateTaxDue: makeFromInt 4352 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31521, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1588, stateTaxDue: makeFromInt 2135 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43881, ordinaryIncomeNonSS: makeFromInt 56299, qualifiedIncome: makeFromInt 33953, itemizedDeductions: makeFromInt 20232, federalTaxDue: makeFromInt 14111, stateTaxDue: makeFromInt 4174 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114432, qualifiedIncome: makeFromInt 93592, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32210, stateTaxDue: makeFromInt 10146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8156, federalTaxDue: makeFromInt 16049, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43054, ordinaryIncomeNonSS: makeFromInt 131659, qualifiedIncome: makeFromInt 43661, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39194, stateTaxDue: makeFromInt 8513 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127067, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27902, federalTaxDue: makeFromInt 37400, stateTaxDue: makeFromInt 10878 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24483, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 969 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24404, ordinaryIncomeNonSS: makeFromInt 135770, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22093, stateTaxDue: makeFromInt 6475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33507, ordinaryIncomeNonSS: makeFromInt 49819, qualifiedIncome: makeFromInt 45509, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17361, stateTaxDue: makeFromInt 4515 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42575, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26916, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 720 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36982, ordinaryIncomeNonSS: makeFromInt 114765, qualifiedIncome: makeFromInt 96920, itemizedDeductions: makeFromInt 25429, federalTaxDue: makeFromInt 31211, stateTaxDue: makeFromInt 10143 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36776, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3786, federalTaxDue: makeFromInt 2071, stateTaxDue: makeFromInt 1427 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88976, qualifiedIncome: makeFromInt 7069, itemizedDeductions: makeFromInt 22659, federalTaxDue: makeFromInt 11509, stateTaxDue: makeFromInt 4628 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49221, ordinaryIncomeNonSS: makeFromInt 116699, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4934, federalTaxDue: makeFromInt 25698, stateTaxDue: makeFromInt 5460 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8597, qualifiedIncome: makeFromInt 67861, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28042, ordinaryIncomeNonSS: makeFromInt 105644, qualifiedIncome: makeFromInt 31643, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20446, stateTaxDue: makeFromInt 6349 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14670, itemizedDeductions: makeFromInt 4373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 479 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46721, ordinaryIncomeNonSS: makeFromInt 67931, qualifiedIncome: makeFromInt 80458, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25214, stateTaxDue: makeFromInt 7044 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133575, qualifiedIncome: makeFromInt 50972, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26339, stateTaxDue: makeFromInt 8772 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50834, itemizedDeductions: makeFromInt 14298, federalTaxDue: makeFromInt 37524, stateTaxDue: makeFromInt 10018 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10370, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10718, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27400, federalTaxDue: makeFromInt 24364, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23234, ordinaryIncomeNonSS: makeFromInt 102402, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14452, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1035, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46687, ordinaryIncomeNonSS: makeFromInt 94185, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20748, federalTaxDue: makeFromInt 17515, stateTaxDue: makeFromInt 4253 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30104, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19711, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72635, itemizedDeductions: makeFromInt 18183, federalTaxDue: makeFromInt 34155, stateTaxDue: makeFromInt 10757 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21820, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128448, qualifiedIncome: makeFromInt 73036, itemizedDeductions: makeFromInt 25305, federalTaxDue: makeFromInt 30026, stateTaxDue: makeFromInt 9929 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31781, ordinaryIncomeNonSS: makeFromInt 110802, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9812, federalTaxDue: makeFromInt 16668, stateTaxDue: makeFromInt 5151 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13212, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51174, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2241 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15251, ordinaryIncomeNonSS: makeFromInt 33956, qualifiedIncome: makeFromInt 50892, itemizedDeductions: makeFromInt 8554, federalTaxDue: makeFromInt 1397, stateTaxDue: makeFromInt 3674 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14817, ordinaryIncomeNonSS: makeFromInt 34488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1591, stateTaxDue: makeFromInt 1349 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14674, qualifiedIncome: makeFromInt 72303, itemizedDeductions: makeFromInt 23390, federalTaxDue: makeFromInt 6840, stateTaxDue: makeFromInt 3674 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 445, ordinaryIncomeNonSS: makeFromInt 122232, qualifiedIncome: makeFromInt 70274, itemizedDeductions: makeFromInt 21400, federalTaxDue: makeFromInt 27401, stateTaxDue: makeFromInt 9050 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131044, qualifiedIncome: makeFromInt 88585, itemizedDeductions: makeFromInt 17054, federalTaxDue: makeFromInt 35070, stateTaxDue: makeFromInt 10854 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27246, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36058, ordinaryIncomeNonSS: makeFromInt 9407, qualifiedIncome: makeFromInt 65872, itemizedDeductions: makeFromInt 12175, federalTaxDue: makeFromInt 10705, stateTaxDue: makeFromInt 3509 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116378, qualifiedIncome: makeFromInt 56957, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27721, stateTaxDue: makeFromInt 8531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45855, ordinaryIncomeNonSS: makeFromInt 144010, qualifiedIncome: makeFromInt 16945, itemizedDeductions: makeFromInt 16530, federalTaxDue: makeFromInt 35001, stateTaxDue: makeFromInt 7760 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28961, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32, stateTaxDue: makeFromInt 1073 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44940, ordinaryIncomeNonSS: makeFromInt 11827, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 379 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6243, ordinaryIncomeNonSS: makeFromInt 131265, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7435, federalTaxDue: makeFromInt 31645, stateTaxDue: makeFromInt 11142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38577, ordinaryIncomeNonSS: makeFromInt 48063, qualifiedIncome: makeFromInt 83775, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23740, stateTaxDue: makeFromInt 6377 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9327, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21636, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3413, ordinaryIncomeNonSS: makeFromInt 128595, qualifiedIncome: makeFromInt 70723, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26691, stateTaxDue: makeFromInt 9737 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25383, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14284, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85960, qualifiedIncome: makeFromInt 25420, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11088, stateTaxDue: makeFromInt 5334 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5283, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4443, stateTaxDue: makeFromInt 3206 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29281, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43988, ordinaryIncomeNonSS: makeFromInt 107617, qualifiedIncome: makeFromInt 89153, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35435, stateTaxDue: makeFromInt 9264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24119, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29965, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 883 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80825, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30352, stateTaxDue: makeFromInt 10866 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140418, qualifiedIncome: makeFromInt 2061, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25256, stateTaxDue: makeFromInt 6771 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46014, qualifiedIncome: makeFromInt 95549, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16331, stateTaxDue: makeFromInt 6623 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62570, itemizedDeductions: makeFromInt 11828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2742 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50714, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46960, ordinaryIncomeNonSS: makeFromInt 32193, qualifiedIncome: makeFromInt 72700, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18066, stateTaxDue: makeFromInt 4921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27995, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67739, itemizedDeductions: makeFromInt 11133, federalTaxDue: makeFromInt 4513, stateTaxDue: makeFromInt 3026 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100023, qualifiedIncome: makeFromInt 93667, itemizedDeductions: makeFromInt 4809, federalTaxDue: makeFromInt 25519, stateTaxDue: makeFromInt 9110 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42145, ordinaryIncomeNonSS: makeFromInt 129891, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28349, stateTaxDue: makeFromInt 6278 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27013, itemizedDeductions: makeFromInt 24581, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17336, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46059, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11593, federalTaxDue: makeFromInt 11197, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22325, ordinaryIncomeNonSS: makeFromInt 7965, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13376, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 23 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14107, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4304, itemizedDeductions: makeFromInt 19429, federalTaxDue: makeFromInt 29822, stateTaxDue: makeFromInt 7523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42741, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26939, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33709, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1495 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14706, itemizedDeductions: makeFromInt 18084, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1214, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12553, itemizedDeductions: makeFromInt 11318, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49910, ordinaryIncomeNonSS: makeFromInt 130798, qualifiedIncome: makeFromInt 2802, itemizedDeductions: makeFromInt 29420, federalTaxDue: makeFromInt 23774, stateTaxDue: makeFromInt 6100 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65381, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14260, stateTaxDue: makeFromInt 2886 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48531, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28906, ordinaryIncomeNonSS: makeFromInt 128637, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4325, federalTaxDue: makeFromInt 18934, stateTaxDue: makeFromInt 5957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34571, ordinaryIncomeNonSS: makeFromInt 42475, qualifiedIncome: makeFromInt 21331, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10298, stateTaxDue: makeFromInt 2826 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8239, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92250, itemizedDeductions: makeFromInt 5792, federalTaxDue: makeFromInt 6218, stateTaxDue: makeFromInt 4358 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27233, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52529, qualifiedIncome: makeFromInt 17360, itemizedDeductions: makeFromInt 11059, federalTaxDue: makeFromInt 3825, stateTaxDue: makeFromInt 2984 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46610, ordinaryIncomeNonSS: makeFromInt 81640, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14613, federalTaxDue: makeFromInt 11905, stateTaxDue: makeFromInt 3407 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3674, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46278, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1294, stateTaxDue: makeFromInt 1932 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77353, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13079, federalTaxDue: makeFromInt 5595, stateTaxDue: makeFromInt 3193 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35973, ordinaryIncomeNonSS: makeFromInt 121419, qualifiedIncome: makeFromInt 54856, itemizedDeductions: makeFromInt 19987, federalTaxDue: makeFromInt 31967, stateTaxDue: makeFromInt 8239 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41840, itemizedDeductions: makeFromInt 21681, federalTaxDue: makeFromInt 1073, stateTaxDue: makeFromInt 1717 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11776, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7018, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144773, qualifiedIncome: makeFromInt 28082, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23660, stateTaxDue: makeFromInt 8387 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41857, ordinaryIncomeNonSS: makeFromInt 126613, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20910, stateTaxDue: makeFromInt 5856 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25834, qualifiedIncome: makeFromInt 21420, itemizedDeductions: makeFromInt 18269, federalTaxDue: makeFromInt 553, stateTaxDue: makeFromInt 1988 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28937, ordinaryIncomeNonSS: makeFromInt 39207, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16444, federalTaxDue: makeFromInt 5536, stateTaxDue: makeFromInt 1758 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95284, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13346, stateTaxDue: makeFromInt 4309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15972, stateTaxDue: makeFromInt 5047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38516, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31321, stateTaxDue: makeFromInt 8987 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3931, ordinaryIncomeNonSS: makeFromInt 101551, qualifiedIncome: makeFromInt 3711, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17682, stateTaxDue: makeFromInt 5022 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48787, ordinaryIncomeNonSS: makeFromInt 55801, qualifiedIncome: makeFromInt 47551, itemizedDeductions: makeFromInt 16348, federalTaxDue: makeFromInt 20552, stateTaxDue: makeFromInt 4913 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28504, ordinaryIncomeNonSS: makeFromInt 89415, qualifiedIncome: makeFromInt 4179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10856, stateTaxDue: makeFromInt 4205 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63228, itemizedDeductions: makeFromInt 2909, federalTaxDue: makeFromInt 5430, stateTaxDue: makeFromInt 2906 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120135, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28487, federalTaxDue: makeFromInt 28621, stateTaxDue: makeFromInt 10798 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1964, ordinaryIncomeNonSS: makeFromInt 126335, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2918, federalTaxDue: makeFromInt 15331, stateTaxDue: makeFromInt 5790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22373, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53121, itemizedDeductions: makeFromInt 9222, federalTaxDue: makeFromInt 44614, stateTaxDue: makeFromInt 10135 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8110, ordinaryIncomeNonSS: makeFromInt 123512, qualifiedIncome: makeFromInt 28894, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24209, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146010, qualifiedIncome: makeFromInt 92, itemizedDeductions: makeFromInt 13630, federalTaxDue: makeFromInt 22344, stateTaxDue: makeFromInt 6900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25473, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4580, stateTaxDue: makeFromInt 1075 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30337, ordinaryIncomeNonSS: makeFromInt 132446, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7531, federalTaxDue: makeFromInt 40625, stateTaxDue: makeFromInt 11247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8856, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18648, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45031, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60936, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35189, stateTaxDue: makeFromInt 10105 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43820, ordinaryIncomeNonSS: makeFromInt 95992, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4455, federalTaxDue: makeFromInt 14541, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13915, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6461, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33608, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36689, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1459 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98912, qualifiedIncome: makeFromInt 71258, itemizedDeductions: makeFromInt 9920, federalTaxDue: makeFromInt 17736, stateTaxDue: makeFromInt 8034 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11906, itemizedDeductions: makeFromInt 24878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 220 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14983, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109717, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11398, federalTaxDue: makeFromInt 41741, stateTaxDue: makeFromInt 10267 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145107, qualifiedIncome: makeFromInt 16043, itemizedDeductions: makeFromInt 3525, federalTaxDue: makeFromInt 27540, stateTaxDue: makeFromInt 7803 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39753, ordinaryIncomeNonSS: makeFromInt 13285, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7020, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 327 }
  ]