module GoldenTestCasesFromScala
  ( TestCase(..)
  , cases
  ) where

import CommonTypes (FilingStatus(..))
import Data.Date (Date, Year)
import Moneys (Deduction, Income, TaxPayable, makeFromInt)
import Prelude (class Show, show)
import UnsafeDates (unsafeMakeDate, unsafeMakeYear)

newtype TestCase
  = TestCase
  { year :: Year
  , birthDate :: Date
  , personalExemptions :: Int
  , filingStatus :: FilingStatus
  , socSec :: Income
  , ordinaryIncomeNonSS :: Income
  , qualifiedIncome :: Income
  , itemizedDeductions :: Deduction 
  , federalTaxDue :: TaxPayable
  , stateTaxDue :: TaxPayable
  }

instance showTestCase :: Show TestCase where
  show (TestCase tc) = show tc

cases :: Array TestCase
cases =
  [
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67308, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32732, stateTaxDue: makeFromInt 10610 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5769, ordinaryIncomeNonSS: makeFromInt 144601, qualifiedIncome: makeFromInt 94869, itemizedDeductions: makeFromInt 4357, federalTaxDue: makeFromInt 38897, stateTaxDue: makeFromInt 11764 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22300, qualifiedIncome: makeFromInt 44567, itemizedDeductions: makeFromInt 17217, federalTaxDue: makeFromInt 7427, stateTaxDue: makeFromInt 2961 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36850, ordinaryIncomeNonSS: makeFromInt 112244, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27497, federalTaxDue: makeFromInt 36692, stateTaxDue: makeFromInt 10157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117112, qualifiedIncome: makeFromInt 88468, itemizedDeductions: makeFromInt 11633, federalTaxDue: makeFromInt 34707, stateTaxDue: makeFromInt 10260 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37585, ordinaryIncomeNonSS: makeFromInt 1690, qualifiedIncome: makeFromInt 23899, itemizedDeductions: makeFromInt 21342, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38551, ordinaryIncomeNonSS: makeFromInt 32354, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1049, stateTaxDue: makeFromInt 997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111529, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14792, stateTaxDue: makeFromInt 5137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80343, qualifiedIncome: makeFromInt 26125, itemizedDeductions: makeFromInt 10057, federalTaxDue: makeFromInt 10707, stateTaxDue: makeFromInt 4879 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98168, itemizedDeductions: makeFromInt 7429, federalTaxDue: makeFromInt 12840, stateTaxDue: makeFromInt 4782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88843, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4624, stateTaxDue: makeFromInt 3767 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123011, qualifiedIncome: makeFromInt 41573, itemizedDeductions: makeFromInt 8559, federalTaxDue: makeFromInt 26066, stateTaxDue: makeFromInt 7774 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4141, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16298, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 240 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90405, qualifiedIncome: makeFromInt 91557, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31000, stateTaxDue: makeFromInt 8523 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27311, federalTaxDue: makeFromInt 2796, stateTaxDue: makeFromInt 2428 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7039, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41758, ordinaryIncomeNonSS: makeFromInt 4859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17439, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19340, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13508, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53365, itemizedDeductions: makeFromInt 25088, federalTaxDue: makeFromInt 761, stateTaxDue: makeFromInt 1993 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125779, qualifiedIncome: makeFromInt 86229, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33429, stateTaxDue: makeFromInt 10145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 566, ordinaryIncomeNonSS: makeFromInt 121297, qualifiedIncome: makeFromInt 98915, itemizedDeductions: makeFromInt 1835, federalTaxDue: makeFromInt 34371, stateTaxDue: makeFromInt 10756 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62455, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3861, stateTaxDue: makeFromInt 2838 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30975, ordinaryIncomeNonSS: makeFromInt 15962, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10485, federalTaxDue: makeFromInt 465, stateTaxDue: makeFromInt 467 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17607, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38825, qualifiedIncome: makeFromInt 90897, itemizedDeductions: makeFromInt 23670, federalTaxDue: makeFromInt 21936, stateTaxDue: makeFromInt 6231 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36060, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28429, federalTaxDue: makeFromInt 4018, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14855, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18584, ordinaryIncomeNonSS: makeFromInt 50427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1820, federalTaxDue: makeFromInt 5116, stateTaxDue: makeFromInt 2146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89228, qualifiedIncome: makeFromInt 72399, itemizedDeductions: makeFromInt 11931, federalTaxDue: makeFromInt 22873, stateTaxDue: makeFromInt 7826 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6064, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2159, ordinaryIncomeNonSS: makeFromInt 104778, qualifiedIncome: makeFromInt 73275, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19492, stateTaxDue: makeFromInt 8228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27911, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22888, ordinaryIncomeNonSS: makeFromInt 31336, qualifiedIncome: makeFromInt 11209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2223, stateTaxDue: makeFromInt 1823 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25188, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5503, federalTaxDue: makeFromInt 22938, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78850, itemizedDeductions: makeFromInt 9030, federalTaxDue: makeFromInt 248, stateTaxDue: makeFromInt 3573 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36572, ordinaryIncomeNonSS: makeFromInt 51735, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6046, stateTaxDue: makeFromInt 2212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145708, qualifiedIncome: makeFromInt 66212, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44749, stateTaxDue: makeFromInt 10257 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8843, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28511, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6664, ordinaryIncomeNonSS: makeFromInt 47341, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19203, federalTaxDue: makeFromInt 3530, stateTaxDue: makeFromInt 1792 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131790, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23908, stateTaxDue: makeFromInt 6375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21989, ordinaryIncomeNonSS: makeFromInt 87809, qualifiedIncome: makeFromInt 36400, itemizedDeductions: makeFromInt 1536, federalTaxDue: makeFromInt 21327, stateTaxDue: makeFromInt 5955 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26285, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40324, qualifiedIncome: makeFromInt 7452, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4627, stateTaxDue: makeFromInt 1914 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4379, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 849, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37551, qualifiedIncome: makeFromInt 58153, itemizedDeductions: makeFromInt 10187, federalTaxDue: makeFromInt 7495, stateTaxDue: makeFromInt 4534 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34676, ordinaryIncomeNonSS: makeFromInt 123152, qualifiedIncome: makeFromInt 6413, itemizedDeductions: makeFromInt 16676, federalTaxDue: makeFromInt 19768, stateTaxDue: makeFromInt 5803 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6236, federalTaxDue: makeFromInt 5864, stateTaxDue: makeFromInt 3248 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45876, itemizedDeductions: makeFromInt 17781, federalTaxDue: makeFromInt 26416, stateTaxDue: makeFromInt 9337 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88215, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1112, stateTaxDue: makeFromInt 3736 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41243, ordinaryIncomeNonSS: makeFromInt 81577, qualifiedIncome: makeFromInt 95904, itemizedDeductions: makeFromInt 28666, federalTaxDue: makeFromInt 27855, stateTaxDue: makeFromInt 8299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42354, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10565, itemizedDeductions: makeFromInt 5270, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 110 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118276, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16479, stateTaxDue: makeFromInt 5481 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124014, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18342, stateTaxDue: makeFromInt 5978 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45547, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1318, federalTaxDue: makeFromInt 4816, stateTaxDue: makeFromInt 2099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123852, qualifiedIncome: makeFromInt 6878, itemizedDeductions: makeFromInt 16984, federalTaxDue: makeFromInt 20701, stateTaxDue: makeFromInt 6282 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33931, ordinaryIncomeNonSS: makeFromInt 16041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 327 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38559, ordinaryIncomeNonSS: makeFromInt 81879, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8159, federalTaxDue: makeFromInt 33118, stateTaxDue: makeFromInt 8639 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 28740, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6696, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5913 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27374, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4585, itemizedDeductions: makeFromInt 880, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21534, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20868, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46606, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17133, federalTaxDue: makeFromInt 3331, stateTaxDue: makeFromInt 2075 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28369, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1163 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23050, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9485, federalTaxDue: makeFromInt 31303, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9412, ordinaryIncomeNonSS: makeFromInt 56319, qualifiedIncome: makeFromInt 2507, itemizedDeductions: makeFromInt 4057, federalTaxDue: makeFromInt 7225, stateTaxDue: makeFromInt 2486 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38976, ordinaryIncomeNonSS: makeFromInt 139032, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19772, federalTaxDue: makeFromInt 28627, stateTaxDue: makeFromInt 6642 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35754, itemizedDeductions: makeFromInt 22870, federalTaxDue: makeFromInt 30386, stateTaxDue: makeFromInt 9127 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11596, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58592, itemizedDeductions: makeFromInt 24321, federalTaxDue: makeFromInt 33653, stateTaxDue: makeFromInt 9855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9496, federalTaxDue: makeFromInt 48564, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32265, ordinaryIncomeNonSS: makeFromInt 27123, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23053, federalTaxDue: makeFromInt 1696, stateTaxDue: makeFromInt 1026 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1830, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72048, itemizedDeductions: makeFromInt 6558, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2927 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73628, itemizedDeductions: makeFromInt 3386, federalTaxDue: makeFromInt 51599, stateTaxDue: makeFromInt 11058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25948, ordinaryIncomeNonSS: makeFromInt 146592, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25492, stateTaxDue: makeFromInt 6823 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95944, itemizedDeductions: makeFromInt 24970, federalTaxDue: makeFromInt 36712, stateTaxDue: makeFromInt 12115 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3012, ordinaryIncomeNonSS: makeFromInt 21774, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 886 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12492, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4345, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13747, qualifiedIncome: makeFromInt 10896, itemizedDeductions: makeFromInt 9594, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 777 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14260, ordinaryIncomeNonSS: makeFromInt 130538, qualifiedIncome: makeFromInt 53142, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23990, stateTaxDue: makeFromInt 8509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94408, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21176, federalTaxDue: makeFromInt 20206, stateTaxDue: makeFromInt 9045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26224, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71289, qualifiedIncome: makeFromInt 31418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4544, stateTaxDue: makeFromInt 4660 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17635, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36267, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 389, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48043, ordinaryIncomeNonSS: makeFromInt 115745, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9796, federalTaxDue: makeFromInt 24840, stateTaxDue: makeFromInt 5212 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46826, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 284 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101525, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17584, federalTaxDue: makeFromInt 8867, stateTaxDue: makeFromInt 4481 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32293, ordinaryIncomeNonSS: makeFromInt 11400, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24188, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 153 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99961, qualifiedIncome: makeFromInt 51293, itemizedDeductions: makeFromInt 1086, federalTaxDue: makeFromInt 19149, stateTaxDue: makeFromInt 7188 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123956, qualifiedIncome: makeFromInt 78128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36663, stateTaxDue: makeFromInt 9653 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21866, ordinaryIncomeNonSS: makeFromInt 84989, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9080, federalTaxDue: makeFromInt 30170, stateTaxDue: makeFromInt 8794 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37453, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3663, federalTaxDue: makeFromInt 32213, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132417, qualifiedIncome: makeFromInt 94043, itemizedDeductions: makeFromInt 2207, federalTaxDue: makeFromInt 28916, stateTaxDue: makeFromInt 10648 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35425, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4081, stateTaxDue: makeFromInt 1989 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69984, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4387, stateTaxDue: makeFromInt 2824 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41645, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1759, itemizedDeductions: makeFromInt 5529, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52856, itemizedDeductions: makeFromInt 16434, federalTaxDue: makeFromInt 2281, stateTaxDue: makeFromInt 2267 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40250, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85136, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17624, federalTaxDue: makeFromInt 22706, stateTaxDue: makeFromInt 4118 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48524, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78622, itemizedDeductions: makeFromInt 26965, federalTaxDue: makeFromInt 6993, stateTaxDue: makeFromInt 3556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68001, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3019 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7382, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19148, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31421, ordinaryIncomeNonSS: makeFromInt 8057, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26128, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 148 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56017, itemizedDeductions: makeFromInt 1672, federalTaxDue: makeFromInt 2403, stateTaxDue: makeFromInt 2546 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53362, qualifiedIncome: makeFromInt 50859, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6550, stateTaxDue: makeFromInt 4764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2537, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62192, itemizedDeductions: makeFromInt 24111, federalTaxDue: makeFromInt 959, stateTaxDue: makeFromInt 2735 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6829, stateTaxDue: makeFromInt 3905 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25485, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16291, ordinaryIncomeNonSS: makeFromInt 122713, qualifiedIncome: makeFromInt 14410, itemizedDeductions: makeFromInt 23302, federalTaxDue: makeFromInt 17883, stateTaxDue: makeFromInt 6381 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95747, qualifiedIncome: makeFromInt 64308, itemizedDeductions: makeFromInt 19196, federalTaxDue: makeFromInt 14219, stateTaxDue: makeFromInt 7510 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47778, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11278, federalTaxDue: makeFromInt 4200, stateTaxDue: makeFromInt 2090 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149516, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29861, federalTaxDue: makeFromInt 16329, stateTaxDue: makeFromInt 6973 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35373, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2275, stateTaxDue: makeFromInt 1314 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24350, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86406, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15557, stateTaxDue: makeFromInt 3754 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68401, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2945 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16418, ordinaryIncomeNonSS: makeFromInt 40787, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22667, federalTaxDue: makeFromInt 3644, stateTaxDue: makeFromInt 1584 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72899, qualifiedIncome: makeFromInt 24220, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18589, stateTaxDue: makeFromInt 4481 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49225, qualifiedIncome: makeFromInt 35581, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4255, stateTaxDue: makeFromInt 3665 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14535, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 252 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49964, ordinaryIncomeNonSS: makeFromInt 58605, qualifiedIncome: makeFromInt 68484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18121, stateTaxDue: makeFromInt 5879 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16428, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47962, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91437, qualifiedIncome: makeFromInt 10182, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16272, stateTaxDue: makeFromInt 4530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48433, qualifiedIncome: makeFromInt 85329, itemizedDeductions: makeFromInt 10046, federalTaxDue: makeFromInt 5400, stateTaxDue: makeFromInt 6169 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55195, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28692, federalTaxDue: makeFromInt 2902, stateTaxDue: makeFromInt 2591 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39940, ordinaryIncomeNonSS: makeFromInt 116979, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32399, stateTaxDue: makeFromInt 5742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16455, ordinaryIncomeNonSS: makeFromInt 116091, qualifiedIncome: makeFromInt 34162, itemizedDeductions: makeFromInt 18275, federalTaxDue: makeFromInt 22310, stateTaxDue: makeFromInt 7112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6910, ordinaryIncomeNonSS: makeFromInt 87592, qualifiedIncome: makeFromInt 43464, itemizedDeductions: makeFromInt 23732, federalTaxDue: makeFromInt 14662, stateTaxDue: makeFromInt 6255 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11197, ordinaryIncomeNonSS: makeFromInt 124511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23413, stateTaxDue: makeFromInt 6066 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42095, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 52621, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16450, federalTaxDue: makeFromInt 3853, stateTaxDue: makeFromInt 2667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4271, qualifiedIncome: makeFromInt 21550, itemizedDeductions: makeFromInt 21177, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30862, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14405, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25086, ordinaryIncomeNonSS: makeFromInt 99094, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31957, stateTaxDue: makeFromInt 9603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9707, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82394, itemizedDeductions: makeFromInt 11577, federalTaxDue: makeFromInt 37599, stateTaxDue: makeFromInt 11245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3584, qualifiedIncome: makeFromInt 14647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 501 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23130, ordinaryIncomeNonSS: makeFromInt 95475, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10069, federalTaxDue: makeFromInt 15457, stateTaxDue: makeFromInt 4318 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61413, qualifiedIncome: makeFromInt 33623, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8481, stateTaxDue: makeFromInt 4254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8947, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19501, ordinaryIncomeNonSS: makeFromInt 136315, qualifiedIncome: makeFromInt 72421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37864, stateTaxDue: makeFromInt 10182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74423, qualifiedIncome: makeFromInt 70478, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15681, stateTaxDue: makeFromInt 6941 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61314, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5246, federalTaxDue: makeFromInt 9412, stateTaxDue: makeFromInt 2474 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26415, ordinaryIncomeNonSS: makeFromInt 78196, qualifiedIncome: makeFromInt 10686, itemizedDeductions: makeFromInt 16424, federalTaxDue: makeFromInt 15922, stateTaxDue: makeFromInt 4189 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39963, ordinaryIncomeNonSS: makeFromInt 36520, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2671, stateTaxDue: makeFromInt 1351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 920, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136134, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29570, federalTaxDue: makeFromInt 29950, stateTaxDue: makeFromInt 6653 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100379, qualifiedIncome: makeFromInt 88299, itemizedDeductions: makeFromInt 1230, federalTaxDue: makeFromInt 31524, stateTaxDue: makeFromInt 9398 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40232, ordinaryIncomeNonSS: makeFromInt 56646, qualifiedIncome: makeFromInt 79471, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20923, stateTaxDue: makeFromInt 6551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17180, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45488, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33588, stateTaxDue: makeFromInt 9199 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22404, ordinaryIncomeNonSS: makeFromInt 126486, qualifiedIncome: makeFromInt 48256, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27534, stateTaxDue: makeFromInt 8162 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86762, qualifiedIncome: makeFromInt 5034, itemizedDeductions: makeFromInt 25730, federalTaxDue: makeFromInt 18501, stateTaxDue: makeFromInt 4335 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28536, ordinaryIncomeNonSS: makeFromInt 129449, qualifiedIncome: makeFromInt 28891, itemizedDeductions: makeFromInt 8016, federalTaxDue: makeFromInt 23377, stateTaxDue: makeFromInt 7242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51301, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11110, federalTaxDue: makeFromInt 6304, stateTaxDue: makeFromInt 2090 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42574, ordinaryIncomeNonSS: makeFromInt 149519, qualifiedIncome: makeFromInt 85279, itemizedDeductions: makeFromInt 1188, federalTaxDue: makeFromInt 49631, stateTaxDue: makeFromInt 11433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16501, ordinaryIncomeNonSS: makeFromInt 58147, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2767, federalTaxDue: makeFromInt 7401, stateTaxDue: makeFromInt 2517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30114, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8232, itemizedDeductions: makeFromInt 22877, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46069, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69008, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 916, stateTaxDue: makeFromInt 2775 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40875, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23493, ordinaryIncomeNonSS: makeFromInt 68076, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8921, stateTaxDue: makeFromInt 2921 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39183, itemizedDeductions: makeFromInt 4418, federalTaxDue: makeFromInt 30455, stateTaxDue: makeFromInt 9302 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53911, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6998, stateTaxDue: makeFromInt 2021 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12705, federalTaxDue: makeFromInt 7588, stateTaxDue: makeFromInt 3544 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94882, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37998, stateTaxDue: makeFromInt 11869 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17336, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75751, qualifiedIncome: makeFromInt 53891, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19937, stateTaxDue: makeFromInt 5807 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 701, ordinaryIncomeNonSS: makeFromInt 958, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46086, qualifiedIncome: makeFromInt 69867, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 5465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137760, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10650, federalTaxDue: makeFromInt 32770, stateTaxDue: makeFromInt 11473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8344, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 79 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12634, ordinaryIncomeNonSS: makeFromInt 107999, qualifiedIncome: makeFromInt 40721, itemizedDeductions: makeFromInt 24392, federalTaxDue: makeFromInt 17458, stateTaxDue: makeFromInt 6961 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9072, ordinaryIncomeNonSS: makeFromInt 73123, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11083, stateTaxDue: makeFromInt 3301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4089, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43424, ordinaryIncomeNonSS: makeFromInt 85894, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13910, stateTaxDue: makeFromInt 3952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15379, ordinaryIncomeNonSS: makeFromInt 60440, qualifiedIncome: makeFromInt 19319, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8373, stateTaxDue: makeFromInt 3613 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34989, stateTaxDue: makeFromInt 9457 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47154, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46086, stateTaxDue: makeFromInt 9734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5494, itemizedDeductions: makeFromInt 6710, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 56 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131785, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24692, stateTaxDue: makeFromInt 6211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123932, qualifiedIncome: makeFromInt 993, itemizedDeductions: makeFromInt 4020, federalTaxDue: makeFromInt 20200, stateTaxDue: makeFromInt 5991 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 662, qualifiedIncome: makeFromInt 88170, itemizedDeductions: makeFromInt 9229, federalTaxDue: makeFromInt 5471, stateTaxDue: makeFromInt 3980 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130344, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27615, federalTaxDue: makeFromInt 35667, stateTaxDue: makeFromInt 11523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27341, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22952, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38624, ordinaryIncomeNonSS: makeFromInt 71048, qualifiedIncome: makeFromInt 19721, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13559, stateTaxDue: makeFromInt 4163 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99033, qualifiedIncome: makeFromInt 73908, itemizedDeductions: makeFromInt 19466, federalTaxDue: makeFromInt 17541, stateTaxDue: makeFromInt 7972 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6823, ordinaryIncomeNonSS: makeFromInt 53651, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3153, stateTaxDue: makeFromInt 2083 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39696, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52107, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2030 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45985, ordinaryIncomeNonSS: makeFromInt 132339, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29492, stateTaxDue: makeFromInt 6340 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8451, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15660, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30381, stateTaxDue: makeFromInt 7828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136989, qualifiedIncome: makeFromInt 74718, itemizedDeductions: makeFromInt 12345, federalTaxDue: makeFromInt 34393, stateTaxDue: makeFromInt 10330 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42732, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87449, itemizedDeductions: makeFromInt 3855, federalTaxDue: makeFromInt 7250, stateTaxDue: makeFromInt 3909 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21113, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 645 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43129, ordinaryIncomeNonSS: makeFromInt 48235, qualifiedIncome: makeFromInt 63060, itemizedDeductions: makeFromInt 21193, federalTaxDue: makeFromInt 17590, stateTaxDue: makeFromInt 4990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12534, federalTaxDue: makeFromInt 11804, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23850, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43339, itemizedDeductions: makeFromInt 399, federalTaxDue: makeFromInt 34626, stateTaxDue: makeFromInt 9092 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43302, ordinaryIncomeNonSS: makeFromInt 37968, qualifiedIncome: makeFromInt 62061, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11057, stateTaxDue: makeFromInt 4653 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57895, itemizedDeductions: makeFromInt 8627, federalTaxDue: makeFromInt 929, stateTaxDue: makeFromInt 2606 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12466, ordinaryIncomeNonSS: makeFromInt 134561, qualifiedIncome: makeFromInt 92015, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29007, stateTaxDue: makeFromInt 10903 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43657, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30136, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34562, stateTaxDue: makeFromInt 8632 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27985, federalTaxDue: makeFromInt 27609, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30316, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93949, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8445, stateTaxDue: makeFromInt 4363 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28030, itemizedDeductions: makeFromInt 11799, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 727 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39146, ordinaryIncomeNonSS: makeFromInt 109205, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17023, stateTaxDue: makeFromInt 4985 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48127, ordinaryIncomeNonSS: makeFromInt 74316, qualifiedIncome: makeFromInt 88532, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33046, stateTaxDue: makeFromInt 7958 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111891, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20424, federalTaxDue: makeFromInt 14114, stateTaxDue: makeFromInt 5220 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7379, ordinaryIncomeNonSS: makeFromInt 63457, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8335, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25932, ordinaryIncomeNonSS: makeFromInt 7317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12925, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 96333, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26246, federalTaxDue: makeFromInt 8198, stateTaxDue: makeFromInt 4485 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22158, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5170, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19620, itemizedDeductions: makeFromInt 6293, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 726 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42175, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84840, itemizedDeductions: makeFromInt 5637, federalTaxDue: makeFromInt 11979, stateTaxDue: makeFromInt 3787 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8741, ordinaryIncomeNonSS: makeFromInt 130643, qualifiedIncome: makeFromInt 6056, itemizedDeductions: makeFromInt 6344, federalTaxDue: makeFromInt 24753, stateTaxDue: makeFromInt 6580 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36672, ordinaryIncomeNonSS: makeFromInt 148111, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25280, stateTaxDue: makeFromInt 6931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24953, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 993 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32195, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147783, qualifiedIncome: makeFromInt 51063, itemizedDeductions: makeFromInt 4723, federalTaxDue: makeFromInt 26771, stateTaxDue: makeFromInt 9692 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44006, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3591, stateTaxDue: makeFromInt 1745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13739, itemizedDeductions: makeFromInt 13546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 112 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7320, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51596, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2105 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52038, itemizedDeductions: makeFromInt 11824, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2001 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25660, ordinaryIncomeNonSS: makeFromInt 30664, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8884, stateTaxDue: makeFromInt 6058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42556, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32459, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42600, stateTaxDue: makeFromInt 8877 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5817, itemizedDeductions: makeFromInt 28300, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36804, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14420, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37296, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19583, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 939, federalTaxDue: makeFromInt 42761, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133820, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22824, stateTaxDue: makeFromInt 6436 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109664, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17729, stateTaxDue: makeFromInt 5164 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37588, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47474, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1768 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11346, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 92 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46847, ordinaryIncomeNonSS: makeFromInt 4456, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11195, stateTaxDue: makeFromInt 4776 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7100, ordinaryIncomeNonSS: makeFromInt 45173, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2458, stateTaxDue: makeFromInt 1584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47269, ordinaryIncomeNonSS: makeFromInt 51206, qualifiedIncome: makeFromInt 64457, itemizedDeductions: makeFromInt 23965, federalTaxDue: makeFromInt 17232, stateTaxDue: makeFromInt 5470 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1796, ordinaryIncomeNonSS: makeFromInt 49447, qualifiedIncome: makeFromInt 39241, itemizedDeductions: makeFromInt 24425, federalTaxDue: makeFromInt 2430, stateTaxDue: makeFromInt 3759 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56948, itemizedDeductions: makeFromInt 24075, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2456 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33929, ordinaryIncomeNonSS: makeFromInt 51746, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4087, stateTaxDue: makeFromInt 2211 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35628, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57207, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 588, stateTaxDue: makeFromInt 2445 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34571, ordinaryIncomeNonSS: makeFromInt 54066, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11659, stateTaxDue: makeFromInt 2329 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75596, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38917, stateTaxDue: makeFromInt 10605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88497, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5075, stateTaxDue: makeFromInt 3963 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4444, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25628, federalTaxDue: makeFromInt 23394, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10064, ordinaryIncomeNonSS: makeFromInt 47463, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3035, stateTaxDue: makeFromInt 1898 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53659, itemizedDeductions: makeFromInt 23766, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2063 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116017, qualifiedIncome: makeFromInt 28880, itemizedDeductions: makeFromInt 523, federalTaxDue: makeFromInt 15534, stateTaxDue: makeFromInt 6770 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40329, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25240, stateTaxDue: makeFromInt 9156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25051, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24697, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21263, itemizedDeductions: makeFromInt 4517, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 688 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32171, qualifiedIncome: makeFromInt 62708, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 487, stateTaxDue: makeFromInt 4069 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48930, ordinaryIncomeNonSS: makeFromInt 140647, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3730, federalTaxDue: makeFromInt 34583, stateTaxDue: makeFromInt 6777 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8509, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 210 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82104, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9660, stateTaxDue: makeFromInt 3759 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19829, ordinaryIncomeNonSS: makeFromInt 138937, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20040, federalTaxDue: makeFromInt 19502, stateTaxDue: makeFromInt 6472 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18396, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22533, itemizedDeductions: makeFromInt 6573, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2571, ordinaryIncomeNonSS: makeFromInt 70054, qualifiedIncome: makeFromInt 7501, itemizedDeductions: makeFromInt 29588, federalTaxDue: makeFromInt 6547, stateTaxDue: makeFromInt 3731 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17990, ordinaryIncomeNonSS: makeFromInt 64183, qualifiedIncome: makeFromInt 89060, itemizedDeductions: makeFromInt 8595, federalTaxDue: makeFromInt 23226, stateTaxDue: makeFromInt 7407 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117347, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20297, stateTaxDue: makeFromInt 5638 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 78458, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29666, stateTaxDue: makeFromInt 10748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23435, ordinaryIncomeNonSS: makeFromInt 134645, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6119, federalTaxDue: makeFromInt 20603, stateTaxDue: makeFromInt 6214 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11502, qualifiedIncome: makeFromInt 77780, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3297, stateTaxDue: makeFromInt 4089 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5752, ordinaryIncomeNonSS: makeFromInt 92242, qualifiedIncome: makeFromInt 64407, itemizedDeductions: makeFromInt 9881, federalTaxDue: makeFromInt 21234, stateTaxDue: makeFromInt 7540 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81387, qualifiedIncome: makeFromInt 17531, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9828, stateTaxDue: makeFromInt 4596 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10785, ordinaryIncomeNonSS: makeFromInt 42450, qualifiedIncome: makeFromInt 97270, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8227, stateTaxDue: makeFromInt 6611 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61034, itemizedDeductions: makeFromInt 28303, federalTaxDue: makeFromInt 44389, stateTaxDue: makeFromInt 10416 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94337, qualifiedIncome: makeFromInt 39017, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12646, stateTaxDue: makeFromInt 6373 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77944, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8138, federalTaxDue: makeFromInt 22030, stateTaxDue: makeFromInt 8522 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9705, ordinaryIncomeNonSS: makeFromInt 138317, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24776, federalTaxDue: makeFromInt 23065, stateTaxDue: makeFromInt 6661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21880, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68501, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2841 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90539, itemizedDeductions: makeFromInt 928, federalTaxDue: makeFromInt 9113, stateTaxDue: makeFromInt 4169 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83629, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23689, federalTaxDue: makeFromInt 7456, stateTaxDue: makeFromInt 3816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78082, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8655, stateTaxDue: makeFromInt 3554 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48522, itemizedDeductions: makeFromInt 25940, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108244, qualifiedIncome: makeFromInt 80548, itemizedDeductions: makeFromInt 17237, federalTaxDue: makeFromInt 24069, stateTaxDue: makeFromInt 9078 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13263, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69147, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4725, stateTaxDue: makeFromInt 3098 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21526, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26553, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35770, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26994, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45748, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37367, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48699, itemizedDeductions: makeFromInt 16385, federalTaxDue: makeFromInt 5000, stateTaxDue: makeFromInt 2180 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4781, ordinaryIncomeNonSS: makeFromInt 101584, qualifiedIncome: makeFromInt 51910, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23449, stateTaxDue: makeFromInt 7420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 646, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28600, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 908 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6757, ordinaryIncomeNonSS: makeFromInt 95922, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9884, stateTaxDue: makeFromInt 4221 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79103, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12725, federalTaxDue: makeFromInt 9786, stateTaxDue: makeFromInt 3700 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92604, itemizedDeductions: makeFromInt 28530, federalTaxDue: makeFromInt 6331, stateTaxDue: makeFromInt 4376 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142474, qualifiedIncome: makeFromInt 48421, itemizedDeductions: makeFromInt 19233, federalTaxDue: makeFromInt 30920, stateTaxDue: makeFromInt 9090 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5103, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45163, ordinaryIncomeNonSS: makeFromInt 46734, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22491, federalTaxDue: makeFromInt 5203, stateTaxDue: makeFromInt 1862 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36088, ordinaryIncomeNonSS: makeFromInt 17184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 221 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13111, ordinaryIncomeNonSS: makeFromInt 70311, qualifiedIncome: makeFromInt 53949, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10451, stateTaxDue: makeFromInt 5684 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113214, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19586, federalTaxDue: makeFromInt 14432, stateTaxDue: makeFromInt 5286 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38410, ordinaryIncomeNonSS: makeFromInt 12733, qualifiedIncome: makeFromInt 5929, itemizedDeductions: makeFromInt 29432, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 458 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46804, ordinaryIncomeNonSS: makeFromInt 138767, qualifiedIncome: makeFromInt 49685, itemizedDeductions: makeFromInt 7146, federalTaxDue: makeFromInt 32412, stateTaxDue: makeFromInt 8748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11285, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82637, itemizedDeductions: makeFromInt 27313, federalTaxDue: makeFromInt 37041, stateTaxDue: makeFromInt 11314 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17244, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30225, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60723, qualifiedIncome: makeFromInt 88548, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32323, stateTaxDue: makeFromInt 7388 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29005, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15993, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66846, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2467, stateTaxDue: makeFromInt 3062 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1583, ordinaryIncomeNonSS: makeFromInt 37788, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15514, federalTaxDue: makeFromInt 2637, stateTaxDue: makeFromInt 1434 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17617, ordinaryIncomeNonSS: makeFromInt 88011, qualifiedIncome: makeFromInt 80499, itemizedDeductions: makeFromInt 11037, federalTaxDue: makeFromInt 20768, stateTaxDue: makeFromInt 7941 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29210, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8222, itemizedDeductions: makeFromInt 29014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 36 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21692, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11416, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 96 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76203, itemizedDeductions: makeFromInt 20431, federalTaxDue: makeFromInt 46724, stateTaxDue: makeFromInt 10855 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125830, qualifiedIncome: makeFromInt 12273, itemizedDeductions: makeFromInt 4351, federalTaxDue: makeFromInt 30818, stateTaxDue: makeFromInt 6696 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22450, itemizedDeductions: makeFromInt 19809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 798 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109235, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43089, stateTaxDue: makeFromInt 10243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33710, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3474, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35009, ordinaryIncomeNonSS: makeFromInt 52860, qualifiedIncome: makeFromInt 74584, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18755, stateTaxDue: makeFromInt 6051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75126, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4596, stateTaxDue: makeFromInt 3181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 31855, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14950, federalTaxDue: makeFromInt 1071, stateTaxDue: makeFromInt 1218 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27436, ordinaryIncomeNonSS: makeFromInt 123855, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4597, federalTaxDue: makeFromInt 40630, stateTaxDue: makeFromInt 10738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35973, itemizedDeductions: makeFromInt 6232, federalTaxDue: makeFromInt 37535, stateTaxDue: makeFromInt 9260 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2489, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55864, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2590, stateTaxDue: makeFromInt 2421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36753, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15385, stateTaxDue: makeFromInt 6163 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22291, ordinaryIncomeNonSS: makeFromInt 88375, qualifiedIncome: makeFromInt 95514, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32118, stateTaxDue: makeFromInt 9032 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 241, ordinaryIncomeNonSS: makeFromInt 63950, qualifiedIncome: makeFromInt 16044, itemizedDeductions: makeFromInt 23383, federalTaxDue: makeFromInt 2615, stateTaxDue: makeFromInt 3651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146277, qualifiedIncome: makeFromInt 50756, itemizedDeductions: makeFromInt 20131, federalTaxDue: makeFromInt 25022, stateTaxDue: makeFromInt 9377 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8894, stateTaxDue: makeFromInt 4567 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54345, qualifiedIncome: makeFromInt 45198, itemizedDeductions: makeFromInt 12557, federalTaxDue: makeFromInt 8309, stateTaxDue: makeFromInt 4684 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43994, ordinaryIncomeNonSS: makeFromInt 99703, qualifiedIncome: makeFromInt 38760, itemizedDeductions: makeFromInt 7486, federalTaxDue: makeFromInt 25977, stateTaxDue: makeFromInt 6548 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16362, federalTaxDue: makeFromInt 26248, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6545, ordinaryIncomeNonSS: makeFromInt 13405, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18386, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 132 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29109, ordinaryIncomeNonSS: makeFromInt 25776, qualifiedIncome: makeFromInt 9487, itemizedDeductions: makeFromInt 3862, federalTaxDue: makeFromInt 2416, stateTaxDue: makeFromInt 1188 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6366, ordinaryIncomeNonSS: makeFromInt 62954, qualifiedIncome: makeFromInt 88486, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17358, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88968, itemizedDeductions: makeFromInt 16482, federalTaxDue: makeFromInt 46909, stateTaxDue: makeFromInt 11373 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15966, qualifiedIncome: makeFromInt 8251, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3891, ordinaryIncomeNonSS: makeFromInt 58538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5852, stateTaxDue: makeFromInt 2537 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45213, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6976, stateTaxDue: makeFromInt 1755 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36136, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22023, ordinaryIncomeNonSS: makeFromInt 30973, qualifiedIncome: makeFromInt 1351, itemizedDeductions: makeFromInt 23069, federalTaxDue: makeFromInt 2157, stateTaxDue: makeFromInt 1241 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46675, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1279, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63371, qualifiedIncome: makeFromInt 36658, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5846, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38805, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 25659, itemizedDeductions: makeFromInt 3943, federalTaxDue: makeFromInt 35025, stateTaxDue: makeFromInt 8208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14020, ordinaryIncomeNonSS: makeFromInt 20635, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15549, stateTaxDue: makeFromInt 5928 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19950, ordinaryIncomeNonSS: makeFromInt 121491, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20107, stateTaxDue: makeFromInt 5820 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85443, itemizedDeductions: makeFromInt 22126, federalTaxDue: makeFromInt 4701, stateTaxDue: makeFromInt 3897 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55271, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2039, stateTaxDue: makeFromInt 2309 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6390, ordinaryIncomeNonSS: makeFromInt 71145, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29463, federalTaxDue: makeFromInt 20982, stateTaxDue: makeFromInt 8102 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26883, itemizedDeductions: makeFromInt 26644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 889 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36127, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61586, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40374, stateTaxDue: makeFromInt 10004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2302, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119204, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17816, federalTaxDue: makeFromInt 42159, stateTaxDue: makeFromInt 10726 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143396, qualifiedIncome: makeFromInt 3593, itemizedDeductions: makeFromInt 8395, federalTaxDue: makeFromInt 17314, stateTaxDue: makeFromInt 6874 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3437, ordinaryIncomeNonSS: makeFromInt 41249, qualifiedIncome: makeFromInt 67843, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11677, stateTaxDue: makeFromInt 5200 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46218, qualifiedIncome: makeFromInt 58686, itemizedDeductions: makeFromInt 17594, federalTaxDue: makeFromInt 8395, stateTaxDue: makeFromInt 4799 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27936, ordinaryIncomeNonSS: makeFromInt 27865, qualifiedIncome: makeFromInt 79154, itemizedDeductions: makeFromInt 17882, federalTaxDue: makeFromInt 11434, stateTaxDue: makeFromInt 4976 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21157, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10363, stateTaxDue: makeFromInt 5603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6067, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12081, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77264, qualifiedIncome: makeFromInt 53540, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21002, stateTaxDue: makeFromInt 6222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71247, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5040, stateTaxDue: makeFromInt 3409 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44401, ordinaryIncomeNonSS: makeFromInt 18089, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12958, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 494 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67628, itemizedDeductions: makeFromInt 17226, federalTaxDue: makeFromInt 3893, stateTaxDue: makeFromInt 3126 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11197, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45199, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21058, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15392, federalTaxDue: makeFromInt 567, stateTaxDue: makeFromInt 598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28090, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 151, federalTaxDue: makeFromInt 5388, stateTaxDue: makeFromInt 1208 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33389, ordinaryIncomeNonSS: makeFromInt 26278, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16871, stateTaxDue: makeFromInt 6093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42889, ordinaryIncomeNonSS: makeFromInt 102572, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3270, federalTaxDue: makeFromInt 20627, stateTaxDue: makeFromInt 4754 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2862, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35729, itemizedDeductions: makeFromInt 22199, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1311 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30438, ordinaryIncomeNonSS: makeFromInt 138491, qualifiedIncome: makeFromInt 77352, itemizedDeductions: makeFromInt 10641, federalTaxDue: makeFromInt 39628, stateTaxDue: makeFromInt 10661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 85048, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8837, federalTaxDue: makeFromInt 24762, stateTaxDue: makeFromInt 9009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11251, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13626, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 5088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32762, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10115, federalTaxDue: makeFromInt 1962, stateTaxDue: makeFromInt 1183 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48294, ordinaryIncomeNonSS: makeFromInt 135633, qualifiedIncome: makeFromInt 29288, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30299, stateTaxDue: makeFromInt 7860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37635, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21763, ordinaryIncomeNonSS: makeFromInt 128173, qualifiedIncome: makeFromInt 47923, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24684, stateTaxDue: makeFromInt 8130 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44702, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72460, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11908, stateTaxDue: makeFromInt 3471 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73836, itemizedDeductions: makeFromInt 11329, federalTaxDue: makeFromInt 4164, stateTaxDue: makeFromInt 3215 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37183, ordinaryIncomeNonSS: makeFromInt 101461, qualifiedIncome: makeFromInt 77161, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28879, stateTaxDue: makeFromInt 8556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12379, itemizedDeductions: makeFromInt 10413, federalTaxDue: makeFromInt 26737, stateTaxDue: makeFromInt 7833 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26516, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10732, stateTaxDue: makeFromInt 6106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15718, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8409, federalTaxDue: makeFromInt 29514, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90158, qualifiedIncome: makeFromInt 42038, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10364, stateTaxDue: makeFromInt 5935 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11630, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42261, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88732, itemizedDeductions: makeFromInt 137, federalTaxDue: makeFromInt 1925, stateTaxDue: makeFromInt 3873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13045, ordinaryIncomeNonSS: makeFromInt 120507, qualifiedIncome: makeFromInt 68892, itemizedDeductions: makeFromInt 5615, federalTaxDue: makeFromInt 34135, stateTaxDue: makeFromInt 9313 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 61667, itemizedDeductions: makeFromInt 20778, federalTaxDue: makeFromInt 1338, stateTaxDue: makeFromInt 2771 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32080, ordinaryIncomeNonSS: makeFromInt 121611, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17982, stateTaxDue: makeFromInt 5606 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 10536, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22788, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77420, itemizedDeductions: makeFromInt 24077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3396 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10365, ordinaryIncomeNonSS: makeFromInt 66861, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14936, stateTaxDue: makeFromInt 7868 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9454, ordinaryIncomeNonSS: makeFromInt 101485, qualifiedIncome: makeFromInt 11708, itemizedDeductions: makeFromInt 14492, federalTaxDue: makeFromInt 11689, stateTaxDue: makeFromInt 5185 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43420, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32884, itemizedDeductions: makeFromInt 22163, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1189 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27602, ordinaryIncomeNonSS: makeFromInt 31949, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1679, stateTaxDue: makeFromInt 1023 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20288, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62895, itemizedDeductions: makeFromInt 16273, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2759 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4632, ordinaryIncomeNonSS: makeFromInt 46582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3344, stateTaxDue: makeFromInt 1754 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22528, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8850, itemizedDeductions: makeFromInt 16916, federalTaxDue: makeFromInt 30501, stateTaxDue: makeFromInt 7551 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46010, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25060, federalTaxDue: makeFromInt 5726, stateTaxDue: makeFromInt 1898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14134, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38354, ordinaryIncomeNonSS: makeFromInt 140940, qualifiedIncome: makeFromInt 67582, itemizedDeductions: makeFromInt 22111, federalTaxDue: makeFromInt 34475, stateTaxDue: makeFromInt 9982 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25503, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16975, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 754, federalTaxDue: makeFromInt 36179, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29529, itemizedDeductions: makeFromInt 25123, federalTaxDue: makeFromInt 26736, stateTaxDue: makeFromInt 8401 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10655, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40445, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28528, federalTaxDue: makeFromInt 47897, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18651, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68824, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43418, stateTaxDue: makeFromInt 10813 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 2335, qualifiedIncome: makeFromInt 23804, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 940, stateTaxDue: makeFromInt 905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 15255, qualifiedIncome: makeFromInt 24413, itemizedDeductions: makeFromInt 4226, federalTaxDue: makeFromInt 1778, stateTaxDue: makeFromInt 1472 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12797, ordinaryIncomeNonSS: makeFromInt 17681, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 409 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10298, ordinaryIncomeNonSS: makeFromInt 134021, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16638, stateTaxDue: makeFromInt 6026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10949, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43329, ordinaryIncomeNonSS: makeFromInt 2272, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43031, ordinaryIncomeNonSS: makeFromInt 107139, qualifiedIncome: makeFromInt 7556, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17385, stateTaxDue: makeFromInt 5060 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34615, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32433, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20631, federalTaxDue: makeFromInt 24884, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30504, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 259, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28853, ordinaryIncomeNonSS: makeFromInt 72953, qualifiedIncome: makeFromInt 46591, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24497, stateTaxDue: makeFromInt 5872 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13944, ordinaryIncomeNonSS: makeFromInt 100493, qualifiedIncome: makeFromInt 78822, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30033, stateTaxDue: makeFromInt 8833 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30262, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 892, itemizedDeductions: makeFromInt 11464, federalTaxDue: makeFromInt 30657, stateTaxDue: makeFromInt 7075 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42038, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29185, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43833, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27070, itemizedDeductions: makeFromInt 1822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 830 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48971, ordinaryIncomeNonSS: makeFromInt 142783, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27169, stateTaxDue: makeFromInt 6629 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2112, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 143 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8021, federalTaxDue: makeFromInt 38966, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21733, qualifiedIncome: makeFromInt 1420, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1761, stateTaxDue: makeFromInt 583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3310, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21459, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37756, stateTaxDue: makeFromInt 10028 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4047, ordinaryIncomeNonSS: makeFromInt 110426, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25279, stateTaxDue: makeFromInt 10046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35287, ordinaryIncomeNonSS: makeFromInt 74623, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16261, federalTaxDue: makeFromInt 27480, stateTaxDue: makeFromInt 8156 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33678, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11740, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 5148 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7786, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21852, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130600, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45791, stateTaxDue: makeFromInt 11312 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43528, ordinaryIncomeNonSS: makeFromInt 74662, qualifiedIncome: makeFromInt 95921, itemizedDeductions: makeFromInt 17830, federalTaxDue: makeFromInt 24182, stateTaxDue: makeFromInt 8054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62495, itemizedDeductions: makeFromInt 7950, federalTaxDue: makeFromInt 862, stateTaxDue: makeFromInt 2534 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11405, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24832, ordinaryIncomeNonSS: makeFromInt 59550, qualifiedIncome: makeFromInt 73233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12478, stateTaxDue: makeFromInt 5964 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146472, qualifiedIncome: makeFromInt 38678, itemizedDeductions: makeFromInt 6220, federalTaxDue: makeFromInt 29305, stateTaxDue: makeFromInt 8805 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121781, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26682, federalTaxDue: makeFromInt 32015, stateTaxDue: makeFromInt 10964 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11535, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 239 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15820, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90400, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5520, stateTaxDue: makeFromInt 3945 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12057, ordinaryIncomeNonSS: makeFromInt 44755, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21217, federalTaxDue: makeFromInt 1354, stateTaxDue: makeFromInt 1630 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5662, qualifiedIncome: makeFromInt 28586, itemizedDeductions: makeFromInt 14762, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1457 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91943, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 196, federalTaxDue: makeFromInt 10366, stateTaxDue: makeFromInt 4240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28252, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27221, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11092, qualifiedIncome: makeFromInt 88816, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13858, stateTaxDue: makeFromInt 4620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48052, ordinaryIncomeNonSS: makeFromInt 13421, qualifiedIncome: makeFromInt 55149, itemizedDeductions: makeFromInt 9829, federalTaxDue: makeFromInt 12166, stateTaxDue: makeFromInt 3150 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116112, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16217, stateTaxDue: makeFromInt 5520 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2077, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32937, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1520, stateTaxDue: makeFromInt 1129 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23451, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97745, itemizedDeductions: makeFromInt 25139, federalTaxDue: makeFromInt 47052, stateTaxDue: makeFromInt 12411 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78155, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14364, federalTaxDue: makeFromInt 5604, stateTaxDue: makeFromInt 3333 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20743, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16159, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20095, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66217, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3873, stateTaxDue: makeFromInt 2856 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33275, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52565, itemizedDeductions: makeFromInt 13647, federalTaxDue: makeFromInt 5096, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8108, ordinaryIncomeNonSS: makeFromInt 17505, qualifiedIncome: makeFromInt 45256, itemizedDeductions: makeFromInt 29729, federalTaxDue: makeFromInt 1141, stateTaxDue: makeFromInt 2772 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8939, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81655, qualifiedIncome: makeFromInt 94882, itemizedDeductions: makeFromInt 3126, federalTaxDue: makeFromInt 25606, stateTaxDue: makeFromInt 8657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70121, qualifiedIncome: makeFromInt 35536, itemizedDeductions: makeFromInt 22782, federalTaxDue: makeFromInt 6095, stateTaxDue: makeFromInt 4940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9386, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26405, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59026, itemizedDeductions: makeFromInt 4517, federalTaxDue: makeFromInt 1099, stateTaxDue: makeFromInt 2460 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55552, itemizedDeductions: makeFromInt 9706, federalTaxDue: makeFromInt 2640, stateTaxDue: makeFromInt 2405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13115, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 220 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74722, qualifiedIncome: makeFromInt 19875, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6895, stateTaxDue: makeFromInt 4478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36279, ordinaryIncomeNonSS: makeFromInt 65185, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25589, stateTaxDue: makeFromInt 7684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134984, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32019, stateTaxDue: makeFromInt 6435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31451, ordinaryIncomeNonSS: makeFromInt 142505, qualifiedIncome: makeFromInt 18411, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24051, stateTaxDue: makeFromInt 7554 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51011, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18347, stateTaxDue: makeFromInt 7296 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45836, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37112, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1181 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24321, ordinaryIncomeNonSS: makeFromInt 133354, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8754, federalTaxDue: makeFromInt 28213, stateTaxDue: makeFromInt 6310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47123, ordinaryIncomeNonSS: makeFromInt 97698, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21738, federalTaxDue: makeFromInt 39387, stateTaxDue: makeFromInt 9858 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52154, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21194, stateTaxDue: makeFromInt 7107 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25612, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59510, itemizedDeductions: makeFromInt 167, federalTaxDue: makeFromInt 37411, stateTaxDue: makeFromInt 10101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18373, federalTaxDue: makeFromInt 23727, stateTaxDue: makeFromInt 6691 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18930, ordinaryIncomeNonSS: makeFromInt 140740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17570, federalTaxDue: makeFromInt 19731, stateTaxDue: makeFromInt 6362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80078, itemizedDeductions: makeFromInt 17549, federalTaxDue: makeFromInt 717, stateTaxDue: makeFromInt 3431 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29855, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7770, itemizedDeductions: makeFromInt 23146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 49 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47423, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41544, ordinaryIncomeNonSS: makeFromInt 7610, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31155, ordinaryIncomeNonSS: makeFromInt 63618, qualifiedIncome: makeFromInt 33981, itemizedDeductions: makeFromInt 19640, federalTaxDue: makeFromInt 14383, stateTaxDue: makeFromInt 4305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15293, ordinaryIncomeNonSS: makeFromInt 112052, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15997, federalTaxDue: makeFromInt 35008, stateTaxDue: makeFromInt 10348 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6829, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67225, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29838, federalTaxDue: makeFromInt 16695, stateTaxDue: makeFromInt 7986 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24677, itemizedDeductions: makeFromInt 11378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 559 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44763, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73445, itemizedDeductions: makeFromInt 702, federalTaxDue: makeFromInt 1022, stateTaxDue: makeFromInt 3093 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64192, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16035, federalTaxDue: makeFromInt 13258, stateTaxDue: makeFromInt 2835 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25236, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10339, stateTaxDue: makeFromInt 6040 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15274, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2033, stateTaxDue: makeFromInt 4370 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48502, qualifiedIncome: makeFromInt 77347, itemizedDeductions: makeFromInt 6457, federalTaxDue: makeFromInt 15888, stateTaxDue: makeFromInt 5617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18288, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76145, itemizedDeductions: makeFromInt 6240, federalTaxDue: makeFromInt 3862, stateTaxDue: makeFromInt 3333 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69120, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5463, stateTaxDue: makeFromInt 3081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70257, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10035, stateTaxDue: makeFromInt 3038 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65451, qualifiedIncome: makeFromInt 70293, itemizedDeductions: makeFromInt 24645, federalTaxDue: makeFromInt 8488, stateTaxDue: makeFromInt 6372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33579, ordinaryIncomeNonSS: makeFromInt 69248, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8048, stateTaxDue: makeFromInt 2787 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23017, ordinaryIncomeNonSS: makeFromInt 130569, qualifiedIncome: makeFromInt 26961, itemizedDeductions: makeFromInt 8676, federalTaxDue: makeFromInt 27336, stateTaxDue: makeFromInt 7502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22428, ordinaryIncomeNonSS: makeFromInt 140348, qualifiedIncome: makeFromInt 72640, itemizedDeductions: makeFromInt 10674, federalTaxDue: makeFromInt 37315, stateTaxDue: makeFromInt 10312 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45533, ordinaryIncomeNonSS: makeFromInt 2158, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 981, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47534, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2692, stateTaxDue: makeFromInt 2122 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58421, qualifiedIncome: makeFromInt 38094, itemizedDeductions: makeFromInt 3447, federalTaxDue: makeFromInt 6023, stateTaxDue: makeFromInt 4473 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60640, qualifiedIncome: makeFromInt 11791, itemizedDeductions: makeFromInt 29905, federalTaxDue: makeFromInt 10207, stateTaxDue: makeFromInt 3245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11459, itemizedDeductions: makeFromInt 18375, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 198 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17262, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13580, ordinaryIncomeNonSS: makeFromInt 148821, qualifiedIncome: makeFromInt 17200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37621, stateTaxDue: makeFromInt 8243 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1322, ordinaryIncomeNonSS: makeFromInt 11601, qualifiedIncome: makeFromInt 78734, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5810, stateTaxDue: makeFromInt 4062 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17469, ordinaryIncomeNonSS: makeFromInt 34391, qualifiedIncome: makeFromInt 2413, itemizedDeductions: makeFromInt 13498, federalTaxDue: makeFromInt 4030, stateTaxDue: makeFromInt 1636 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9083, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73145, itemizedDeductions: makeFromInt 19249, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3047 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128535, qualifiedIncome: makeFromInt 56847, itemizedDeductions: makeFromInt 29317, federalTaxDue: makeFromInt 19812, stateTaxDue: makeFromInt 8802 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74093, qualifiedIncome: makeFromInt 14748, itemizedDeductions: makeFromInt 23423, federalTaxDue: makeFromInt 16909, stateTaxDue: makeFromInt 4067 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41078, ordinaryIncomeNonSS: makeFromInt 86141, qualifiedIncome: makeFromInt 96552, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30511, stateTaxDue: makeFromInt 8802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28026, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39508, itemizedDeductions: makeFromInt 22774, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1362 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 494, ordinaryIncomeNonSS: makeFromInt 100160, qualifiedIncome: makeFromInt 51369, itemizedDeductions: makeFromInt 10046, federalTaxDue: makeFromInt 22216, stateTaxDue: makeFromInt 7321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34333, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30401, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21439, stateTaxDue: makeFromInt 6242 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71106, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11610, stateTaxDue: makeFromInt 3198 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46341, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45590, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37063, ordinaryIncomeNonSS: makeFromInt 77240, qualifiedIncome: makeFromInt 40491, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20170, stateTaxDue: makeFromInt 5453 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32051, ordinaryIncomeNonSS: makeFromInt 24598, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7136, federalTaxDue: makeFromInt 1226, stateTaxDue: makeFromInt 806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4498, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130609, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26709, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44836, ordinaryIncomeNonSS: makeFromInt 96952, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6688, federalTaxDue: makeFromInt 22723, stateTaxDue: makeFromInt 4593 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11249, ordinaryIncomeNonSS: makeFromInt 53543, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4358, stateTaxDue: makeFromInt 2180 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26393, ordinaryIncomeNonSS: makeFromInt 1944, qualifiedIncome: makeFromInt 60406, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2810, stateTaxDue: makeFromInt 2663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25955, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54956, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21562, federalTaxDue: makeFromInt 3714, stateTaxDue: makeFromInt 2173 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92911, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22806, stateTaxDue: makeFromInt 4191 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14965, ordinaryIncomeNonSS: makeFromInt 39409, qualifiedIncome: makeFromInt 88734, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6890, stateTaxDue: makeFromInt 5932 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 15403, qualifiedIncome: makeFromInt 67605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3581 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25289, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27087, ordinaryIncomeNonSS: makeFromInt 89273, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11404, stateTaxDue: makeFromInt 3900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6451, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47896, itemizedDeductions: makeFromInt 13703, federalTaxDue: makeFromInt 1537, stateTaxDue: makeFromInt 2014 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20486, ordinaryIncomeNonSS: makeFromInt 77329, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11165, federalTaxDue: makeFromInt 13542, stateTaxDue: makeFromInt 3612 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27090, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12606, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18155, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38243, ordinaryIncomeNonSS: makeFromInt 85321, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35359, stateTaxDue: makeFromInt 9105 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127933, qualifiedIncome: makeFromInt 33228, itemizedDeductions: makeFromInt 11393, federalTaxDue: makeFromInt 22948, stateTaxDue: makeFromInt 7683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44626, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30034, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47265, stateTaxDue: makeFromInt 8957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31815, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1374, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7293, ordinaryIncomeNonSS: makeFromInt 33233, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16426, stateTaxDue: makeFromInt 6366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38080, itemizedDeductions: makeFromInt 13305, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1493 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3172, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3369, ordinaryIncomeNonSS: makeFromInt 145612, qualifiedIncome: makeFromInt 60320, itemizedDeductions: makeFromInt 15542, federalTaxDue: makeFromInt 31516, stateTaxDue: makeFromInt 9952 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13122, stateTaxDue: makeFromInt 5703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28296, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 892 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9215, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30264, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30847, stateTaxDue: makeFromInt 8758 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16013, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24275, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126408, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25721, federalTaxDue: makeFromInt 28386, stateTaxDue: makeFromInt 6065 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134600, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33002, stateTaxDue: makeFromInt 11618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34346, ordinaryIncomeNonSS: makeFromInt 63999, qualifiedIncome: makeFromInt 58386, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19436, stateTaxDue: makeFromInt 5793 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70408, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4521, stateTaxDue: makeFromInt 3142 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20833, ordinaryIncomeNonSS: makeFromInt 61595, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4960, federalTaxDue: makeFromInt 9830, stateTaxDue: makeFromInt 2625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 523, stateTaxDue: makeFromInt 1053 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32095, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11927, federalTaxDue: makeFromInt 1545, stateTaxDue: makeFromInt 1188 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16003, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20768, itemizedDeductions: makeFromInt 26560, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 363 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21229, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 634 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33221, ordinaryIncomeNonSS: makeFromInt 106057, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20954, stateTaxDue: makeFromInt 4960 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45404, ordinaryIncomeNonSS: makeFromInt 9382, qualifiedIncome: makeFromInt 87934, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7355, stateTaxDue: makeFromInt 4470 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7002, ordinaryIncomeNonSS: makeFromInt 68938, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12780, federalTaxDue: makeFromInt 5616, stateTaxDue: makeFromInt 2965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11572, ordinaryIncomeNonSS: makeFromInt 139954, qualifiedIncome: makeFromInt 53144, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24399, stateTaxDue: makeFromInt 9195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22102, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27529, itemizedDeductions: makeFromInt 4785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146118, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8332, federalTaxDue: makeFromInt 25376, stateTaxDue: makeFromInt 7051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37281, ordinaryIncomeNonSS: makeFromInt 45600, qualifiedIncome: makeFromInt 87049, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13641, stateTaxDue: makeFromInt 6157 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4644, ordinaryIncomeNonSS: makeFromInt 99620, qualifiedIncome: makeFromInt 14279, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11135, stateTaxDue: makeFromInt 5156 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29064, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19097, federalTaxDue: makeFromInt 29367, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18203, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30308, stateTaxDue: makeFromInt 7935 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 495 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24124, ordinaryIncomeNonSS: makeFromInt 108282, qualifiedIncome: makeFromInt 47647, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26634, stateTaxDue: makeFromInt 7402 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2735, federalTaxDue: makeFromInt 20740, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123986, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14327, stateTaxDue: makeFromInt 5671 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44068, ordinaryIncomeNonSS: makeFromInt 9678, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 229 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66489, itemizedDeductions: makeFromInt 29324, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100725, qualifiedIncome: makeFromInt 90179, itemizedDeductions: makeFromInt 22196, federalTaxDue: makeFromInt 27918, stateTaxDue: makeFromInt 9512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89941, itemizedDeductions: makeFromInt 28127, federalTaxDue: makeFromInt 5931, stateTaxDue: makeFromInt 4036 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12012, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29211, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44656, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53728, itemizedDeductions: makeFromInt 9095, federalTaxDue: makeFromInt 41023, stateTaxDue: makeFromInt 9611 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6387, ordinaryIncomeNonSS: makeFromInt 22505, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8326, stateTaxDue: makeFromInt 5750 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78543, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6200, federalTaxDue: makeFromInt 10454, stateTaxDue: makeFromInt 3542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90435, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10140, stateTaxDue: makeFromInt 4163 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7049, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 13 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15227, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87041, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43572, stateTaxDue: makeFromInt 11661 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91721, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7507, stateTaxDue: makeFromInt 4131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5466, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13844, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26609, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17040, federalTaxDue: makeFromInt 3284, stateTaxDue: makeFromInt 1133 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20991, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 595 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8026, qualifiedIncome: makeFromInt 54328, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2731 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7102, ordinaryIncomeNonSS: makeFromInt 64456, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1077, federalTaxDue: makeFromInt 5479, stateTaxDue: makeFromInt 2736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146035, qualifiedIncome: makeFromInt 58569, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39814, stateTaxDue: makeFromInt 10210 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 103540, qualifiedIncome: makeFromInt 72357, itemizedDeductions: makeFromInt 24084, federalTaxDue: makeFromInt 19953, stateTaxDue: makeFromInt 8420 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37799, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63211, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40282, stateTaxDue: makeFromInt 10445 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17151, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6875, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22497, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16283, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9232, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14734, ordinaryIncomeNonSS: makeFromInt 96902, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35778, stateTaxDue: makeFromInt 9818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48482, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18996, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14786, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1977, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5373, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42356, ordinaryIncomeNonSS: makeFromInt 35652, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23147, stateTaxDue: makeFromInt 6528 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4119, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67632, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4317, stateTaxDue: makeFromInt 3127 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46391, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16163, federalTaxDue: makeFromInt 3259, stateTaxDue: makeFromInt 2019 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4563, ordinaryIncomeNonSS: makeFromInt 105212, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20684, stateTaxDue: makeFromInt 5141 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5199, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 94545, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1679, stateTaxDue: makeFromInt 4252 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10353, ordinaryIncomeNonSS: makeFromInt 14884, qualifiedIncome: makeFromInt 80129, itemizedDeductions: makeFromInt 18581, federalTaxDue: makeFromInt 724, stateTaxDue: makeFromInt 4193 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117916, qualifiedIncome: makeFromInt 43671, itemizedDeductions: makeFromInt 28879, federalTaxDue: makeFromInt 22050, stateTaxDue: makeFromInt 7894 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6095, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35217, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1368 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38455, qualifiedIncome: makeFromInt 81348, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1813, stateTaxDue: makeFromInt 5315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40003, ordinaryIncomeNonSS: makeFromInt 115656, qualifiedIncome: makeFromInt 29004, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25095, stateTaxDue: makeFromInt 6725 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11439, ordinaryIncomeNonSS: makeFromInt 64581, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13035, federalTaxDue: makeFromInt 23730, stateTaxDue: makeFromInt 7974 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10197, ordinaryIncomeNonSS: makeFromInt 14896, qualifiedIncome: makeFromInt 34540, itemizedDeductions: makeFromInt 28491, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2297 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54067, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2204, stateTaxDue: makeFromInt 2508 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8500, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28769, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86929, itemizedDeductions: makeFromInt 1982, federalTaxDue: makeFromInt 4669, stateTaxDue: makeFromInt 3771 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19171, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93855, itemizedDeductions: makeFromInt 19420, federalTaxDue: makeFromInt 41249, stateTaxDue: makeFromInt 11618 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3034, ordinaryIncomeNonSS: makeFromInt 132533, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22735, stateTaxDue: makeFromInt 6372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33987, ordinaryIncomeNonSS: makeFromInt 46906, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16140, federalTaxDue: makeFromInt 8199, stateTaxDue: makeFromInt 2045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 45146, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13680, ordinaryIncomeNonSS: makeFromInt 133883, qualifiedIncome: makeFromInt 10495, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28972, stateTaxDue: makeFromInt 7016 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35170, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37323, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39432, stateTaxDue: makeFromInt 9111 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96411, qualifiedIncome: makeFromInt 29348, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13130, stateTaxDue: makeFromInt 5913 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31721, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9911, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5962, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4959, itemizedDeductions: makeFromInt 13547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8384, ordinaryIncomeNonSS: makeFromInt 53101, qualifiedIncome: makeFromInt 68463, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11120, stateTaxDue: makeFromInt 5751 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37241, ordinaryIncomeNonSS: makeFromInt 49380, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19283, federalTaxDue: makeFromInt 5227, stateTaxDue: makeFromInt 1794 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14493, ordinaryIncomeNonSS: makeFromInt 108343, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30933, stateTaxDue: makeFromInt 10097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16853, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 207 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 55555, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18116, ordinaryIncomeNonSS: makeFromInt 68207, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6372, federalTaxDue: makeFromInt 25776, stateTaxDue: makeFromInt 8155 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10178, ordinaryIncomeNonSS: makeFromInt 58077, qualifiedIncome: makeFromInt 4612, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3996, stateTaxDue: makeFromInt 2459 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39458, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48466, itemizedDeductions: makeFromInt 21131, federalTaxDue: makeFromInt 32877, stateTaxDue: makeFromInt 9248 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28702, ordinaryIncomeNonSS: makeFromInt 12810, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 66 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28461, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41130, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1908, stateTaxDue: makeFromInt 1602 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25842, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36842, itemizedDeductions: makeFromInt 16137, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1328 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3054, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17922, itemizedDeductions: makeFromInt 4508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 486 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15359, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28633, qualifiedIncome: makeFromInt 96155, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23166, stateTaxDue: makeFromInt 6017 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7042, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11832, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11949, ordinaryIncomeNonSS: makeFromInt 13265, qualifiedIncome: makeFromInt 53009, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 227, stateTaxDue: makeFromInt 2739 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20207, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40926, itemizedDeductions: makeFromInt 14672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1638 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1846, ordinaryIncomeNonSS: makeFromInt 93681, qualifiedIncome: makeFromInt 33992, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9803, stateTaxDue: makeFromInt 5709 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37439, itemizedDeductions: makeFromInt 15110, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1481 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40466, ordinaryIncomeNonSS: makeFromInt 7155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85006, qualifiedIncome: makeFromInt 80945, itemizedDeductions: makeFromInt 8657, federalTaxDue: makeFromInt 27348, stateTaxDue: makeFromInt 7811 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1118, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45686, ordinaryIncomeNonSS: makeFromInt 51297, qualifiedIncome: makeFromInt 10204, itemizedDeductions: makeFromInt 25512, federalTaxDue: makeFromInt 6619, stateTaxDue: makeFromInt 2586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23398, ordinaryIncomeNonSS: makeFromInt 70917, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28661, stateTaxDue: makeFromInt 8370 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6480, ordinaryIncomeNonSS: makeFromInt 75951, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28787, federalTaxDue: makeFromInt 7205, stateTaxDue: makeFromInt 3543 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40569, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8202, stateTaxDue: makeFromInt 1773 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127603, qualifiedIncome: makeFromInt 93018, itemizedDeductions: makeFromInt 8245, federalTaxDue: makeFromInt 27253, stateTaxDue: makeFromInt 10556 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4685, stateTaxDue: makeFromInt 2557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 100466, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18300, stateTaxDue: makeFromInt 4899 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46060, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6513, stateTaxDue: makeFromInt 6828 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55945, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14696, stateTaxDue: makeFromInt 7402 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29869, ordinaryIncomeNonSS: makeFromInt 120784, qualifiedIncome: makeFromInt 48337, itemizedDeductions: makeFromInt 3449, federalTaxDue: makeFromInt 29981, stateTaxDue: makeFromInt 8081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24714, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21935, stateTaxDue: makeFromInt 8261 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 89976, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7110, stateTaxDue: makeFromInt 4024 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46945, ordinaryIncomeNonSS: makeFromInt 26261, qualifiedIncome: makeFromInt 81612, itemizedDeductions: makeFromInt 6798, federalTaxDue: makeFromInt 19181, stateTaxDue: makeFromInt 4939 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21901, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1009, federalTaxDue: makeFromInt 29331, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76652, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30232, stateTaxDue: makeFromInt 8578 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15286, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29333, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25393, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26226, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99231, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11014, stateTaxDue: makeFromInt 4387 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15545, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48868, itemizedDeductions: makeFromInt 5276, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131186, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28945, stateTaxDue: makeFromInt 5984 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83113, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21557, stateTaxDue: makeFromInt 3810 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2717, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58002, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16380, ordinaryIncomeNonSS: makeFromInt 38258, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8075, stateTaxDue: makeFromInt 6238 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6730, qualifiedIncome: makeFromInt 34511, itemizedDeductions: makeFromInt 27228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1675 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38452, ordinaryIncomeNonSS: makeFromInt 105266, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25965, federalTaxDue: makeFromInt 16516, stateTaxDue: makeFromInt 4716 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26843, ordinaryIncomeNonSS: makeFromInt 34325, qualifiedIncome: makeFromInt 79734, itemizedDeductions: makeFromInt 20578, federalTaxDue: makeFromInt 8947, stateTaxDue: makeFromInt 5164 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34877, itemizedDeductions: makeFromInt 14539, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1432 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36133, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33679, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10512, qualifiedIncome: makeFromInt 84995, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1169, stateTaxDue: makeFromInt 4218 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20827, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24307, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 5657 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5601, ordinaryIncomeNonSS: makeFromInt 96591, qualifiedIncome: makeFromInt 18373, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11084, stateTaxDue: makeFromInt 5210 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22481, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47438, itemizedDeductions: makeFromInt 12146, federalTaxDue: makeFromInt 2271, stateTaxDue: makeFromInt 2117 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45244, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30556, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64811, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4546, stateTaxDue: makeFromInt 2866 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43877, ordinaryIncomeNonSS: makeFromInt 54177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16052, stateTaxDue: makeFromInt 2539 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99856, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24473, stateTaxDue: makeFromInt 4538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26917, qualifiedIncome: makeFromInt 36169, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87789, qualifiedIncome: makeFromInt 55887, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30467, stateTaxDue: makeFromInt 6899 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4382, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15712, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29558, stateTaxDue: makeFromInt 7831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2730, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85130, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10416, stateTaxDue: makeFromInt 3913 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33534, qualifiedIncome: makeFromInt 96057, itemizedDeductions: makeFromInt 10271, federalTaxDue: makeFromInt 14014, stateTaxDue: makeFromInt 6385 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2747, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5901, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 77 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47891, itemizedDeductions: makeFromInt 8017, federalTaxDue: makeFromInt 4180, stateTaxDue: makeFromInt 2075 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45413, itemizedDeductions: makeFromInt 24660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1696 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42967, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3703, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2647, itemizedDeductions: makeFromInt 12254, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24778, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61771, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42766, stateTaxDue: makeFromInt 10372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 502, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48641, itemizedDeductions: makeFromInt 7546, federalTaxDue: makeFromInt 1649, stateTaxDue: makeFromInt 2256 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142613, qualifiedIncome: makeFromInt 46293, itemizedDeductions: makeFromInt 14986, federalTaxDue: makeFromInt 31596, stateTaxDue: makeFromInt 8990 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29875, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12640, stateTaxDue: makeFromInt 6039 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31363, qualifiedIncome: makeFromInt 37565, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11075, stateTaxDue: makeFromInt 3191 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14025, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5463, itemizedDeductions: makeFromInt 2796, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 18 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47696, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42147, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45128, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62077, itemizedDeductions: makeFromInt 22280, federalTaxDue: makeFromInt 43006, stateTaxDue: makeFromInt 10149 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 60387, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20668, stateTaxDue: makeFromInt 7764 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 142256, qualifiedIncome: makeFromInt 25800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30354, stateTaxDue: makeFromInt 7728 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56014, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22187, stateTaxDue: makeFromInt 7732 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93706, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6143, stateTaxDue: makeFromInt 4187 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6159, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31775, itemizedDeductions: makeFromInt 16437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1114 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24287, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27930, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24462, ordinaryIncomeNonSS: makeFromInt 62862, qualifiedIncome: makeFromInt 27737, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7959, stateTaxDue: makeFromInt 3929 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25700, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44708, itemizedDeductions: makeFromInt 4239, federalTaxDue: makeFromInt 385, stateTaxDue: makeFromInt 1933 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36027, itemizedDeductions: makeFromInt 7822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1173 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35900, itemizedDeductions: makeFromInt 16026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11069, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39073, itemizedDeductions: makeFromInt 9673, federalTaxDue: makeFromInt 30211, stateTaxDue: makeFromInt 9003 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5205, itemizedDeductions: makeFromInt 11321, federalTaxDue: makeFromInt 26978, stateTaxDue: makeFromInt 7487 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33513, qualifiedIncome: makeFromInt 60544, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4220, stateTaxDue: makeFromInt 4328 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43108, ordinaryIncomeNonSS: makeFromInt 142865, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22173, federalTaxDue: makeFromInt 30096, stateTaxDue: makeFromInt 6768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39636, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94283, itemizedDeductions: makeFromInt 4483, federalTaxDue: makeFromInt 51179, stateTaxDue: makeFromInt 12030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25706, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11947, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41381, ordinaryIncomeNonSS: makeFromInt 50341, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12113, stateTaxDue: makeFromInt 2139 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8149, ordinaryIncomeNonSS: makeFromInt 53329, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4400, stateTaxDue: makeFromInt 2091 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62710, qualifiedIncome: makeFromInt 27268, itemizedDeductions: makeFromInt 12510, federalTaxDue: makeFromInt 6649, stateTaxDue: makeFromInt 4124 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137654, qualifiedIncome: makeFromInt 26569, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19947, stateTaxDue: makeFromInt 7536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32672, ordinaryIncomeNonSS: makeFromInt 90815, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27855, stateTaxDue: makeFromInt 9303 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38789, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1684 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98740, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8751, stateTaxDue: makeFromInt 4682 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39857, itemizedDeductions: makeFromInt 29701, federalTaxDue: makeFromInt 27488, stateTaxDue: makeFromInt 8918 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7609, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28759, federalTaxDue: makeFromInt 14664, stateTaxDue: makeFromInt 5010 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2778, ordinaryIncomeNonSS: makeFromInt 107055, qualifiedIncome: makeFromInt 20581, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12345, stateTaxDue: makeFromInt 5907 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30738, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14516, itemizedDeductions: makeFromInt 4053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 88 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28975, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45944, ordinaryIncomeNonSS: makeFromInt 127646, qualifiedIncome: makeFromInt 49567, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29337, stateTaxDue: makeFromInt 8386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4719, qualifiedIncome: makeFromInt 4145, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45100, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31259, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12347, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1162, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17676, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2838, ordinaryIncomeNonSS: makeFromInt 24317, qualifiedIncome: makeFromInt 55133, itemizedDeductions: makeFromInt 19335, federalTaxDue: makeFromInt 3867, stateTaxDue: makeFromInt 3718 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9246, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27552, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49842, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65963, itemizedDeductions: makeFromInt 11736, federalTaxDue: makeFromInt 1753, stateTaxDue: makeFromInt 2823 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4975, ordinaryIncomeNonSS: makeFromInt 143681, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20007, stateTaxDue: makeFromInt 6879 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36764, qualifiedIncome: makeFromInt 45981, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13589, stateTaxDue: makeFromInt 3669 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15719, ordinaryIncomeNonSS: makeFromInt 74889, qualifiedIncome: makeFromInt 58867, itemizedDeductions: makeFromInt 489, federalTaxDue: makeFromInt 20628, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35449, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 51921, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6867, stateTaxDue: makeFromInt 1995 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17728, federalTaxDue: makeFromInt 25825, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11476, qualifiedIncome: makeFromInt 74709, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4955, stateTaxDue: makeFromInt 3854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23176, ordinaryIncomeNonSS: makeFromInt 78190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17656, stateTaxDue: makeFromInt 3763 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42534, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 968, qualifiedIncome: makeFromInt 36620, itemizedDeductions: makeFromInt 4800, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1304 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149982, qualifiedIncome: makeFromInt 20765, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40512, stateTaxDue: makeFromInt 8484 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23042, ordinaryIncomeNonSS: makeFromInt 99632, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5821, federalTaxDue: makeFromInt 27827, stateTaxDue: makeFromInt 9528 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61932, qualifiedIncome: makeFromInt 31722, itemizedDeductions: makeFromInt 25009, federalTaxDue: makeFromInt 13849, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140408, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29082, stateTaxDue: makeFromInt 11608 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17978, ordinaryIncomeNonSS: makeFromInt 4409, qualifiedIncome: makeFromInt 61258, itemizedDeductions: makeFromInt 4394, federalTaxDue: makeFromInt 4489, stateTaxDue: makeFromInt 3028 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 39137, qualifiedIncome: makeFromInt 90583, itemizedDeductions: makeFromInt 6709, federalTaxDue: makeFromInt 15990, stateTaxDue: makeFromInt 6391 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12461, ordinaryIncomeNonSS: makeFromInt 27577, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18192, federalTaxDue: makeFromInt 448, stateTaxDue: makeFromInt 754 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21905, qualifiedIncome: makeFromInt 79887, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7533, stateTaxDue: makeFromInt 4835 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35034, ordinaryIncomeNonSS: makeFromInt 60512, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20006, federalTaxDue: makeFromInt 12330, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68412, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4614, stateTaxDue: makeFromInt 3061 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94877, itemizedDeductions: makeFromInt 4354, federalTaxDue: makeFromInt 7980, stateTaxDue: makeFromInt 4489 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37774, ordinaryIncomeNonSS: makeFromInt 2894, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19892, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75894, qualifiedIncome: makeFromInt 61108, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22730, stateTaxDue: makeFromInt 6275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38182, ordinaryIncomeNonSS: makeFromInt 90586, qualifiedIncome: makeFromInt 55100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28319, stateTaxDue: makeFromInt 7002 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19734, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5981, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4052, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32102, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22692, federalTaxDue: makeFromInt 32546, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111112, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10283, stateTaxDue: makeFromInt 4881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59631, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 575, stateTaxDue: makeFromInt 2407 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93736, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13797, stateTaxDue: makeFromInt 4310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139863, qualifiedIncome: makeFromInt 26269, itemizedDeductions: makeFromInt 1415, federalTaxDue: makeFromInt 40605, stateTaxDue: makeFromInt 8044 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 22379, qualifiedIncome: makeFromInt 19874, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 123, stateTaxDue: makeFromInt 1538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2051, itemizedDeductions: makeFromInt 28993, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40921, ordinaryIncomeNonSS: makeFromInt 69472, qualifiedIncome: makeFromInt 81807, itemizedDeductions: makeFromInt 556, federalTaxDue: makeFromInt 28000, stateTaxDue: makeFromInt 7309 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65325, qualifiedIncome: makeFromInt 34835, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7655, stateTaxDue: makeFromInt 4557 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46852, itemizedDeductions: makeFromInt 24538, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1668 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44680, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45184, itemizedDeductions: makeFromInt 10834, federalTaxDue: makeFromInt 42458, stateTaxDue: makeFromInt 9304 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42181, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11889, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 158 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33568, qualifiedIncome: makeFromInt 83781, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11640, stateTaxDue: makeFromInt 5412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40608, ordinaryIncomeNonSS: makeFromInt 112412, qualifiedIncome: makeFromInt 82750, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36055, stateTaxDue: makeFromInt 9402 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 576, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45316, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22920, itemizedDeductions: makeFromInt 6312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 771 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2904, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86651, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5438, stateTaxDue: makeFromInt 3868 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49954, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124173, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22302, federalTaxDue: makeFromInt 22573, stateTaxDue: makeFromInt 5680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12191, ordinaryIncomeNonSS: makeFromInt 32635, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10812, stateTaxDue: makeFromInt 6214 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10852, ordinaryIncomeNonSS: makeFromInt 118067, qualifiedIncome: makeFromInt 911, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19037, stateTaxDue: makeFromInt 5665 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112693, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30083, stateTaxDue: makeFromInt 10297 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16328, ordinaryIncomeNonSS: makeFromInt 20624, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4126, stateTaxDue: makeFromInt 5556 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35667, ordinaryIncomeNonSS: makeFromInt 88724, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11417, stateTaxDue: makeFromInt 3961 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 467, itemizedDeductions: makeFromInt 17335, federalTaxDue: makeFromInt 19716, stateTaxDue: makeFromInt 7021 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 109753, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8649, federalTaxDue: makeFromInt 18724, stateTaxDue: makeFromInt 5013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30208, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12503, federalTaxDue: makeFromInt 9721, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14874, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8524, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 330 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34721, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42817, itemizedDeductions: makeFromInt 23584, federalTaxDue: makeFromInt 35935, stateTaxDue: makeFromInt 9385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44240, ordinaryIncomeNonSS: makeFromInt 79533, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30373, stateTaxDue: makeFromInt 8402 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18719, qualifiedIncome: makeFromInt 43593, itemizedDeductions: makeFromInt 26453, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2441 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46764, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48382, itemizedDeductions: makeFromInt 5925, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1815 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32530, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38736, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1482 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27518, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149210, qualifiedIncome: makeFromInt 30991, itemizedDeductions: makeFromInt 21090, federalTaxDue: makeFromInt 27144, stateTaxDue: makeFromInt 8741 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69, qualifiedIncome: makeFromInt 85024, itemizedDeductions: makeFromInt 1260, federalTaxDue: makeFromInt 6964, stateTaxDue: makeFromInt 3911 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 122875, qualifiedIncome: makeFromInt 53318, itemizedDeductions: makeFromInt 2786, federalTaxDue: makeFromInt 44441, stateTaxDue: makeFromInt 8761 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33682, itemizedDeductions: makeFromInt 6683, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1289 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5861, qualifiedIncome: makeFromInt 98542, itemizedDeductions: makeFromInt 25462, federalTaxDue: makeFromInt 2781, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90590, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 57627, stateTaxDue: makeFromInt 12046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52351, qualifiedIncome: makeFromInt 21968, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2271, stateTaxDue: makeFromInt 3241 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29824, itemizedDeductions: makeFromInt 17419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1174 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28497, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93860, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8432, stateTaxDue: makeFromInt 4359 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41469, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46093, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2776, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29494, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113350, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13954, stateTaxDue: makeFromInt 5413 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120620, qualifiedIncome: makeFromInt 30125, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25633, stateTaxDue: makeFromInt 6862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133629, qualifiedIncome: makeFromInt 93478, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38389, stateTaxDue: makeFromInt 11236 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128754, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21125, federalTaxDue: makeFromInt 28600, stateTaxDue: makeFromInt 6063 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78922, qualifiedIncome: makeFromInt 99845, itemizedDeductions: makeFromInt 11522, federalTaxDue: makeFromInt 16001, stateTaxDue: makeFromInt 8463 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9812, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124362, qualifiedIncome: makeFromInt 88822, itemizedDeductions: makeFromInt 18885, federalTaxDue: makeFromInt 36798, stateTaxDue: makeFromInt 10220 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19306, ordinaryIncomeNonSS: makeFromInt 49754, qualifiedIncome: makeFromInt 86426, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10544, stateTaxDue: makeFromInt 6334 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5620, ordinaryIncomeNonSS: makeFromInt 93717, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25686, stateTaxDue: makeFromInt 9431 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10950, ordinaryIncomeNonSS: makeFromInt 77703, qualifiedIncome: makeFromInt 11124, itemizedDeductions: makeFromInt 2462, federalTaxDue: makeFromInt 13510, stateTaxDue: makeFromInt 3986 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38955, ordinaryIncomeNonSS: makeFromInt 112288, qualifiedIncome: makeFromInt 12403, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21540, stateTaxDue: makeFromInt 5706 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28992, ordinaryIncomeNonSS: makeFromInt 136436, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42650, stateTaxDue: makeFromInt 11609 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121021, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24210, stateTaxDue: makeFromInt 5519 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 37719, itemizedDeductions: makeFromInt 23566, federalTaxDue: makeFromInt 30292, stateTaxDue: makeFromInt 9145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37328, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8903, ordinaryIncomeNonSS: makeFromInt 138944, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14915, federalTaxDue: makeFromInt 32461, stateTaxDue: makeFromInt 11472 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29715, ordinaryIncomeNonSS: makeFromInt 98508, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39724, stateTaxDue: makeFromInt 9900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22359, ordinaryIncomeNonSS: makeFromInt 96223, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12137, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21720, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25493, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28671, itemizedDeductions: makeFromInt 19224, federalTaxDue: makeFromInt 27746, stateTaxDue: makeFromInt 8459 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5894, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4850 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10830, qualifiedIncome: makeFromInt 91019, itemizedDeductions: makeFromInt 19631, federalTaxDue: makeFromInt 1533, stateTaxDue: makeFromInt 4417 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43883, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96382, itemizedDeductions: makeFromInt 16416, federalTaxDue: makeFromInt 46669, stateTaxDue: makeFromInt 11744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11618, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8745, itemizedDeductions: makeFromInt 24482, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88893, itemizedDeductions: makeFromInt 14497, federalTaxDue: makeFromInt 36445, stateTaxDue: makeFromInt 11633 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6878, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24214, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18074, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82449, itemizedDeductions: makeFromInt 29484, federalTaxDue: makeFromInt 3997, stateTaxDue: makeFromInt 3747 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1373, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24031, federalTaxDue: makeFromInt 27501, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15636, federalTaxDue: makeFromInt 49417, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45896, qualifiedIncome: makeFromInt 56981, itemizedDeductions: makeFromInt 25722, federalTaxDue: makeFromInt 5162, stateTaxDue: makeFromInt 4900 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10385, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6039, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 181 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95074, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22140, federalTaxDue: makeFromInt 25342, stateTaxDue: makeFromInt 9179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31290, ordinaryIncomeNonSS: makeFromInt 96201, qualifiedIncome: makeFromInt 80565, itemizedDeductions: makeFromInt 22364, federalTaxDue: makeFromInt 26428, stateTaxDue: makeFromInt 8464 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27378, ordinaryIncomeNonSS: makeFromInt 143113, qualifiedIncome: makeFromInt 50739, itemizedDeductions: makeFromInt 21758, federalTaxDue: makeFromInt 34959, stateTaxDue: makeFromInt 9118 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49898, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8093, itemizedDeductions: makeFromInt 7177, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 30 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70442, itemizedDeductions: makeFromInt 29492, federalTaxDue: makeFromInt 2654, stateTaxDue: makeFromInt 3214 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116522, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3193, federalTaxDue: makeFromInt 22765, stateTaxDue: makeFromInt 5718 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39682, ordinaryIncomeNonSS: makeFromInt 8365, qualifiedIncome: makeFromInt 34111, itemizedDeductions: makeFromInt 23011, federalTaxDue: makeFromInt 443, stateTaxDue: makeFromInt 1513 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 71305, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1978, federalTaxDue: makeFromInt 22004, stateTaxDue: makeFromInt 3412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138666, qualifiedIncome: makeFromInt 15255, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23865, stateTaxDue: makeFromInt 7299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55096, itemizedDeductions: makeFromInt 5493, federalTaxDue: makeFromInt 233, stateTaxDue: makeFromInt 2157 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13599, ordinaryIncomeNonSS: makeFromInt 138810, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18309, stateTaxDue: makeFromInt 6466 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98984, qualifiedIncome: makeFromInt 42272, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12782, stateTaxDue: makeFromInt 6388 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11616, stateTaxDue: makeFromInt 2950 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27611, ordinaryIncomeNonSS: makeFromInt 6290, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12929, stateTaxDue: makeFromInt 4860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114557, qualifiedIncome: makeFromInt 12743, itemizedDeductions: makeFromInt 25800, federalTaxDue: makeFromInt 12342, stateTaxDue: makeFromInt 5890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122131, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39335, stateTaxDue: makeFromInt 11104 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12858, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37167, itemizedDeductions: makeFromInt 17896, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1283 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8125, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21822, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24169, ordinaryIncomeNonSS: makeFromInt 98306, qualifiedIncome: makeFromInt 83237, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28269, stateTaxDue: makeFromInt 8702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23990, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 96343, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8804, stateTaxDue: makeFromInt 4485 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10611, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69668, qualifiedIncome: makeFromInt 67884, itemizedDeductions: makeFromInt 27450, federalTaxDue: makeFromInt 12918, stateTaxDue: makeFromInt 6503 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81235, itemizedDeductions: makeFromInt 13283, federalTaxDue: makeFromInt 32780, stateTaxDue: makeFromInt 11140 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9388, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 214 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63162, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1359, stateTaxDue: makeFromInt 2783 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19927, qualifiedIncome: makeFromInt 13799, itemizedDeductions: makeFromInt 25258, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20363, ordinaryIncomeNonSS: makeFromInt 83074, qualifiedIncome: makeFromInt 50241, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23592, stateTaxDue: makeFromInt 6452 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33962, ordinaryIncomeNonSS: makeFromInt 54511, qualifiedIncome: makeFromInt 68437, itemizedDeductions: makeFromInt 16144, federalTaxDue: makeFromInt 18491, stateTaxDue: makeFromInt 5772 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1129, ordinaryIncomeNonSS: makeFromInt 34500, qualifiedIncome: makeFromInt 27494, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1537, stateTaxDue: makeFromInt 2725 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12863, ordinaryIncomeNonSS: makeFromInt 59478, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10434, federalTaxDue: makeFromInt 19638, stateTaxDue: makeFromInt 7599 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49009, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13507, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27756, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36033, stateTaxDue: makeFromInt 8719 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100351, qualifiedIncome: makeFromInt 65830, itemizedDeductions: makeFromInt 13724, federalTaxDue: makeFromInt 18181, stateTaxDue: makeFromInt 7948 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42478, ordinaryIncomeNonSS: makeFromInt 128681, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19546, federalTaxDue: makeFromInt 22725, stateTaxDue: makeFromInt 5910 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45171, itemizedDeductions: makeFromInt 1452, federalTaxDue: makeFromInt 34022, stateTaxDue: makeFromInt 9432 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3104, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19364, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9025, federalTaxDue: makeFromInt 26840, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32355, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91240, qualifiedIncome: makeFromInt 99186, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35165, stateTaxDue: makeFromInt 9161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34664, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28126, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29539, stateTaxDue: makeFromInt 8231 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22805, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2836, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29656, stateTaxDue: makeFromInt 7448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19164, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29963, ordinaryIncomeNonSS: makeFromInt 77044, qualifiedIncome: makeFromInt 20968, itemizedDeductions: makeFromInt 4780, federalTaxDue: makeFromInt 16153, stateTaxDue: makeFromInt 4550 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14376, federalTaxDue: makeFromInt 49598, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9675, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23328, ordinaryIncomeNonSS: makeFromInt 146274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29081, federalTaxDue: makeFromInt 35735, stateTaxDue: makeFromInt 11907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28150, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1007 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25383, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19417, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34798, stateTaxDue: makeFromInt 8216 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4290, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17690, ordinaryIncomeNonSS: makeFromInt 10021, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9550, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 284 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18824, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18851, ordinaryIncomeNonSS: makeFromInt 123507, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25843, stateTaxDue: makeFromInt 5952 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23374, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110276, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5195, federalTaxDue: makeFromInt 17174, stateTaxDue: makeFromInt 5259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12689, ordinaryIncomeNonSS: makeFromInt 123172, qualifiedIncome: makeFromInt 11178, itemizedDeductions: makeFromInt 15874, federalTaxDue: makeFromInt 26643, stateTaxDue: makeFromInt 6627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136436, qualifiedIncome: makeFromInt 10568, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34011, stateTaxDue: makeFromInt 7048 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24578, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 72514, qualifiedIncome: makeFromInt 63468, itemizedDeductions: makeFromInt 21108, federalTaxDue: makeFromInt 24384, stateTaxDue: makeFromInt 6424 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58017, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2643, stateTaxDue: makeFromInt 2446 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67271, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4443, stateTaxDue: makeFromInt 3002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42524, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62832, itemizedDeductions: makeFromInt 6800, federalTaxDue: makeFromInt 330, stateTaxDue: makeFromInt 2552 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27554, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9161, federalTaxDue: makeFromInt 28881, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49023, qualifiedIncome: makeFromInt 96396, itemizedDeductions: makeFromInt 29450, federalTaxDue: makeFromInt 3164, stateTaxDue: makeFromInt 6764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18148, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12971, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15091, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40080, ordinaryIncomeNonSS: makeFromInt 4169, qualifiedIncome: makeFromInt 1793, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48685, ordinaryIncomeNonSS: makeFromInt 126292, qualifiedIncome: makeFromInt 55086, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41776, stateTaxDue: makeFromInt 8903 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17182, ordinaryIncomeNonSS: makeFromInt 107538, qualifiedIncome: makeFromInt 99014, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26951, stateTaxDue: makeFromInt 9653 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47049, ordinaryIncomeNonSS: makeFromInt 1102, qualifiedIncome: makeFromInt 41530, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1457 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25571, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85584, itemizedDeductions: makeFromInt 10742, federalTaxDue: makeFromInt 4730, stateTaxDue: makeFromInt 3804 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19637, itemizedDeductions: makeFromInt 3847, federalTaxDue: makeFromInt 27356, stateTaxDue: makeFromInt 8101 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25852, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54146, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2474, stateTaxDue: makeFromInt 2333 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34139, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28085, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13727, ordinaryIncomeNonSS: makeFromInt 30866, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7023, federalTaxDue: makeFromInt 88, stateTaxDue: makeFromInt 921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26197, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2256, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17053, federalTaxDue: makeFromInt 29665, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 168, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10633, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94613, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5822, stateTaxDue: makeFromInt 4156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32782, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41204, ordinaryIncomeNonSS: makeFromInt 142859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24708, federalTaxDue: makeFromInt 32148, stateTaxDue: makeFromInt 6939 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82892, qualifiedIncome: makeFromInt 79424, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30586, stateTaxDue: makeFromInt 7931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40913, ordinaryIncomeNonSS: makeFromInt 77836, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17335, stateTaxDue: makeFromInt 3637 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48038, ordinaryIncomeNonSS: makeFromInt 126429, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1459, federalTaxDue: makeFromInt 25145, stateTaxDue: makeFromInt 5795 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68784, qualifiedIncome: makeFromInt 9132, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5385, stateTaxDue: makeFromInt 3441 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132050, qualifiedIncome: makeFromInt 3880, itemizedDeductions: makeFromInt 28846, federalTaxDue: makeFromInt 16913, stateTaxDue: makeFromInt 6484 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2956, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50767, itemizedDeductions: makeFromInt 11211, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 55555, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12602, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93621, itemizedDeductions: makeFromInt 10571, federalTaxDue: makeFromInt 5673, stateTaxDue: makeFromInt 4106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66985, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1678, stateTaxDue: makeFromInt 2974 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43554, ordinaryIncomeNonSS: makeFromInt 129095, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25566, stateTaxDue: makeFromInt 6033 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27308, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41231, stateTaxDue: makeFromInt 9481 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46942, ordinaryIncomeNonSS: makeFromInt 6185, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4763 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15723, qualifiedIncome: makeFromInt 68534, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4633, stateTaxDue: makeFromInt 3869 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11497, qualifiedIncome: makeFromInt 64141, itemizedDeductions: makeFromInt 12157, federalTaxDue: makeFromInt 13775, stateTaxDue: makeFromInt 3527 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48447, itemizedDeductions: makeFromInt 29960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1920 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80509, qualifiedIncome: makeFromInt 44582, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8140, stateTaxDue: makeFromInt 5780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10812, ordinaryIncomeNonSS: makeFromInt 54411, qualifiedIncome: makeFromInt 6315, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6115, stateTaxDue: makeFromInt 2648 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2606, ordinaryIncomeNonSS: makeFromInt 81587, qualifiedIncome: makeFromInt 64744, itemizedDeductions: makeFromInt 29192, federalTaxDue: makeFromInt 11543, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95479, qualifiedIncome: makeFromInt 35310, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21490, stateTaxDue: makeFromInt 6064 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3199, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27735, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 912 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76130, itemizedDeductions: makeFromInt 15130, federalTaxDue: makeFromInt 3050, stateTaxDue: makeFromInt 3232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28570, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10101, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40902, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 488, stateTaxDue: makeFromInt 1658 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36170, ordinaryIncomeNonSS: makeFromInt 79761, qualifiedIncome: makeFromInt 52571, itemizedDeductions: makeFromInt 4552, federalTaxDue: makeFromInt 28966, stateTaxDue: makeFromInt 6525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9771, ordinaryIncomeNonSS: makeFromInt 99278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6271, federalTaxDue: makeFromInt 14276, stateTaxDue: makeFromInt 4614 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8218, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55322, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 738, stateTaxDue: makeFromInt 2475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15744, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17119, itemizedDeductions: makeFromInt 29053, federalTaxDue: makeFromInt 27547, stateTaxDue: makeFromInt 8095 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107043, qualifiedIncome: makeFromInt 33655, itemizedDeductions: makeFromInt 3219, federalTaxDue: makeFromInt 21340, stateTaxDue: makeFromInt 6780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53403, itemizedDeductions: makeFromInt 13195, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2071 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63097, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27791, federalTaxDue: makeFromInt 15870, stateTaxDue: makeFromInt 7580 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30340, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1732, itemizedDeductions: makeFromInt 20227, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41158, qualifiedIncome: makeFromInt 10645, itemizedDeductions: makeFromInt 13844, federalTaxDue: makeFromInt 2562, stateTaxDue: makeFromInt 2193 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22388, ordinaryIncomeNonSS: makeFromInt 103305, qualifiedIncome: makeFromInt 4036, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12879, stateTaxDue: makeFromInt 4924 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22714, ordinaryIncomeNonSS: makeFromInt 102436, qualifiedIncome: makeFromInt 28872, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16342, stateTaxDue: makeFromInt 5890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11945, ordinaryIncomeNonSS: makeFromInt 73288, qualifiedIncome: makeFromInt 2701, itemizedDeductions: makeFromInt 26306, federalTaxDue: makeFromInt 4605, stateTaxDue: makeFromInt 3223 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42585, ordinaryIncomeNonSS: makeFromInt 83970, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20250, stateTaxDue: makeFromInt 3854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98327, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11962, stateTaxDue: makeFromInt 4566 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83436, qualifiedIncome: makeFromInt 2016, itemizedDeductions: makeFromInt 27082, federalTaxDue: makeFromInt 7248, stateTaxDue: makeFromInt 4011 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39480, ordinaryIncomeNonSS: makeFromInt 62405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26477, federalTaxDue: makeFromInt 8888, stateTaxDue: makeFromInt 2734 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10407, qualifiedIncome: makeFromInt 45994, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12692, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40102, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23448, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40055, ordinaryIncomeNonSS: makeFromInt 125619, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12099, federalTaxDue: makeFromInt 41670, stateTaxDue: makeFromInt 10848 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118358, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14459, federalTaxDue: makeFromInt 27388, stateTaxDue: makeFromInt 10381 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36897, qualifiedIncome: makeFromInt 76976, itemizedDeductions: makeFromInt 27193, federalTaxDue: makeFromInt 5932, stateTaxDue: makeFromInt 5319 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45928, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43171, stateTaxDue: makeFromInt 9943 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14950, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15485, federalTaxDue: makeFromInt 21024, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15492, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149914, qualifiedIncome: makeFromInt 64021, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38234, stateTaxDue: makeFromInt 10564 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23141, ordinaryIncomeNonSS: makeFromInt 133285, qualifiedIncome: makeFromInt 10481, itemizedDeductions: makeFromInt 15493, federalTaxDue: makeFromInt 20450, stateTaxDue: makeFromInt 6513 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24067, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26300, ordinaryIncomeNonSS: makeFromInt 59498, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17723, federalTaxDue: makeFromInt 7794, stateTaxDue: makeFromInt 2400 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30397, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33944, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30841, qualifiedIncome: makeFromInt 91149, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7725, stateTaxDue: makeFromInt 5725 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12368, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22528, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16307, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25337, stateTaxDue: makeFromInt 7840 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4997, ordinaryIncomeNonSS: makeFromInt 135911, qualifiedIncome: makeFromInt 42518, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23152, stateTaxDue: makeFromInt 8549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17322, itemizedDeductions: makeFromInt 14666, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 659 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46030, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90982, itemizedDeductions: makeFromInt 7956, federalTaxDue: makeFromInt 46984, stateTaxDue: makeFromInt 11474 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38294, ordinaryIncomeNonSS: makeFromInt 55432, qualifiedIncome: makeFromInt 20425, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8378, stateTaxDue: makeFromInt 3420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26032, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65777, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 548, stateTaxDue: makeFromInt 2906 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5489, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71624, itemizedDeductions: makeFromInt 16094, federalTaxDue: makeFromInt 2374, stateTaxDue: makeFromInt 3206 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99788, itemizedDeductions: makeFromInt 7345, federalTaxDue: makeFromInt 54178, stateTaxDue: makeFromInt 12311 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144151, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10440, federalTaxDue: makeFromInt 33062, stateTaxDue: makeFromInt 11885 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47849, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25565, federalTaxDue: makeFromInt 48661, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3009, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55163, itemizedDeductions: makeFromInt 15873, federalTaxDue: makeFromInt 35091, stateTaxDue: makeFromInt 10117 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24323, ordinaryIncomeNonSS: makeFromInt 91778, qualifiedIncome: makeFromInt 17231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13728, stateTaxDue: makeFromInt 5111 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42619, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62382, itemizedDeductions: makeFromInt 14756, federalTaxDue: makeFromInt 44459, stateTaxDue: makeFromInt 10364 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46837, ordinaryIncomeNonSS: makeFromInt 137985, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35386, stateTaxDue: makeFromInt 6609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121023, qualifiedIncome: makeFromInt 70847, itemizedDeductions: makeFromInt 6502, federalTaxDue: makeFromInt 31830, stateTaxDue: makeFromInt 8919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48268, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35485, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1381 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3214, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22564, federalTaxDue: makeFromInt 23878, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25738, ordinaryIncomeNonSS: makeFromInt 19000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9473, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86259, qualifiedIncome: makeFromInt 10192, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9970, stateTaxDue: makeFromInt 4248 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86629, qualifiedIncome: makeFromInt 88538, itemizedDeductions: makeFromInt 17394, federalTaxDue: makeFromInt 31679, stateTaxDue: makeFromInt 8485 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30368, itemizedDeductions: makeFromInt 14590, federalTaxDue: makeFromInt 402, stateTaxDue: makeFromInt 1324 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22841, ordinaryIncomeNonSS: makeFromInt 69964, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23680, stateTaxDue: makeFromInt 8243 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6347, ordinaryIncomeNonSS: makeFromInt 32502, qualifiedIncome: makeFromInt 84645, itemizedDeductions: makeFromInt 5920, federalTaxDue: makeFromInt 7223, stateTaxDue: makeFromInt 5424 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46939, itemizedDeductions: makeFromInt 20147, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1724 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 145764, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 182, federalTaxDue: makeFromInt 19771, stateTaxDue: makeFromInt 6781 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79489, qualifiedIncome: makeFromInt 1465, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15195, stateTaxDue: makeFromInt 3782 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 410, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19097, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50106, itemizedDeductions: makeFromInt 15448, federalTaxDue: makeFromInt 37540, stateTaxDue: makeFromInt 9550 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63231, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3683, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24011, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32854, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27593, itemizedDeductions: makeFromInt 14296, federalTaxDue: makeFromInt 28511, stateTaxDue: makeFromInt 8205 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13384, itemizedDeductions: makeFromInt 1290, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 458 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32344, ordinaryIncomeNonSS: makeFromInt 1885, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146019, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26216, federalTaxDue: makeFromInt 17802, stateTaxDue: makeFromInt 6626 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77323, qualifiedIncome: makeFromInt 96322, itemizedDeductions: makeFromInt 29153, federalTaxDue: makeFromInt 28778, stateTaxDue: makeFromInt 8307 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45281, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1861 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38600, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29066, federalTaxDue: makeFromInt 3434, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20163, ordinaryIncomeNonSS: makeFromInt 102645, qualifiedIncome: makeFromInt 10834, itemizedDeductions: makeFromInt 14603, federalTaxDue: makeFromInt 18450, stateTaxDue: makeFromInt 5339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39753, ordinaryIncomeNonSS: makeFromInt 127587, qualifiedIncome: makeFromInt 81335, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42989, stateTaxDue: makeFromInt 10227 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15670, itemizedDeductions: makeFromInt 7992, federalTaxDue: makeFromInt 41800, stateTaxDue: makeFromInt 8021 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23106, itemizedDeductions: makeFromInt 29565, federalTaxDue: makeFromInt 30809, stateTaxDue: makeFromInt 8180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27777, ordinaryIncomeNonSS: makeFromInt 97597, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7267, federalTaxDue: makeFromInt 23806, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4652, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9131, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121700, qualifiedIncome: makeFromInt 27674, itemizedDeductions: makeFromInt 12392, federalTaxDue: makeFromInt 20713, stateTaxDue: makeFromInt 7067 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11408, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31669, itemizedDeductions: makeFromInt 9886, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3832, federalTaxDue: makeFromInt 4627, stateTaxDue: makeFromInt 2132 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113109, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20365, federalTaxDue: makeFromInt 26233, stateTaxDue: makeFromInt 10318 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16782, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49854, ordinaryIncomeNonSS: makeFromInt 96840, qualifiedIncome: makeFromInt 6316, itemizedDeductions: makeFromInt 12744, federalTaxDue: makeFromInt 16803, stateTaxDue: makeFromInt 4483 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11540, ordinaryIncomeNonSS: makeFromInt 22532, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17761, federalTaxDue: makeFromInt 303, stateTaxDue: makeFromInt 552 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70257, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2784, stateTaxDue: makeFromInt 3236 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3718, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43453, ordinaryIncomeNonSS: makeFromInt 110927, qualifiedIncome: makeFromInt 59533, itemizedDeductions: makeFromInt 23126, federalTaxDue: makeFromInt 26594, stateTaxDue: makeFromInt 8041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13645, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34406, itemizedDeductions: makeFromInt 750, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1408 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54732, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34517, stateTaxDue: makeFromInt 9782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2124, ordinaryIncomeNonSS: makeFromInt 28207, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18044, federalTaxDue: makeFromInt 1141, stateTaxDue: makeFromInt 1155 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69926, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29838, stateTaxDue: makeFromInt 10460 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19614, federalTaxDue: makeFromInt 24047, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33026, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124626, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40762, stateTaxDue: makeFromInt 11028 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45140, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70024, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10437, stateTaxDue: makeFromInt 3046 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10703, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25273, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26917, ordinaryIncomeNonSS: makeFromInt 39701, qualifiedIncome: makeFromInt 67694, itemizedDeductions: makeFromInt 417, federalTaxDue: makeFromInt 16535, stateTaxDue: makeFromInt 4915 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124438, qualifiedIncome: makeFromInt 71598, itemizedDeductions: makeFromInt 4638, federalTaxDue: makeFromInt 44047, stateTaxDue: makeFromInt 9651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24703, ordinaryIncomeNonSS: makeFromInt 121556, qualifiedIncome: makeFromInt 64614, itemizedDeductions: makeFromInt 3032, federalTaxDue: makeFromInt 31165, stateTaxDue: makeFromInt 8734 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52638, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2203, stateTaxDue: makeFromInt 2256 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85227, itemizedDeductions: makeFromInt 3096, federalTaxDue: makeFromInt 1489, stateTaxDue: makeFromInt 3898 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42430, qualifiedIncome: makeFromInt 44494, itemizedDeductions: makeFromInt 23413, federalTaxDue: makeFromInt 1027, stateTaxDue: makeFromInt 4005 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6075, ordinaryIncomeNonSS: makeFromInt 76049, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4874, federalTaxDue: makeFromInt 8268, stateTaxDue: makeFromInt 3295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26043, stateTaxDue: makeFromInt 7738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45265, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3881, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54108, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2469, stateTaxDue: makeFromInt 2535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6981, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16879, ordinaryIncomeNonSS: makeFromInt 82476, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17390, stateTaxDue: makeFromInt 3982 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132920, qualifiedIncome: makeFromInt 74294, itemizedDeductions: makeFromInt 14055, federalTaxDue: makeFromInt 40505, stateTaxDue: makeFromInt 9986 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9202, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97254, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8588, stateTaxDue: makeFromInt 4408 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27170, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57707, itemizedDeductions: makeFromInt 27561, federalTaxDue: makeFromInt 2964, stateTaxDue: makeFromInt 2719 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89552, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7182, stateTaxDue: makeFromInt 4223 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72088, qualifiedIncome: makeFromInt 69582, itemizedDeductions: makeFromInt 20467, federalTaxDue: makeFromInt 15528, stateTaxDue: makeFromInt 6509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42220, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4644, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90404, itemizedDeductions: makeFromInt 15856, federalTaxDue: makeFromInt 36821, stateTaxDue: makeFromInt 11645 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139790, qualifiedIncome: makeFromInt 19845, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23501, stateTaxDue: makeFromInt 7637 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34651, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3320, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3673, ordinaryIncomeNonSS: makeFromInt 47689, qualifiedIncome: makeFromInt 93501, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13447, stateTaxDue: makeFromInt 6805 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4610, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9486, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 219 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10547, stateTaxDue: makeFromInt 4899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7207, itemizedDeductions: makeFromInt 25014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 143 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66654, qualifiedIncome: makeFromInt 44402, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5423, stateTaxDue: makeFromInt 5235 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89904, itemizedDeductions: makeFromInt 8529, federalTaxDue: makeFromInt 52935, stateTaxDue: makeFromInt 12011 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9036, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 105053, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9372, federalTaxDue: makeFromInt 25720, stateTaxDue: makeFromInt 4998 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45210, ordinaryIncomeNonSS: makeFromInt 112808, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26604, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122605, qualifiedIncome: makeFromInt 6902, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17720, stateTaxDue: makeFromInt 6100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20493, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90331, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10651, stateTaxDue: makeFromInt 3942 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13592, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87009, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36960, stateTaxDue: makeFromInt 11475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40143, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13148, federalTaxDue: makeFromInt 11039, stateTaxDue: makeFromInt 6719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95167, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5166, federalTaxDue: makeFromInt 12925, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21055, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17050, federalTaxDue: makeFromInt 9305, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31920, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78432, itemizedDeductions: makeFromInt 14060, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115178, qualifiedIncome: makeFromInt 34576, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21361, stateTaxDue: makeFromInt 7189 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29192, ordinaryIncomeNonSS: makeFromInt 125629, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20941, stateTaxDue: makeFromInt 5754 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 134166, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17810, federalTaxDue: makeFromInt 29203, stateTaxDue: makeFromInt 6292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3439, ordinaryIncomeNonSS: makeFromInt 93884, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15162, stateTaxDue: makeFromInt 4441 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46536, ordinaryIncomeNonSS: makeFromInt 74032, qualifiedIncome: makeFromInt 94979, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26984, stateTaxDue: makeFromInt 8076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37868, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 431, stateTaxDue: makeFromInt 1942 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73638, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11599, federalTaxDue: makeFromInt 10268, stateTaxDue: makeFromInt 3531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5241, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24927, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6001, ordinaryIncomeNonSS: makeFromInt 25179, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 804 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20088, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11810, stateTaxDue: makeFromInt 5900 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15383, ordinaryIncomeNonSS: makeFromInt 46879, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8172, stateTaxDue: makeFromInt 2166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27649, qualifiedIncome: makeFromInt 56732, itemizedDeductions: makeFromInt 17441, federalTaxDue: makeFromInt 7166, stateTaxDue: makeFromInt 3544 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23212, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 323, stateTaxDue: makeFromInt 837 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26381, itemizedDeductions: makeFromInt 26302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 944 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27498, ordinaryIncomeNonSS: makeFromInt 64778, qualifiedIncome: makeFromInt 1606, itemizedDeductions: makeFromInt 10180, federalTaxDue: makeFromInt 9516, stateTaxDue: makeFromInt 2944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1913, ordinaryIncomeNonSS: makeFromInt 88655, qualifiedIncome: makeFromInt 9705, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11323, stateTaxDue: makeFromInt 4568 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91891, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 57, federalTaxDue: makeFromInt 16165, stateTaxDue: makeFromInt 4034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132049, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9664, federalTaxDue: makeFromInt 21999, stateTaxDue: makeFromInt 6147 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10387, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19975, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4374, ordinaryIncomeNonSS: makeFromInt 78118, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28654, federalTaxDue: makeFromInt 21248, stateTaxDue: makeFromInt 8533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45903, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85379, itemizedDeductions: makeFromInt 1594, federalTaxDue: makeFromInt 48055, stateTaxDue: makeFromInt 11556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23653, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96458, itemizedDeductions: makeFromInt 22080, federalTaxDue: makeFromInt 37955, stateTaxDue: makeFromInt 11917 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132357, qualifiedIncome: makeFromInt 23377, itemizedDeductions: makeFromInt 12729, federalTaxDue: makeFromInt 28905, stateTaxDue: makeFromInt 7718 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25410, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 69858, qualifiedIncome: makeFromInt 61426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23440, stateTaxDue: makeFromInt 5989 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9632, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4467, itemizedDeductions: makeFromInt 20957, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37629, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42960, qualifiedIncome: makeFromInt 9078, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2437, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47675, ordinaryIncomeNonSS: makeFromInt 203, qualifiedIncome: makeFromInt 41343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4248, stateTaxDue: makeFromInt 1622 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2420, ordinaryIncomeNonSS: makeFromInt 50665, qualifiedIncome: makeFromInt 23481, itemizedDeductions: makeFromInt 13695, federalTaxDue: makeFromInt 7904, stateTaxDue: makeFromInt 3557 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62279, qualifiedIncome: makeFromInt 26407, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5557, stateTaxDue: makeFromInt 3972 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33664, ordinaryIncomeNonSS: makeFromInt 15633, qualifiedIncome: makeFromInt 75963, itemizedDeductions: makeFromInt 3162, federalTaxDue: makeFromInt 8968, stateTaxDue: makeFromInt 4205 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49928, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2020, itemizedDeductions: makeFromInt 24541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40169, itemizedDeductions: makeFromInt 5308, federalTaxDue: makeFromInt 42249, stateTaxDue: makeFromInt 9250 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46022, ordinaryIncomeNonSS: makeFromInt 147095, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19333, federalTaxDue: makeFromInt 33887, stateTaxDue: makeFromInt 7100 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47633, ordinaryIncomeNonSS: makeFromInt 107555, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20251, stateTaxDue: makeFromInt 4833 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109598, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24615, federalTaxDue: makeFromInt 12813, stateTaxDue: makeFromInt 5105 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18935, ordinaryIncomeNonSS: makeFromInt 147841, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18150, federalTaxDue: makeFromInt 26605, stateTaxDue: makeFromInt 7017 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22374, ordinaryIncomeNonSS: makeFromInt 53966, qualifiedIncome: makeFromInt 86237, itemizedDeductions: makeFromInt 21528, federalTaxDue: makeFromInt 13199, stateTaxDue: makeFromInt 6335 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3136, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17708, stateTaxDue: makeFromInt 6754 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33413, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1291, stateTaxDue: makeFromInt 1296 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40601, itemizedDeductions: makeFromInt 27137, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1655 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131180, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3079, federalTaxDue: makeFromInt 14088, stateTaxDue: makeFromInt 6084 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17375, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22988, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31891, ordinaryIncomeNonSS: makeFromInt 5194, qualifiedIncome: makeFromInt 55824, itemizedDeductions: makeFromInt 22512, federalTaxDue: makeFromInt 814, stateTaxDue: makeFromInt 2561 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138589, qualifiedIncome: makeFromInt 50779, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26014, stateTaxDue: makeFromInt 9093 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45730, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13344, federalTaxDue: makeFromInt 17764, stateTaxDue: makeFromInt 7004 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134157, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9406, federalTaxDue: makeFromInt 15193, stateTaxDue: makeFromInt 6233 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81629, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13591, stateTaxDue: makeFromInt 3939 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37559, ordinaryIncomeNonSS: makeFromInt 69817, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8746, federalTaxDue: makeFromInt 11847, stateTaxDue: makeFromInt 3116 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7957, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35576, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24082, federalTaxDue: makeFromInt 1149, stateTaxDue: makeFromInt 1204 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3033, ordinaryIncomeNonSS: makeFromInt 82460, qualifiedIncome: makeFromInt 61447, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12518, stateTaxDue: makeFromInt 6720 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1018, ordinaryIncomeNonSS: makeFromInt 53564, qualifiedIncome: makeFromInt 81222, itemizedDeductions: makeFromInt 3261, federalTaxDue: makeFromInt 17457, stateTaxDue: makeFromInt 6650 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46806, ordinaryIncomeNonSS: makeFromInt 53766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24381, federalTaxDue: makeFromInt 10834, stateTaxDue: makeFromInt 2233 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30565, ordinaryIncomeNonSS: makeFromInt 125304, qualifiedIncome: makeFromInt 72468, itemizedDeductions: makeFromInt 4990, federalTaxDue: makeFromInt 35756, stateTaxDue: makeFromInt 9536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9118, ordinaryIncomeNonSS: makeFromInt 98938, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8845, federalTaxDue: makeFromInt 13582, stateTaxDue: makeFromInt 4495 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6724, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21610, ordinaryIncomeNonSS: makeFromInt 85172, qualifiedIncome: makeFromInt 94810, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27365, stateTaxDue: makeFromInt 8955 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49529, ordinaryIncomeNonSS: makeFromInt 76006, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27332, stateTaxDue: makeFromInt 8444 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48067, ordinaryIncomeNonSS: makeFromInt 66774, qualifiedIncome: makeFromInt 12963, itemizedDeductions: makeFromInt 4697, federalTaxDue: makeFromInt 17986, stateTaxDue: makeFromInt 3638 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5171, ordinaryIncomeNonSS: makeFromInt 54643, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4173, federalTaxDue: makeFromInt 20371, stateTaxDue: makeFromInt 7277 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144446, qualifiedIncome: makeFromInt 80907, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31548, stateTaxDue: makeFromInt 11065 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68870, itemizedDeductions: makeFromInt 19281, federalTaxDue: makeFromInt 3376, stateTaxDue: makeFromInt 3064 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31345, ordinaryIncomeNonSS: makeFromInt 4554, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72851, itemizedDeductions: makeFromInt 19442, federalTaxDue: makeFromInt 5982, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69415, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8689, federalTaxDue: makeFromInt 8314, stateTaxDue: makeFromInt 3193 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 450, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9496, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51512, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2178 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 137472, qualifiedIncome: makeFromInt 5794, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25580, stateTaxDue: makeFromInt 6791 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27719, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29167, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41797, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8761, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17010, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19708, ordinaryIncomeNonSS: makeFromInt 135645, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28205, stateTaxDue: makeFromInt 6489 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144592, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21338, stateTaxDue: makeFromInt 6975 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14148, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41692, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 606, stateTaxDue: makeFromInt 1698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32908, itemizedDeductions: makeFromInt 8534, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 970 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44012, ordinaryIncomeNonSS: makeFromInt 12658, qualifiedIncome: makeFromInt 54995, itemizedDeductions: makeFromInt 1598, federalTaxDue: makeFromInt 7394, stateTaxDue: makeFromInt 2808 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11564, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24995, stateTaxDue: makeFromInt 7703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19227, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26086, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20696, stateTaxDue: makeFromInt 6775 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24654, ordinaryIncomeNonSS: makeFromInt 122976, qualifiedIncome: makeFromInt 21355, itemizedDeductions: makeFromInt 24548, federalTaxDue: makeFromInt 23997, stateTaxDue: makeFromInt 6932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57075, qualifiedIncome: makeFromInt 99196, itemizedDeductions: makeFromInt 10180, federalTaxDue: makeFromInt 14650, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3714, qualifiedIncome: makeFromInt 51937, itemizedDeductions: makeFromInt 6272, federalTaxDue: makeFromInt 7578, stateTaxDue: makeFromInt 2410 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32405, ordinaryIncomeNonSS: makeFromInt 16610, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18473, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 493 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118871, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4034, federalTaxDue: makeFromInt 16628, stateTaxDue: makeFromInt 5512 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24416, ordinaryIncomeNonSS: makeFromInt 78863, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19495, federalTaxDue: makeFromInt 9266, stateTaxDue: makeFromInt 3471 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2302, itemizedDeductions: makeFromInt 19686, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48766, qualifiedIncome: makeFromInt 96911, itemizedDeductions: makeFromInt 17649, federalTaxDue: makeFromInt 11638, stateTaxDue: makeFromInt 7001 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49090, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77332, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38760, stateTaxDue: makeFromInt 10692 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2788, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 761, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14670, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8307, ordinaryIncomeNonSS: makeFromInt 32960, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14769, federalTaxDue: makeFromInt 942, stateTaxDue: makeFromInt 1173 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6122, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64656, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1328, stateTaxDue: makeFromInt 2858 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18511, itemizedDeductions: makeFromInt 12711, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 551 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79855, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7063, stateTaxDue: makeFromInt 3418 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16804, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10076, itemizedDeductions: makeFromInt 1692, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 86 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 272, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89379, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 904, stateTaxDue: makeFromInt 3994 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6563, ordinaryIncomeNonSS: makeFromInt 70849, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22765, federalTaxDue: makeFromInt 7423, stateTaxDue: makeFromInt 3288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16943, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4030, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19518, ordinaryIncomeNonSS: makeFromInt 28468, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14388, federalTaxDue: makeFromInt 1908, stateTaxDue: makeFromInt 1094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12262, ordinaryIncomeNonSS: makeFromInt 67277, qualifiedIncome: makeFromInt 77094, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17657, stateTaxDue: makeFromInt 6914 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18741, ordinaryIncomeNonSS: makeFromInt 88163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13403, stateTaxDue: makeFromInt 4048 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12212, ordinaryIncomeNonSS: makeFromInt 148676, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5046, federalTaxDue: makeFromInt 28481, stateTaxDue: makeFromInt 6979 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110231, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6728, federalTaxDue: makeFromInt 16584, stateTaxDue: makeFromInt 5193 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 40775, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6509, federalTaxDue: makeFromInt 2461, stateTaxDue: makeFromInt 1733 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128729, qualifiedIncome: makeFromInt 67841, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32318, stateTaxDue: makeFromInt 9503 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14604, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7715, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 355 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70623, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2478, stateTaxDue: makeFromInt 3156 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81812, qualifiedIncome: makeFromInt 87377, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24405, stateTaxDue: makeFromInt 8404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6219, ordinaryIncomeNonSS: makeFromInt 5246, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4817 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41416, itemizedDeductions: makeFromInt 21244, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1561 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13695, itemizedDeductions: makeFromInt 13422, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116441, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33253, stateTaxDue: makeFromInt 10367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 982, ordinaryIncomeNonSS: makeFromInt 102931, qualifiedIncome: makeFromInt 68925, itemizedDeductions: makeFromInt 9890, federalTaxDue: makeFromInt 22631, stateTaxDue: makeFromInt 8018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9823, ordinaryIncomeNonSS: makeFromInt 58482, qualifiedIncome: makeFromInt 74695, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14036, stateTaxDue: makeFromInt 6343 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14166, ordinaryIncomeNonSS: makeFromInt 49012, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3799, stateTaxDue: makeFromInt 1976 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78688, itemizedDeductions: makeFromInt 18825, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97798, itemizedDeductions: makeFromInt 26210, federalTaxDue: makeFromInt 7110, stateTaxDue: makeFromInt 4437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11465, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32059, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11334, itemizedDeductions: makeFromInt 16811, federalTaxDue: makeFromInt 35264, stateTaxDue: makeFromInt 7492 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104600, qualifiedIncome: makeFromInt 57704, itemizedDeductions: makeFromInt 13992, federalTaxDue: makeFromInt 24067, stateTaxDue: makeFromInt 7860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37279, ordinaryIncomeNonSS: makeFromInt 34182, qualifiedIncome: makeFromInt 63158, itemizedDeductions: makeFromInt 20910, federalTaxDue: makeFromInt 12885, stateTaxDue: makeFromInt 4292 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 96555, qualifiedIncome: makeFromInt 31324, itemizedDeductions: makeFromInt 15363, federalTaxDue: makeFromInt 20519, stateTaxDue: makeFromInt 5719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15306, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19931, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17483, stateTaxDue: makeFromInt 5622 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47414, ordinaryIncomeNonSS: makeFromInt 39931, qualifiedIncome: makeFromInt 70412, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12783, stateTaxDue: makeFromInt 4842 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140230, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19094, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65846, itemizedDeductions: makeFromInt 1354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2909 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47551, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2690, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22201, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11851, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2776, ordinaryIncomeNonSS: makeFromInt 104256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19991, stateTaxDue: makeFromInt 5093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13966, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12104, ordinaryIncomeNonSS: makeFromInt 104149, qualifiedIncome: makeFromInt 77370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33787, stateTaxDue: makeFromInt 9033 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11550, ordinaryIncomeNonSS: makeFromInt 22338, qualifiedIncome: makeFromInt 8602, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1129 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43657, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32028, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13332, federalTaxDue: makeFromInt 7100, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12681, ordinaryIncomeNonSS: makeFromInt 105433, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4568, federalTaxDue: makeFromInt 22678, stateTaxDue: makeFromInt 5153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62545, itemizedDeductions: makeFromInt 28078, federalTaxDue: makeFromInt 42787, stateTaxDue: makeFromInt 10411 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148548, qualifiedIncome: makeFromInt 10295, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29413, stateTaxDue: makeFromInt 7267 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22226, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24219, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14754, federalTaxDue: makeFromInt 307, stateTaxDue: makeFromInt 636 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17718, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84679, itemizedDeductions: makeFromInt 11939, federalTaxDue: makeFromInt 7511, stateTaxDue: makeFromInt 4054 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34311, ordinaryIncomeNonSS: makeFromInt 42567, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2314, federalTaxDue: makeFromInt 23164, stateTaxDue: makeFromInt 6673 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43384, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29986, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84755, qualifiedIncome: makeFromInt 9012, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7473, stateTaxDue: makeFromInt 4313 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30692, ordinaryIncomeNonSS: makeFromInt 24306, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3739, federalTaxDue: makeFromInt 8322, stateTaxDue: makeFromInt 5740 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147581, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41925, stateTaxDue: makeFromInt 12198 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9303, ordinaryIncomeNonSS: makeFromInt 16710, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2657, federalTaxDue: makeFromInt 636, stateTaxDue: makeFromInt 628 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90295, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7638, stateTaxDue: makeFromInt 4338 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5644, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31873, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1119 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75859, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15227, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91077, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6102, stateTaxDue: makeFromInt 4094 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88630, qualifiedIncome: makeFromInt 89685, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29565, stateTaxDue: makeFromInt 8441 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23191, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12477, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70303, itemizedDeductions: makeFromInt 1807, federalTaxDue: makeFromInt 2175, stateTaxDue: makeFromInt 3140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45300, ordinaryIncomeNonSS: makeFromInt 127552, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16120, federalTaxDue: makeFromInt 41719, stateTaxDue: makeFromInt 11054 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28072, qualifiedIncome: makeFromInt 73511, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18935, stateTaxDue: makeFromInt 4824 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5054, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45176, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 776, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6549, ordinaryIncomeNonSS: makeFromInt 89423, qualifiedIncome: makeFromInt 64267, itemizedDeductions: makeFromInt 18519, federalTaxDue: makeFromInt 15003, stateTaxDue: makeFromInt 7210 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14286, qualifiedIncome: makeFromInt 96787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7120, stateTaxDue: makeFromInt 5318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24870, ordinaryIncomeNonSS: makeFromInt 95634, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23944, federalTaxDue: makeFromInt 16115, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13458, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21183, itemizedDeductions: makeFromInt 23026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 384 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73763, itemizedDeductions: makeFromInt 8757, federalTaxDue: makeFromInt 5004, stateTaxDue: makeFromInt 3233 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10855, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89336, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7494, stateTaxDue: makeFromInt 4087 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80406, qualifiedIncome: makeFromInt 71515, itemizedDeductions: makeFromInt 25299, federalTaxDue: makeFromInt 25838, stateTaxDue: makeFromInt 7320 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11667, ordinaryIncomeNonSS: makeFromInt 51910, qualifiedIncome: makeFromInt 54316, itemizedDeductions: makeFromInt 19940, federalTaxDue: makeFromInt 6416, stateTaxDue: makeFromInt 4867 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8065, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 792, ordinaryIncomeNonSS: makeFromInt 76034, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9489, stateTaxDue: makeFromInt 3547 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20414, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1175, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10665, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25253, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28369, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75195, qualifiedIncome: makeFromInt 29672, itemizedDeductions: makeFromInt 726, federalTaxDue: makeFromInt 5424, stateTaxDue: makeFromInt 4695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144835, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9899, federalTaxDue: makeFromInt 37969, stateTaxDue: makeFromInt 11936 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73486, itemizedDeductions: makeFromInt 21983, federalTaxDue: makeFromInt 4392, stateTaxDue: makeFromInt 3099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43786, ordinaryIncomeNonSS: makeFromInt 46070, qualifiedIncome: makeFromInt 66895, itemizedDeductions: makeFromInt 9646, federalTaxDue: makeFromInt 17822, stateTaxDue: makeFromInt 5073 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21193, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22801, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17968, qualifiedIncome: makeFromInt 49423, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2795 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13289, ordinaryIncomeNonSS: makeFromInt 80365, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7312, stateTaxDue: makeFromInt 3543 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8063, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21134, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33760, ordinaryIncomeNonSS: makeFromInt 52889, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9177, federalTaxDue: makeFromInt 26123, stateTaxDue: makeFromInt 7499 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45074, ordinaryIncomeNonSS: makeFromInt 63093, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26502, federalTaxDue: makeFromInt 7266, stateTaxDue: makeFromInt 2565 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132919, qualifiedIncome: makeFromInt 54874, itemizedDeductions: makeFromInt 26077, federalTaxDue: makeFromInt 36711, stateTaxDue: makeFromInt 8815 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20523, ordinaryIncomeNonSS: makeFromInt 67905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19898, federalTaxDue: makeFromInt 10016, stateTaxDue: makeFromInt 3140 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24197, qualifiedIncome: makeFromInt 94015, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8455, stateTaxDue: makeFromInt 5600 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57268, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20329, ordinaryIncomeNonSS: makeFromInt 36003, qualifiedIncome: makeFromInt 50129, itemizedDeductions: makeFromInt 1049, federalTaxDue: makeFromInt 7532, stateTaxDue: makeFromInt 3932 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31999, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121818, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16497, stateTaxDue: makeFromInt 5516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61105, itemizedDeductions: makeFromInt 27766, federalTaxDue: makeFromInt 28959, stateTaxDue: makeFromInt 10216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57268, itemizedDeductions: makeFromInt 17882, federalTaxDue: makeFromInt 1510, stateTaxDue: makeFromInt 2472 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25382, ordinaryIncomeNonSS: makeFromInt 56855, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25429, stateTaxDue: makeFromInt 7497 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 82688, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14140, stateTaxDue: makeFromInt 3564 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47960, ordinaryIncomeNonSS: makeFromInt 25065, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22628, federalTaxDue: makeFromInt 945, stateTaxDue: makeFromInt 619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 35698, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22267, federalTaxDue: makeFromInt 11703, stateTaxDue: makeFromInt 6696 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48119, ordinaryIncomeNonSS: makeFromInt 62207, qualifiedIncome: makeFromInt 88370, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25821, stateTaxDue: makeFromInt 6954 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42944, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52605, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 277, stateTaxDue: makeFromInt 1955 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59801, qualifiedIncome: makeFromInt 78480, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12625, stateTaxDue: makeFromInt 6502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4636, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11182, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12762, federalTaxDue: makeFromInt 14081, stateTaxDue: makeFromInt 5007 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145257, qualifiedIncome: makeFromInt 60324, itemizedDeductions: makeFromInt 23289, federalTaxDue: makeFromInt 26021, stateTaxDue: makeFromInt 9832 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28013, ordinaryIncomeNonSS: makeFromInt 34279, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3280, stateTaxDue: makeFromInt 1339 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 350, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19415, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26534, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38451, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 75, stateTaxDue: makeFromInt 1737 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38286, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1539 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102778, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12326, federalTaxDue: makeFromInt 12984, stateTaxDue: makeFromInt 4793 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8995, ordinaryIncomeNonSS: makeFromInt 99197, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15738, federalTaxDue: makeFromInt 12969, stateTaxDue: makeFromInt 4385 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17295, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9040, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20488, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30570, itemizedDeductions: makeFromInt 19326, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 385, ordinaryIncomeNonSS: makeFromInt 17777, qualifiedIncome: makeFromInt 36548, itemizedDeductions: makeFromInt 1170, federalTaxDue: makeFromInt 145, stateTaxDue: makeFromInt 2322 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50564, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1333, stateTaxDue: makeFromInt 2273 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 108860, qualifiedIncome: makeFromInt 54728, itemizedDeductions: makeFromInt 12804, federalTaxDue: makeFromInt 17837, stateTaxDue: makeFromInt 7504 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70479, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33546, stateTaxDue: makeFromInt 10710 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 60167, itemizedDeductions: makeFromInt 7471, federalTaxDue: makeFromInt 1405, stateTaxDue: makeFromInt 2518 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36168, ordinaryIncomeNonSS: makeFromInt 29426, qualifiedIncome: makeFromInt 51957, itemizedDeductions: makeFromInt 1278, federalTaxDue: makeFromInt 3767, stateTaxDue: makeFromInt 3498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149560, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19740, federalTaxDue: makeFromInt 39992, stateTaxDue: makeFromInt 12023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26789, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90756, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12294, stateTaxDue: makeFromInt 3976 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10873, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68562, itemizedDeductions: makeFromInt 11057, federalTaxDue: makeFromInt 39088, stateTaxDue: makeFromInt 10718 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7901, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5818, stateTaxDue: makeFromInt 4354 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21216, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 66574, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39064, stateTaxDue: makeFromInt 10494 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41266, ordinaryIncomeNonSS: makeFromInt 111516, qualifiedIncome: makeFromInt 70322, itemizedDeductions: makeFromInt 28007, federalTaxDue: makeFromInt 28217, stateTaxDue: makeFromInt 8617 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27386, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35173, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26563, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 658, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40013, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9183, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31867, stateTaxDue: makeFromInt 7690 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29349, federalTaxDue: makeFromInt 21854, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76628, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12215, federalTaxDue: makeFromInt 5508, stateTaxDue: makeFromInt 3156 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32635, ordinaryIncomeNonSS: makeFromInt 3677, qualifiedIncome: makeFromInt 35109, itemizedDeductions: makeFromInt 1718, federalTaxDue: makeFromInt 811, stateTaxDue: makeFromInt 1631 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43203, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4386, stateTaxDue: makeFromInt 1551 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22456, ordinaryIncomeNonSS: makeFromInt 18355, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4738, stateTaxDue: makeFromInt 5383 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33076, ordinaryIncomeNonSS: makeFromInt 90472, qualifiedIncome: makeFromInt 8962, itemizedDeductions: makeFromInt 29483, federalTaxDue: makeFromInt 15065, stateTaxDue: makeFromInt 4597 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74013, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24001, federalTaxDue: makeFromInt 5566, stateTaxDue: makeFromInt 3091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18355, federalTaxDue: makeFromInt 38441, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46170, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94676, itemizedDeductions: makeFromInt 23026, federalTaxDue: makeFromInt 42439, stateTaxDue: makeFromInt 12030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20127, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 453, stateTaxDue: makeFromInt 476 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3167, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58723, qualifiedIncome: makeFromInt 53396, itemizedDeductions: makeFromInt 23125, federalTaxDue: makeFromInt 18243, stateTaxDue: makeFromInt 5290 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12586, ordinaryIncomeNonSS: makeFromInt 120322, qualifiedIncome: makeFromInt 50242, itemizedDeductions: makeFromInt 29387, federalTaxDue: makeFromInt 24497, stateTaxDue: makeFromInt 8153 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2283, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75174, itemizedDeductions: makeFromInt 4638, federalTaxDue: makeFromInt 12645, stateTaxDue: makeFromInt 3504 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126505, qualifiedIncome: makeFromInt 13272, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29812, stateTaxDue: makeFromInt 6414 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8201, ordinaryIncomeNonSS: makeFromInt 38990, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2874, federalTaxDue: makeFromInt 2684, stateTaxDue: makeFromInt 1575 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57056, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2307, stateTaxDue: makeFromInt 2398 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21364, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73917, itemizedDeductions: makeFromInt 16454, federalTaxDue: makeFromInt 41518, stateTaxDue: makeFromInt 10941 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35823, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46484, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27030, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 950 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27893, ordinaryIncomeNonSS: makeFromInt 85576, qualifiedIncome: makeFromInt 43069, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17102, stateTaxDue: makeFromInt 6112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54725, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4974, stateTaxDue: makeFromInt 2138 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 84187, qualifiedIncome: makeFromInt 49489, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24464, stateTaxDue: makeFromInt 6429 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18937, ordinaryIncomeNonSS: makeFromInt 126135, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36902, stateTaxDue: makeFromInt 10732 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29606, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16740, federalTaxDue: makeFromInt 8317, stateTaxDue: makeFromInt 3395 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51448, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2737, federalTaxDue: makeFromInt 2622, stateTaxDue: makeFromInt 2073 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114716, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10851, federalTaxDue: makeFromInt 30201, stateTaxDue: makeFromInt 10400 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 77202, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18328, federalTaxDue: makeFromInt 8569, stateTaxDue: makeFromInt 3405 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49992, ordinaryIncomeNonSS: makeFromInt 74318, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10595, stateTaxDue: makeFromInt 3041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31688, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45829, ordinaryIncomeNonSS: makeFromInt 39373, qualifiedIncome: makeFromInt 49458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17350, stateTaxDue: makeFromInt 4187 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42011, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85514, itemizedDeductions: makeFromInt 23896, federalTaxDue: makeFromInt 47394, stateTaxDue: makeFromInt 11664 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 133, ordinaryIncomeNonSS: makeFromInt 134407, qualifiedIncome: makeFromInt 14370, itemizedDeductions: makeFromInt 14291, federalTaxDue: makeFromInt 21700, stateTaxDue: makeFromInt 7064 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48983, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20528, qualifiedIncome: makeFromInt 60117, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3460 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6579, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18769, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 563 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84242, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26460, federalTaxDue: makeFromInt 18401, stateTaxDue: makeFromInt 8658 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30767, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50118, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31499, stateTaxDue: makeFromInt 9531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11522, qualifiedIncome: makeFromInt 11545, itemizedDeductions: makeFromInt 7658, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1647, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25230, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9223, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68226, itemizedDeductions: makeFromInt 10527, federalTaxDue: makeFromInt 3983, stateTaxDue: makeFromInt 2956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27726, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17780, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3180, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5752, ordinaryIncomeNonSS: makeFromInt 49952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6893, federalTaxDue: makeFromInt 2894, stateTaxDue: makeFromInt 2023 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8906, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11726, itemizedDeductions: makeFromInt 7963, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 251 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 210, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23798, stateTaxDue: makeFromInt 6936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19719, ordinaryIncomeNonSS: makeFromInt 149384, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23437, federalTaxDue: makeFromInt 31861, stateTaxDue: makeFromInt 7394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35600, ordinaryIncomeNonSS: makeFromInt 115902, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28696, federalTaxDue: makeFromInt 22652, stateTaxDue: makeFromInt 5564 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6190, ordinaryIncomeNonSS: makeFromInt 144881, qualifiedIncome: makeFromInt 14970, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27161, stateTaxDue: makeFromInt 7704 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6298, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39079, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27487, federalTaxDue: makeFromInt 31211, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14086, ordinaryIncomeNonSS: makeFromInt 2271, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43104, ordinaryIncomeNonSS: makeFromInt 94334, qualifiedIncome: makeFromInt 28892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31145, stateTaxDue: makeFromInt 6060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28892, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19190, ordinaryIncomeNonSS: makeFromInt 52861, qualifiedIncome: makeFromInt 41973, itemizedDeductions: makeFromInt 18739, federalTaxDue: makeFromInt 5313, stateTaxDue: makeFromInt 4067 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3623, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13010, ordinaryIncomeNonSS: makeFromInt 138897, qualifiedIncome: makeFromInt 72011, itemizedDeductions: makeFromInt 18838, federalTaxDue: makeFromInt 34111, stateTaxDue: makeFromInt 10308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79025, itemizedDeductions: makeFromInt 21546, federalTaxDue: makeFromInt 3151, stateTaxDue: makeFromInt 3476 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28231, ordinaryIncomeNonSS: makeFromInt 68436, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6318, federalTaxDue: makeFromInt 13510, stateTaxDue: makeFromInt 3234 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2879, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128169, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 46268, stateTaxDue: makeFromInt 10953 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34601, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 6212 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24292, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23234, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55455, qualifiedIncome: makeFromInt 64651, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15197, stateTaxDue: makeFromInt 5697 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39155, ordinaryIncomeNonSS: makeFromInt 53178, qualifiedIncome: makeFromInt 47055, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10919, stateTaxDue: makeFromInt 4459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25318, stateTaxDue: makeFromInt 6204 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89269, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5275, stateTaxDue: makeFromInt 3888 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6840, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79666, itemizedDeductions: makeFromInt 3033, federalTaxDue: makeFromInt 3910, stateTaxDue: makeFromInt 3608 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142185, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28650, federalTaxDue: makeFromInt 16212, stateTaxDue: makeFromInt 6434 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124215, qualifiedIncome: makeFromInt 34568, itemizedDeductions: makeFromInt 3903, federalTaxDue: makeFromInt 27090, stateTaxDue: makeFromInt 7464 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36317, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92754, itemizedDeductions: makeFromInt 6696, federalTaxDue: makeFromInt 10866, stateTaxDue: makeFromInt 4384 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8620, ordinaryIncomeNonSS: makeFromInt 2427, qualifiedIncome: makeFromInt 5376, itemizedDeductions: makeFromInt 11335, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 51 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66017, itemizedDeductions: makeFromInt 15482, federalTaxDue: makeFromInt 4255, stateTaxDue: makeFromInt 2939 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32986, ordinaryIncomeNonSS: makeFromInt 73804, qualifiedIncome: makeFromInt 21895, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15154, stateTaxDue: makeFromInt 4210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58, itemizedDeductions: makeFromInt 2478, federalTaxDue: makeFromInt 27587, stateTaxDue: makeFromInt 7028 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20601, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29152, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1038 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3493, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6551, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36274, ordinaryIncomeNonSS: makeFromInt 130560, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25994, stateTaxDue: makeFromInt 5953 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147044, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5340, federalTaxDue: makeFromInt 22551, stateTaxDue: makeFromInt 6777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6438, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97442, itemizedDeductions: makeFromInt 16818, federalTaxDue: makeFromInt 38515, stateTaxDue: makeFromInt 12069 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10922, qualifiedIncome: makeFromInt 73133, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3410, stateTaxDue: makeFromInt 3940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31903, ordinaryIncomeNonSS: makeFromInt 12701, qualifiedIncome: makeFromInt 72695, itemizedDeductions: makeFromInt 29459, federalTaxDue: makeFromInt 5257, stateTaxDue: makeFromInt 3927 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77095, itemizedDeductions: makeFromInt 6541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3483 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18547, ordinaryIncomeNonSS: makeFromInt 44866, qualifiedIncome: makeFromInt 79607, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18579, stateTaxDue: makeFromInt 5920 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27609, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67274, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2689 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27999, ordinaryIncomeNonSS: makeFromInt 115188, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23665, stateTaxDue: makeFromInt 5304 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26829, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47731, itemizedDeductions: makeFromInt 9471, federalTaxDue: makeFromInt 2935, stateTaxDue: makeFromInt 2132 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28599, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20157, federalTaxDue: makeFromInt 3140, stateTaxDue: makeFromInt 855 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8328, ordinaryIncomeNonSS: makeFromInt 64980, qualifiedIncome: makeFromInt 72863, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19957, stateTaxDue: makeFromInt 6537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3551, ordinaryIncomeNonSS: makeFromInt 13807, qualifiedIncome: makeFromInt 97691, itemizedDeductions: makeFromInt 4067, federalTaxDue: makeFromInt 7962, stateTaxDue: makeFromInt 5340 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40046, ordinaryIncomeNonSS: makeFromInt 26019, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12227, federalTaxDue: makeFromInt 2060, stateTaxDue: makeFromInt 726 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82837, itemizedDeductions: makeFromInt 29464, federalTaxDue: makeFromInt 4513, stateTaxDue: makeFromInt 3840 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13217, federalTaxDue: makeFromInt 38766, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36600, qualifiedIncome: makeFromInt 12919, itemizedDeductions: makeFromInt 3649, federalTaxDue: makeFromInt 1960, stateTaxDue: makeFromInt 2179 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29014, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24956, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33872, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96927, itemizedDeductions: makeFromInt 15073, federalTaxDue: makeFromInt 5661, stateTaxDue: makeFromInt 4494 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33195, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 6344 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 99317, qualifiedIncome: makeFromInt 9976, itemizedDeductions: makeFromInt 20719, federalTaxDue: makeFromInt 27307, stateTaxDue: makeFromInt 5350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25764, ordinaryIncomeNonSS: makeFromInt 80680, qualifiedIncome: makeFromInt 29962, itemizedDeductions: makeFromInt 13278, federalTaxDue: makeFromInt 16055, stateTaxDue: makeFromInt 5092 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18606, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79813, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 159, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11169, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76177, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29845, federalTaxDue: makeFromInt 21052, stateTaxDue: makeFromInt 8675 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34334, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12138, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27342, qualifiedIncome: makeFromInt 87248, itemizedDeductions: makeFromInt 7353, federalTaxDue: makeFromInt 11962, stateTaxDue: makeFromInt 5191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6172, ordinaryIncomeNonSS: makeFromInt 100818, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9744, federalTaxDue: makeFromInt 29789, stateTaxDue: makeFromInt 9813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1605, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41124, qualifiedIncome: makeFromInt 72390, itemizedDeductions: makeFromInt 26765, federalTaxDue: makeFromInt 1812, stateTaxDue: makeFromInt 5201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3814, itemizedDeductions: makeFromInt 19004, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16896, ordinaryIncomeNonSS: makeFromInt 8420, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20587, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4877 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44215, ordinaryIncomeNonSS: makeFromInt 106367, qualifiedIncome: makeFromInt 1647, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26041, stateTaxDue: makeFromInt 5233 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61668, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4263, stateTaxDue: makeFromInt 2696 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6764, ordinaryIncomeNonSS: makeFromInt 129702, qualifiedIncome: makeFromInt 2568, itemizedDeductions: makeFromInt 2825, federalTaxDue: makeFromInt 20154, stateTaxDue: makeFromInt 6239 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62702, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41093, stateTaxDue: makeFromInt 10195 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48027, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75070, itemizedDeductions: makeFromInt 22412, federalTaxDue: makeFromInt 45515, stateTaxDue: makeFromInt 10799 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25592, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17316, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28870, itemizedDeductions: makeFromInt 26460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48415, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16177, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58885, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3314, stateTaxDue: makeFromInt 2751 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30958, ordinaryIncomeNonSS: makeFromInt 73559, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9531, federalTaxDue: makeFromInt 27348, stateTaxDue: makeFromInt 8403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40190, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19487, federalTaxDue: makeFromInt 31459, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82777, qualifiedIncome: makeFromInt 16811, itemizedDeductions: makeFromInt 19380, federalTaxDue: makeFromInt 6617, stateTaxDue: makeFromInt 4383 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106945, qualifiedIncome: makeFromInt 11438, itemizedDeductions: makeFromInt 699, federalTaxDue: makeFromInt 10306, stateTaxDue: makeFromInt 5244 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2657, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62650, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28730, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10334, ordinaryIncomeNonSS: makeFromInt 144315, qualifiedIncome: makeFromInt 13922, itemizedDeductions: makeFromInt 15030, federalTaxDue: makeFromInt 26092, stateTaxDue: makeFromInt 7537 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24546, ordinaryIncomeNonSS: makeFromInt 88060, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23778, federalTaxDue: makeFromInt 29481, stateTaxDue: makeFromInt 8948 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18402, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74081, itemizedDeductions: makeFromInt 19197, federalTaxDue: makeFromInt 3552, stateTaxDue: makeFromInt 3227 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 115238, qualifiedIncome: makeFromInt 22390, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24660, stateTaxDue: makeFromInt 6366 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18504, stateTaxDue: makeFromInt 5934 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23816, ordinaryIncomeNonSS: makeFromInt 37098, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29114, federalTaxDue: makeFromInt 1674, stateTaxDue: makeFromInt 1380 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78120, itemizedDeductions: makeFromInt 18457, federalTaxDue: makeFromInt 3348, stateTaxDue: makeFromInt 3531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33553, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29579, federalTaxDue: makeFromInt 24001, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39762, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 317, stateTaxDue: makeFromInt 1600 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46589, itemizedDeductions: makeFromInt 14633, federalTaxDue: makeFromInt 3597, stateTaxDue: makeFromInt 2074 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26218, qualifiedIncome: makeFromInt 86343, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21091, stateTaxDue: makeFromInt 5394 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16623, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26651, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21657, ordinaryIncomeNonSS: makeFromInt 31546, qualifiedIncome: makeFromInt 12435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4927, stateTaxDue: makeFromInt 1944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13674, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79363, itemizedDeductions: makeFromInt 9400, federalTaxDue: makeFromInt 4284, stateTaxDue: makeFromInt 3701 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 44226, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 574, stateTaxDue: makeFromInt 1756 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97162, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17781, federalTaxDue: makeFromInt 21285, stateTaxDue: makeFromInt 4283 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121003, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24058, federalTaxDue: makeFromInt 31165, stateTaxDue: makeFromInt 10924 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67970, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5566, stateTaxDue: makeFromInt 2916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49177, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26612, stateTaxDue: makeFromInt 9607 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1339, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22774, itemizedDeductions: makeFromInt 23961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 815 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24309, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99753, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2843, stateTaxDue: makeFromInt 4313 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11329, ordinaryIncomeNonSS: makeFromInt 97195, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30840, stateTaxDue: makeFromInt 9629 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8661, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41246, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13014, itemizedDeductions: makeFromInt 11395, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 27012, qualifiedIncome: makeFromInt 7393, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1731, stateTaxDue: makeFromInt 1045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109511, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4015, federalTaxDue: makeFromInt 10442, stateTaxDue: makeFromInt 4884 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8274, ordinaryIncomeNonSS: makeFromInt 124743, qualifiedIncome: makeFromInt 30832, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24949, stateTaxDue: makeFromInt 7486 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 42801, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4381, federalTaxDue: makeFromInt 6193, stateTaxDue: makeFromInt 6630 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37646, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34897, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1229 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16220, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72720, qualifiedIncome: makeFromInt 20198, itemizedDeductions: makeFromInt 2213, federalTaxDue: makeFromInt 7758, stateTaxDue: makeFromInt 4188 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5346, qualifiedIncome: makeFromInt 2611, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7945, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32058, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17877, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10905, ordinaryIncomeNonSS: makeFromInt 32034, qualifiedIncome: makeFromInt 66814, itemizedDeductions: makeFromInt 12864, federalTaxDue: makeFromInt 5116, stateTaxDue: makeFromInt 4592 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23078, ordinaryIncomeNonSS: makeFromInt 120580, qualifiedIncome: makeFromInt 82551, itemizedDeductions: makeFromInt 6768, federalTaxDue: makeFromInt 28454, stateTaxDue: makeFromInt 9482 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47299, ordinaryIncomeNonSS: makeFromInt 66383, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28917, federalTaxDue: makeFromInt 11205, stateTaxDue: makeFromInt 2944 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13042, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 264, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 214 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140525, qualifiedIncome: makeFromInt 78241, itemizedDeductions: makeFromInt 18773, federalTaxDue: makeFromInt 28490, stateTaxDue: makeFromInt 10463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19528, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2770, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43388, itemizedDeductions: makeFromInt 21654, federalTaxDue: makeFromInt 257, stateTaxDue: makeFromInt 1714 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62029, qualifiedIncome: makeFromInt 69834, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5800, stateTaxDue: makeFromInt 6174 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32047, qualifiedIncome: makeFromInt 57894, itemizedDeductions: makeFromInt 16450, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23485, ordinaryIncomeNonSS: makeFromInt 11847, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20156, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5276 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113170, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15511, stateTaxDue: makeFromInt 5372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38974, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 23753, itemizedDeductions: makeFromInt 28, federalTaxDue: makeFromInt 36958, stateTaxDue: makeFromInt 8311 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16803, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83461, itemizedDeductions: makeFromInt 11639, federalTaxDue: makeFromInt 399, stateTaxDue: makeFromInt 3498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140792, qualifiedIncome: makeFromInt 88483, itemizedDeductions: makeFromInt 17537, federalTaxDue: makeFromInt 36689, stateTaxDue: makeFromInt 11209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78831, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6177, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118353, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12746, federalTaxDue: makeFromInt 26266, stateTaxDue: makeFromInt 10243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24676, ordinaryIncomeNonSS: makeFromInt 95245, qualifiedIncome: makeFromInt 14042, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12903, stateTaxDue: makeFromInt 4989 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11226, itemizedDeductions: makeFromInt 20397, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 306 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22199, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7098, ordinaryIncomeNonSS: makeFromInt 138355, qualifiedIncome: makeFromInt 51260, itemizedDeductions: makeFromInt 26334, federalTaxDue: makeFromInt 28920, stateTaxDue: makeFromInt 9120 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46956, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21992, ordinaryIncomeNonSS: makeFromInt 91662, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14969, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127184, qualifiedIncome: makeFromInt 28487, itemizedDeductions: makeFromInt 20508, federalTaxDue: makeFromInt 18603, stateTaxDue: makeFromInt 7215 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9844, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12184, itemizedDeductions: makeFromInt 3682, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 234 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6018, qualifiedIncome: makeFromInt 11978, itemizedDeductions: makeFromInt 13245, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 367 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147, qualifiedIncome: makeFromInt 32246, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1145 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6636, ordinaryIncomeNonSS: makeFromInt 100017, qualifiedIncome: makeFromInt 83514, itemizedDeductions: makeFromInt 25164, federalTaxDue: makeFromInt 24353, stateTaxDue: makeFromInt 8602 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46840, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10385, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29155, stateTaxDue: makeFromInt 7344 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39790, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75866, qualifiedIncome: makeFromInt 39556, itemizedDeductions: makeFromInt 24672, federalTaxDue: makeFromInt 7555, stateTaxDue: makeFromInt 5384 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 242, itemizedDeductions: makeFromInt 16668, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7331, ordinaryIncomeNonSS: makeFromInt 36648, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1301, stateTaxDue: makeFromInt 1157 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37841, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1054, stateTaxDue: makeFromInt 1417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42375, ordinaryIncomeNonSS: makeFromInt 8765, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47604, ordinaryIncomeNonSS: makeFromInt 106938, qualifiedIncome: makeFromInt 38646, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24063, stateTaxDue: makeFromInt 6804 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41171, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12313, stateTaxDue: makeFromInt 6684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2776, ordinaryIncomeNonSS: makeFromInt 71792, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18060, federalTaxDue: makeFromInt 8782, stateTaxDue: makeFromInt 3437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29632, ordinaryIncomeNonSS: makeFromInt 134739, qualifiedIncome: makeFromInt 78280, itemizedDeductions: makeFromInt 19821, federalTaxDue: makeFromInt 37298, stateTaxDue: makeFromInt 10415 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87878, itemizedDeductions: makeFromInt 6654, federalTaxDue: makeFromInt 1797, stateTaxDue: makeFromInt 3829 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5141, ordinaryIncomeNonSS: makeFromInt 10422, qualifiedIncome: makeFromInt 29789, itemizedDeductions: makeFromInt 3944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1622 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16746, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31856, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47096, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94042, itemizedDeductions: makeFromInt 15596, federalTaxDue: makeFromInt 52131, stateTaxDue: makeFromInt 12099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44495, ordinaryIncomeNonSS: makeFromInt 71809, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3238, federalTaxDue: makeFromInt 13583, stateTaxDue: makeFromInt 3016 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7609, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25299, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59946, itemizedDeductions: makeFromInt 9989, federalTaxDue: makeFromInt 41583, stateTaxDue: makeFromInt 10279 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39814, ordinaryIncomeNonSS: makeFromInt 102847, qualifiedIncome: makeFromInt 42439, itemizedDeductions: makeFromInt 26278, federalTaxDue: makeFromInt 27039, stateTaxDue: makeFromInt 7115 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23190, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1004 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32487, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54486, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37775, stateTaxDue: makeFromInt 10104 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74992, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8167, stateTaxDue: makeFromInt 3495 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96098, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9947, stateTaxDue: makeFromInt 4452 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 41307, qualifiedIncome: makeFromInt 38581, itemizedDeductions: makeFromInt 6498, federalTaxDue: makeFromInt 15823, stateTaxDue: makeFromInt 3646 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 748, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49727, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47085, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 271, stateTaxDue: makeFromInt 2055 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37128, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96837, itemizedDeductions: makeFromInt 8138, federalTaxDue: makeFromInt 48090, stateTaxDue: makeFromInt 11967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23864, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23690, federalTaxDue: makeFromInt 37691, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38433, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23418, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73342, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10665, federalTaxDue: makeFromInt 10428, stateTaxDue: makeFromInt 3516 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46224, ordinaryIncomeNonSS: makeFromInt 76705, qualifiedIncome: makeFromInt 31389, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19807, stateTaxDue: makeFromInt 5030 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18610, ordinaryIncomeNonSS: makeFromInt 149230, qualifiedIncome: makeFromInt 55102, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31262, stateTaxDue: makeFromInt 9870 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83766, qualifiedIncome: makeFromInt 32453, itemizedDeductions: makeFromInt 16610, federalTaxDue: makeFromInt 6717, stateTaxDue: makeFromInt 5274 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32768, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17367, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20043, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 547 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35405, ordinaryIncomeNonSS: makeFromInt 14338, qualifiedIncome: makeFromInt 80876, itemizedDeductions: makeFromInt 6067, federalTaxDue: makeFromInt 3912, stateTaxDue: makeFromInt 4286 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54458, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3846, stateTaxDue: makeFromInt 2227 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20741, itemizedDeductions: makeFromInt 18466, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 405 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8444, ordinaryIncomeNonSS: makeFromInt 13083, qualifiedIncome: makeFromInt 40141, itemizedDeductions: makeFromInt 29569, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2406 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29329, ordinaryIncomeNonSS: makeFromInt 80832, qualifiedIncome: makeFromInt 67525, itemizedDeductions: makeFromInt 5074, federalTaxDue: makeFromInt 23479, stateTaxDue: makeFromInt 7015 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30223, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40379, ordinaryIncomeNonSS: makeFromInt 9921, qualifiedIncome: makeFromInt 43436, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2701, stateTaxDue: makeFromInt 2170 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3089, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21007, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51272, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10604, stateTaxDue: makeFromInt 2391 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87589, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5578, stateTaxDue: makeFromInt 3916 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21983, ordinaryIncomeNonSS: makeFromInt 100568, qualifiedIncome: makeFromInt 78732, itemizedDeductions: makeFromInt 21980, federalTaxDue: makeFromInt 28991, stateTaxDue: makeFromInt 8710 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9010, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24947, federalTaxDue: makeFromInt 25686, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1189, stateTaxDue: makeFromInt 1007 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121326, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28361, stateTaxDue: makeFromInt 10839 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12389, stateTaxDue: makeFromInt 5698 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44156, ordinaryIncomeNonSS: makeFromInt 72569, qualifiedIncome: makeFromInt 22650, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9130, stateTaxDue: makeFromInt 4203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20312, ordinaryIncomeNonSS: makeFromInt 98758, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27336, stateTaxDue: makeFromInt 9484 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6752, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77140, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 186, stateTaxDue: makeFromInt 3485 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3608, ordinaryIncomeNonSS: makeFromInt 40686, qualifiedIncome: makeFromInt 44894, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1730, stateTaxDue: makeFromInt 3804 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16133, qualifiedIncome: makeFromInt 10537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 707 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13107, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6606, federalTaxDue: makeFromInt 9116, stateTaxDue: makeFromInt 7200 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10020, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 46 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74721, itemizedDeductions: makeFromInt 28058, federalTaxDue: makeFromInt 5418, stateTaxDue: makeFromInt 3586 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3099, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56717, qualifiedIncome: makeFromInt 39211, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20323, stateTaxDue: makeFromInt 4541 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37428, ordinaryIncomeNonSS: makeFromInt 128977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24706, federalTaxDue: makeFromInt 42363, stateTaxDue: makeFromInt 11331 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105048, qualifiedIncome: makeFromInt 50055, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15587, stateTaxDue: makeFromInt 7080 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39129, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49527, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15761, federalTaxDue: makeFromInt 8962, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23156, ordinaryIncomeNonSS: makeFromInt 135657, qualifiedIncome: makeFromInt 94051, itemizedDeductions: makeFromInt 16064, federalTaxDue: makeFromInt 38649, stateTaxDue: makeFromInt 10910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21468, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44407, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1014, stateTaxDue: makeFromInt 1836 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145077, qualifiedIncome: makeFromInt 34888, itemizedDeductions: makeFromInt 28780, federalTaxDue: makeFromInt 31412, stateTaxDue: makeFromInt 8525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36558, ordinaryIncomeNonSS: makeFromInt 1357, qualifiedIncome: makeFromInt 19031, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32130, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29909, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43709, ordinaryIncomeNonSS: makeFromInt 82923, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29718, federalTaxDue: makeFromInt 29022, stateTaxDue: makeFromInt 8571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55016, qualifiedIncome: makeFromInt 200, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4123, stateTaxDue: makeFromInt 2243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144856, qualifiedIncome: makeFromInt 85944, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34917, stateTaxDue: makeFromInt 10965 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17443, itemizedDeductions: makeFromInt 6141, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 441 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30478, ordinaryIncomeNonSS: makeFromInt 45834, qualifiedIncome: makeFromInt 43849, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6505, stateTaxDue: makeFromInt 4009 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85605, qualifiedIncome: makeFromInt 20971, itemizedDeductions: makeFromInt 17575, federalTaxDue: makeFromInt 9192, stateTaxDue: makeFromInt 4885 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18430, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110885, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9154, federalTaxDue: makeFromInt 32287, stateTaxDue: makeFromInt 5431 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126407, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15467, federalTaxDue: makeFromInt 20461, stateTaxDue: makeFromInt 5865 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94321, itemizedDeductions: makeFromInt 25507, federalTaxDue: makeFromInt 5778, stateTaxDue: makeFromInt 4141 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 54503, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10419, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11719, federalTaxDue: makeFromInt 33046, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30903, ordinaryIncomeNonSS: makeFromInt 87842, qualifiedIncome: makeFromInt 3132, itemizedDeductions: makeFromInt 3570, federalTaxDue: makeFromInt 11252, stateTaxDue: makeFromInt 4074 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101594, qualifiedIncome: makeFromInt 98475, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22812, stateTaxDue: makeFromInt 9755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 325, ordinaryIncomeNonSS: makeFromInt 125651, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 489, federalTaxDue: makeFromInt 14812, stateTaxDue: makeFromInt 5755 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33645, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42428, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4154, stateTaxDue: makeFromInt 1939 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5928, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23271, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13481, ordinaryIncomeNonSS: makeFromInt 134939, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8446, federalTaxDue: makeFromInt 41382, stateTaxDue: makeFromInt 11642 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 21582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1221, stateTaxDue: makeFromInt 876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31893, itemizedDeductions: makeFromInt 3014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1402 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18349, ordinaryIncomeNonSS: makeFromInt 139344, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26281, federalTaxDue: makeFromInt 19315, stateTaxDue: makeFromInt 6292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63951, qualifiedIncome: makeFromInt 2985, itemizedDeductions: makeFromInt 24776, federalTaxDue: makeFromInt 2176, stateTaxDue: makeFromInt 2863 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25536, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16807, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120162, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14884, federalTaxDue: makeFromInt 16099, stateTaxDue: makeFromInt 5633 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9367, qualifiedIncome: makeFromInt 39534, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45654, ordinaryIncomeNonSS: makeFromInt 142745, qualifiedIncome: makeFromInt 68650, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43251, stateTaxDue: makeFromInt 10230 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20315, ordinaryIncomeNonSS: makeFromInt 113849, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1733, federalTaxDue: makeFromInt 33728, stateTaxDue: makeFromInt 10317 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21424, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26695, itemizedDeductions: makeFromInt 2420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 960 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13754, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43751, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 311, stateTaxDue: makeFromInt 1733 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28702, ordinaryIncomeNonSS: makeFromInt 52266, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29722, federalTaxDue: makeFromInt 5141, stateTaxDue: makeFromInt 2138 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9993, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22544, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34119, itemizedDeductions: makeFromInt 14961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1189 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7216, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36207, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1296 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30102, ordinaryIncomeNonSS: makeFromInt 11003, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9186, ordinaryIncomeNonSS: makeFromInt 135409, qualifiedIncome: makeFromInt 26993, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34288, stateTaxDue: makeFromInt 8058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17758, ordinaryIncomeNonSS: makeFromInt 42208, qualifiedIncome: makeFromInt 71292, itemizedDeductions: makeFromInt 11943, federalTaxDue: makeFromInt 11792, stateTaxDue: makeFromInt 5300 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145729, qualifiedIncome: makeFromInt 53208, itemizedDeductions: makeFromInt 6668, federalTaxDue: makeFromInt 43742, stateTaxDue: makeFromInt 9692 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50958, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2243, stateTaxDue: makeFromInt 2252 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16824, ordinaryIncomeNonSS: makeFromInt 114259, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1113, federalTaxDue: makeFromInt 18114, stateTaxDue: makeFromInt 5138 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14317, itemizedDeductions: makeFromInt 1568, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22163, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19686, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92940, qualifiedIncome: makeFromInt 50673, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31516, stateTaxDue: makeFromInt 6896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14495, itemizedDeductions: makeFromInt 6187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 290 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 2185, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45285, ordinaryIncomeNonSS: makeFromInt 134151, qualifiedIncome: makeFromInt 36514, itemizedDeductions: makeFromInt 12362, federalTaxDue: makeFromInt 38119, stateTaxDue: makeFromInt 8396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19997, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 5525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124332, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26402, federalTaxDue: makeFromInt 12581, stateTaxDue: makeFromInt 5542 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57397, qualifiedIncome: makeFromInt 47920, itemizedDeductions: makeFromInt 11720, federalTaxDue: makeFromInt 3361, stateTaxDue: makeFromInt 4791 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60668, itemizedDeductions: makeFromInt 12244, federalTaxDue: makeFromInt 1592, stateTaxDue: makeFromInt 2441 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48242, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28152, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15787, ordinaryIncomeNonSS: makeFromInt 58263, qualifiedIncome: makeFromInt 56288, itemizedDeductions: makeFromInt 13484, federalTaxDue: makeFromInt 17105, stateTaxDue: makeFromInt 5361 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22258, stateTaxDue: makeFromInt 7299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72498, itemizedDeductions: makeFromInt 14062, federalTaxDue: makeFromInt 5227, stateTaxDue: makeFromInt 3473 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60533, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2552 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39108, ordinaryIncomeNonSS: makeFromInt 75912, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14775, stateTaxDue: makeFromInt 3321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31961, ordinaryIncomeNonSS: makeFromInt 91128, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17510, federalTaxDue: makeFromInt 15726, stateTaxDue: makeFromInt 4199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41855, ordinaryIncomeNonSS: makeFromInt 88198, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7630, federalTaxDue: makeFromInt 19887, stateTaxDue: makeFromInt 4070 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37637, qualifiedIncome: makeFromInt 98100, itemizedDeductions: makeFromInt 27372, federalTaxDue: makeFromInt 21940, stateTaxDue: makeFromInt 6532 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23264, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34592, itemizedDeductions: makeFromInt 25039, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1255 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148565, qualifiedIncome: makeFromInt 61331, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42315, stateTaxDue: makeFromInt 10120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72159, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3264, stateTaxDue: makeFromInt 3129 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22965, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17059, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10810, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 5203 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117809, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13182, federalTaxDue: makeFromInt 31865, stateTaxDue: makeFromInt 10680 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16934, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48013, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1554, stateTaxDue: makeFromInt 2224 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8852, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98232, itemizedDeductions: makeFromInt 27268, federalTaxDue: makeFromInt 37829, stateTaxDue: makeFromInt 12211 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84953, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7759, stateTaxDue: makeFromInt 4108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33349, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 4514, itemizedDeductions: makeFromInt 14186, federalTaxDue: makeFromInt 35901, stateTaxDue: makeFromInt 7533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11237, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81784, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6478, stateTaxDue: makeFromInt 3743 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14065, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54489, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32481, stateTaxDue: makeFromInt 9649 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6317, ordinaryIncomeNonSS: makeFromInt 30409, qualifiedIncome: makeFromInt 52086, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 848, stateTaxDue: makeFromInt 3450 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20817, qualifiedIncome: makeFromInt 28365, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2136, stateTaxDue: makeFromInt 1855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26440, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 947 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15140, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89133, itemizedDeductions: makeFromInt 975, federalTaxDue: makeFromInt 5750, stateTaxDue: makeFromInt 3995 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7058, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26476, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15170, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95356, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7752, federalTaxDue: makeFromInt 8448, stateTaxDue: makeFromInt 4210 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4363, qualifiedIncome: makeFromInt 74110, itemizedDeductions: makeFromInt 26625, federalTaxDue: makeFromInt 3869, stateTaxDue: makeFromInt 3553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27826, itemizedDeductions: makeFromInt 25187, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 816 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10764, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48173, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21534, ordinaryIncomeNonSS: makeFromInt 48487, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20147, stateTaxDue: makeFromInt 7022 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11041, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31192, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13274, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25968, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25943, ordinaryIncomeNonSS: makeFromInt 142901, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19728, federalTaxDue: makeFromInt 36518, stateTaxDue: makeFromInt 11670 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41065, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7039, federalTaxDue: makeFromInt 11280, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57736, itemizedDeductions: makeFromInt 23800, federalTaxDue: makeFromInt 3013, stateTaxDue: makeFromInt 2516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117512, qualifiedIncome: makeFromInt 6168, itemizedDeductions: makeFromInt 3755, federalTaxDue: makeFromInt 17683, stateTaxDue: makeFromInt 5859 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23245, ordinaryIncomeNonSS: makeFromInt 25900, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11355, stateTaxDue: makeFromInt 5972 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 996, itemizedDeductions: makeFromInt 12137, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24786, federalTaxDue: makeFromInt 22427, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48611, ordinaryIncomeNonSS: makeFromInt 137902, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30779, stateTaxDue: makeFromInt 6320 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44066, ordinaryIncomeNonSS: makeFromInt 44261, qualifiedIncome: makeFromInt 38485, itemizedDeductions: makeFromInt 7522, federalTaxDue: makeFromInt 16450, stateTaxDue: makeFromInt 3882 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46728, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94440, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 47954, stateTaxDue: makeFromInt 11847 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120582, qualifiedIncome: makeFromInt 84800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40870, stateTaxDue: makeFromInt 10026 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30308, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31332, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84576, qualifiedIncome: makeFromInt 66295, itemizedDeductions: makeFromInt 4889, federalTaxDue: makeFromInt 20934, stateTaxDue: makeFromInt 7289 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41325, itemizedDeductions: makeFromInt 10354, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1691 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22094, ordinaryIncomeNonSS: makeFromInt 100968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20276, federalTaxDue: makeFromInt 12694, stateTaxDue: makeFromInt 4452 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23951, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68501, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46252, ordinaryIncomeNonSS: makeFromInt 96872, qualifiedIncome: makeFromInt 92467, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35207, stateTaxDue: makeFromInt 9207 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36962, itemizedDeductions: makeFromInt 13790, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1334 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34867, qualifiedIncome: makeFromInt 18832, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 487, stateTaxDue: makeFromInt 2310 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11150, ordinaryIncomeNonSS: makeFromInt 86509, qualifiedIncome: makeFromInt 71915, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20921, stateTaxDue: makeFromInt 7466 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96465, itemizedDeductions: makeFromInt 22175, federalTaxDue: makeFromInt 32698, stateTaxDue: makeFromInt 11648 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10902, ordinaryIncomeNonSS: makeFromInt 102177, qualifiedIncome: makeFromInt 9556, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15946, stateTaxDue: makeFromInt 5012 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97536, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 44853, stateTaxDue: makeFromInt 12074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18374, ordinaryIncomeNonSS: makeFromInt 123662, qualifiedIncome: makeFromInt 38320, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30280, stateTaxDue: makeFromInt 7833 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49267, ordinaryIncomeNonSS: makeFromInt 48975, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9053, stateTaxDue: makeFromInt 1874 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88210, itemizedDeductions: makeFromInt 19525, federalTaxDue: makeFromInt 5672, stateTaxDue: makeFromInt 3948 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 43242, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1884, stateTaxDue: makeFromInt 1739 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125781, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12951, stateTaxDue: makeFromInt 5762 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49675, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2077, stateTaxDue: makeFromInt 2109 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22032, stateTaxDue: makeFromInt 6869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107835, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11355, federalTaxDue: makeFromInt 31188, stateTaxDue: makeFromInt 10137 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135737, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16964, stateTaxDue: makeFromInt 6474 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48363, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1607, stateTaxDue: makeFromInt 2242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16092, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21237, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30614, ordinaryIncomeNonSS: makeFromInt 56584, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6536, stateTaxDue: makeFromInt 2233 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1939, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32430, stateTaxDue: makeFromInt 7524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110690, qualifiedIncome: makeFromInt 59091, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23916, stateTaxDue: makeFromInt 8210 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24391, ordinaryIncomeNonSS: makeFromInt 105402, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18038, stateTaxDue: makeFromInt 4895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39507, ordinaryIncomeNonSS: makeFromInt 78471, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11343, stateTaxDue: makeFromInt 3349 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12065, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77090, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31243, itemizedDeductions: makeFromInt 17148, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1043 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25913, qualifiedIncome: makeFromInt 16137, itemizedDeductions: makeFromInt 8924, federalTaxDue: makeFromInt 1479, stateTaxDue: makeFromInt 1920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44093, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60350, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43666, stateTaxDue: makeFromInt 10177 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8972, qualifiedIncome: makeFromInt 69867, itemizedDeductions: makeFromInt 10372, federalTaxDue: makeFromInt 4229, stateTaxDue: makeFromInt 3487 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44307, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5088, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2261, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28211, itemizedDeductions: makeFromInt 14864, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1214 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23118, federalTaxDue: makeFromInt 27375, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32150, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9798, stateTaxDue: makeFromInt 6033 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25553, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28141, itemizedDeductions: makeFromInt 17968, federalTaxDue: makeFromInt 33200, stateTaxDue: makeFromInt 8532 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26923, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6220, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47740, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2066, stateTaxDue: makeFromInt 1884 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42421, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23049, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5627, ordinaryIncomeNonSS: makeFromInt 81712, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7063, stateTaxDue: makeFromInt 3480 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15105, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6501, itemizedDeductions: makeFromInt 10178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117055, qualifiedIncome: makeFromInt 90888, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24664, stateTaxDue: makeFromInt 10156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96926, itemizedDeductions: makeFromInt 12716, federalTaxDue: makeFromInt 3244, stateTaxDue: makeFromInt 4290 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23831, ordinaryIncomeNonSS: makeFromInt 66488, qualifiedIncome: makeFromInt 76287, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10169, stateTaxDue: makeFromInt 6629 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24201, ordinaryIncomeNonSS: makeFromInt 141132, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10743, federalTaxDue: makeFromInt 30055, stateTaxDue: makeFromInt 6703 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2762, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16422, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16611, itemizedDeductions: makeFromInt 26592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36890, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2108, stateTaxDue: makeFromInt 1433 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 231, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20736, qualifiedIncome: makeFromInt 45373, itemizedDeductions: makeFromInt 17778, federalTaxDue: makeFromInt 1545, stateTaxDue: makeFromInt 2850 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4465, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129905, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3400, federalTaxDue: makeFromInt 38412, stateTaxDue: makeFromInt 6401 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29998, ordinaryIncomeNonSS: makeFromInt 101251, qualifiedIncome: makeFromInt 82326, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34015, stateTaxDue: makeFromInt 9048 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27778, qualifiedIncome: makeFromInt 41209, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2974 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149119, qualifiedIncome: makeFromInt 84132, itemizedDeductions: makeFromInt 19461, federalTaxDue: makeFromInt 35668, stateTaxDue: makeFromInt 11088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20395, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65072, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4113, stateTaxDue: makeFromInt 2890 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28740, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70253, itemizedDeductions: makeFromInt 4995, federalTaxDue: makeFromInt 28766, stateTaxDue: makeFromInt 10338 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80997, qualifiedIncome: makeFromInt 34187, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22912, stateTaxDue: makeFromInt 5324 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35293, ordinaryIncomeNonSS: makeFromInt 64004, qualifiedIncome: makeFromInt 14336, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12617, stateTaxDue: makeFromInt 3342 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44144, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14032, stateTaxDue: makeFromInt 7005 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22542, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18957, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48658, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12052, federalTaxDue: makeFromInt 24519, stateTaxDue: makeFromInt 7058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34013, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9292, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 90 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15249, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 431 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39268, itemizedDeductions: makeFromInt 16028, federalTaxDue: makeFromInt 3624, stateTaxDue: makeFromInt 1761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27769, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 26235, itemizedDeductions: makeFromInt 27156, federalTaxDue: makeFromInt 32918, stateTaxDue: makeFromInt 8357 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30126, ordinaryIncomeNonSS: makeFromInt 149549, qualifiedIncome: makeFromInt 57028, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37852, stateTaxDue: makeFromInt 9954 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37344, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28435, ordinaryIncomeNonSS: makeFromInt 84748, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10560, stateTaxDue: makeFromInt 3669 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73475, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3094 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31471, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22085, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140182, qualifiedIncome: makeFromInt 77261, itemizedDeductions: makeFromInt 23527, federalTaxDue: makeFromInt 33608, stateTaxDue: makeFromInt 10617 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45406, ordinaryIncomeNonSS: makeFromInt 113828, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32817, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43782, ordinaryIncomeNonSS: makeFromInt 37336, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14844, stateTaxDue: makeFromInt 6192 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23643, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13780, ordinaryIncomeNonSS: makeFromInt 15235, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 345 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5306, ordinaryIncomeNonSS: makeFromInt 103036, qualifiedIncome: makeFromInt 16416, itemizedDeductions: makeFromInt 18003, federalTaxDue: makeFromInt 14038, stateTaxDue: makeFromInt 5541 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78132, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5720, stateTaxDue: makeFromInt 3452 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22751, itemizedDeductions: makeFromInt 22343, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 683 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37228, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12745, federalTaxDue: makeFromInt 2599, stateTaxDue: makeFromInt 1674 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61664, qualifiedIncome: makeFromInt 78228, itemizedDeductions: makeFromInt 17293, federalTaxDue: makeFromInt 17553, stateTaxDue: makeFromInt 6910 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43570, ordinaryIncomeNonSS: makeFromInt 108856, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28677, federalTaxDue: makeFromInt 19833, stateTaxDue: makeFromInt 5103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49939, qualifiedIncome: makeFromInt 81229, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14939, stateTaxDue: makeFromInt 6343 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 148077, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40846, stateTaxDue: makeFromInt 11949 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53205, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2613, stateTaxDue: makeFromInt 2205 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13496, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21278, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18866, qualifiedIncome: makeFromInt 47185, itemizedDeductions: makeFromInt 19913, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2628 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36742, ordinaryIncomeNonSS: makeFromInt 44756, qualifiedIncome: makeFromInt 61503, itemizedDeductions: makeFromInt 7379, federalTaxDue: makeFromInt 9944, stateTaxDue: makeFromInt 4766 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22654, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36028, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10672, ordinaryIncomeNonSS: makeFromInt 70476, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17889, federalTaxDue: makeFromInt 6091, stateTaxDue: makeFromInt 3166 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35001, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20242, federalTaxDue: makeFromInt 24773, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13922, ordinaryIncomeNonSS: makeFromInt 15020, qualifiedIncome: makeFromInt 46760, itemizedDeductions: makeFromInt 7317, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64319, qualifiedIncome: makeFromInt 53182, itemizedDeductions: makeFromInt 22431, federalTaxDue: makeFromInt 10624, stateTaxDue: makeFromInt 5500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23832, ordinaryIncomeNonSS: makeFromInt 84400, qualifiedIncome: makeFromInt 82032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 8060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89562, qualifiedIncome: makeFromInt 34582, itemizedDeductions: makeFromInt 22365, federalTaxDue: makeFromInt 10581, stateTaxDue: makeFromInt 5623 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22747, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19313, itemizedDeductions: makeFromInt 3135, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31986, ordinaryIncomeNonSS: makeFromInt 24001, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22541, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 796 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70183, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4880, stateTaxDue: makeFromInt 3151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86659, itemizedDeductions: makeFromInt 16160, federalTaxDue: makeFromInt 38956, stateTaxDue: makeFromInt 11378 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36681, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25537, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42843, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14407, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28250, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 890 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44720, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7448, stateTaxDue: makeFromInt 6761 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32406, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15349, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 6202 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138022, qualifiedIncome: makeFromInt 53653, itemizedDeductions: makeFromInt 10443, federalTaxDue: makeFromInt 34362, stateTaxDue: makeFromInt 9327 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8891, stateTaxDue: makeFromInt 4566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22658, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40551, itemizedDeductions: makeFromInt 6260, federalTaxDue: makeFromInt 971, stateTaxDue: makeFromInt 1773 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35025, itemizedDeductions: makeFromInt 78, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1176 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4571, ordinaryIncomeNonSS: makeFromInt 75544, qualifiedIncome: makeFromInt 13621, itemizedDeductions: makeFromInt 1274, federalTaxDue: makeFromInt 10106, stateTaxDue: makeFromInt 4201 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31837, ordinaryIncomeNonSS: makeFromInt 46393, qualifiedIncome: makeFromInt 86425, itemizedDeductions: makeFromInt 24870, federalTaxDue: makeFromInt 19442, stateTaxDue: makeFromInt 6186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46893, ordinaryIncomeNonSS: makeFromInt 5416, qualifiedIncome: makeFromInt 3052, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 85 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1829, ordinaryIncomeNonSS: makeFromInt 94394, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24415, federalTaxDue: makeFromInt 26354, stateTaxDue: makeFromInt 9265 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52569, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8674, stateTaxDue: makeFromInt 2173 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45695, ordinaryIncomeNonSS: makeFromInt 137517, qualifiedIncome: makeFromInt 61992, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43146, stateTaxDue: makeFromInt 9853 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23573, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10696, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58846, qualifiedIncome: makeFromInt 68495, itemizedDeductions: makeFromInt 17022, federalTaxDue: makeFromInt 15224, stateTaxDue: makeFromInt 6112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 92408, qualifiedIncome: makeFromInt 48576, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13597, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87046, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36317, stateTaxDue: makeFromInt 11277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20036, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76855, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3158, stateTaxDue: makeFromInt 3468 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37339, ordinaryIncomeNonSS: makeFromInt 21775, qualifiedIncome: makeFromInt 4427, itemizedDeductions: makeFromInt 8883, federalTaxDue: makeFromInt 1437, stateTaxDue: makeFromInt 735 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8620, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19869, itemizedDeductions: makeFromInt 3339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 789 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26934, federalTaxDue: makeFromInt 20002, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65233, itemizedDeductions: makeFromInt 15406, federalTaxDue: makeFromInt 4381, stateTaxDue: makeFromInt 2878 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5705, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16672, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 299 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 8042, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13035, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 147 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 120415, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10296, federalTaxDue: makeFromInt 27678, stateTaxDue: makeFromInt 5794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28109, ordinaryIncomeNonSS: makeFromInt 71584, qualifiedIncome: makeFromInt 54000, itemizedDeductions: makeFromInt 28724, federalTaxDue: makeFromInt 13210, stateTaxDue: makeFromInt 5604 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114209, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8735, federalTaxDue: makeFromInt 17718, stateTaxDue: makeFromInt 5456 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72400, itemizedDeductions: makeFromInt 5652, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3040 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29643, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6062, itemizedDeductions: makeFromInt 19044, federalTaxDue: makeFromInt 31999, stateTaxDue: makeFromInt 7531 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115705, qualifiedIncome: makeFromInt 16476, itemizedDeductions: makeFromInt 11384, federalTaxDue: makeFromInt 21650, stateTaxDue: makeFromInt 6517 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44337, ordinaryIncomeNonSS: makeFromInt 117916, qualifiedIncome: makeFromInt 55380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34118, stateTaxDue: makeFromInt 8287 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141626, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24591, stateTaxDue: makeFromInt 6626 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48021, ordinaryIncomeNonSS: makeFromInt 127207, qualifiedIncome: makeFromInt 34133, itemizedDeductions: makeFromInt 5094, federalTaxDue: makeFromInt 34506, stateTaxDue: makeFromInt 7780 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 85680, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33955, stateTaxDue: makeFromInt 8919 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20478, itemizedDeductions: makeFromInt 2100, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 820 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68884, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43144, stateTaxDue: makeFromInt 10735 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47113, ordinaryIncomeNonSS: makeFromInt 103893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24917, federalTaxDue: makeFromInt 22401, stateTaxDue: makeFromInt 4940 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41773, ordinaryIncomeNonSS: makeFromInt 120483, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20667, stateTaxDue: makeFromInt 5640 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139450, qualifiedIncome: makeFromInt 31869, itemizedDeductions: makeFromInt 11650, federalTaxDue: makeFromInt 28556, stateTaxDue: makeFromInt 8311 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16205, ordinaryIncomeNonSS: makeFromInt 141034, qualifiedIncome: makeFromInt 89547, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46917, stateTaxDue: makeFromInt 11535 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38618, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32962, stateTaxDue: makeFromInt 9529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6236, ordinaryIncomeNonSS: makeFromInt 121707, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9980, federalTaxDue: makeFromInt 20134, stateTaxDue: makeFromInt 5779 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45597, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31211, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1102, stateTaxDue: makeFromInt 1354 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47677, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40002, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44828, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4059, stateTaxDue: makeFromInt 1939 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40168, ordinaryIncomeNonSS: makeFromInt 128017, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21294, federalTaxDue: makeFromInt 21696, stateTaxDue: makeFromInt 5876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36041, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2080, federalTaxDue: makeFromInt 33660, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8558, ordinaryIncomeNonSS: makeFromInt 48589, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3933, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17883, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81450, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14667, federalTaxDue: makeFromInt 6513, stateTaxDue: makeFromInt 3501 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37685, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56232, itemizedDeductions: makeFromInt 25197, federalTaxDue: makeFromInt 37072, stateTaxDue: makeFromInt 9967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9653, ordinaryIncomeNonSS: makeFromInt 42655, qualifiedIncome: makeFromInt 77165, itemizedDeductions: makeFromInt 14064, federalTaxDue: makeFromInt 4416, stateTaxDue: makeFromInt 5458 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57075, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29091, stateTaxDue: makeFromInt 10112 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32306, ordinaryIncomeNonSS: makeFromInt 63962, qualifiedIncome: makeFromInt 68377, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13927, stateTaxDue: makeFromInt 6142 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102816, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8811, stateTaxDue: makeFromInt 4666 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98295, itemizedDeductions: makeFromInt 4855, federalTaxDue: makeFromInt 6374, stateTaxDue: makeFromInt 4540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21425, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120557, qualifiedIncome: makeFromInt 92910, itemizedDeductions: makeFromInt 868, federalTaxDue: makeFromInt 33178, stateTaxDue: makeFromInt 10218 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115421, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10027, stateTaxDue: makeFromInt 5296 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75814, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19151, federalTaxDue: makeFromInt 33089, stateTaxDue: makeFromInt 8538 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102587, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9112, federalTaxDue: makeFromInt 24168, stateTaxDue: makeFromInt 9679 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23045, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39937, ordinaryIncomeNonSS: makeFromInt 23302, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 613, stateTaxDue: makeFromInt 638 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29321, qualifiedIncome: makeFromInt 57619, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2316, stateTaxDue: makeFromInt 3772 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43264, ordinaryIncomeNonSS: makeFromInt 149774, qualifiedIncome: makeFromInt 70309, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36815, stateTaxDue: makeFromInt 10529 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53010, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12550, stateTaxDue: makeFromInt 7276 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15705, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36835, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16369, itemizedDeductions: makeFromInt 3063, federalTaxDue: makeFromInt 39583, stateTaxDue: makeFromInt 8063 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9660, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73550, qualifiedIncome: makeFromInt 52604, itemizedDeductions: makeFromInt 23492, federalTaxDue: makeFromInt 4610, stateTaxDue: makeFromInt 5781 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89041, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13573, stateTaxDue: makeFromInt 3777 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122464, qualifiedIncome: makeFromInt 17426, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16560, stateTaxDue: makeFromInt 6482 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30097, ordinaryIncomeNonSS: makeFromInt 122034, qualifiedIncome: makeFromInt 85925, itemizedDeductions: makeFromInt 29203, federalTaxDue: makeFromInt 37947, stateTaxDue: makeFromInt 10382 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145072, qualifiedIncome: makeFromInt 9239, itemizedDeductions: makeFromInt 14364, federalTaxDue: makeFromInt 24553, stateTaxDue: makeFromInt 7449 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20908, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4758, ordinaryIncomeNonSS: makeFromInt 130462, qualifiedIncome: makeFromInt 9931, itemizedDeductions: makeFromInt 4841, federalTaxDue: makeFromInt 17430, stateTaxDue: makeFromInt 6645 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25150, stateTaxDue: makeFromInt 7004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31704, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14498, itemizedDeductions: makeFromInt 5615, federalTaxDue: makeFromInt 26331, stateTaxDue: makeFromInt 7550 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48114, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50314, itemizedDeductions: makeFromInt 23035, federalTaxDue: makeFromInt 5351, stateTaxDue: makeFromInt 2061 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5162, ordinaryIncomeNonSS: makeFromInt 12450, qualifiedIncome: makeFromInt 49082, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18605, itemizedDeductions: makeFromInt 3203, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 455 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20179, ordinaryIncomeNonSS: makeFromInt 124466, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 204, federalTaxDue: makeFromInt 24589, stateTaxDue: makeFromInt 5768 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3721, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82145, itemizedDeductions: makeFromInt 28245, federalTaxDue: makeFromInt 7516, stateTaxDue: makeFromInt 3532 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68179, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38882, stateTaxDue: makeFromInt 10780 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44294, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29412, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42111, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74690, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9633, stateTaxDue: makeFromInt 3462 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12487, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47889, itemizedDeductions: makeFromInt 11777, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1790 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18626, ordinaryIncomeNonSS: makeFromInt 34324, qualifiedIncome: makeFromInt 19296, itemizedDeductions: makeFromInt 5755, federalTaxDue: makeFromInt 6011, stateTaxDue: makeFromInt 2426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45878, ordinaryIncomeNonSS: makeFromInt 69538, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25391, federalTaxDue: makeFromInt 12640, stateTaxDue: makeFromInt 3102 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45619, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2442, stateTaxDue: makeFromInt 1674 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63687, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3763, stateTaxDue: makeFromInt 2820 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36096, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21944, itemizedDeductions: makeFromInt 13672, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 895 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12789, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8071, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23661, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69864, itemizedDeductions: makeFromInt 18182, federalTaxDue: makeFromInt 4902, stateTaxDue: makeFromInt 3038 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120188, qualifiedIncome: makeFromInt 84757, itemizedDeductions: makeFromInt 26142, federalTaxDue: makeFromInt 29459, stateTaxDue: makeFromInt 9926 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11534, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6814, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50739, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28523, stateTaxDue: makeFromInt 9809 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27421, ordinaryIncomeNonSS: makeFromInt 53323, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22438, federalTaxDue: makeFromInt 7781, stateTaxDue: makeFromInt 2471 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82260, itemizedDeductions: makeFromInt 26894, federalTaxDue: makeFromInt 4427, stateTaxDue: makeFromInt 3811 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49703, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7586, stateTaxDue: makeFromInt 2030 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8518, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50317, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1488, stateTaxDue: makeFromInt 2261 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114024, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11434, stateTaxDue: makeFromInt 5314 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9696, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8850, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72256, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9024, stateTaxDue: makeFromInt 3338 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120951, qualifiedIncome: makeFromInt 737, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13557, stateTaxDue: makeFromInt 5778 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35722, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4066, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12066, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 56371, itemizedDeductions: makeFromInt 7024, federalTaxDue: makeFromInt 35057, stateTaxDue: makeFromInt 9864 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9787, qualifiedIncome: makeFromInt 63880, itemizedDeductions: makeFromInt 2582, federalTaxDue: makeFromInt 3935, stateTaxDue: makeFromInt 3329 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89849, itemizedDeductions: makeFromInt 3775, federalTaxDue: makeFromInt 36737, stateTaxDue: makeFromInt 11617 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121843, qualifiedIncome: makeFromInt 24347, itemizedDeductions: makeFromInt 10359, federalTaxDue: makeFromInt 24304, stateTaxDue: makeFromInt 7231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55358, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7023, stateTaxDue: makeFromInt 2599 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42650, ordinaryIncomeNonSS: makeFromInt 22424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1165, stateTaxDue: makeFromInt 695 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44008, qualifiedIncome: makeFromInt 50583, itemizedDeductions: makeFromInt 3242, federalTaxDue: makeFromInt 18348, stateTaxDue: makeFromInt 4396 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39128, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23513, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 750 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1361, ordinaryIncomeNonSS: makeFromInt 57198, qualifiedIncome: makeFromInt 69398, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11609, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23558, ordinaryIncomeNonSS: makeFromInt 28155, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1547, stateTaxDue: makeFromInt 987 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73595, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6905, federalTaxDue: makeFromInt 6000, stateTaxDue: makeFromInt 3305 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 914, ordinaryIncomeNonSS: makeFromInt 31819, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 466, stateTaxDue: makeFromInt 1116 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28219, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26432, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20029, federalTaxDue: makeFromInt 6959, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3728, ordinaryIncomeNonSS: makeFromInt 18831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11668, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1672, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29255, ordinaryIncomeNonSS: makeFromInt 15074, qualifiedIncome: makeFromInt 44426, itemizedDeductions: makeFromInt 22115, federalTaxDue: makeFromInt 1264, stateTaxDue: makeFromInt 2500 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86413, qualifiedIncome: makeFromInt 34190, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13603, stateTaxDue: makeFromInt 5655 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38209, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19236, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60069, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12258, federalTaxDue: makeFromInt 17304, stateTaxDue: makeFromInt 2839 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 8512, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16437, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 87 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20773, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12097, ordinaryIncomeNonSS: makeFromInt 89568, qualifiedIncome: makeFromInt 25545, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13547, stateTaxDue: makeFromInt 5181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38202, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10359, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39724, qualifiedIncome: makeFromInt 58634, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10711, stateTaxDue: makeFromInt 4243 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3888, stateTaxDue: makeFromInt 3408 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12740, ordinaryIncomeNonSS: makeFromInt 147188, qualifiedIncome: makeFromInt 4973, itemizedDeductions: makeFromInt 17565, federalTaxDue: makeFromInt 27439, stateTaxDue: makeFromInt 7332 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30821, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10293, itemizedDeductions: makeFromInt 25472, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13217, qualifiedIncome: makeFromInt 14668, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38328, ordinaryIncomeNonSS: makeFromInt 124193, qualifiedIncome: makeFromInt 62268, itemizedDeductions: makeFromInt 9051, federalTaxDue: makeFromInt 38069, stateTaxDue: makeFromInt 9081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39767, ordinaryIncomeNonSS: makeFromInt 26786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3643, stateTaxDue: makeFromInt 1019 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66772, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1646, stateTaxDue: makeFromInt 2764 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70782, qualifiedIncome: makeFromInt 51440, itemizedDeductions: makeFromInt 9715, federalTaxDue: makeFromInt 25611, stateTaxDue: makeFromInt 5656 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37128, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147669, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46486, stateTaxDue: makeFromInt 12407 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45669, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13866, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70928, itemizedDeductions: makeFromInt 16282, federalTaxDue: makeFromInt 39316, stateTaxDue: makeFromInt 10615 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20682, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55123, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2621, stateTaxDue: makeFromInt 2587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27424, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11823, federalTaxDue: makeFromInt 32583, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134398, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22563, stateTaxDue: makeFromInt 6265 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44082, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9023, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 988, ordinaryIncomeNonSS: makeFromInt 145417, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 833, federalTaxDue: makeFromInt 19894, stateTaxDue: makeFromInt 6763 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130272, qualifiedIncome: makeFromInt 28877, itemizedDeductions: makeFromInt 3820, federalTaxDue: makeFromInt 34375, stateTaxDue: makeFromInt 7770 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5367, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 70383, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32399, stateTaxDue: makeFromInt 8264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16243, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120580, qualifiedIncome: makeFromInt 12094, itemizedDeductions: makeFromInt 6443, federalTaxDue: makeFromInt 13570, stateTaxDue: makeFromInt 6159 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23601, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54181, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2234 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2866, itemizedDeductions: makeFromInt 29280, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93494, qualifiedIncome: makeFromInt 6361, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10540, stateTaxDue: makeFromInt 4738 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77194, itemizedDeductions: makeFromInt 11226, federalTaxDue: makeFromInt 4019, stateTaxDue: makeFromInt 3386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44068, ordinaryIncomeNonSS: makeFromInt 145604, qualifiedIncome: makeFromInt 39307, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30641, stateTaxDue: makeFromInt 8778 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117441, qualifiedIncome: makeFromInt 71896, itemizedDeductions: makeFromInt 11643, federalTaxDue: makeFromInt 26230, stateTaxDue: makeFromInt 8892 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35476, ordinaryIncomeNonSS: makeFromInt 103803, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5824, federalTaxDue: makeFromInt 37457, stateTaxDue: makeFromInt 9935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23725, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22958, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82896, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28762, federalTaxDue: makeFromInt 7849, stateTaxDue: makeFromInt 3799 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47414, ordinaryIncomeNonSS: makeFromInt 10365, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 458, stateTaxDue: makeFromInt 304 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24603, ordinaryIncomeNonSS: makeFromInt 140472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24286, stateTaxDue: makeFromInt 6750 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35883, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37452, stateTaxDue: makeFromInt 9256 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 175 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126062, qualifiedIncome: makeFromInt 29784, itemizedDeductions: makeFromInt 1187, federalTaxDue: makeFromInt 35230, stateTaxDue: makeFromInt 7537 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22540, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97476, itemizedDeductions: makeFromInt 21753, federalTaxDue: makeFromInt 6709, stateTaxDue: makeFromInt 4579 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20397, ordinaryIncomeNonSS: makeFromInt 674, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1431, federalTaxDue: makeFromInt 8605, stateTaxDue: makeFromInt 4788 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34910, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10257, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28321, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20728, stateTaxDue: makeFromInt 8442 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50441, qualifiedIncome: makeFromInt 60122, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9493, stateTaxDue: makeFromInt 5038 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63973, qualifiedIncome: makeFromInt 61842, itemizedDeductions: makeFromInt 25282, federalTaxDue: makeFromInt 2502, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54974, qualifiedIncome: makeFromInt 79341, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13600, stateTaxDue: makeFromInt 6440 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98934, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13129, federalTaxDue: makeFromInt 8185, stateTaxDue: makeFromInt 4272 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1102, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70502, itemizedDeductions: makeFromInt 27302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2850 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114741, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18290, stateTaxDue: makeFromInt 5199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 82264, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6570, stateTaxDue: makeFromInt 3849 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10994, ordinaryIncomeNonSS: makeFromInt 27548, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15657, federalTaxDue: makeFromInt 4896, stateTaxDue: makeFromInt 5702 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106141, qualifiedIncome: makeFromInt 94212, itemizedDeductions: makeFromInt 2689, federalTaxDue: makeFromInt 30313, stateTaxDue: makeFromInt 9563 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21137, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94640, itemizedDeductions: makeFromInt 26886, federalTaxDue: makeFromInt 7945, stateTaxDue: makeFromInt 4477 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33117, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2382, stateTaxDue: makeFromInt 981 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90695, qualifiedIncome: makeFromInt 42010, itemizedDeductions: makeFromInt 17380, federalTaxDue: makeFromInt 28387, stateTaxDue: makeFromInt 6340 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12516, ordinaryIncomeNonSS: makeFromInt 64633, qualifiedIncome: makeFromInt 42561, itemizedDeductions: makeFromInt 7890, federalTaxDue: makeFromInt 15327, stateTaxDue: makeFromInt 4905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129724, qualifiedIncome: makeFromInt 2484, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29454, stateTaxDue: makeFromInt 6396 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28925, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44518, itemizedDeductions: makeFromInt 4809, federalTaxDue: makeFromInt 429, stateTaxDue: makeFromInt 1851 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35027, ordinaryIncomeNonSS: makeFromInt 71148, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27140, stateTaxDue: makeFromInt 8178 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5503, ordinaryIncomeNonSS: makeFromInt 53690, qualifiedIncome: makeFromInt 30953, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3639, stateTaxDue: makeFromInt 3857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44699, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17939, federalTaxDue: makeFromInt 39518, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48531, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11764, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94776, qualifiedIncome: makeFromInt 30742, itemizedDeductions: makeFromInt 13920, federalTaxDue: makeFromInt 14061, stateTaxDue: makeFromInt 5851 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36396, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15120, itemizedDeductions: makeFromInt 28236, federalTaxDue: makeFromInt 30908, stateTaxDue: makeFromInt 7972 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37414, ordinaryIncomeNonSS: makeFromInt 144493, qualifiedIncome: makeFromInt 26304, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33516, stateTaxDue: makeFromInt 7965 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 4486, qualifiedIncome: makeFromInt 52890, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1682, stateTaxDue: makeFromInt 2614 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89262, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24102, stateTaxDue: makeFromInt 9088 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11968, ordinaryIncomeNonSS: makeFromInt 141906, qualifiedIncome: makeFromInt 56047, itemizedDeductions: makeFromInt 7087, federalTaxDue: makeFromInt 32166, stateTaxDue: makeFromInt 9323 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11730, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101159, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19990, federalTaxDue: makeFromInt 26001, stateTaxDue: makeFromInt 9831 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1923 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45488, ordinaryIncomeNonSS: makeFromInt 143519, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27258, stateTaxDue: makeFromInt 6769 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15583, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44886, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19749, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10764, federalTaxDue: makeFromInt 44077, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36788, ordinaryIncomeNonSS: makeFromInt 102196, qualifiedIncome: makeFromInt 24763, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26347, stateTaxDue: makeFromInt 5893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28028, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46694, ordinaryIncomeNonSS: makeFromInt 43601, qualifiedIncome: makeFromInt 44386, itemizedDeductions: makeFromInt 21594, federalTaxDue: makeFromInt 15848, stateTaxDue: makeFromInt 3944 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2696, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93003, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8044, stateTaxDue: makeFromInt 4273 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128674, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6785, federalTaxDue: makeFromInt 18142, stateTaxDue: makeFromInt 6059 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45120, ordinaryIncomeNonSS: makeFromInt 33142, qualifiedIncome: makeFromInt 56387, itemizedDeductions: makeFromInt 21585, federalTaxDue: makeFromInt 13906, stateTaxDue: makeFromInt 4219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1457, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32481, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 81293, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18328, stateTaxDue: makeFromInt 3697 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21537, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5571 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15248, ordinaryIncomeNonSS: makeFromInt 43380, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10296, federalTaxDue: makeFromInt 16627, stateTaxDue: makeFromInt 6884 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2727, ordinaryIncomeNonSS: makeFromInt 9890, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56647, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10752, stateTaxDue: makeFromInt 2461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14022, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34265, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15228, qualifiedIncome: makeFromInt 47261, itemizedDeductions: makeFromInt 920, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2534 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24222, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4275, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27766, ordinaryIncomeNonSS: makeFromInt 20580, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 601 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30340, itemizedDeductions: makeFromInt 12296, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13560, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9133, federalTaxDue: makeFromInt 46882, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31978, qualifiedIncome: makeFromInt 59799, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2017, stateTaxDue: makeFromInt 4130 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21185, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8603, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 55 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23179, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42989, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113910, qualifiedIncome: makeFromInt 34786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27251, stateTaxDue: makeFromInt 7359 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1084, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66452, itemizedDeductions: makeFromInt 2359, federalTaxDue: makeFromInt 2213, stateTaxDue: makeFromInt 3042 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25152, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11571, itemizedDeductions: makeFromInt 208, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 141 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13222, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97437, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2496, stateTaxDue: makeFromInt 4197 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15495, ordinaryIncomeNonSS: makeFromInt 26744, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 69, stateTaxDue: makeFromInt 862 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20624, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84698, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4950, stateTaxDue: makeFromInt 3769 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106317, qualifiedIncome: makeFromInt 34736, itemizedDeductions: makeFromInt 13773, federalTaxDue: makeFromInt 18064, stateTaxDue: makeFromInt 6678 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6869, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6458, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16767, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 406 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49936, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42522, itemizedDeductions: makeFromInt 9810, federalTaxDue: makeFromInt 782, stateTaxDue: makeFromInt 1720 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17309, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7921, federalTaxDue: makeFromInt 261, stateTaxDue: makeFromInt 610 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16603, ordinaryIncomeNonSS: makeFromInt 25206, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 857 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47467, ordinaryIncomeNonSS: makeFromInt 76804, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12372, stateTaxDue: makeFromInt 3468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79469, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32887, stateTaxDue: makeFromInt 11275 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32699, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1125, stateTaxDue: makeFromInt 1321 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3445, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48113, itemizedDeductions: makeFromInt 13239, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2005 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 116018, qualifiedIncome: makeFromInt 13944, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29101, stateTaxDue: makeFromInt 6179 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 36485, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5139, federalTaxDue: makeFromInt 1547, stateTaxDue: makeFromInt 1249 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123099, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17310, stateTaxDue: makeFromInt 5780 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39637, itemizedDeductions: makeFromInt 15313, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1307 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43586, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8850, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 124676, qualifiedIncome: makeFromInt 38487, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42721, stateTaxDue: makeFromInt 8097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95348, qualifiedIncome: makeFromInt 21637, itemizedDeductions: makeFromInt 1796, federalTaxDue: makeFromInt 20267, stateTaxDue: makeFromInt 5742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 6549, qualifiedIncome: makeFromInt 44123, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 971, stateTaxDue: makeFromInt 2360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120873, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28425, federalTaxDue: makeFromInt 11573, stateTaxDue: makeFromInt 5369 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47115, ordinaryIncomeNonSS: makeFromInt 9597, qualifiedIncome: makeFromInt 82760, itemizedDeductions: makeFromInt 10687, federalTaxDue: makeFromInt 10090, stateTaxDue: makeFromInt 4261 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101829, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24766, federalTaxDue: makeFromInt 22834, stateTaxDue: makeFromInt 9616 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81033, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3377 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26856, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45495, itemizedDeductions: makeFromInt 22288, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1973 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36541, ordinaryIncomeNonSS: makeFromInt 3798, qualifiedIncome: makeFromInt 48881, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5562, stateTaxDue: makeFromInt 2340 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39956, ordinaryIncomeNonSS: makeFromInt 28609, qualifiedIncome: makeFromInt 17777, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6147, stateTaxDue: makeFromInt 2019 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77735, qualifiedIncome: makeFromInt 30521, itemizedDeductions: makeFromInt 19756, federalTaxDue: makeFromInt 16258, stateTaxDue: makeFromInt 4938 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139080, qualifiedIncome: makeFromInt 7632, itemizedDeductions: makeFromInt 8922, federalTaxDue: makeFromInt 24956, stateTaxDue: makeFromInt 7054 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87385, qualifiedIncome: makeFromInt 39031, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9633, stateTaxDue: makeFromInt 5998 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14407, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37403, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20465, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24880, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32734, ordinaryIncomeNonSS: makeFromInt 87135, qualifiedIncome: makeFromInt 76195, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21948, stateTaxDue: makeFromInt 7692 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83889, qualifiedIncome: makeFromInt 83974, itemizedDeductions: makeFromInt 26738, federalTaxDue: makeFromInt 14962, stateTaxDue: makeFromInt 7918 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10693, ordinaryIncomeNonSS: makeFromInt 25193, qualifiedIncome: makeFromInt 64530, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2635, stateTaxDue: makeFromInt 3911 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60901, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37790, stateTaxDue: makeFromInt 10409 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22280, qualifiedIncome: makeFromInt 51552, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8729, stateTaxDue: makeFromInt 3419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10609, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19507, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 567 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20398, ordinaryIncomeNonSS: makeFromInt 27720, qualifiedIncome: makeFromInt 2058, itemizedDeductions: makeFromInt 25945, federalTaxDue: makeFromInt 171, stateTaxDue: makeFromInt 1070 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54454, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13281, stateTaxDue: makeFromInt 7148 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21539, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40128, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16943, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10296, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44253, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34086, itemizedDeductions: makeFromInt 10439, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1290 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47857, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31510, ordinaryIncomeNonSS: makeFromInt 21178, qualifiedIncome: makeFromInt 67861, itemizedDeductions: makeFromInt 4567, federalTaxDue: makeFromInt 7350, stateTaxDue: makeFromInt 4092 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19683, ordinaryIncomeNonSS: makeFromInt 84692, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18494, stateTaxDue: makeFromInt 4095 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115570, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17035, federalTaxDue: makeFromInt 10653, stateTaxDue: makeFromInt 5304 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47353, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 52092, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38843, stateTaxDue: makeFromInt 9530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31021, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25469, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36667, ordinaryIncomeNonSS: makeFromInt 97874, qualifiedIncome: makeFromInt 23001, itemizedDeductions: makeFromInt 19835, federalTaxDue: makeFromInt 17067, stateTaxDue: makeFromInt 5569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35769, ordinaryIncomeNonSS: makeFromInt 136346, qualifiedIncome: makeFromInt 32888, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32482, stateTaxDue: makeFromInt 8284 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22289, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1327, stateTaxDue: makeFromInt 912 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54731, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1822, stateTaxDue: makeFromInt 2343 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36396, ordinaryIncomeNonSS: makeFromInt 13246, qualifiedIncome: makeFromInt 86786, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4736, stateTaxDue: makeFromInt 4527 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21337, ordinaryIncomeNonSS: makeFromInt 52610, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5229, stateTaxDue: makeFromInt 2234 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146440, qualifiedIncome: makeFromInt 78820, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35319, stateTaxDue: makeFromInt 10830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30792, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31447, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34508, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1107 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32842, ordinaryIncomeNonSS: makeFromInt 94698, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4927, federalTaxDue: makeFromInt 20837, stateTaxDue: makeFromInt 4605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135588, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31984, stateTaxDue: makeFromInt 6364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20631, ordinaryIncomeNonSS: makeFromInt 805, qualifiedIncome: makeFromInt 15540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 142 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34739, ordinaryIncomeNonSS: makeFromInt 9726, qualifiedIncome: makeFromInt 85486, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12996, stateTaxDue: makeFromInt 4506 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13365, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38698, itemizedDeductions: makeFromInt 25067, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1530 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4485, ordinaryIncomeNonSS: makeFromInt 24139, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12121, stateTaxDue: makeFromInt 5952 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48367, ordinaryIncomeNonSS: makeFromInt 1734, qualifiedIncome: makeFromInt 1085, itemizedDeductions: makeFromInt 22548, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14439, ordinaryIncomeNonSS: makeFromInt 114588, qualifiedIncome: makeFromInt 1073, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17243, stateTaxDue: makeFromInt 5328 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18532, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86386, itemizedDeductions: makeFromInt 17586, federalTaxDue: makeFromInt 41811, stateTaxDue: makeFromInt 11627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3028, ordinaryIncomeNonSS: makeFromInt 5461, qualifiedIncome: makeFromInt 932, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8699, ordinaryIncomeNonSS: makeFromInt 79935, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3490, federalTaxDue: makeFromInt 9800, stateTaxDue: makeFromInt 3526 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39220, ordinaryIncomeNonSS: makeFromInt 115263, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25056, stateTaxDue: makeFromInt 5654 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118489, qualifiedIncome: makeFromInt 7590, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23155, stateTaxDue: makeFromInt 5777 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22130, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13202, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43304, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33757, stateTaxDue: makeFromInt 9308 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47455, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16671, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16789, ordinaryIncomeNonSS: makeFromInt 127867, qualifiedIncome: makeFromInt 76892, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30308, stateTaxDue: makeFromInt 9790 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33065, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71777, itemizedDeductions: makeFromInt 18029, federalTaxDue: makeFromInt 42955, stateTaxDue: makeFromInt 10882 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10852, ordinaryIncomeNonSS: makeFromInt 126016, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23470, stateTaxDue: makeFromInt 5998 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27637, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95003, itemizedDeductions: makeFromInt 15128, federalTaxDue: makeFromInt 6466, stateTaxDue: makeFromInt 4375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32721, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75748, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20522, stateTaxDue: makeFromInt 3516 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78355, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15146, federalTaxDue: makeFromInt 6142, stateTaxDue: makeFromInt 3547 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28209, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12947, federalTaxDue: makeFromInt 1216, stateTaxDue: makeFromInt 1214 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20377, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42997, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28295, itemizedDeductions: makeFromInt 2511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 790 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27469, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54043, itemizedDeductions: makeFromInt 19896, federalTaxDue: makeFromInt 2910, stateTaxDue: makeFromInt 2247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 65519, qualifiedIncome: makeFromInt 56298, itemizedDeductions: makeFromInt 27721, federalTaxDue: makeFromInt 5737, stateTaxDue: makeFromInt 5616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 38670, qualifiedIncome: makeFromInt 40352, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3377 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3185, stateTaxDue: makeFromInt 2779 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2463, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58856, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 458, stateTaxDue: makeFromInt 2368 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40271, ordinaryIncomeNonSS: makeFromInt 117458, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25302, stateTaxDue: makeFromInt 5542 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 926, ordinaryIncomeNonSS: makeFromInt 111561, qualifiedIncome: makeFromInt 69800, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24694, stateTaxDue: makeFromInt 8493 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30981, ordinaryIncomeNonSS: makeFromInt 78077, qualifiedIncome: makeFromInt 39409, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22974, stateTaxDue: makeFromInt 5645 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7138, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39453, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11686, stateTaxDue: makeFromInt 3897 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11198, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77188, itemizedDeductions: makeFromInt 15660, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1927, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 162 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31016, itemizedDeductions: makeFromInt 24022, federalTaxDue: makeFromInt 28723, stateTaxDue: makeFromInt 8796 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22090, federalTaxDue: makeFromInt 25262, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35881, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26309, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18250, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67417, itemizedDeductions: makeFromInt 3705, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2696 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32913, stateTaxDue: makeFromInt 8994 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78036, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5353, stateTaxDue: makeFromInt 3427 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44382, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91517, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 48337, stateTaxDue: makeFromInt 11971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17428, itemizedDeductions: makeFromInt 4008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 396 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28365, ordinaryIncomeNonSS: makeFromInt 83072, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24706, federalTaxDue: makeFromInt 26328, stateTaxDue: makeFromInt 8908 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37611, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62956, itemizedDeductions: makeFromInt 261, federalTaxDue: makeFromInt 10493, stateTaxDue: makeFromInt 2893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15016, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44559, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28360, federalTaxDue: makeFromInt 11319, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 17080, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 399 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87801, itemizedDeductions: makeFromInt 22450, federalTaxDue: makeFromInt 6919, stateTaxDue: makeFromInt 3935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17457, ordinaryIncomeNonSS: makeFromInt 75356, qualifiedIncome: makeFromInt 12867, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11237, stateTaxDue: makeFromInt 3836 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104100, qualifiedIncome: makeFromInt 41071, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21746, stateTaxDue: makeFromInt 6804 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6774, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21442, federalTaxDue: makeFromInt 21375, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32467, ordinaryIncomeNonSS: makeFromInt 26802, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20468, federalTaxDue: makeFromInt 1507, stateTaxDue: makeFromInt 1020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127630, qualifiedIncome: makeFromInt 19352, itemizedDeductions: makeFromInt 2524, federalTaxDue: makeFromInt 20794, stateTaxDue: makeFromInt 6974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83266, qualifiedIncome: makeFromInt 84155, itemizedDeductions: makeFromInt 2092, federalTaxDue: makeFromInt 33440, stateTaxDue: makeFromInt 8110 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22862, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27946, federalTaxDue: makeFromInt 41293, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8460, federalTaxDue: makeFromInt 14691, stateTaxDue: makeFromInt 4542 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15349, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16100, itemizedDeductions: makeFromInt 29510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 393 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15278, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 89 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10538, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16050, itemizedDeductions: makeFromInt 5168, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 228 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55835, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2195 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48969, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2151 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86448, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9536, federalTaxDue: makeFromInt 19617, stateTaxDue: makeFromInt 3960 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25796, ordinaryIncomeNonSS: makeFromInt 82120, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29369, federalTaxDue: makeFromInt 11954, stateTaxDue: makeFromInt 3841 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 442, ordinaryIncomeNonSS: makeFromInt 92811, qualifiedIncome: makeFromInt 44534, itemizedDeductions: makeFromInt 21903, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 6412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36113, ordinaryIncomeNonSS: makeFromInt 17573, qualifiedIncome: makeFromInt 86027, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5344, stateTaxDue: makeFromInt 4733 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5491, ordinaryIncomeNonSS: makeFromInt 95046, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21359, federalTaxDue: makeFromInt 25265, stateTaxDue: makeFromInt 9519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87631, qualifiedIncome: makeFromInt 76177, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15638, stateTaxDue: makeFromInt 7701 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26189, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20300, ordinaryIncomeNonSS: makeFromInt 3943, qualifiedIncome: makeFromInt 79077, itemizedDeductions: makeFromInt 26058, federalTaxDue: makeFromInt 5610, stateTaxDue: makeFromInt 3896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22683, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33694, itemizedDeductions: makeFromInt 6010, federalTaxDue: makeFromInt 34776, stateTaxDue: makeFromInt 8920 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29220, ordinaryIncomeNonSS: makeFromInt 62161, qualifiedIncome: makeFromInt 75134, itemizedDeductions: makeFromInt 11534, federalTaxDue: makeFromInt 22793, stateTaxDue: makeFromInt 6610 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133438, qualifiedIncome: makeFromInt 6334, itemizedDeductions: makeFromInt 13600, federalTaxDue: makeFromInt 23283, stateTaxDue: makeFromInt 6734 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83778, qualifiedIncome: makeFromInt 39497, itemizedDeductions: makeFromInt 12177, federalTaxDue: makeFromInt 14944, stateTaxDue: makeFromInt 5940 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43932, ordinaryIncomeNonSS: makeFromInt 19454, qualifiedIncome: makeFromInt 44967, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9708, stateTaxDue: makeFromInt 2857 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43657, ordinaryIncomeNonSS: makeFromInt 28248, qualifiedIncome: makeFromInt 10748, itemizedDeductions: makeFromInt 7837, federalTaxDue: makeFromInt 2074, stateTaxDue: makeFromInt 1475 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25105, federalTaxDue: makeFromInt 13596, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43104, ordinaryIncomeNonSS: makeFromInt 87004, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17440, stateTaxDue: makeFromInt 3775 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14271, itemizedDeductions: makeFromInt 7993, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 177 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35616, ordinaryIncomeNonSS: makeFromInt 145575, qualifiedIncome: makeFromInt 1912, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29750, stateTaxDue: makeFromInt 6799 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20763, ordinaryIncomeNonSS: makeFromInt 145111, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20257, federalTaxDue: makeFromInt 27099, stateTaxDue: makeFromInt 6850 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18101, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 230 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31876, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22699, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145597, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14228, federalTaxDue: makeFromInt 42219, stateTaxDue: makeFromInt 11605 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43235, ordinaryIncomeNonSS: makeFromInt 20737, qualifiedIncome: makeFromInt 4153, itemizedDeductions: makeFromInt 12395, federalTaxDue: makeFromInt 1586, stateTaxDue: makeFromInt 670 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30160, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31991, stateTaxDue: makeFromInt 8452 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12631, ordinaryIncomeNonSS: makeFromInt 46314, qualifiedIncome: makeFromInt 15655, itemizedDeductions: makeFromInt 13640, federalTaxDue: makeFromInt 7282, stateTaxDue: makeFromInt 2843 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3381, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18370, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3792, ordinaryIncomeNonSS: makeFromInt 7019, qualifiedIncome: makeFromInt 20446, itemizedDeductions: makeFromInt 4951, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 798 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20385, itemizedDeductions: makeFromInt 29690, federalTaxDue: makeFromInt 20760, stateTaxDue: makeFromInt 7844 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49653, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 71096, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11099, stateTaxDue: makeFromInt 3279 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11135, ordinaryIncomeNonSS: makeFromInt 79267, qualifiedIncome: makeFromInt 37751, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14756, stateTaxDue: makeFromInt 5417 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7142, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26425, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4401, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46907, ordinaryIncomeNonSS: makeFromInt 75322, qualifiedIncome: makeFromInt 70163, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25431, stateTaxDue: makeFromInt 6699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142252, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29969, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8758, ordinaryIncomeNonSS: makeFromInt 71635, qualifiedIncome: makeFromInt 27625, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14816, stateTaxDue: makeFromInt 4715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21646, ordinaryIncomeNonSS: makeFromInt 104659, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12027, federalTaxDue: makeFromInt 14095, stateTaxDue: makeFromInt 4685 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71515, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9401, federalTaxDue: makeFromInt 8769, stateTaxDue: makeFromInt 3301 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86528, itemizedDeductions: makeFromInt 1462, federalTaxDue: makeFromInt 979, stateTaxDue: makeFromInt 3851 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28301, ordinaryIncomeNonSS: makeFromInt 145941, qualifiedIncome: makeFromInt 73192, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38414, stateTaxDue: makeFromInt 10702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48178, ordinaryIncomeNonSS: makeFromInt 27625, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1138, stateTaxDue: makeFromInt 706 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25785, ordinaryIncomeNonSS: makeFromInt 33436, qualifiedIncome: makeFromInt 3950, itemizedDeductions: makeFromInt 26370, federalTaxDue: makeFromInt 2849, stateTaxDue: makeFromInt 1414 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23928, itemizedDeductions: makeFromInt 3835, federalTaxDue: makeFromInt 294, stateTaxDue: makeFromInt 941 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17881, federalTaxDue: makeFromInt 4109, stateTaxDue: makeFromInt 2773 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15995, ordinaryIncomeNonSS: makeFromInt 140948, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29927, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84190, qualifiedIncome: makeFromInt 15164, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10314, stateTaxDue: makeFromInt 4618 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33887, ordinaryIncomeNonSS: makeFromInt 74603, qualifiedIncome: makeFromInt 76173, itemizedDeductions: makeFromInt 24432, federalTaxDue: makeFromInt 24417, stateTaxDue: makeFromInt 7084 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42786, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36594, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2218, stateTaxDue: makeFromInt 1575 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11836, ordinaryIncomeNonSS: makeFromInt 34280, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1512, stateTaxDue: makeFromInt 1197 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32087, ordinaryIncomeNonSS: makeFromInt 109172, qualifiedIncome: makeFromInt 89146, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30723, stateTaxDue: makeFromInt 9461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47504, ordinaryIncomeNonSS: makeFromInt 110958, qualifiedIncome: makeFromInt 13221, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34496, stateTaxDue: makeFromInt 6109 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49841, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1889 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21762, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47116, itemizedDeductions: makeFromInt 11935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1681 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42978, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63943, itemizedDeductions: makeFromInt 169, federalTaxDue: makeFromInt 3333, stateTaxDue: makeFromInt 2812 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76967, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7078, stateTaxDue: makeFromInt 3477 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10516, federalTaxDue: makeFromInt 17375, stateTaxDue: makeFromInt 5402 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34690, ordinaryIncomeNonSS: makeFromInt 45160, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12788, federalTaxDue: makeFromInt 6036, stateTaxDue: makeFromInt 1883 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 35605, itemizedDeductions: makeFromInt 7550, federalTaxDue: makeFromInt 29107, stateTaxDue: makeFromInt 8905 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2736, ordinaryIncomeNonSS: makeFromInt 4790, qualifiedIncome: makeFromInt 50649, itemizedDeductions: makeFromInt 12701, federalTaxDue: makeFromInt 1346, stateTaxDue: makeFromInt 2317 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51477, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 767, stateTaxDue: makeFromInt 1973 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2837, ordinaryIncomeNonSS: makeFromInt 67421, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27499, federalTaxDue: makeFromInt 4796, stateTaxDue: makeFromInt 2996 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13713, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128455, qualifiedIncome: makeFromInt 15414, itemizedDeductions: makeFromInt 22134, federalTaxDue: makeFromInt 20165, stateTaxDue: makeFromInt 6618 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6821, qualifiedIncome: makeFromInt 12796, itemizedDeductions: makeFromInt 10590, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 606 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47611, ordinaryIncomeNonSS: makeFromInt 3114, qualifiedIncome: makeFromInt 7343, itemizedDeductions: makeFromInt 867, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3755, ordinaryIncomeNonSS: makeFromInt 102753, qualifiedIncome: makeFromInt 46344, itemizedDeductions: makeFromInt 12003, federalTaxDue: makeFromInt 16658, stateTaxDue: makeFromInt 6951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5477, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57819, itemizedDeductions: makeFromInt 4661, federalTaxDue: makeFromInt 34247, stateTaxDue: makeFromInt 10048 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36127, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75018, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9553, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10804, ordinaryIncomeNonSS: makeFromInt 24003, qualifiedIncome: makeFromInt 57179, itemizedDeductions: makeFromInt 1579, federalTaxDue: makeFromInt 8317, stateTaxDue: makeFromInt 3916 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67558, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6709, stateTaxDue: makeFromInt 2997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42240, ordinaryIncomeNonSS: makeFromInt 147762, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16765, federalTaxDue: makeFromInt 50991, stateTaxDue: makeFromInt 12289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39207, ordinaryIncomeNonSS: makeFromInt 54816, qualifiedIncome: makeFromInt 76126, itemizedDeductions: makeFromInt 20400, federalTaxDue: makeFromInt 23113, stateTaxDue: makeFromInt 6454 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14744, ordinaryIncomeNonSS: makeFromInt 47401, qualifiedIncome: makeFromInt 36528, itemizedDeductions: makeFromInt 5788, federalTaxDue: makeFromInt 3665, stateTaxDue: makeFromInt 3721 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9974, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90055, qualifiedIncome: makeFromInt 20457, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17510, stateTaxDue: makeFromInt 5187 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56572, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2580, stateTaxDue: makeFromInt 2433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13156, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5264, itemizedDeductions: makeFromInt 10862, federalTaxDue: makeFromInt 34782, stateTaxDue: makeFromInt 7694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5523, stateTaxDue: makeFromInt 3574 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35109, ordinaryIncomeNonSS: makeFromInt 57053, qualifiedIncome: makeFromInt 24251, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6815, stateTaxDue: makeFromInt 3590 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126132, qualifiedIncome: makeFromInt 48056, itemizedDeductions: makeFromInt 4050, federalTaxDue: makeFromInt 30145, stateTaxDue: makeFromInt 8034 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5868, ordinaryIncomeNonSS: makeFromInt 119487, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14433, federalTaxDue: makeFromInt 28983, stateTaxDue: makeFromInt 10541 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37212, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10986, federalTaxDue: makeFromInt 25637, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95144, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7406, stateTaxDue: makeFromInt 4082 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131858, qualifiedIncome: makeFromInt 7657, itemizedDeductions: makeFromInt 5651, federalTaxDue: makeFromInt 17443, stateTaxDue: makeFromInt 6462 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121906, qualifiedIncome: makeFromInt 9283, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21251, stateTaxDue: makeFromInt 6104 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37964, ordinaryIncomeNonSS: makeFromInt 25801, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9395, stateTaxDue: makeFromInt 5865 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46335, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21333, federalTaxDue: makeFromInt 2244, stateTaxDue: makeFromInt 1694 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42947, ordinaryIncomeNonSS: makeFromInt 17383, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19934, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 438 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 147873, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7035, federalTaxDue: makeFromInt 41197, stateTaxDue: makeFromInt 11939 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17725, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6740, federalTaxDue: makeFromInt 36234, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11243, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40025, itemizedDeductions: makeFromInt 28785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1491 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10392, ordinaryIncomeNonSS: makeFromInt 99392, qualifiedIncome: makeFromInt 12356, itemizedDeductions: makeFromInt 28570, federalTaxDue: makeFromInt 15007, stateTaxDue: makeFromInt 5352 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21763, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54616, itemizedDeductions: makeFromInt 28260, federalTaxDue: makeFromInt 1941, stateTaxDue: makeFromInt 2276 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1398, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50417, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1919 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46960, ordinaryIncomeNonSS: makeFromInt 21723, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 620, stateTaxDue: makeFromInt 557 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83065, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20929, stateTaxDue: makeFromInt 8778 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126498, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21769, stateTaxDue: makeFromInt 6023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25922, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47759, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1783 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19064, stateTaxDue: makeFromInt 5736 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2057, stateTaxDue: makeFromInt 1425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45734, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44814, itemizedDeductions: makeFromInt 25881, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1633 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 759, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4349, ordinaryIncomeNonSS: makeFromInt 136677, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4084, federalTaxDue: makeFromInt 38997, stateTaxDue: makeFromInt 11579 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16620, qualifiedIncome: makeFromInt 79814, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4412, stateTaxDue: makeFromInt 4367 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133240, qualifiedIncome: makeFromInt 65473, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30041, stateTaxDue: makeFromInt 9584 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119850, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26730, stateTaxDue: makeFromInt 5418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47139, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39196, itemizedDeductions: makeFromInt 24843, federalTaxDue: makeFromInt 655, stateTaxDue: makeFromInt 1505 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21312, qualifiedIncome: makeFromInt 10147, itemizedDeductions: makeFromInt 26006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1054 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 765, ordinaryIncomeNonSS: makeFromInt 95211, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7931, stateTaxDue: makeFromInt 4086 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52769, qualifiedIncome: makeFromInt 4773, itemizedDeductions: makeFromInt 18004, federalTaxDue: makeFromInt 6839, stateTaxDue: makeFromInt 2282 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 75941, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38969, stateTaxDue: makeFromInt 10622 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16583, ordinaryIncomeNonSS: makeFromInt 101853, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9793, federalTaxDue: makeFromInt 10737, stateTaxDue: makeFromInt 4618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56120, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17839, stateTaxDue: makeFromInt 2638 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26667, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31048, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33357, stateTaxDue: makeFromInt 8677 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17980, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37403, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 588, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 25747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 598, stateTaxDue: makeFromInt 812 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42834, qualifiedIncome: makeFromInt 71302, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1784, stateTaxDue: makeFromInt 5032 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31626, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10916, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16686, ordinaryIncomeNonSS: makeFromInt 107374, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12551, federalTaxDue: makeFromInt 11971, stateTaxDue: makeFromInt 4694 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13797, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 5235 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8280, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14501, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69082, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23230, stateTaxDue: makeFromInt 8276 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19390, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 333 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29300, ordinaryIncomeNonSS: makeFromInt 117901, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18952, stateTaxDue: makeFromInt 5585 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24155, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 833 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38333, ordinaryIncomeNonSS: makeFromInt 52808, qualifiedIncome: makeFromInt 84226, itemizedDeductions: makeFromInt 14897, federalTaxDue: makeFromInt 20934, stateTaxDue: makeFromInt 6560 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17869, ordinaryIncomeNonSS: makeFromInt 64638, qualifiedIncome: makeFromInt 46012, itemizedDeductions: makeFromInt 22231, federalTaxDue: makeFromInt 10743, stateTaxDue: makeFromInt 5194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28683, qualifiedIncome: makeFromInt 64038, itemizedDeductions: makeFromInt 18128, federalTaxDue: makeFromInt 5584, stateTaxDue: makeFromInt 4504 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35542, ordinaryIncomeNonSS: makeFromInt 48224, qualifiedIncome: makeFromInt 21255, itemizedDeductions: makeFromInt 20245, federalTaxDue: makeFromInt 9908, stateTaxDue: makeFromInt 2899 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75005, qualifiedIncome: makeFromInt 78682, itemizedDeductions: makeFromInt 22502, federalTaxDue: makeFromInt 17315, stateTaxDue: makeFromInt 7109 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47666, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87, itemizedDeductions: makeFromInt 16082, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1134, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50199, qualifiedIncome: makeFromInt 22209, itemizedDeductions: makeFromInt 28245, federalTaxDue: makeFromInt 2802, stateTaxDue: makeFromInt 3365 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38466, ordinaryIncomeNonSS: makeFromInt 148669, qualifiedIncome: makeFromInt 45243, itemizedDeductions: makeFromInt 863, federalTaxDue: makeFromInt 43171, stateTaxDue: makeFromInt 9461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18165, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63040, qualifiedIncome: makeFromInt 39385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3878, stateTaxDue: makeFromInt 4446 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106343, qualifiedIncome: makeFromInt 53955, itemizedDeductions: makeFromInt 27663, federalTaxDue: makeFromInt 22522, stateTaxDue: makeFromInt 7951 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28789, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2578, federalTaxDue: makeFromInt 3182, stateTaxDue: makeFromInt 1064 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29810, ordinaryIncomeNonSS: makeFromInt 120537, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18692, stateTaxDue: makeFromInt 5699 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47333, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18018, federalTaxDue: makeFromInt 32916, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37128, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34384, ordinaryIncomeNonSS: makeFromInt 8412, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 132358, qualifiedIncome: makeFromInt 43233, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38758, stateTaxDue: makeFromInt 8525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24273, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 84704, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 203, stateTaxDue: makeFromInt 3560 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22653, federalTaxDue: makeFromInt 1412, stateTaxDue: makeFromInt 2344 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47851, itemizedDeductions: makeFromInt 14562, federalTaxDue: makeFromInt 48903, stateTaxDue: makeFromInt 9866 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39340, ordinaryIncomeNonSS: makeFromInt 111889, qualifiedIncome: makeFromInt 29411, itemizedDeductions: makeFromInt 15630, federalTaxDue: makeFromInt 21612, stateTaxDue: makeFromInt 6390 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34248, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 12442, itemizedDeductions: makeFromInt 29066, federalTaxDue: makeFromInt 30213, stateTaxDue: makeFromInt 7547 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12481, ordinaryIncomeNonSS: makeFromInt 89245, qualifiedIncome: makeFromInt 89079, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27459, stateTaxDue: makeFromInt 8666 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20701, ordinaryIncomeNonSS: makeFromInt 60402, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9346, federalTaxDue: makeFromInt 21624, stateTaxDue: makeFromInt 7645 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47496, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26843, federalTaxDue: makeFromInt 33268, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 799, ordinaryIncomeNonSS: makeFromInt 148941, qualifiedIncome: makeFromInt 92543, itemizedDeductions: makeFromInt 7172, federalTaxDue: makeFromInt 45670, stateTaxDue: makeFromInt 12091 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73151, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3353, stateTaxDue: makeFromInt 3180 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32510, itemizedDeductions: makeFromInt 11467, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1251 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15805, ordinaryIncomeNonSS: makeFromInt 141876, qualifiedIncome: makeFromInt 27470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31996, stateTaxDue: makeFromInt 8212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105783, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11722, federalTaxDue: makeFromInt 13826, stateTaxDue: makeFromInt 4946 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130557, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2874, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 6434 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18231, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9673, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15996, ordinaryIncomeNonSS: makeFromInt 6413, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11046, stateTaxDue: makeFromInt 5152 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16049, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16165, ordinaryIncomeNonSS: makeFromInt 83335, qualifiedIncome: makeFromInt 95312, itemizedDeductions: makeFromInt 3987, federalTaxDue: makeFromInt 20223, stateTaxDue: makeFromInt 8457 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142545, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32198, stateTaxDue: makeFromInt 11452 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64622, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27921, stateTaxDue: makeFromInt 10056 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12880, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22037, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34417, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13699, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77500, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5835, stateTaxDue: makeFromInt 3524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45516, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20041, federalTaxDue: makeFromInt 5345, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43597, ordinaryIncomeNonSS: makeFromInt 72796, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9495, stateTaxDue: makeFromInt 3165 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48564, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27513, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36445, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99356, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35870, stateTaxDue: makeFromInt 12289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12850, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14504, itemizedDeductions: makeFromInt 8860, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 393 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7984, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79448, itemizedDeductions: makeFromInt 22646, federalTaxDue: makeFromInt 3877, stateTaxDue: makeFromInt 3397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15796, itemizedDeductions: makeFromInt 26972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 2883, qualifiedIncome: makeFromInt 97867, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7120, stateTaxDue: makeFromInt 4791 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2966, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14191, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 295 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15411, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 562 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5956, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 72742, itemizedDeductions: makeFromInt 22124, federalTaxDue: makeFromInt 5005, stateTaxDue: makeFromInt 3451 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 12974, itemizedDeductions: makeFromInt 23858, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 74 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 749, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46846, ordinaryIncomeNonSS: makeFromInt 139677, qualifiedIncome: makeFromInt 2438, itemizedDeductions: makeFromInt 29722, federalTaxDue: makeFromInt 24550, stateTaxDue: makeFromInt 6631 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39583, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14787, ordinaryIncomeNonSS: makeFromInt 29311, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1501, stateTaxDue: makeFromInt 1046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133783, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20356, stateTaxDue: makeFromInt 6272 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99309, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8645, stateTaxDue: makeFromInt 4711 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25809, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77997, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13983, federalTaxDue: makeFromInt 13108, stateTaxDue: makeFromInt 3325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108010, qualifiedIncome: makeFromInt 25880, itemizedDeductions: makeFromInt 25391, federalTaxDue: makeFromInt 18000, stateTaxDue: makeFromInt 6604 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2591, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27534, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43970, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25537, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73464, qualifiedIncome: makeFromInt 2365, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8900, stateTaxDue: makeFromInt 3536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37001, ordinaryIncomeNonSS: makeFromInt 148245, qualifiedIncome: makeFromInt 30164, itemizedDeductions: makeFromInt 12423, federalTaxDue: makeFromInt 40620, stateTaxDue: makeFromInt 8752 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113234, qualifiedIncome: makeFromInt 65042, itemizedDeductions: makeFromInt 13374, federalTaxDue: makeFromInt 27897, stateTaxDue: makeFromInt 8781 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54943, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3849, stateTaxDue: makeFromInt 2172 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49301, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7862, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3392, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10176, itemizedDeductions: makeFromInt 21642, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62307, qualifiedIncome: makeFromInt 37792, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14429, stateTaxDue: makeFromInt 4881 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11224, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97342, itemizedDeductions: makeFromInt 12437, federalTaxDue: makeFromInt 40612, stateTaxDue: makeFromInt 12064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8546, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23001, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28768, ordinaryIncomeNonSS: makeFromInt 21958, qualifiedIncome: makeFromInt 94685, itemizedDeductions: makeFromInt 11685, federalTaxDue: makeFromInt 17294, stateTaxDue: makeFromInt 5724 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28952, ordinaryIncomeNonSS: makeFromInt 75876, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27743, federalTaxDue: makeFromInt 10120, stateTaxDue: makeFromInt 3219 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28345, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39998, itemizedDeductions: makeFromInt 357, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1387 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35350, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45357, itemizedDeductions: makeFromInt 6742, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1660 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44501, ordinaryIncomeNonSS: makeFromInt 13659, qualifiedIncome: makeFromInt 80453, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6527, stateTaxDue: makeFromInt 4031 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10282, federalTaxDue: makeFromInt 41308, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93508, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19902, stateTaxDue: makeFromInt 4300 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50920, qualifiedIncome: makeFromInt 45394, itemizedDeductions: makeFromInt 6152, federalTaxDue: makeFromInt 2794, stateTaxDue: makeFromInt 4217 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49541, ordinaryIncomeNonSS: makeFromInt 14168, qualifiedIncome: makeFromInt 94177, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16178, stateTaxDue: makeFromInt 5128 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83655, itemizedDeductions: makeFromInt 16424, federalTaxDue: makeFromInt 6642, stateTaxDue: makeFromInt 4002 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21554, stateTaxDue: makeFromInt 7232 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26320, ordinaryIncomeNonSS: makeFromInt 1326, qualifiedIncome: makeFromInt 42245, itemizedDeductions: makeFromInt 17408, federalTaxDue: makeFromInt 570, stateTaxDue: makeFromInt 1875 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34592, stateTaxDue: makeFromInt 9598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13172, ordinaryIncomeNonSS: makeFromInt 101161, qualifiedIncome: makeFromInt 52035, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29404, stateTaxDue: makeFromInt 7589 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9234, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32721, stateTaxDue: makeFromInt 7587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10043, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30887, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46044, ordinaryIncomeNonSS: makeFromInt 130812, qualifiedIncome: makeFromInt 30946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32251, stateTaxDue: makeFromInt 7833 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 49092, itemizedDeductions: makeFromInt 19276, federalTaxDue: makeFromInt 1574, stateTaxDue: makeFromInt 2075 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 33283, qualifiedIncome: makeFromInt 72984, itemizedDeductions: makeFromInt 8862, federalTaxDue: makeFromInt 11125, stateTaxDue: makeFromInt 4838 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96025, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10859, stateTaxDue: makeFromInt 4347 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45157, ordinaryIncomeNonSS: makeFromInt 25511, qualifiedIncome: makeFromInt 14764, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2745, stateTaxDue: makeFromInt 1559 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143455, qualifiedIncome: makeFromInt 57713, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33394, stateTaxDue: makeFromInt 9803 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122696, qualifiedIncome: makeFromInt 92523, itemizedDeductions: makeFromInt 13841, federalTaxDue: makeFromInt 34377, stateTaxDue: makeFromInt 10629 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7660, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123768, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3836, federalTaxDue: makeFromInt 20012, stateTaxDue: makeFromInt 5733 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32455, itemizedDeductions: makeFromInt 10609, federalTaxDue: makeFromInt 31856, stateTaxDue: makeFromInt 8648 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42553, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93476, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7449, stateTaxDue: makeFromInt 4099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33720, ordinaryIncomeNonSS: makeFromInt 41470, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29685, federalTaxDue: makeFromInt 3005, stateTaxDue: makeFromInt 1599 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27056, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41072, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27757, federalTaxDue: makeFromInt 31892, stateTaxDue: makeFromInt 7151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28302, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9992, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1015 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26786, qualifiedIncome: makeFromInt 18806, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17966, ordinaryIncomeNonSS: makeFromInt 15236, qualifiedIncome: makeFromInt 16737, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 535, stateTaxDue: makeFromInt 1224 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21058, ordinaryIncomeNonSS: makeFromInt 89534, qualifiedIncome: makeFromInt 29581, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13757, stateTaxDue: makeFromInt 5481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121244, qualifiedIncome: makeFromInt 40894, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27405, stateTaxDue: makeFromInt 7922 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11418, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28896, itemizedDeductions: makeFromInt 21839, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9005, ordinaryIncomeNonSS: makeFromInt 31253, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 725, stateTaxDue: makeFromInt 1108 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32277, ordinaryIncomeNonSS: makeFromInt 123841, qualifiedIncome: makeFromInt 22398, itemizedDeductions: makeFromInt 8231, federalTaxDue: makeFromInt 28031, stateTaxDue: makeFromInt 6907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68738, qualifiedIncome: makeFromInt 44016, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10136, stateTaxDue: makeFromInt 5200 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2798, federalTaxDue: makeFromInt 15141, stateTaxDue: makeFromInt 3998 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24364, federalTaxDue: makeFromInt 31801, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32521, qualifiedIncome: makeFromInt 54001, itemizedDeductions: makeFromInt 27271, federalTaxDue: makeFromInt 12988, stateTaxDue: makeFromInt 4066 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29067, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 978 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47282, ordinaryIncomeNonSS: makeFromInt 24011, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17043, stateTaxDue: makeFromInt 5876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39873, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28350, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 895 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 73738, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13387, federalTaxDue: makeFromInt 24136, stateTaxDue: makeFromInt 8350 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10772, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14113, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 112815, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17744, stateTaxDue: makeFromInt 5101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40883, ordinaryIncomeNonSS: makeFromInt 125437, qualifiedIncome: makeFromInt 56452, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34173, stateTaxDue: makeFromInt 8719 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48892, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8379, federalTaxDue: makeFromInt 7477, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82852, itemizedDeductions: makeFromInt 23243, federalTaxDue: makeFromInt 615, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125494, qualifiedIncome: makeFromInt 37926, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30966, stateTaxDue: makeFromInt 8110 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 14794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 326 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86645, qualifiedIncome: makeFromInt 80794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30880, stateTaxDue: makeFromInt 7997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24714, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22687, federalTaxDue: makeFromInt 27610, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41063, ordinaryIncomeNonSS: makeFromInt 8443, qualifiedIncome: makeFromInt 82980, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4887, stateTaxDue: makeFromInt 4112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8925, ordinaryIncomeNonSS: makeFromInt 5906, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4748 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30993, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1075 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7285, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25078, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41889, ordinaryIncomeNonSS: makeFromInt 64531, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14168, stateTaxDue: makeFromInt 2863 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16225, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32915, itemizedDeductions: makeFromInt 18181, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1332 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7379, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 30 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40601, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125246, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20367, stateTaxDue: makeFromInt 6007 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8430, ordinaryIncomeNonSS: makeFromInt 12601, qualifiedIncome: makeFromInt 68708, itemizedDeductions: makeFromInt 1940, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3390 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1962, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41708, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146482, qualifiedIncome: makeFromInt 74076, itemizedDeductions: makeFromInt 17964, federalTaxDue: makeFromInt 29721, stateTaxDue: makeFromInt 10596 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34705, qualifiedIncome: makeFromInt 81203, itemizedDeductions: makeFromInt 28003, federalTaxDue: makeFromInt 2276, stateTaxDue: makeFromInt 5259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10588, qualifiedIncome: makeFromInt 49720, itemizedDeductions: makeFromInt 14114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2729 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34378, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17438, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30451, stateTaxDue: makeFromInt 8091 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82258, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48358, stateTaxDue: makeFromInt 11294 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28298, ordinaryIncomeNonSS: makeFromInt 67766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7702, stateTaxDue: makeFromInt 2978 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42260, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29757, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33427, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6281, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121687, qualifiedIncome: makeFromInt 95177, itemizedDeductions: makeFromInt 21393, federalTaxDue: makeFromInt 30683, stateTaxDue: makeFromInt 10268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28579, ordinaryIncomeNonSS: makeFromInt 145934, qualifiedIncome: makeFromInt 13440, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30130, stateTaxDue: makeFromInt 7594 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7119, federalTaxDue: makeFromInt 39013, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33150, ordinaryIncomeNonSS: makeFromInt 99633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17310, stateTaxDue: makeFromInt 4727 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46274, ordinaryIncomeNonSS: makeFromInt 42773, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21011, stateTaxDue: makeFromInt 6935 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38792, ordinaryIncomeNonSS: makeFromInt 74503, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23734, stateTaxDue: makeFromInt 8250 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64785, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22536, federalTaxDue: makeFromInt 4087, stateTaxDue: makeFromInt 2564 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34320, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25576, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36609, ordinaryIncomeNonSS: makeFromInt 124656, qualifiedIncome: makeFromInt 59573, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33971, stateTaxDue: makeFromInt 8836 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112028, qualifiedIncome: makeFromInt 39696, itemizedDeductions: makeFromInt 16596, federalTaxDue: makeFromInt 15829, stateTaxDue: makeFromInt 7111 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12210, ordinaryIncomeNonSS: makeFromInt 15020, qualifiedIncome: makeFromInt 30426, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 510, stateTaxDue: makeFromInt 1697 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132860, qualifiedIncome: makeFromInt 45142, itemizedDeductions: makeFromInt 8155, federalTaxDue: makeFromInt 26896, stateTaxDue: makeFromInt 8527 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55717, itemizedDeductions: makeFromInt 10545, federalTaxDue: makeFromInt 39308, stateTaxDue: makeFromInt 10267 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44352, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8302, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34205, ordinaryIncomeNonSS: makeFromInt 91434, qualifiedIncome: makeFromInt 21299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16306, stateTaxDue: makeFromInt 5301 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31688, ordinaryIncomeNonSS: makeFromInt 25569, qualifiedIncome: makeFromInt 35483, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9392, stateTaxDue: makeFromInt 2798 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49620, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58307, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2321 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28677, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6036, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9812, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132072, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15435, federalTaxDue: makeFromInt 14734, stateTaxDue: makeFromInt 5929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34771, ordinaryIncomeNonSS: makeFromInt 3313, qualifiedIncome: makeFromInt 67921, itemizedDeductions: makeFromInt 21010, federalTaxDue: makeFromInt 4580, stateTaxDue: makeFromInt 3286 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45723, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20791, federalTaxDue: makeFromInt 2786, stateTaxDue: makeFromInt 1831 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4502, ordinaryIncomeNonSS: makeFromInt 113012, qualifiedIncome: makeFromInt 35869, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25550, stateTaxDue: makeFromInt 7246 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47940, ordinaryIncomeNonSS: makeFromInt 71499, qualifiedIncome: makeFromInt 86014, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22196, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 17208, itemizedDeductions: makeFromInt 11446, federalTaxDue: makeFromInt 26410, stateTaxDue: makeFromInt 7977 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26415, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21465, federalTaxDue: makeFromInt 495, stateTaxDue: makeFromInt 1066 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47280, ordinaryIncomeNonSS: makeFromInt 38342, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25451, stateTaxDue: makeFromInt 6764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86329, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29766, stateTaxDue: makeFromInt 9278 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86370, qualifiedIncome: makeFromInt 14667, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12881, stateTaxDue: makeFromInt 4724 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43466, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43159, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1663, stateTaxDue: makeFromInt 1634 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70754, qualifiedIncome: makeFromInt 704, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5660, stateTaxDue: makeFromInt 2998 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48592, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1499, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55877, itemizedDeductions: makeFromInt 23252, federalTaxDue: makeFromInt 5552, stateTaxDue: makeFromInt 2503 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10182, ordinaryIncomeNonSS: makeFromInt 52530, qualifiedIncome: makeFromInt 1573, itemizedDeductions: makeFromInt 1132, federalTaxDue: makeFromInt 6996, stateTaxDue: makeFromInt 2331 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41527, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74629, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 39401, stateTaxDue: makeFromInt 10905 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6714, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71706, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5108, stateTaxDue: makeFromInt 3433 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 57501, itemizedDeductions: makeFromInt 2885, federalTaxDue: makeFromInt 43042, stateTaxDue: makeFromInt 10000 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34272, ordinaryIncomeNonSS: makeFromInt 128791, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40550, stateTaxDue: makeFromInt 11065 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117229, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10425, stateTaxDue: makeFromInt 5386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44107, ordinaryIncomeNonSS: makeFromInt 148891, qualifiedIncome: makeFromInt 26496, itemizedDeductions: makeFromInt 9658, federalTaxDue: makeFromInt 38485, stateTaxDue: makeFromInt 8496 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36291, ordinaryIncomeNonSS: makeFromInt 112894, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22278, federalTaxDue: makeFromInt 33222, stateTaxDue: makeFromInt 10409 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42342, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65355, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5050, stateTaxDue: makeFromInt 3013 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36398, ordinaryIncomeNonSS: makeFromInt 41938, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14660, stateTaxDue: makeFromInt 6586 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138644, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28959, stateTaxDue: makeFromInt 6846 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2977, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10751, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44341, ordinaryIncomeNonSS: makeFromInt 75172, qualifiedIncome: makeFromInt 86096, itemizedDeductions: makeFromInt 12502, federalTaxDue: makeFromInt 28713, stateTaxDue: makeFromInt 7796 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19592, ordinaryIncomeNonSS: makeFromInt 70996, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24171, stateTaxDue: makeFromInt 8496 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10121, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5408, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19561, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23267, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90083, itemizedDeductions: makeFromInt 6954, federalTaxDue: makeFromInt 9667, stateTaxDue: makeFromInt 4370 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138552, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26815, federalTaxDue: makeFromInt 16299, stateTaxDue: makeFromInt 6350 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40949, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41599, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35729, stateTaxDue: makeFromInt 9205 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32373, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26534, itemizedDeductions: makeFromInt 6929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 652 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38692, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16205, federalTaxDue: makeFromInt 2493, stateTaxDue: makeFromInt 1680 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41990, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14306, federalTaxDue: makeFromInt 6343, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30733, ordinaryIncomeNonSS: makeFromInt 23226, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14160, federalTaxDue: makeFromInt 11259, stateTaxDue: makeFromInt 5734 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28138, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59638, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3280, stateTaxDue: makeFromInt 2668 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40872, ordinaryIncomeNonSS: makeFromInt 98114, qualifiedIncome: makeFromInt 61432, itemizedDeductions: makeFromInt 26766, federalTaxDue: makeFromInt 24972, stateTaxDue: makeFromInt 7586 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 78249, qualifiedIncome: makeFromInt 3896, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16444, stateTaxDue: makeFromInt 3652 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72306, itemizedDeductions: makeFromInt 29599, federalTaxDue: makeFromInt 3286, stateTaxDue: makeFromInt 3137 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4894, ordinaryIncomeNonSS: makeFromInt 101563, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20171, federalTaxDue: makeFromInt 14673, stateTaxDue: makeFromInt 4833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8715, ordinaryIncomeNonSS: makeFromInt 53865, qualifiedIncome: makeFromInt 10935, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5766, stateTaxDue: makeFromInt 2856 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21832, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23798, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 557 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 30833, qualifiedIncome: makeFromInt 25110, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4436, stateTaxDue: makeFromInt 2122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11028, federalTaxDue: makeFromInt 10246, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124682, qualifiedIncome: makeFromInt 68951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35393, stateTaxDue: makeFromInt 9651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13006, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 645, ordinaryIncomeNonSS: makeFromInt 60944, qualifiedIncome: makeFromInt 70031, itemizedDeductions: makeFromInt 7059, federalTaxDue: makeFromInt 14648, stateTaxDue: makeFromInt 6251 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38089, ordinaryIncomeNonSS: makeFromInt 20173, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 600 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10335, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 62 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 87286, qualifiedIncome: makeFromInt 53367, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20382, stateTaxDue: makeFromInt 6679 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113847, qualifiedIncome: makeFromInt 93258, itemizedDeductions: makeFromInt 11007, federalTaxDue: makeFromInt 24263, stateTaxDue: makeFromInt 9680 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9554, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25019, ordinaryIncomeNonSS: makeFromInt 22939, qualifiedIncome: makeFromInt 77129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13079, stateTaxDue: makeFromInt 4748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19321, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18327, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7820, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3063, qualifiedIncome: makeFromInt 89645, itemizedDeductions: makeFromInt 25811, federalTaxDue: makeFromInt 5692, stateTaxDue: makeFromInt 4381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9851, ordinaryIncomeNonSS: makeFromInt 111386, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11675, stateTaxDue: makeFromInt 5130 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146782, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8153, federalTaxDue: makeFromInt 30719, stateTaxDue: makeFromInt 7261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20606, ordinaryIncomeNonSS: makeFromInt 8109, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 67 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5535, qualifiedIncome: makeFromInt 37283, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1531 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11724, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17833, federalTaxDue: makeFromInt 40652, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80501, qualifiedIncome: makeFromInt 77649, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13098, stateTaxDue: makeFromInt 7433 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14537, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92617, itemizedDeductions: makeFromInt 9293, federalTaxDue: makeFromInt 6333, stateTaxDue: makeFromInt 4173 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 50367, itemizedDeductions: makeFromInt 29815, federalTaxDue: makeFromInt 1902, stateTaxDue: makeFromInt 1943 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21542, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42127, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27873, stateTaxDue: makeFromInt 9359 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 282, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22743, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4890 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65683, qualifiedIncome: makeFromInt 76218, itemizedDeductions: makeFromInt 1979, federalTaxDue: makeFromInt 28806, stateTaxDue: makeFromInt 6809 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133583, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10520, federalTaxDue: makeFromInt 31081, stateTaxDue: makeFromInt 6262 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128959, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31388, stateTaxDue: makeFromInt 10873 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44821, ordinaryIncomeNonSS: makeFromInt 16368, qualifiedIncome: makeFromInt 32387, itemizedDeductions: makeFromInt 14676, federalTaxDue: makeFromInt 903, stateTaxDue: makeFromInt 1834 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24859, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81442, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1927, stateTaxDue: makeFromInt 3705 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64507, qualifiedIncome: makeFromInt 3729, itemizedDeductions: makeFromInt 29178, federalTaxDue: makeFromInt 3956, stateTaxDue: makeFromInt 2837 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14390, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59584, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38181, stateTaxDue: makeFromInt 10224 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19444, itemizedDeductions: makeFromInt 3339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 397 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40244, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21340, federalTaxDue: makeFromInt 40754, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101517, qualifiedIncome: makeFromInt 10916, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16354, stateTaxDue: makeFromInt 5167 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75816, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3752, stateTaxDue: makeFromInt 3316 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36005, ordinaryIncomeNonSS: makeFromInt 99490, qualifiedIncome: makeFromInt 8128, itemizedDeductions: makeFromInt 9502, federalTaxDue: makeFromInt 24652, stateTaxDue: makeFromInt 5142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97033, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28392, stateTaxDue: makeFromInt 9620 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44841, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89525, itemizedDeductions: makeFromInt 16638, federalTaxDue: makeFromInt 9347, stateTaxDue: makeFromInt 3901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20137, itemizedDeductions: makeFromInt 21684, federalTaxDue: makeFromInt 25630, stateTaxDue: makeFromInt 8228 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47399, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1848 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25222, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1396, stateTaxDue: makeFromInt 858 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11869, ordinaryIncomeNonSS: makeFromInt 42666, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8959, stateTaxDue: makeFromInt 6458 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45072, ordinaryIncomeNonSS: makeFromInt 69199, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21269, federalTaxDue: makeFromInt 13452, stateTaxDue: makeFromInt 3151 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30565, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15802, ordinaryIncomeNonSS: makeFromInt 14070, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 167 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24729, ordinaryIncomeNonSS: makeFromInt 139985, qualifiedIncome: makeFromInt 57859, itemizedDeductions: makeFromInt 18156, federalTaxDue: makeFromInt 36798, stateTaxDue: makeFromInt 9637 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7966, ordinaryIncomeNonSS: makeFromInt 100292, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2773, federalTaxDue: makeFromInt 30900, stateTaxDue: makeFromInt 9786 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39491, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5572, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 60 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16809, ordinaryIncomeNonSS: makeFromInt 8524, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12627, stateTaxDue: makeFromInt 5310 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26786, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11503, federalTaxDue: makeFromInt 26522, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46713, ordinaryIncomeNonSS: makeFromInt 149102, qualifiedIncome: makeFromInt 73094, itemizedDeductions: makeFromInt 7675, federalTaxDue: makeFromInt 37730, stateTaxDue: makeFromInt 10435 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4916, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89827, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7223, stateTaxDue: makeFromInt 4236 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43424, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19501, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 59428, itemizedDeductions: makeFromInt 2448, federalTaxDue: makeFromInt 1156, stateTaxDue: makeFromInt 2296 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30582, ordinaryIncomeNonSS: makeFromInt 22125, qualifiedIncome: makeFromInt 4218, itemizedDeductions: makeFromInt 18068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 793 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9042, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5957, ordinaryIncomeNonSS: makeFromInt 31933, qualifiedIncome: makeFromInt 7867, itemizedDeductions: makeFromInt 27443, federalTaxDue: makeFromInt 955, stateTaxDue: makeFromInt 1479 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69738, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22726, stateTaxDue: makeFromInt 8232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71234, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3125, stateTaxDue: makeFromInt 3286 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3079, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48307, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26819, itemizedDeductions: makeFromInt 25409, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48875, ordinaryIncomeNonSS: makeFromInt 52169, qualifiedIncome: makeFromInt 2938, itemizedDeductions: makeFromInt 11040, federalTaxDue: makeFromInt 13441, stateTaxDue: makeFromInt 2500 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28816, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89488, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4089, stateTaxDue: makeFromInt 4115 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47162, ordinaryIncomeNonSS: makeFromInt 119549, qualifiedIncome: makeFromInt 68919, itemizedDeductions: makeFromInt 17214, federalTaxDue: makeFromInt 36474, stateTaxDue: makeFromInt 9163 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41029, ordinaryIncomeNonSS: makeFromInt 115900, qualifiedIncome: makeFromInt 74717, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43563, stateTaxDue: makeFromInt 9497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83043, qualifiedIncome: makeFromInt 96162, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17260, stateTaxDue: makeFromInt 8487 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35830, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8907, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12181, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8249, itemizedDeductions: makeFromInt 14921, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 7007, qualifiedIncome: makeFromInt 50637, itemizedDeductions: makeFromInt 27935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2307 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58614, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22469, federalTaxDue: makeFromInt 7927, stateTaxDue: makeFromInt 2456 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80878, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10743, stateTaxDue: makeFromInt 3696 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 28240, qualifiedIncome: makeFromInt 12410, itemizedDeductions: makeFromInt 25234, federalTaxDue: makeFromInt 1660, stateTaxDue: makeFromInt 1645 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 14555, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20251, stateTaxDue: makeFromInt 5473 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54006, qualifiedIncome: makeFromInt 62169, itemizedDeductions: makeFromInt 28767, federalTaxDue: makeFromInt 20167, stateTaxDue: makeFromInt 5497 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17851, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47022, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 182, stateTaxDue: makeFromInt 2051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36827, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81695, itemizedDeductions: makeFromInt 9749, federalTaxDue: makeFromInt 10280, stateTaxDue: makeFromInt 3630 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42318, ordinaryIncomeNonSS: makeFromInt 124570, qualifiedIncome: makeFromInt 6123, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32525, stateTaxDue: makeFromInt 6319 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23137, ordinaryIncomeNonSS: makeFromInt 142780, qualifiedIncome: makeFromInt 80722, itemizedDeductions: makeFromInt 21355, federalTaxDue: makeFromInt 36616, stateTaxDue: makeFromInt 10848 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3993, itemizedDeductions: makeFromInt 4047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75820, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9169, stateTaxDue: makeFromInt 3642 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28470, ordinaryIncomeNonSS: makeFromInt 17656, qualifiedIncome: makeFromInt 41908, itemizedDeductions: makeFromInt 9979, federalTaxDue: makeFromInt 3214, stateTaxDue: makeFromInt 2603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37940, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7301, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 126163, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18595, federalTaxDue: makeFromInt 42739, stateTaxDue: makeFromInt 10733 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11171, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79379, itemizedDeductions: makeFromInt 16198, federalTaxDue: makeFromInt 3537, stateTaxDue: makeFromInt 3594 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48201, ordinaryIncomeNonSS: makeFromInt 64201, qualifiedIncome: makeFromInt 56915, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16316, stateTaxDue: makeFromInt 5581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17948, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91958, itemizedDeductions: makeFromInt 3635, federalTaxDue: makeFromInt 43763, stateTaxDue: makeFromInt 11843 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58230, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11953, federalTaxDue: makeFromInt 5667, stateTaxDue: makeFromInt 2623 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6629, ordinaryIncomeNonSS: makeFromInt 76198, qualifiedIncome: makeFromInt 80073, itemizedDeductions: makeFromInt 24974, federalTaxDue: makeFromInt 14771, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47523, ordinaryIncomeNonSS: makeFromInt 16545, qualifiedIncome: makeFromInt 50578, itemizedDeductions: makeFromInt 2586, federalTaxDue: makeFromInt 10530, stateTaxDue: makeFromInt 2995 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29041, ordinaryIncomeNonSS: makeFromInt 9629, qualifiedIncome: makeFromInt 99338, itemizedDeductions: makeFromInt 6675, federalTaxDue: makeFromInt 9822, stateTaxDue: makeFromInt 4873 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9160, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 875, itemizedDeductions: makeFromInt 15515, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113008, qualifiedIncome: makeFromInt 56296, itemizedDeductions: makeFromInt 8630, federalTaxDue: makeFromInt 26167, stateTaxDue: makeFromInt 8210 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64267, qualifiedIncome: makeFromInt 84963, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23750, stateTaxDue: makeFromInt 7087 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32525, ordinaryIncomeNonSS: makeFromInt 74113, qualifiedIncome: makeFromInt 89128, itemizedDeductions: makeFromInt 4574, federalTaxDue: makeFromInt 25220, stateTaxDue: makeFromInt 7787 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17969, qualifiedIncome: makeFromInt 44368, itemizedDeductions: makeFromInt 20160, federalTaxDue: makeFromInt 3590, stateTaxDue: makeFromInt 2642 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6514, federalTaxDue: makeFromInt 20619, stateTaxDue: makeFromInt 5977 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11759, ordinaryIncomeNonSS: makeFromInt 117544, qualifiedIncome: makeFromInt 22413, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16649, stateTaxDue: makeFromInt 6523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16872, ordinaryIncomeNonSS: makeFromInt 55582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13679, federalTaxDue: makeFromInt 5560, stateTaxDue: makeFromInt 2204 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 94959, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38596, stateTaxDue: makeFromInt 11942 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24420, ordinaryIncomeNonSS: makeFromInt 93388, qualifiedIncome: makeFromInt 23928, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16449, stateTaxDue: makeFromInt 5291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48236, ordinaryIncomeNonSS: makeFromInt 65372, qualifiedIncome: makeFromInt 60467, itemizedDeductions: makeFromInt 4203, federalTaxDue: makeFromInt 22573, stateTaxDue: makeFromInt 5867 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98776, itemizedDeductions: makeFromInt 9355, federalTaxDue: makeFromInt 6446, stateTaxDue: makeFromInt 4564 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22239, qualifiedIncome: makeFromInt 75287, itemizedDeductions: makeFromInt 862, federalTaxDue: makeFromInt 10332, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11765, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36549, stateTaxDue: makeFromInt 12181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44699, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29618, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45627, ordinaryIncomeNonSS: makeFromInt 76252, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6475, federalTaxDue: makeFromInt 18855, stateTaxDue: makeFromInt 3629 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32108, ordinaryIncomeNonSS: makeFromInt 93987, qualifiedIncome: makeFromInt 29472, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28449, stateTaxDue: makeFromInt 6072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4855, ordinaryIncomeNonSS: makeFromInt 59406, qualifiedIncome: makeFromInt 81802, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14867, stateTaxDue: makeFromInt 6605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16695, ordinaryIncomeNonSS: makeFromInt 17305, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 678, federalTaxDue: makeFromInt 10589, stateTaxDue: makeFromInt 5554 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10622, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17781, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35547, ordinaryIncomeNonSS: makeFromInt 140626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31309, stateTaxDue: makeFromInt 6776 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25016, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38356, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74679, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26505, federalTaxDue: makeFromInt 26007, stateTaxDue: makeFromInt 8059 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27714, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65277, itemizedDeductions: makeFromInt 12767, federalTaxDue: makeFromInt 5755, stateTaxDue: makeFromInt 3009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31688, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34988, ordinaryIncomeNonSS: makeFromInt 136550, qualifiedIncome: makeFromInt 79463, itemizedDeductions: makeFromInt 5748, federalTaxDue: makeFromInt 34341, stateTaxDue: makeFromInt 10326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22264, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 438 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8585, ordinaryIncomeNonSS: makeFromInt 98280, qualifiedIncome: makeFromInt 52978, itemizedDeductions: makeFromInt 19597, federalTaxDue: makeFromInt 22756, stateTaxDue: makeFromInt 7214 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42822, ordinaryIncomeNonSS: makeFromInt 46339, qualifiedIncome: makeFromInt 73455, itemizedDeductions: makeFromInt 20571, federalTaxDue: makeFromInt 19243, stateTaxDue: makeFromInt 5763 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95238, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7742, stateTaxDue: makeFromInt 4087 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30078, ordinaryIncomeNonSS: makeFromInt 70407, qualifiedIncome: makeFromInt 80246, itemizedDeductions: makeFromInt 3172, federalTaxDue: makeFromInt 17665, stateTaxDue: makeFromInt 7058 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47615, ordinaryIncomeNonSS: makeFromInt 147965, qualifiedIncome: makeFromInt 86088, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41999, stateTaxDue: makeFromInt 11386 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26085, ordinaryIncomeNonSS: makeFromInt 116094, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30698, stateTaxDue: makeFromInt 10572 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1193, ordinaryIncomeNonSS: makeFromInt 21089, qualifiedIncome: makeFromInt 78820, itemizedDeductions: makeFromInt 27437, federalTaxDue: makeFromInt 6176, stateTaxDue: makeFromInt 4871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40875, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8908, federalTaxDue: makeFromInt 2935, stateTaxDue: makeFromInt 1589 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49513, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8084, stateTaxDue: makeFromInt 6801 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35109, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27383, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 914 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11699, ordinaryIncomeNonSS: makeFromInt 49463, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8066, federalTaxDue: makeFromInt 4298, stateTaxDue: makeFromInt 2098 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16563, federalTaxDue: makeFromInt 3530, stateTaxDue: makeFromInt 2275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25952, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38691, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30686, ordinaryIncomeNonSS: makeFromInt 103598, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12770, federalTaxDue: makeFromInt 19758, stateTaxDue: makeFromInt 4835 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26457, ordinaryIncomeNonSS: makeFromInt 81558, qualifiedIncome: makeFromInt 65056, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18979, stateTaxDue: makeFromInt 7049 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6488, ordinaryIncomeNonSS: makeFromInt 133129, qualifiedIncome: makeFromInt 45937, itemizedDeductions: makeFromInt 27431, federalTaxDue: makeFromInt 27417, stateTaxDue: makeFromInt 8498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48514, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21935, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16040, ordinaryIncomeNonSS: makeFromInt 52918, qualifiedIncome: makeFromInt 61569, itemizedDeductions: makeFromInt 4594, federalTaxDue: makeFromInt 14317, stateTaxDue: makeFromInt 5492 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126760, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32058, stateTaxDue: makeFromInt 10883 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25656, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23636, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64178, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33977, stateTaxDue: makeFromInt 10271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19413, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12997, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39812, qualifiedIncome: makeFromInt 62307, itemizedDeductions: makeFromInt 16766, federalTaxDue: makeFromInt 6822, stateTaxDue: makeFromInt 4861 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1024, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99040, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7296, stateTaxDue: makeFromInt 4500 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19069, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48050, itemizedDeductions: makeFromInt 13547, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2002 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64752, itemizedDeductions: makeFromInt 28535, federalTaxDue: makeFromInt 1343, stateTaxDue: makeFromInt 2663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4995, federalTaxDue: makeFromInt 18534, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135539, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20186, federalTaxDue: makeFromInt 39202, stateTaxDue: makeFromInt 11788 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50263, qualifiedIncome: makeFromInt 98263, itemizedDeductions: makeFromInt 11366, federalTaxDue: makeFromInt 28322, stateTaxDue: makeFromInt 7076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19627, ordinaryIncomeNonSS: makeFromInt 19426, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1426, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 440 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5195, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8909, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4805 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 81009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6153, federalTaxDue: makeFromInt 6296, stateTaxDue: makeFromInt 3479 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3904, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20713, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10947, ordinaryIncomeNonSS: makeFromInt 102493, qualifiedIncome: makeFromInt 77281, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28731, stateTaxDue: makeFromInt 8534 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5389, ordinaryIncomeNonSS: makeFromInt 25492, qualifiedIncome: makeFromInt 95474, itemizedDeductions: makeFromInt 5654, federalTaxDue: makeFromInt 3026, stateTaxDue: makeFromInt 5516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130449, qualifiedIncome: makeFromInt 53546, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27554, stateTaxDue: makeFromInt 8833 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1363, ordinaryIncomeNonSS: makeFromInt 44415, qualifiedIncome: makeFromInt 46856, itemizedDeductions: makeFromInt 19612, federalTaxDue: makeFromInt 2764, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34490, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20066, federalTaxDue: makeFromInt 32056, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30650, ordinaryIncomeNonSS: makeFromInt 28409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11560, federalTaxDue: makeFromInt 3058, stateTaxDue: makeFromInt 1165 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13409, federalTaxDue: makeFromInt 3539, stateTaxDue: makeFromInt 2043 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 125806, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25529, stateTaxDue: makeFromInt 5715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48423, qualifiedIncome: makeFromInt 13994, itemizedDeductions: makeFromInt 21759, federalTaxDue: makeFromInt 12675, stateTaxDue: makeFromInt 2836 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 675, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18550, qualifiedIncome: makeFromInt 69850, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3945 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59325, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9989, federalTaxDue: makeFromInt 3858, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38739, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11180, federalTaxDue: makeFromInt 34210, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43545, qualifiedIncome: makeFromInt 89159, itemizedDeductions: makeFromInt 22625, federalTaxDue: makeFromInt 17817, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23049, ordinaryIncomeNonSS: makeFromInt 149610, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34032, stateTaxDue: makeFromInt 7283 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26036, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47710, ordinaryIncomeNonSS: makeFromInt 43591, qualifiedIncome: makeFromInt 11249, itemizedDeductions: makeFromInt 6594, federalTaxDue: makeFromInt 15834, stateTaxDue: makeFromInt 2572 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47338, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31054, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46646, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21180, federalTaxDue: makeFromInt 33287, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28651, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85520, itemizedDeductions: makeFromInt 13580, federalTaxDue: makeFromInt 7181, stateTaxDue: makeFromInt 3933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45720, ordinaryIncomeNonSS: makeFromInt 122455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25976, stateTaxDue: makeFromInt 5748 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 11829, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5050 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19478, qualifiedIncome: makeFromInt 70158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10968, stateTaxDue: makeFromInt 4183 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34699, ordinaryIncomeNonSS: makeFromInt 94288, qualifiedIncome: makeFromInt 80680, itemizedDeductions: makeFromInt 3981, federalTaxDue: makeFromInt 24562, stateTaxDue: makeFromInt 8273 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11999, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63436, itemizedDeductions: makeFromInt 5485, federalTaxDue: makeFromInt 35729, stateTaxDue: makeFromInt 10297 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21879, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15187, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 346 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46224, qualifiedIncome: makeFromInt 2964, itemizedDeductions: makeFromInt 9408, federalTaxDue: makeFromInt 3115, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127705, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22887, stateTaxDue: makeFromInt 6166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4554, ordinaryIncomeNonSS: makeFromInt 129067, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24195, stateTaxDue: makeFromInt 6236 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42753, qualifiedIncome: makeFromInt 20983, itemizedDeductions: makeFromInt 3412, federalTaxDue: makeFromInt 4265, stateTaxDue: makeFromInt 2732 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10032, ordinaryIncomeNonSS: makeFromInt 119747, qualifiedIncome: makeFromInt 66178, itemizedDeductions: makeFromInt 9011, federalTaxDue: makeFromInt 32122, stateTaxDue: makeFromInt 9054 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81949, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10642, stateTaxDue: makeFromInt 3842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7618, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40637, ordinaryIncomeNonSS: makeFromInt 133975, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29509, stateTaxDue: makeFromInt 6384 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42573, ordinaryIncomeNonSS: makeFromInt 138673, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24307, stateTaxDue: makeFromInt 6459 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62338, itemizedDeductions: makeFromInt 9820, federalTaxDue: makeFromInt 34231, stateTaxDue: makeFromInt 10380 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 91406, qualifiedIncome: makeFromInt 79337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16296, stateTaxDue: makeFromInt 7862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29407, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 8540, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2858, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37832, ordinaryIncomeNonSS: makeFromInt 114118, qualifiedIncome: makeFromInt 82721, itemizedDeductions: makeFromInt 24547, federalTaxDue: makeFromInt 29320, stateTaxDue: makeFromInt 9386 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38831, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 588, stateTaxDue: makeFromInt 1328 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102751, qualifiedIncome: makeFromInt 80947, itemizedDeductions: makeFromInt 1686, federalTaxDue: makeFromInt 24211, stateTaxDue: makeFromInt 8810 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21944, itemizedDeductions: makeFromInt 5600, federalTaxDue: makeFromInt 80, stateTaxDue: makeFromInt 842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39894, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74927, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 209, stateTaxDue: makeFromInt 3168 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37638, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97674, itemizedDeductions: makeFromInt 13437, federalTaxDue: makeFromInt 45589, stateTaxDue: makeFromInt 11809 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 5351, qualifiedIncome: makeFromInt 97755, itemizedDeductions: makeFromInt 12487, federalTaxDue: makeFromInt 2851, stateTaxDue: makeFromInt 4560 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9231, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51429, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2300, stateTaxDue: makeFromInt 2072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25293, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30382, ordinaryIncomeNonSS: makeFromInt 7448, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12407, federalTaxDue: makeFromInt 9506, stateTaxDue: makeFromInt 5051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 42395, qualifiedIncome: makeFromInt 90551, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15754, stateTaxDue: makeFromInt 6229 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133271, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2717, federalTaxDue: makeFromInt 32493, stateTaxDue: makeFromInt 6209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11013, ordinaryIncomeNonSS: makeFromInt 93551, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14862, stateTaxDue: makeFromInt 4343 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8522, itemizedDeductions: makeFromInt 15216, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24777, ordinaryIncomeNonSS: makeFromInt 9804, qualifiedIncome: makeFromInt 32010, itemizedDeductions: makeFromInt 18259, federalTaxDue: makeFromInt 2224, stateTaxDue: makeFromInt 1908 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37410, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115455, qualifiedIncome: makeFromInt 42205, itemizedDeductions: makeFromInt 18187, federalTaxDue: makeFromInt 17128, stateTaxDue: makeFromInt 7388 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62478, qualifiedIncome: makeFromInt 11340, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3613, stateTaxDue: makeFromInt 3316 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27941, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 922 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23646, ordinaryIncomeNonSS: makeFromInt 56703, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 128, federalTaxDue: makeFromInt 21363, stateTaxDue: makeFromInt 7460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103448, qualifiedIncome: makeFromInt 98274, itemizedDeductions: makeFromInt 2619, federalTaxDue: makeFromInt 38138, stateTaxDue: makeFromInt 9737 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145462, qualifiedIncome: makeFromInt 22778, itemizedDeductions: makeFromInt 22360, federalTaxDue: makeFromInt 24722, stateTaxDue: makeFromInt 8131 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24430, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 818 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 87019, qualifiedIncome: makeFromInt 98101, itemizedDeductions: makeFromInt 20434, federalTaxDue: makeFromInt 21158, stateTaxDue: makeFromInt 8992 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71222, qualifiedIncome: makeFromInt 65398, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12674, stateTaxDue: makeFromInt 6621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13157, ordinaryIncomeNonSS: makeFromInt 99178, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10799, stateTaxDue: makeFromInt 4630 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24516, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86359, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7306, stateTaxDue: makeFromInt 4180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19926, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56206, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 871, stateTaxDue: makeFromInt 2316 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18855, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5044, federalTaxDue: makeFromInt 551, stateTaxDue: makeFromInt 615 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34652, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64251, qualifiedIncome: makeFromInt 80242, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24712, stateTaxDue: makeFromInt 6770 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19326, ordinaryIncomeNonSS: makeFromInt 114539, qualifiedIncome: makeFromInt 46412, itemizedDeductions: makeFromInt 16427, federalTaxDue: makeFromInt 28287, stateTaxDue: makeFromInt 7593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7606, ordinaryIncomeNonSS: makeFromInt 24558, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7522, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 824 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 20991, itemizedDeductions: makeFromInt 18336, federalTaxDue: makeFromInt 27381, stateTaxDue: makeFromInt 8292 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12156, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95132, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6710, stateTaxDue: makeFromInt 4505 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51262, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1988 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42188, ordinaryIncomeNonSS: makeFromInt 59954, qualifiedIncome: makeFromInt 63873, itemizedDeductions: makeFromInt 1873, federalTaxDue: makeFromInt 20444, stateTaxDue: makeFromInt 5764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41602, ordinaryIncomeNonSS: makeFromInt 140114, qualifiedIncome: makeFromInt 53429, itemizedDeductions: makeFromInt 25295, federalTaxDue: makeFromInt 32040, stateTaxDue: makeFromInt 9218 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16673, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73353, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3058 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 90118, qualifiedIncome: makeFromInt 99538, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25345, stateTaxDue: makeFromInt 9326 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 145782, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26237, federalTaxDue: makeFromInt 33171, stateTaxDue: makeFromInt 6938 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26932, ordinaryIncomeNonSS: makeFromInt 65072, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9165, federalTaxDue: makeFromInt 8844, stateTaxDue: makeFromInt 2768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34363, ordinaryIncomeNonSS: makeFromInt 124026, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24095, federalTaxDue: makeFromInt 22815, stateTaxDue: makeFromInt 5877 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30465, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7816, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24586, federalTaxDue: makeFromInt 22435, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13909, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12786, ordinaryIncomeNonSS: makeFromInt 45418, qualifiedIncome: makeFromInt 11016, itemizedDeductions: makeFromInt 19013, federalTaxDue: makeFromInt 5457, stateTaxDue: makeFromInt 2367 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50664, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28841, federalTaxDue: makeFromInt 2221, stateTaxDue: makeFromInt 2058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10124, ordinaryIncomeNonSS: makeFromInt 77818, qualifiedIncome: makeFromInt 32356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7903, stateTaxDue: makeFromInt 5034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134698, qualifiedIncome: makeFromInt 58583, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31423, stateTaxDue: makeFromInt 9409 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66290, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9772, stateTaxDue: makeFromInt 2840 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18367, ordinaryIncomeNonSS: makeFromInt 131354, qualifiedIncome: makeFromInt 85867, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38753, stateTaxDue: makeFromInt 10406 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68421, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31399, stateTaxDue: makeFromInt 10546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138598, qualifiedIncome: makeFromInt 85644, itemizedDeductions: makeFromInt 2524, federalTaxDue: makeFromInt 33370, stateTaxDue: makeFromInt 10637 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92622, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19618, federalTaxDue: makeFromInt 23464, stateTaxDue: makeFromInt 9375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29720, itemizedDeductions: makeFromInt 3290, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1111 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32701, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22464, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17504, ordinaryIncomeNonSS: makeFromInt 54922, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27746, federalTaxDue: makeFromInt 4649, stateTaxDue: makeFromInt 2271 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 109693, qualifiedIncome: makeFromInt 27041, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17653, stateTaxDue: makeFromInt 6262 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 613, itemizedDeductions: makeFromInt 24192, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149269, qualifiedIncome: makeFromInt 8219, itemizedDeductions: makeFromInt 24997, federalTaxDue: makeFromInt 19910, stateTaxDue: makeFromInt 7199 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61057, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1185, federalTaxDue: makeFromInt 19241, stateTaxDue: makeFromInt 7786 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41530, ordinaryIncomeNonSS: makeFromInt 75874, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7930, federalTaxDue: makeFromInt 11124, stateTaxDue: makeFromInt 3217 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4343, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43050, ordinaryIncomeNonSS: makeFromInt 71572, qualifiedIncome: makeFromInt 74667, itemizedDeductions: makeFromInt 29427, federalTaxDue: makeFromInt 21384, stateTaxDue: makeFromInt 7009 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8887, ordinaryIncomeNonSS: makeFromInt 127056, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19393, stateTaxDue: makeFromInt 6133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 75067, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6793, stateTaxDue: makeFromInt 3380 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32139, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 9910, qualifiedIncome: makeFromInt 35819, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1781 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 216, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28706, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14270, itemizedDeductions: makeFromInt 29348, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 279 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 80412, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13460, federalTaxDue: makeFromInt 20648, stateTaxDue: makeFromInt 3754 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97732, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11659, stateTaxDue: makeFromInt 4760 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82813, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4382, stateTaxDue: makeFromInt 3566 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 146093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35130, stateTaxDue: makeFromInt 7002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110800, qualifiedIncome: makeFromInt 26155, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19003, stateTaxDue: makeFromInt 6536 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123142, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9648, federalTaxDue: makeFromInt 32564, stateTaxDue: makeFromInt 10829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52418, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6288, stateTaxDue: makeFromInt 2449 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46615, ordinaryIncomeNonSS: makeFromInt 33730, qualifiedIncome: makeFromInt 43415, itemizedDeductions: makeFromInt 2643, federalTaxDue: makeFromInt 15810, stateTaxDue: makeFromInt 3588 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20974, ordinaryIncomeNonSS: makeFromInt 72857, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11805, stateTaxDue: makeFromInt 3287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15311, itemizedDeductions: makeFromInt 7495, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 352 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4953, ordinaryIncomeNonSS: makeFromInt 105584, qualifiedIncome: makeFromInt 20971, itemizedDeductions: makeFromInt 24385, federalTaxDue: makeFromInt 17684, stateTaxDue: makeFromInt 6073 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11179, federalTaxDue: makeFromInt 4376, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75398, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14843, stateTaxDue: makeFromInt 3621 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40410, ordinaryIncomeNonSS: makeFromInt 90892, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31693, stateTaxDue: makeFromInt 9290 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17412, ordinaryIncomeNonSS: makeFromInt 41011, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5707, stateTaxDue: makeFromInt 1745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15674, ordinaryIncomeNonSS: makeFromInt 124191, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35163, stateTaxDue: makeFromInt 11087 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94315, qualifiedIncome: makeFromInt 42247, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21553, stateTaxDue: makeFromInt 6250 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80415, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4061, stateTaxDue: makeFromInt 3673 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9374, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49830, itemizedDeductions: makeFromInt 12170, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2195 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44550, ordinaryIncomeNonSS: makeFromInt 14212, qualifiedIncome: makeFromInt 74516, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14813, stateTaxDue: makeFromInt 4181 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42394, ordinaryIncomeNonSS: makeFromInt 145249, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12702, federalTaxDue: makeFromInt 30768, stateTaxDue: makeFromInt 6887 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1561, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28810, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25675, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1085 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46914, qualifiedIncome: makeFromInt 74954, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15725, stateTaxDue: makeFromInt 5618 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67501, qualifiedIncome: makeFromInt 77396, itemizedDeductions: makeFromInt 783, federalTaxDue: makeFromInt 19073, stateTaxDue: makeFromInt 6990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32803, ordinaryIncomeNonSS: makeFromInt 23173, qualifiedIncome: makeFromInt 10696, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1779, stateTaxDue: makeFromInt 1299 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 32143, qualifiedIncome: makeFromInt 9439, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 214, stateTaxDue: makeFromInt 1624 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53135, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31619, stateTaxDue: makeFromInt 9782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13530, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97454, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6248, stateTaxDue: makeFromInt 4298 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39611, ordinaryIncomeNonSS: makeFromInt 78601, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10128, federalTaxDue: makeFromInt 11308, stateTaxDue: makeFromInt 3356 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26048, ordinaryIncomeNonSS: makeFromInt 68217, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8547, federalTaxDue: makeFromInt 12578, stateTaxDue: makeFromInt 3156 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134591, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23010, stateTaxDue: makeFromInt 6275 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 44799, ordinaryIncomeNonSS: makeFromInt 2642, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19812, ordinaryIncomeNonSS: makeFromInt 25482, qualifiedIncome: makeFromInt 52360, itemizedDeductions: makeFromInt 16292, federalTaxDue: makeFromInt 1502, stateTaxDue: makeFromInt 3217 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130210, qualifiedIncome: makeFromInt 96991, itemizedDeductions: makeFromInt 18016, federalTaxDue: makeFromInt 43259, stateTaxDue: makeFromInt 10785 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51197, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24196, federalTaxDue: makeFromInt 2515, stateTaxDue: makeFromInt 2162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 51175, qualifiedIncome: makeFromInt 98041, itemizedDeductions: makeFromInt 21714, federalTaxDue: makeFromInt 8239, stateTaxDue: makeFromInt 6786 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22936, federalTaxDue: makeFromInt 37832, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8603, federalTaxDue: makeFromInt 25900, stateTaxDue: makeFromInt 6793 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2220, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57246, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9640, stateTaxDue: makeFromInt 2487 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31166, ordinaryIncomeNonSS: makeFromInt 75961, qualifiedIncome: makeFromInt 54080, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15490, stateTaxDue: makeFromInt 6027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48596, itemizedDeductions: makeFromInt 25567, federalTaxDue: makeFromInt 2292, stateTaxDue: makeFromInt 2254 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88462, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6382, federalTaxDue: makeFromInt 9026, stateTaxDue: makeFromInt 3961 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54106, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2107 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58665, qualifiedIncome: makeFromInt 98127, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30245, stateTaxDue: makeFromInt 7494 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13530, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30007, stateTaxDue: makeFromInt 7353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15059, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88022, itemizedDeductions: makeFromInt 9449, federalTaxDue: makeFromInt 6952, stateTaxDue: makeFromInt 3946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43354, ordinaryIncomeNonSS: makeFromInt 39292, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9200, federalTaxDue: makeFromInt 4912, stateTaxDue: makeFromInt 1453 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5508, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38229, stateTaxDue: makeFromInt 7707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29488, qualifiedIncome: makeFromInt 59170, itemizedDeductions: makeFromInt 6548, federalTaxDue: makeFromInt 13384, stateTaxDue: makeFromInt 3971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1617, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18670, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6924, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43970, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15153, ordinaryIncomeNonSS: makeFromInt 34960, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4343, stateTaxDue: makeFromInt 1436 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4023, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9120, stateTaxDue: makeFromInt 4856 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128319, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3768, federalTaxDue: makeFromInt 40999, stateTaxDue: makeFromInt 11420 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33766, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57751, itemizedDeductions: makeFromInt 5513, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2293 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4373, ordinaryIncomeNonSS: makeFromInt 53803, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26267, federalTaxDue: makeFromInt 3369, stateTaxDue: makeFromInt 2091 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19780, ordinaryIncomeNonSS: makeFromInt 140181, qualifiedIncome: makeFromInt 25324, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22971, stateTaxDue: makeFromInt 7800 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70609, qualifiedIncome: makeFromInt 61195, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7959, stateTaxDue: makeFromInt 5915 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78439, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8068, federalTaxDue: makeFromInt 5911, stateTaxDue: makeFromInt 3348 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65211, qualifiedIncome: makeFromInt 38099, itemizedDeductions: makeFromInt 15733, federalTaxDue: makeFromInt 12217, stateTaxDue: makeFromInt 4911 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88932, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22082, stateTaxDue: makeFromInt 8872 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29272, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18813, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1064 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18153, ordinaryIncomeNonSS: makeFromInt 102705, qualifiedIncome: makeFromInt 41526, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17498, stateTaxDue: makeFromInt 6703 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10583, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4587, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49472, ordinaryIncomeNonSS: makeFromInt 17787, qualifiedIncome: makeFromInt 32481, itemizedDeductions: makeFromInt 22948, federalTaxDue: makeFromInt 7804, stateTaxDue: makeFromInt 2339 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1724, ordinaryIncomeNonSS: makeFromInt 110651, qualifiedIncome: makeFromInt 14180, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16295, stateTaxDue: makeFromInt 5867 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39785, ordinaryIncomeNonSS: makeFromInt 67481, qualifiedIncome: makeFromInt 71596, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27024, stateTaxDue: makeFromInt 6746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33772, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3865, stateTaxDue: makeFromInt 2806 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4654, stateTaxDue: makeFromInt 3247 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34973, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4395, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26339, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2230, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17649, ordinaryIncomeNonSS: makeFromInt 3255, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22731, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26108, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7550, federalTaxDue: makeFromInt 30333, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43970, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101433, qualifiedIncome: makeFromInt 38237, itemizedDeductions: makeFromInt 21071, federalTaxDue: makeFromInt 12838, stateTaxDue: makeFromInt 6509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4596, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25146, ordinaryIncomeNonSS: makeFromInt 117214, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29149, federalTaxDue: makeFromInt 37546, stateTaxDue: makeFromInt 10854 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126430, qualifiedIncome: makeFromInt 91814, itemizedDeductions: makeFromInt 26232, federalTaxDue: makeFromInt 29352, stateTaxDue: makeFromInt 10682 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17049, ordinaryIncomeNonSS: makeFromInt 119494, qualifiedIncome: makeFromInt 10007, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20918, stateTaxDue: makeFromInt 5900 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15563, qualifiedIncome: makeFromInt 86043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4866, stateTaxDue: makeFromInt 4705 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24291, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20544, qualifiedIncome: makeFromInt 6374, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4, stateTaxDue: makeFromInt 971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 96360, qualifiedIncome: makeFromInt 91795, itemizedDeductions: makeFromInt 22124, federalTaxDue: makeFromInt 19502, stateTaxDue: makeFromInt 8933 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12047, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74145, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3032 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35126, ordinaryIncomeNonSS: makeFromInt 124092, qualifiedIncome: makeFromInt 92088, itemizedDeductions: makeFromInt 22548, federalTaxDue: makeFromInt 35853, stateTaxDue: makeFromInt 10474 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20941, ordinaryIncomeNonSS: makeFromInt 138806, qualifiedIncome: makeFromInt 93600, itemizedDeductions: makeFromInt 15762, federalTaxDue: makeFromInt 39781, stateTaxDue: makeFromInt 11404 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40341, qualifiedIncome: makeFromInt 90996, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16357, stateTaxDue: makeFromInt 6092 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49731, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86195, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14352, stateTaxDue: makeFromInt 4055 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 93285, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6373, stateTaxDue: makeFromInt 4207 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31113, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74577, itemizedDeductions: makeFromInt 17913, federalTaxDue: makeFromInt 43070, stateTaxDue: makeFromInt 10774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40039, ordinaryIncomeNonSS: makeFromInt 89958, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15735, federalTaxDue: makeFromInt 16299, stateTaxDue: makeFromInt 4037 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16378, ordinaryIncomeNonSS: makeFromInt 6227, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26590, ordinaryIncomeNonSS: makeFromInt 57611, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25030, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32236, ordinaryIncomeNonSS: makeFromInt 97106, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6036, federalTaxDue: makeFromInt 33507, stateTaxDue: makeFromInt 9604 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25089, ordinaryIncomeNonSS: makeFromInt 71738, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10176, stateTaxDue: makeFromInt 3108 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30406, ordinaryIncomeNonSS: makeFromInt 110741, qualifiedIncome: makeFromInt 3028, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24481, stateTaxDue: makeFromInt 5321 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46763, ordinaryIncomeNonSS: makeFromInt 113954, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15797, federalTaxDue: makeFromInt 20164, stateTaxDue: makeFromInt 5310 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22958, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42943, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46732, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28228, federalTaxDue: makeFromInt 21561, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19489, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 43750, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1513 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2671, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33727, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46447, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55001, itemizedDeductions: makeFromInt 12655, federalTaxDue: makeFromInt 919, stateTaxDue: makeFromInt 2333 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15514, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39035, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81958, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 41393, stateTaxDue: makeFromInt 11023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1671, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 76537, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36171, stateTaxDue: makeFromInt 10895 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41584, ordinaryIncomeNonSS: makeFromInt 23472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1893, federalTaxDue: makeFromInt 1573, stateTaxDue: makeFromInt 599 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49614, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 41218, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 553, stateTaxDue: makeFromInt 1806 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47831, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6063, stateTaxDue: makeFromInt 2005 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43011, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7584, federalTaxDue: makeFromInt 7213, stateTaxDue: makeFromInt 1627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46082, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7297, federalTaxDue: makeFromInt 39623, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122467, qualifiedIncome: makeFromInt 87355, itemizedDeductions: makeFromInt 4404, federalTaxDue: makeFromInt 33905, stateTaxDue: makeFromInt 10477 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47117, ordinaryIncomeNonSS: makeFromInt 89766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21463, stateTaxDue: makeFromInt 4233 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39073, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24877, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2663, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1001, ordinaryIncomeNonSS: makeFromInt 52845, qualifiedIncome: makeFromInt 89184, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13502, stateTaxDue: makeFromInt 6726 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37, ordinaryIncomeNonSS: makeFromInt 130702, qualifiedIncome: makeFromInt 6299, itemizedDeductions: makeFromInt 7080, federalTaxDue: makeFromInt 22628, stateTaxDue: makeFromInt 6595 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89974, qualifiedIncome: makeFromInt 61602, itemizedDeductions: makeFromInt 13783, federalTaxDue: makeFromInt 23613, stateTaxDue: makeFromInt 7104 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128243, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6349, federalTaxDue: makeFromInt 15391, stateTaxDue: makeFromInt 5888 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 114735, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27014, stateTaxDue: makeFromInt 10299 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48909, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15982, federalTaxDue: makeFromInt 34916, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37318, ordinaryIncomeNonSS: makeFromInt 68298, qualifiedIncome: makeFromInt 21561, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17372, stateTaxDue: makeFromInt 4154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4013, ordinaryIncomeNonSS: makeFromInt 46063, qualifiedIncome: makeFromInt 48399, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9875, stateTaxDue: makeFromInt 4471 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10977, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1054, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5313 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32406, ordinaryIncomeNonSS: makeFromInt 60581, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22021, federalTaxDue: makeFromInt 11285, stateTaxDue: makeFromInt 2865 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25970, ordinaryIncomeNonSS: makeFromInt 34653, qualifiedIncome: makeFromInt 4528, itemizedDeductions: makeFromInt 18472, federalTaxDue: makeFromInt 1915, stateTaxDue: makeFromInt 1570 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28722, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4062, federalTaxDue: makeFromInt 35491, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15464, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53683, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1801, stateTaxDue: makeFromInt 2429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12094, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93792, qualifiedIncome: makeFromInt 62154, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22340, stateTaxDue: makeFromInt 7542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61347, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1642, stateTaxDue: makeFromInt 2578 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1401 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11447, itemizedDeductions: makeFromInt 853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125068, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22227, stateTaxDue: makeFromInt 6032 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12391, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 6905, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6859, ordinaryIncomeNonSS: makeFromInt 89038, qualifiedIncome: makeFromInt 62061, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16135, stateTaxDue: makeFromInt 6984 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17403, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18054, federalTaxDue: makeFromInt 29053, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28688, ordinaryIncomeNonSS: makeFromInt 82622, qualifiedIncome: makeFromInt 21257, itemizedDeductions: makeFromInt 21158, federalTaxDue: makeFromInt 16371, stateTaxDue: makeFromInt 4619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42754, ordinaryIncomeNonSS: makeFromInt 27179, qualifiedIncome: makeFromInt 71903, itemizedDeductions: makeFromInt 14053, federalTaxDue: makeFromInt 13439, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1375, ordinaryIncomeNonSS: makeFromInt 37770, qualifiedIncome: makeFromInt 8675, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 894, stateTaxDue: makeFromInt 1867 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3805, federalTaxDue: makeFromInt 23260, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68897, itemizedDeductions: makeFromInt 29274, federalTaxDue: makeFromInt 7449, stateTaxDue: makeFromInt 2990 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43073, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1479 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 127630, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23996, federalTaxDue: makeFromInt 23267, stateTaxDue: makeFromInt 5707 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 8011, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29027, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21012, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68937, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2781, stateTaxDue: makeFromInt 2965 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123937, qualifiedIncome: makeFromInt 89267, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27255, stateTaxDue: makeFromInt 10221 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 3735, qualifiedIncome: makeFromInt 79193, itemizedDeductions: makeFromInt 8032, federalTaxDue: makeFromInt 3509, stateTaxDue: makeFromInt 3571 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13823, ordinaryIncomeNonSS: makeFromInt 18878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20281, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 36794, itemizedDeductions: makeFromInt 16738, federalTaxDue: makeFromInt 28070, stateTaxDue: makeFromInt 8976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35570, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11843, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45874, ordinaryIncomeNonSS: makeFromInt 39138, qualifiedIncome: makeFromInt 7182, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6610, stateTaxDue: makeFromInt 1934 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31470, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9320, stateTaxDue: makeFromInt 4643 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38476, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6280, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3755, ordinaryIncomeNonSS: makeFromInt 149067, qualifiedIncome: makeFromInt 46749, itemizedDeductions: makeFromInt 13717, federalTaxDue: makeFromInt 31320, stateTaxDue: makeFromInt 9216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136558, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11549, federalTaxDue: makeFromInt 35487, stateTaxDue: makeFromInt 11514 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27372, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24468, stateTaxDue: makeFromInt 6929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43151, ordinaryIncomeNonSS: makeFromInt 98109, qualifiedIncome: makeFromInt 81909, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 40166, stateTaxDue: makeFromInt 8957 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24712, ordinaryIncomeNonSS: makeFromInt 44760, qualifiedIncome: makeFromInt 7863, itemizedDeductions: makeFromInt 14268, federalTaxDue: makeFromInt 8367, stateTaxDue: makeFromInt 2233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36045, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 9202, itemizedDeductions: makeFromInt 13614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59664, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33830, stateTaxDue: makeFromInt 10244 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16552, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5291 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8578, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63269, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35723, stateTaxDue: makeFromInt 10326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63947, qualifiedIncome: makeFromInt 23341, itemizedDeductions: makeFromInt 28385, federalTaxDue: makeFromInt 1984, stateTaxDue: makeFromInt 4023 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3249, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 77174, itemizedDeductions: makeFromInt 11955, federalTaxDue: makeFromInt 5929, stateTaxDue: makeFromInt 3508 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123303, qualifiedIncome: makeFromInt 63375, itemizedDeductions: makeFromInt 5617, federalTaxDue: makeFromInt 26748, stateTaxDue: makeFromInt 8759 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36138, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43689, ordinaryIncomeNonSS: makeFromInt 88322, qualifiedIncome: makeFromInt 74116, itemizedDeductions: makeFromInt 2445, federalTaxDue: makeFromInt 29392, stateTaxDue: makeFromInt 7734 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 50 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35256, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98214, itemizedDeductions: makeFromInt 7193, federalTaxDue: makeFromInt 14191, stateTaxDue: makeFromInt 4785 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4543, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37441, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71050, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31155, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4825, federalTaxDue: makeFromInt 16050, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42411, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2370, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4230, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125126, qualifiedIncome: makeFromInt 45936, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20767, stateTaxDue: makeFromInt 7992 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7340, ordinaryIncomeNonSS: makeFromInt 146833, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27222, federalTaxDue: makeFromInt 36992, stateTaxDue: makeFromInt 12140 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125839, qualifiedIncome: makeFromInt 80893, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29425, stateTaxDue: makeFromInt 10319 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32161, ordinaryIncomeNonSS: makeFromInt 145123, qualifiedIncome: makeFromInt 4029, itemizedDeductions: makeFromInt 16235, federalTaxDue: makeFromInt 23774, stateTaxDue: makeFromInt 6783 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1860, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55386, itemizedDeductions: makeFromInt 14237, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30002, ordinaryIncomeNonSS: makeFromInt 13847, qualifiedIncome: makeFromInt 97395, itemizedDeductions: makeFromInt 1051, federalTaxDue: makeFromInt 4939, stateTaxDue: makeFromInt 5021 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23082, ordinaryIncomeNonSS: makeFromInt 65491, qualifiedIncome: makeFromInt 68230, itemizedDeductions: makeFromInt 4966, federalTaxDue: makeFromInt 14426, stateTaxDue: makeFromInt 6309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16977, ordinaryIncomeNonSS: makeFromInt 465, qualifiedIncome: makeFromInt 67041, itemizedDeductions: makeFromInt 27043, federalTaxDue: makeFromInt 2496, stateTaxDue: makeFromInt 3096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43817, ordinaryIncomeNonSS: makeFromInt 123539, qualifiedIncome: makeFromInt 89976, itemizedDeductions: makeFromInt 3567, federalTaxDue: makeFromInt 41072, stateTaxDue: makeFromInt 10440 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 758, qualifiedIncome: makeFromInt 36742, itemizedDeductions: makeFromInt 22289, federalTaxDue: makeFromInt 1250, stateTaxDue: makeFromInt 1420 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42351, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7250, itemizedDeductions: makeFromInt 22655, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69323, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5622, federalTaxDue: makeFromInt 7634, stateTaxDue: makeFromInt 3011 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39210, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8083, ordinaryIncomeNonSS: makeFromInt 77012, qualifiedIncome: makeFromInt 31687, itemizedDeductions: makeFromInt 3884, federalTaxDue: makeFromInt 12671, stateTaxDue: makeFromInt 4860 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 21311, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27547, stateTaxDue: makeFromInt 8106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41947, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60844, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44064, stateTaxDue: makeFromInt 10287 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139482, qualifiedIncome: makeFromInt 87132, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28984, stateTaxDue: makeFromInt 10856 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29214, ordinaryIncomeNonSS: makeFromInt 337, qualifiedIncome: makeFromInt 69892, itemizedDeductions: makeFromInt 3935, federalTaxDue: makeFromInt 8059, stateTaxDue: makeFromInt 3357 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46181, qualifiedIncome: makeFromInt 27721, itemizedDeductions: makeFromInt 9040, federalTaxDue: makeFromInt 7927, stateTaxDue: makeFromInt 3545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80878, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30360, stateTaxDue: makeFromInt 11069 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109988, qualifiedIncome: makeFromInt 5565, itemizedDeductions: makeFromInt 26714, federalTaxDue: makeFromInt 16412, stateTaxDue: makeFromInt 5669 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36182, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27282, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12032, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5591, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 27 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83975, qualifiedIncome: makeFromInt 77912, itemizedDeductions: makeFromInt 1984, federalTaxDue: makeFromInt 32348, stateTaxDue: makeFromInt 7639 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135071, qualifiedIncome: makeFromInt 64665, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28752, stateTaxDue: makeFromInt 9532 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32847, qualifiedIncome: makeFromInt 48511, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7678, stateTaxDue: makeFromInt 3496 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49738, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90792, itemizedDeductions: makeFromInt 18646, federalTaxDue: makeFromInt 48087, stateTaxDue: makeFromInt 11832 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36013, ordinaryIncomeNonSS: makeFromInt 146127, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16051, federalTaxDue: makeFromInt 26587, stateTaxDue: makeFromInt 6800 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25771, ordinaryIncomeNonSS: makeFromInt 102958, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19254, federalTaxDue: makeFromInt 12698, stateTaxDue: makeFromInt 4673 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40251, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15752, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144214, qualifiedIncome: makeFromInt 12643, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18852, stateTaxDue: makeFromInt 7368 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16802, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29504, stateTaxDue: makeFromInt 7865 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45763, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 103865, qualifiedIncome: makeFromInt 47268, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27011, stateTaxDue: makeFromInt 7055 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45720, itemizedDeductions: makeFromInt 13884, federalTaxDue: makeFromInt 36873, stateTaxDue: makeFromInt 9757 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9515, federalTaxDue: makeFromInt 4729, stateTaxDue: makeFromInt 2536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135316, qualifiedIncome: makeFromInt 61176, itemizedDeductions: makeFromInt 20503, federalTaxDue: makeFromInt 34985, stateTaxDue: makeFromInt 9368 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86786, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7228, stateTaxDue: makeFromInt 3998 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 63218, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15563, stateTaxDue: makeFromInt 2796 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86853, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35849, stateTaxDue: makeFromInt 11388 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13267, ordinaryIncomeNonSS: makeFromInt 122711, qualifiedIncome: makeFromInt 91692, itemizedDeductions: makeFromInt 3870, federalTaxDue: makeFromInt 37320, stateTaxDue: makeFromInt 10506 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17803, ordinaryIncomeNonSS: makeFromInt 119254, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25133, federalTaxDue: makeFromInt 17990, stateTaxDue: makeFromInt 5654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34275, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1524 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42015, ordinaryIncomeNonSS: makeFromInt 83406, qualifiedIncome: makeFromInt 16581, itemizedDeductions: makeFromInt 15914, federalTaxDue: makeFromInt 23232, stateTaxDue: makeFromInt 4875 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 797, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14296, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 340 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95641, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8286, stateTaxDue: makeFromInt 4327 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11953, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13274, federalTaxDue: makeFromInt 23202, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40252, ordinaryIncomeNonSS: makeFromInt 41611, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3218, federalTaxDue: makeFromInt 5531, stateTaxDue: makeFromInt 1506 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13320, ordinaryIncomeNonSS: makeFromInt 80352, qualifiedIncome: makeFromInt 97796, itemizedDeductions: makeFromInt 27076, federalTaxDue: makeFromInt 24629, stateTaxDue: makeFromInt 8652 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9755, federalTaxDue: makeFromInt 15386, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27695, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13520, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3053, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28581, itemizedDeductions: makeFromInt 13806, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1054 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38432, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69642, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10968, stateTaxDue: makeFromInt 3327 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46758, ordinaryIncomeNonSS: makeFromInt 120321, qualifiedIncome: makeFromInt 55265, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34354, stateTaxDue: makeFromInt 8404 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 5813, ordinaryIncomeNonSS: makeFromInt 52039, qualifiedIncome: makeFromInt 37377, itemizedDeductions: makeFromInt 23447, federalTaxDue: makeFromInt 3311, stateTaxDue: makeFromInt 3796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 24624, qualifiedIncome: makeFromInt 18174, itemizedDeductions: makeFromInt 26965, federalTaxDue: makeFromInt 3413, stateTaxDue: makeFromInt 1765 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36908, stateTaxDue: makeFromInt 9047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143739, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12872, federalTaxDue: makeFromInt 24805, stateTaxDue: makeFromInt 6932 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34885, ordinaryIncomeNonSS: makeFromInt 136736, qualifiedIncome: makeFromInt 1315, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30838, stateTaxDue: makeFromInt 6448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42762, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24180, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62337, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2526 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55531, itemizedDeductions: makeFromInt 7200, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2302 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13979, qualifiedIncome: makeFromInt 34099, itemizedDeductions: makeFromInt 16399, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2149 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28199, ordinaryIncomeNonSS: makeFromInt 55967, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10432, federalTaxDue: makeFromInt 24969, stateTaxDue: makeFromInt 7543 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27534, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40070, ordinaryIncomeNonSS: makeFromInt 127831, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2658, federalTaxDue: makeFromInt 31894, stateTaxDue: makeFromInt 6173 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1768, ordinaryIncomeNonSS: makeFromInt 46857, qualifiedIncome: makeFromInt 59177, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5435, stateTaxDue: makeFromInt 4927 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 71199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31816, stateTaxDue: makeFromInt 10685 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16924, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9324, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18572, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24249, ordinaryIncomeNonSS: makeFromInt 80863, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8923, stateTaxDue: makeFromInt 3471 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129336, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23025, federalTaxDue: makeFromInt 19536, stateTaxDue: makeFromInt 6212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29989, ordinaryIncomeNonSS: makeFromInt 54110, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10093, federalTaxDue: makeFromInt 6085, stateTaxDue: makeFromInt 2107 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 608, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2920, itemizedDeductions: makeFromInt 4916, federalTaxDue: makeFromInt 18780, stateTaxDue: makeFromInt 6971 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28563, itemizedDeductions: makeFromInt 4087, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4913, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58035, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2454, stateTaxDue: makeFromInt 2647 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9068, stateTaxDue: makeFromInt 4575 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25498, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25244, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 787 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33159, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58658, itemizedDeductions: makeFromInt 1347, federalTaxDue: makeFromInt 5027, stateTaxDue: makeFromInt 2645 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42112, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25846, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10796, qualifiedIncome: makeFromInt 14288, itemizedDeductions: makeFromInt 10394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1055 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26153, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42056, ordinaryIncomeNonSS: makeFromInt 99845, qualifiedIncome: makeFromInt 18398, itemizedDeductions: makeFromInt 17933, federalTaxDue: makeFromInt 18590, stateTaxDue: makeFromInt 5378 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50314, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28377, stateTaxDue: makeFromInt 9563 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127726, qualifiedIncome: makeFromInt 59791, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23930, stateTaxDue: makeFromInt 9115 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42445, ordinaryIncomeNonSS: makeFromInt 139697, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5911, federalTaxDue: makeFromInt 23899, stateTaxDue: makeFromInt 6510 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25988, ordinaryIncomeNonSS: makeFromInt 110181, qualifiedIncome: makeFromInt 96534, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29258, stateTaxDue: makeFromInt 9861 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31332, ordinaryIncomeNonSS: makeFromInt 114402, qualifiedIncome: makeFromInt 13976, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24207, stateTaxDue: makeFromInt 5996 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23717, qualifiedIncome: makeFromInt 48796, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3249 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34649, ordinaryIncomeNonSS: makeFromInt 50206, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13558, federalTaxDue: makeFromInt 6215, stateTaxDue: makeFromInt 2010 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106950, qualifiedIncome: makeFromInt 55332, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18183, stateTaxDue: makeFromInt 7624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65181, itemizedDeductions: makeFromInt 26714, federalTaxDue: makeFromInt 4130, stateTaxDue: makeFromInt 2896 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74336, itemizedDeductions: makeFromInt 7050, federalTaxDue: makeFromInt 4899, stateTaxDue: makeFromInt 3262 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58543, qualifiedIncome: makeFromInt 1168, itemizedDeductions: makeFromInt 5974, federalTaxDue: makeFromInt 4281, stateTaxDue: makeFromInt 2611 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84560, itemizedDeductions: makeFromInt 22444, federalTaxDue: makeFromInt 37472, stateTaxDue: makeFromInt 11623 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19220, ordinaryIncomeNonSS: makeFromInt 148733, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5206, federalTaxDue: makeFromInt 47875, stateTaxDue: makeFromInt 12339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26743, ordinaryIncomeNonSS: makeFromInt 41510, qualifiedIncome: makeFromInt 84949, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4945, stateTaxDue: makeFromInt 5797 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2727, ordinaryIncomeNonSS: makeFromInt 109339, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17048, stateTaxDue: makeFromInt 5148 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 894, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28046, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14210, ordinaryIncomeNonSS: makeFromInt 129271, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14317, stateTaxDue: makeFromInt 5940 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64944, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16424, federalTaxDue: makeFromInt 4106, stateTaxDue: makeFromInt 2772 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40614, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4091, stateTaxDue: makeFromInt 1556 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33663, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24614, federalTaxDue: makeFromInt 31249, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 32806, qualifiedIncome: makeFromInt 23868, itemizedDeductions: makeFromInt 22750, federalTaxDue: makeFromInt 9691, stateTaxDue: makeFromInt 2340 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1833, ordinaryIncomeNonSS: makeFromInt 136418, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21692, stateTaxDue: makeFromInt 6611 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12647, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42555, ordinaryIncomeNonSS: makeFromInt 11646, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8731, ordinaryIncomeNonSS: makeFromInt 6067, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25689, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4859 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84963, qualifiedIncome: makeFromInt 87522, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21400, stateTaxDue: makeFromInt 8348 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 133703, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24119, federalTaxDue: makeFromInt 20380, stateTaxDue: makeFromInt 6230 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23643, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7905, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11891, ordinaryIncomeNonSS: makeFromInt 7448, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18410, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10668, ordinaryIncomeNonSS: makeFromInt 70108, qualifiedIncome: makeFromInt 89466, itemizedDeductions: makeFromInt 10422, federalTaxDue: makeFromInt 23222, stateTaxDue: makeFromInt 7524 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23113, ordinaryIncomeNonSS: makeFromInt 94256, qualifiedIncome: makeFromInt 95120, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29654, stateTaxDue: makeFromInt 9107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24294, ordinaryIncomeNonSS: makeFromInt 36020, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29684, federalTaxDue: makeFromInt 263, stateTaxDue: makeFromInt 1286 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 112827, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25660, stateTaxDue: makeFromInt 10166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57817, qualifiedIncome: makeFromInt 44961, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2989, stateTaxDue: makeFromInt 4813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13943, qualifiedIncome: makeFromInt 17475, itemizedDeductions: makeFromInt 17155, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1256 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4043, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49793, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29033, stateTaxDue: makeFromInt 7293 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1681 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45094, ordinaryIncomeNonSS: makeFromInt 18962, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19608, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 473 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41796, ordinaryIncomeNonSS: makeFromInt 83801, qualifiedIncome: makeFromInt 63039, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20825, stateTaxDue: makeFromInt 6971 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40001, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11374, federalTaxDue: makeFromInt 838, stateTaxDue: makeFromInt 1489 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33932, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1343 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45275, ordinaryIncomeNonSS: makeFromInt 138150, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10617, federalTaxDue: makeFromInt 31061, stateTaxDue: makeFromInt 6699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26122, ordinaryIncomeNonSS: makeFromInt 27788, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23419, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33982, ordinaryIncomeNonSS: makeFromInt 67529, qualifiedIncome: makeFromInt 66994, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27336, stateTaxDue: makeFromInt 6636 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83269, qualifiedIncome: makeFromInt 74273, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32572, stateTaxDue: makeFromInt 7532 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 37438, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1197 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15738, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60795, qualifiedIncome: makeFromInt 54570, itemizedDeductions: makeFromInt 23616, federalTaxDue: makeFromInt 18814, stateTaxDue: makeFromInt 5455 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28293, qualifiedIncome: makeFromInt 44251, itemizedDeductions: makeFromInt 7453, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76892, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9299, stateTaxDue: makeFromInt 3390 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18884, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6642, qualifiedIncome: makeFromInt 14516, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 808, stateTaxDue: makeFromInt 732 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7578, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111018, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18715, stateTaxDue: makeFromInt 5315 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28850, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50603, itemizedDeductions: makeFromInt 10003, federalTaxDue: makeFromInt 40850, stateTaxDue: makeFromInt 9706 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23103, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19722, federalTaxDue: makeFromInt 21805, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46635, ordinaryIncomeNonSS: makeFromInt 116765, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27845, stateTaxDue: makeFromInt 5383 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89500, qualifiedIncome: makeFromInt 98810, itemizedDeductions: makeFromInt 21115, federalTaxDue: makeFromInt 29089, stateTaxDue: makeFromInt 8941 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18570, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63199, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1920, stateTaxDue: makeFromInt 2876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 130428, qualifiedIncome: makeFromInt 43967, itemizedDeductions: makeFromInt 19686, federalTaxDue: makeFromInt 25158, stateTaxDue: makeFromInt 8345 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28417, ordinaryIncomeNonSS: makeFromInt 23678, qualifiedIncome: makeFromInt 43382, itemizedDeductions: makeFromInt 664, federalTaxDue: makeFromInt 1498, stateTaxDue: makeFromInt 2767 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14548, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26629, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42186, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12326, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 969 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70802, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34973, stateTaxDue: makeFromInt 10710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75130, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14611, federalTaxDue: makeFromInt 7543, stateTaxDue: makeFromInt 3383 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37130, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46657, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 589, stateTaxDue: makeFromInt 1931 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85115, qualifiedIncome: makeFromInt 14198, itemizedDeductions: makeFromInt 16424, federalTaxDue: makeFromInt 6339, stateTaxDue: makeFromInt 4412 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73059, itemizedDeductions: makeFromInt 18500, federalTaxDue: makeFromInt 3399, stateTaxDue: makeFromInt 3175 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89720, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7487, stateTaxDue: makeFromInt 3911 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39545, itemizedDeductions: makeFromInt 21196, federalTaxDue: makeFromInt 39481, stateTaxDue: makeFromInt 9102 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40785, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33735, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9974, ordinaryIncomeNonSS: makeFromInt 65968, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17577, federalTaxDue: makeFromInt 21166, stateTaxDue: makeFromInt 7723 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 735, ordinaryIncomeNonSS: makeFromInt 83865, qualifiedIncome: makeFromInt 62099, itemizedDeductions: makeFromInt 7168, federalTaxDue: makeFromInt 20602, stateTaxDue: makeFromInt 6843 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66387, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28333, federalTaxDue: makeFromInt 4155, stateTaxDue: makeFromInt 2844 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71737, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5864, stateTaxDue: makeFromInt 3012 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38562, ordinaryIncomeNonSS: makeFromInt 44054, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5316, stateTaxDue: makeFromInt 1748 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52132, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5789, stateTaxDue: makeFromInt 2108 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28849, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73438, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5368, stateTaxDue: makeFromInt 3317 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26322, ordinaryIncomeNonSS: makeFromInt 44204, qualifiedIncome: makeFromInt 2482, itemizedDeductions: makeFromInt 14369, federalTaxDue: makeFromInt 3889, stateTaxDue: makeFromInt 1659 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23757, ordinaryIncomeNonSS: makeFromInt 63161, qualifiedIncome: makeFromInt 1925, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11926, stateTaxDue: makeFromInt 2891 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6632, ordinaryIncomeNonSS: makeFromInt 75349, qualifiedIncome: makeFromInt 31591, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6597, stateTaxDue: makeFromInt 5005 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54520, itemizedDeductions: makeFromInt 28412, federalTaxDue: makeFromInt 5525, stateTaxDue: makeFromInt 2271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41221, ordinaryIncomeNonSS: makeFromInt 94975, qualifiedIncome: makeFromInt 99157, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38337, stateTaxDue: makeFromInt 9554 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15258, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20502, stateTaxDue: makeFromInt 7030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38976, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130624, qualifiedIncome: makeFromInt 68565, itemizedDeductions: makeFromInt 12693, federalTaxDue: makeFromInt 30297, stateTaxDue: makeFromInt 9710 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138041, qualifiedIncome: makeFromInt 13356, itemizedDeductions: makeFromInt 25932, federalTaxDue: makeFromInt 18546, stateTaxDue: makeFromInt 7272 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29341, ordinaryIncomeNonSS: makeFromInt 44400, qualifiedIncome: makeFromInt 76672, itemizedDeductions: makeFromInt 7739, federalTaxDue: makeFromInt 11782, stateTaxDue: makeFromInt 5522 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 78052, qualifiedIncome: makeFromInt 50456, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17354, stateTaxDue: makeFromInt 6170 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51540, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1825, stateTaxDue: makeFromInt 2179 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 12096, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16980, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9063, ordinaryIncomeNonSS: makeFromInt 79038, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17407, stateTaxDue: makeFromInt 8277 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82105, qualifiedIncome: makeFromInt 41690, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19919, stateTaxDue: makeFromInt 6089 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 143745, qualifiedIncome: makeFromInt 72276, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44978, stateTaxDue: makeFromInt 10466 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95507, qualifiedIncome: makeFromInt 66767, itemizedDeductions: makeFromInt 17415, federalTaxDue: makeFromInt 15050, stateTaxDue: makeFromInt 7623 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91552, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7746, federalTaxDue: makeFromInt 28316, stateTaxDue: makeFromInt 9451 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34609, ordinaryIncomeNonSS: makeFromInt 28735, qualifiedIncome: makeFromInt 58105, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4084, stateTaxDue: makeFromInt 3776 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31299, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83381, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44075, stateTaxDue: makeFromInt 11352 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 123618, qualifiedIncome: makeFromInt 28982, itemizedDeductions: makeFromInt 12235, federalTaxDue: makeFromInt 29207, stateTaxDue: makeFromInt 7130 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10897, ordinaryIncomeNonSS: makeFromInt 60321, qualifiedIncome: makeFromInt 36511, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7842, stateTaxDue: makeFromInt 4467 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36560, ordinaryIncomeNonSS: makeFromInt 92349, qualifiedIncome: makeFromInt 1415, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12594, stateTaxDue: makeFromInt 4013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20522, ordinaryIncomeNonSS: makeFromInt 140635, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4838, federalTaxDue: makeFromInt 26900, stateTaxDue: makeFromInt 6724 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22261, federalTaxDue: makeFromInt 48853, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113286, qualifiedIncome: makeFromInt 9032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16586, stateTaxDue: makeFromInt 5687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 82873, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3469 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39040, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36279, ordinaryIncomeNonSS: makeFromInt 147070, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26549, federalTaxDue: makeFromInt 29224, stateTaxDue: makeFromInt 7154 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40717, ordinaryIncomeNonSS: makeFromInt 14316, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5689, federalTaxDue: makeFromInt 469, stateTaxDue: makeFromInt 461 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144315, qualifiedIncome: makeFromInt 93314, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49305, stateTaxDue: makeFromInt 11426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 29357, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20598, stateTaxDue: makeFromInt 5893 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16695, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97340, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24488, federalTaxDue: makeFromInt 11645, stateTaxDue: makeFromInt 4412 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102702, qualifiedIncome: makeFromInt 96010, itemizedDeductions: makeFromInt 10462, federalTaxDue: makeFromInt 27400, stateTaxDue: makeFromInt 9490 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18434, qualifiedIncome: makeFromInt 63194, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1833, stateTaxDue: makeFromInt 3816 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41176, ordinaryIncomeNonSS: makeFromInt 5037, qualifiedIncome: makeFromInt 59929, itemizedDeductions: makeFromInt 16892, federalTaxDue: makeFromInt 2153, stateTaxDue: makeFromInt 2762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19235, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48474, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29864, federalTaxDue: makeFromInt 2036, stateTaxDue: makeFromInt 2169 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 144107, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26631, federalTaxDue: makeFromInt 22030, stateTaxDue: makeFromInt 6750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29933, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23270, itemizedDeductions: makeFromInt 4475, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 636 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25923, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 779, ordinaryIncomeNonSS: makeFromInt 43573, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18181, federalTaxDue: makeFromInt 1666, stateTaxDue: makeFromInt 1704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91372, qualifiedIncome: makeFromInt 44187, itemizedDeductions: makeFromInt 23679, federalTaxDue: makeFromInt 12638, stateTaxDue: makeFromInt 6363 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37357, ordinaryIncomeNonSS: makeFromInt 141280, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 43788, stateTaxDue: makeFromInt 11489 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 61569, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35543, stateTaxDue: makeFromInt 10123 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 769, ordinaryIncomeNonSS: makeFromInt 132968, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17767, stateTaxDue: makeFromInt 6231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33719, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21055, federalTaxDue: makeFromInt 18716, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79824, qualifiedIncome: makeFromInt 83560, itemizedDeductions: makeFromInt 15128, federalTaxDue: makeFromInt 18505, stateTaxDue: makeFromInt 7884 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28687, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5978, federalTaxDue: makeFromInt 224, stateTaxDue: makeFromInt 959 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30599, ordinaryIncomeNonSS: makeFromInt 111108, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17309, stateTaxDue: makeFromInt 5218 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40415, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34552, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1995, ordinaryIncomeNonSS: makeFromInt 38718, qualifiedIncome: makeFromInt 54087, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9034, stateTaxDue: makeFromInt 4185 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58030, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36307, stateTaxDue: makeFromInt 10181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57789, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1108, stateTaxDue: makeFromInt 2600 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49194, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14046, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42085, ordinaryIncomeNonSS: makeFromInt 53300, qualifiedIncome: makeFromInt 25408, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13289, stateTaxDue: makeFromInt 3560 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57303, qualifiedIncome: makeFromInt 83779, itemizedDeductions: makeFromInt 9018, federalTaxDue: makeFromInt 24428, stateTaxDue: makeFromInt 6644 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113315, qualifiedIncome: makeFromInt 28713, itemizedDeductions: makeFromInt 1161, federalTaxDue: makeFromInt 32010, stateTaxDue: makeFromInt 6846 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8670, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74472, itemizedDeductions: makeFromInt 395, federalTaxDue: makeFromInt 45373, stateTaxDue: makeFromInt 11224 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97192, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13766, stateTaxDue: makeFromInt 4405 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21663, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27777, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46318, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16178, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45591, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52035, itemizedDeductions: makeFromInt 26914, federalTaxDue: makeFromInt 2113, stateTaxDue: makeFromInt 2225 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44628, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39329, itemizedDeductions: makeFromInt 19972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43900, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9551, federalTaxDue: makeFromInt 27808, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49720, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16032, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 389 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10118, ordinaryIncomeNonSS: makeFromInt 47684, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4275, stateTaxDue: makeFromInt 1863 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21136, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22204, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52423, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2729, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27132, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40275, ordinaryIncomeNonSS: makeFromInt 33386, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22865, stateTaxDue: makeFromInt 6456 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3286, ordinaryIncomeNonSS: makeFromInt 129880, qualifiedIncome: makeFromInt 14166, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16210, stateTaxDue: makeFromInt 6727 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19979, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31324, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31410, stateTaxDue: makeFromInt 8811 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23171, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7549, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30165, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32380, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1223 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 22671, qualifiedIncome: makeFromInt 63163, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17112, stateTaxDue: makeFromInt 4153 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5448, ordinaryIncomeNonSS: makeFromInt 141440, qualifiedIncome: makeFromInt 71520, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34135, stateTaxDue: makeFromInt 10209 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49331, qualifiedIncome: makeFromInt 78136, itemizedDeductions: makeFromInt 16791, federalTaxDue: makeFromInt 12153, stateTaxDue: makeFromInt 6154 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53977, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9279, federalTaxDue: makeFromInt 2950, stateTaxDue: makeFromInt 2224 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1544, ordinaryIncomeNonSS: makeFromInt 50878, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4190, stateTaxDue: makeFromInt 7042 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62739, qualifiedIncome: makeFromInt 83765, itemizedDeductions: makeFromInt 1296, federalTaxDue: makeFromInt 15131, stateTaxDue: makeFromInt 6750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49717, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54933, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2592, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8093, ordinaryIncomeNonSS: makeFromInt 31855, qualifiedIncome: makeFromInt 37671, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1583, stateTaxDue: makeFromInt 3021 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105579, qualifiedIncome: makeFromInt 33569, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20682, stateTaxDue: makeFromInt 6502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62507, itemizedDeductions: makeFromInt 18856, federalTaxDue: makeFromInt 1006, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30509, itemizedDeductions: makeFromInt 27985, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 950 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17571, federalTaxDue: makeFromInt 40828, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31528, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78673, itemizedDeductions: makeFromInt 25627, federalTaxDue: makeFromInt 4241, stateTaxDue: makeFromInt 3462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11722, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19721, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15774, federalTaxDue: makeFromInt 33564, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8226, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90278, itemizedDeductions: makeFromInt 11421, federalTaxDue: makeFromInt 5172, stateTaxDue: makeFromInt 3939 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 234, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36937, itemizedDeductions: makeFromInt 10716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1231 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21188, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124229, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13008, stateTaxDue: makeFromInt 5736 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45543, qualifiedIncome: makeFromInt 95823, itemizedDeductions: makeFromInt 4871, federalTaxDue: makeFromInt 23444, stateTaxDue: makeFromInt 6761 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55834, qualifiedIncome: makeFromInt 31002, itemizedDeductions: makeFromInt 14265, federalTaxDue: makeFromInt 11758, stateTaxDue: makeFromInt 3867 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34315, ordinaryIncomeNonSS: makeFromInt 12196, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14461, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 235 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74075, qualifiedIncome: makeFromInt 32697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23190, stateTaxDue: makeFromInt 5084 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32705, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 89689, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32291, stateTaxDue: makeFromInt 11509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102266, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22814, federalTaxDue: makeFromInt 8585, stateTaxDue: makeFromInt 4438 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29302, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80582, itemizedDeductions: makeFromInt 28526, federalTaxDue: makeFromInt 6027, stateTaxDue: makeFromInt 3574 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 6024, qualifiedIncome: makeFromInt 40747, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3688, stateTaxDue: makeFromInt 1764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32659, qualifiedIncome: makeFromInt 64642, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7266, stateTaxDue: makeFromInt 4616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13165, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 223 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56129, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 799, stateTaxDue: makeFromInt 2312 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 23756, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26695, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 733 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20553, ordinaryIncomeNonSS: makeFromInt 132822, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27052, federalTaxDue: makeFromInt 17290, stateTaxDue: makeFromInt 6121 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88515, itemizedDeductions: makeFromInt 7933, federalTaxDue: makeFromInt 4575, stateTaxDue: makeFromInt 3751 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42490, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58985, itemizedDeductions: makeFromInt 12898, federalTaxDue: makeFromInt 36142, stateTaxDue: makeFromInt 9907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48579, ordinaryIncomeNonSS: makeFromInt 144900, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27133, federalTaxDue: makeFromInt 46903, stateTaxDue: makeFromInt 12062 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33009, itemizedDeductions: makeFromInt 3238, federalTaxDue: makeFromInt 29361, stateTaxDue: makeFromInt 8783 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9599, ordinaryIncomeNonSS: makeFromInt 51962, qualifiedIncome: makeFromInt 26391, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12173, stateTaxDue: makeFromInt 3772 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6101, ordinaryIncomeNonSS: makeFromInt 57015, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4985, stateTaxDue: makeFromInt 2334 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6960, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19971, federalTaxDue: makeFromInt 40211, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48695, ordinaryIncomeNonSS: makeFromInt 106064, qualifiedIncome: makeFromInt 90958, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39740, stateTaxDue: makeFromInt 9396 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48392, ordinaryIncomeNonSS: makeFromInt 115930, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19782, stateTaxDue: makeFromInt 5322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43855, itemizedDeductions: makeFromInt 14154, federalTaxDue: makeFromInt 27020, stateTaxDue: makeFromInt 9234 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 45787, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47978, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2940, stateTaxDue: makeFromInt 2024 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48351, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34931, stateTaxDue: makeFromInt 9799 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2282, ordinaryIncomeNonSS: makeFromInt 91148, qualifiedIncome: makeFromInt 13129, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7176, stateTaxDue: makeFromInt 4739 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29605, ordinaryIncomeNonSS: makeFromInt 148, qualifiedIncome: makeFromInt 43027, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1684 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32632, ordinaryIncomeNonSS: makeFromInt 3675, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83630, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15825, stateTaxDue: makeFromInt 3880 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34259, ordinaryIncomeNonSS: makeFromInt 118593, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10845, federalTaxDue: makeFromInt 27582, stateTaxDue: makeFromInt 5701 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10337, ordinaryIncomeNonSS: makeFromInt 132077, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26040, federalTaxDue: makeFromInt 21393, stateTaxDue: makeFromInt 6149 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4468, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4610, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18620, ordinaryIncomeNonSS: makeFromInt 63680, qualifiedIncome: makeFromInt 71424, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17669, stateTaxDue: makeFromInt 6380 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111662, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15827, federalTaxDue: makeFromInt 14424, stateTaxDue: makeFromInt 5246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11083, federalTaxDue: makeFromInt 31687, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13311, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50831, itemizedDeductions: makeFromInt 26453, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2067 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42551, ordinaryIncomeNonSS: makeFromInt 12137, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19425, federalTaxDue: makeFromInt 14771, stateTaxDue: makeFromInt 5168 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23661, ordinaryIncomeNonSS: makeFromInt 146894, qualifiedIncome: makeFromInt 44468, itemizedDeductions: makeFromInt 18951, federalTaxDue: makeFromInt 30099, stateTaxDue: makeFromInt 9107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 115051, qualifiedIncome: makeFromInt 36128, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17512, stateTaxDue: makeFromInt 7057 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19572, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25076, federalTaxDue: makeFromInt 27810, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97255, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16656, federalTaxDue: makeFromInt 20010, stateTaxDue: makeFromInt 4409 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62971, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37634, stateTaxDue: makeFromInt 10174 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32965, ordinaryIncomeNonSS: makeFromInt 26603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16604, stateTaxDue: makeFromInt 6050 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44317, ordinaryIncomeNonSS: makeFromInt 38694, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14527, federalTaxDue: makeFromInt 4019, stateTaxDue: makeFromInt 1423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10136, federalTaxDue: makeFromInt 31065, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61972, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13651, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 15109, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39394, stateTaxDue: makeFromInt 8000 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22697, federalTaxDue: makeFromInt 11229, stateTaxDue: makeFromInt 4471 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26719, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22707, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29831, ordinaryIncomeNonSS: makeFromInt 52633, qualifiedIncome: makeFromInt 35460, itemizedDeductions: makeFromInt 12261, federalTaxDue: makeFromInt 11498, stateTaxDue: makeFromInt 4044 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147584, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11259, federalTaxDue: makeFromInt 39330, stateTaxDue: makeFromInt 7180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48622, ordinaryIncomeNonSS: makeFromInt 33709, qualifiedIncome: makeFromInt 20786, itemizedDeductions: makeFromInt 21983, federalTaxDue: makeFromInt 11140, stateTaxDue: makeFromInt 2555 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70629, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4789, stateTaxDue: makeFromInt 2856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34052, ordinaryIncomeNonSS: makeFromInt 121520, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39996, stateTaxDue: makeFromInt 10849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30352, ordinaryIncomeNonSS: makeFromInt 18070, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 642, federalTaxDue: makeFromInt 884, stateTaxDue: makeFromInt 575 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5469, federalTaxDue: makeFromInt 26601, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18737, ordinaryIncomeNonSS: makeFromInt 9880, qualifiedIncome: makeFromInt 93638, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7794, stateTaxDue: makeFromInt 4921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49153, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46421, stateTaxDue: makeFromInt 9366 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 7041, qualifiedIncome: makeFromInt 85158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1479, stateTaxDue: makeFromInt 4049 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118260, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16733, stateTaxDue: makeFromInt 5427 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 30132, qualifiedIncome: makeFromInt 9374, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 368, stateTaxDue: makeFromInt 1300 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 5435, qualifiedIncome: makeFromInt 62988, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11965, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 49224, qualifiedIncome: makeFromInt 15265, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5294, stateTaxDue: makeFromInt 2636 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116895, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15315, stateTaxDue: makeFromInt 5270 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48952, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127845, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32943, stateTaxDue: makeFromInt 11017 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41071, ordinaryIncomeNonSS: makeFromInt 52013, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9524, stateTaxDue: makeFromInt 2283 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13915, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 91913, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42933, stateTaxDue: makeFromInt 11641 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5035, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14157, federalTaxDue: makeFromInt 46082, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46883, qualifiedIncome: makeFromInt 71490, itemizedDeductions: makeFromInt 18702, federalTaxDue: makeFromInt 17565, stateTaxDue: makeFromInt 5486 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55021, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2276 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49319, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33749, itemizedDeductions: makeFromInt 28092, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1068 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54668, qualifiedIncome: makeFromInt 43897, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10919, stateTaxDue: makeFromInt 4473 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38556, ordinaryIncomeNonSS: makeFromInt 123195, qualifiedIncome: makeFromInt 97107, itemizedDeductions: makeFromInt 18655, federalTaxDue: makeFromInt 40275, stateTaxDue: makeFromInt 10580 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77158, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3661, stateTaxDue: makeFromInt 3553 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91781, qualifiedIncome: makeFromInt 36961, itemizedDeductions: makeFromInt 8978, federalTaxDue: makeFromInt 10041, stateTaxDue: makeFromInt 5962 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24039, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1590, stateTaxDue: makeFromInt 1002 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11237, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47799, qualifiedIncome: makeFromInt 19654, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3745, stateTaxDue: makeFromInt 2991 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21746, federalTaxDue: makeFromInt 40303, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24810, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9074, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47887, itemizedDeductions: makeFromInt 24211, federalTaxDue: makeFromInt 31560, stateTaxDue: makeFromInt 9519 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3434, ordinaryIncomeNonSS: makeFromInt 101900, qualifiedIncome: makeFromInt 79238, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19780, stateTaxDue: makeFromInt 8687 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91575, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16822, federalTaxDue: makeFromInt 7417, stateTaxDue: makeFromInt 4104 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33884, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21583, federalTaxDue: makeFromInt 743, stateTaxDue: makeFromInt 1219 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28161, ordinaryIncomeNonSS: makeFromInt 98121, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4798, federalTaxDue: makeFromInt 13844, stateTaxDue: makeFromInt 4351 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103263, qualifiedIncome: makeFromInt 89198, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22281, stateTaxDue: makeFromInt 9163 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11576, ordinaryIncomeNonSS: makeFromInt 138747, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27207, stateTaxDue: makeFromInt 6648 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29952, ordinaryIncomeNonSS: makeFromInt 100406, qualifiedIncome: makeFromInt 32941, itemizedDeductions: makeFromInt 10251, federalTaxDue: makeFromInt 19647, stateTaxDue: makeFromInt 6148 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18208, ordinaryIncomeNonSS: makeFromInt 57502, qualifiedIncome: makeFromInt 5314, itemizedDeductions: makeFromInt 24205, federalTaxDue: makeFromInt 7144, stateTaxDue: makeFromInt 2886 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42871, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18916, itemizedDeductions: makeFromInt 28767, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 691 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46866, ordinaryIncomeNonSS: makeFromInt 16472, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 289 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34339, ordinaryIncomeNonSS: makeFromInt 128105, qualifiedIncome: makeFromInt 35565, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31948, stateTaxDue: makeFromInt 7898 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24338, ordinaryIncomeNonSS: makeFromInt 109663, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20917, federalTaxDue: makeFromInt 18035, stateTaxDue: makeFromInt 5164 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22377, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23783, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126560, qualifiedIncome: makeFromInt 23017, itemizedDeductions: makeFromInt 13303, federalTaxDue: makeFromInt 16524, stateTaxDue: makeFromInt 7004 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29432, ordinaryIncomeNonSS: makeFromInt 87171, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9910, stateTaxDue: makeFromInt 3684 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 45535, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1571, stateTaxDue: makeFromInt 1702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18271, ordinaryIncomeNonSS: makeFromInt 47491, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28120, federalTaxDue: makeFromInt 3895, stateTaxDue: makeFromInt 1800 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4104, ordinaryIncomeNonSS: makeFromInt 17713, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3092, federalTaxDue: makeFromInt 436, stateTaxDue: makeFromInt 557 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60788, itemizedDeductions: makeFromInt 14089, federalTaxDue: makeFromInt 3471, stateTaxDue: makeFromInt 2876 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74179, itemizedDeductions: makeFromInt 10403, federalTaxDue: makeFromInt 47221, stateTaxDue: makeFromInt 10984 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43305, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13151, itemizedDeductions: makeFromInt 8411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 120 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25336, ordinaryIncomeNonSS: makeFromInt 66405, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9337, federalTaxDue: makeFromInt 9133, stateTaxDue: makeFromInt 2745 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3988, federalTaxDue: makeFromInt 18838, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 47208, itemizedDeductions: makeFromInt 526, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1755 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39660, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20145, federalTaxDue: makeFromInt 25644, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56827, qualifiedIncome: makeFromInt 76474, itemizedDeductions: makeFromInt 8320, federalTaxDue: makeFromInt 11302, stateTaxDue: makeFromInt 6350 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17657, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 296, stateTaxDue: makeFromInt 428 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26517, qualifiedIncome: makeFromInt 1986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13913, stateTaxDue: makeFromInt 4627 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48039, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25138, federalTaxDue: makeFromInt 7877, stateTaxDue: makeFromInt 1899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104547, qualifiedIncome: makeFromInt 33128, itemizedDeductions: makeFromInt 16218, federalTaxDue: makeFromInt 28968, stateTaxDue: makeFromInt 6593 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18432, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28731, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 45716, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5887, stateTaxDue: makeFromInt 1711 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 5075, itemizedDeductions: makeFromInt 21467, federalTaxDue: makeFromInt 25689, stateTaxDue: makeFromInt 7299 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136952, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32275, stateTaxDue: makeFromInt 6434 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82738, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37291, stateTaxDue: makeFromInt 11421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47013, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2497, federalTaxDue: makeFromInt 4011, stateTaxDue: makeFromInt 1969 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23635, ordinaryIncomeNonSS: makeFromInt 149965, qualifiedIncome: makeFromInt 99043, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 48006, stateTaxDue: makeFromInt 12271 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20242, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 98337, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17723, stateTaxDue: makeFromInt 4791 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76407, itemizedDeductions: makeFromInt 4394, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3145 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 60159, itemizedDeductions: makeFromInt 29358, federalTaxDue: makeFromInt 41127, stateTaxDue: makeFromInt 10270 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34997, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1132 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49808, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 24651, ordinaryIncomeNonSS: makeFromInt 134093, qualifiedIncome: makeFromInt 18527, itemizedDeductions: makeFromInt 25613, federalTaxDue: makeFromInt 27679, stateTaxDue: makeFromInt 7376 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 86366, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38176, stateTaxDue: makeFromInt 9158 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13989, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45628, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1606 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 56217, qualifiedIncome: makeFromInt 93102, itemizedDeductions: makeFromInt 19264, federalTaxDue: makeFromInt 27193, stateTaxDue: makeFromInt 7011 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132087, qualifiedIncome: makeFromInt 32958, itemizedDeductions: makeFromInt 23718, federalTaxDue: makeFromInt 19231, stateTaxDue: makeFromInt 7577 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32422, ordinaryIncomeNonSS: makeFromInt 85880, qualifiedIncome: makeFromInt 22179, itemizedDeductions: makeFromInt 4759, federalTaxDue: makeFromInt 20820, stateTaxDue: makeFromInt 5083 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30064, ordinaryIncomeNonSS: makeFromInt 112921, qualifiedIncome: makeFromInt 12997, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23948, stateTaxDue: makeFromInt 5973 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22712, stateTaxDue: makeFromInt 7186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3667, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 49, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13824, ordinaryIncomeNonSS: makeFromInt 1617, qualifiedIncome: makeFromInt 3749, itemizedDeductions: makeFromInt 6516, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22066, ordinaryIncomeNonSS: makeFromInt 17549, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 502 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93984, itemizedDeductions: makeFromInt 27867, federalTaxDue: makeFromInt 37699, stateTaxDue: makeFromInt 12219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102159, qualifiedIncome: makeFromInt 16582, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22341, stateTaxDue: makeFromInt 5362 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3489, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13371, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 3120, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25046, stateTaxDue: makeFromInt 7462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33215, ordinaryIncomeNonSS: makeFromInt 8047, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7100, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 186 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95562, qualifiedIncome: makeFromInt 15100, itemizedDeductions: makeFromInt 10311, federalTaxDue: makeFromInt 15902, stateTaxDue: makeFromInt 5278 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7040, stateTaxDue: makeFromInt 4440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41214, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53828, itemizedDeductions: makeFromInt 27143, federalTaxDue: makeFromInt 37006, stateTaxDue: makeFromInt 9844 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38382, qualifiedIncome: makeFromInt 1860, itemizedDeductions: makeFromInt 9074, federalTaxDue: makeFromInt 1438, stateTaxDue: makeFromInt 1604 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 80437, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9243, stateTaxDue: makeFromInt 3674 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8169, ordinaryIncomeNonSS: makeFromInt 141377, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9835, federalTaxDue: makeFromInt 40904, stateTaxDue: makeFromInt 11814 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23031, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122543, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12798, stateTaxDue: makeFromInt 5452 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47756, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57979, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3049, stateTaxDue: makeFromInt 2529 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37430, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113917, qualifiedIncome: makeFromInt 64055, itemizedDeductions: makeFromInt 21111, federalTaxDue: makeFromInt 23518, stateTaxDue: makeFromInt 8648 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11856, ordinaryIncomeNonSS: makeFromInt 67179, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6740, federalTaxDue: makeFromInt 21089, stateTaxDue: makeFromInt 7975 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13669, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 248 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133577, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16571, stateTaxDue: makeFromInt 6384 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4189, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7733, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92010, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36609, stateTaxDue: makeFromInt 11914 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 7017, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27654, stateTaxDue: makeFromInt 7396 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47139, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1235, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33749, stateTaxDue: makeFromInt 7187 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38092, qualifiedIncome: makeFromInt 55251, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1079, stateTaxDue: makeFromInt 4192 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5523, ordinaryIncomeNonSS: makeFromInt 7711, qualifiedIncome: makeFromInt 4921, itemizedDeductions: makeFromInt 16508, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 57 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 123565, qualifiedIncome: makeFromInt 66384, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26873, stateTaxDue: makeFromInt 9122 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22776, ordinaryIncomeNonSS: makeFromInt 44348, qualifiedIncome: makeFromInt 29568, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6460, stateTaxDue: makeFromInt 3219 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31836, ordinaryIncomeNonSS: makeFromInt 29733, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10675, stateTaxDue: makeFromInt 5812 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95912, itemizedDeductions: makeFromInt 22893, federalTaxDue: makeFromInt 8387, stateTaxDue: makeFromInt 4541 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8658, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 773, stateTaxDue: makeFromInt 3583 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48004, ordinaryIncomeNonSS: makeFromInt 121340, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28930, federalTaxDue: makeFromInt 24725, stateTaxDue: makeFromInt 5784 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 64811, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7618, federalTaxDue: makeFromInt 13404, stateTaxDue: makeFromInt 2666 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8594, ordinaryIncomeNonSS: makeFromInt 78704, qualifiedIncome: makeFromInt 58799, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11029, stateTaxDue: makeFromInt 6200 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47748, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95619, itemizedDeductions: makeFromInt 262, federalTaxDue: makeFromInt 49868, stateTaxDue: makeFromInt 12180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3867, stateTaxDue: makeFromInt 2398 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47824, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15550, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18830, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10902, itemizedDeductions: makeFromInt 12076, federalTaxDue: makeFromInt 25351, stateTaxDue: makeFromInt 7655 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14800, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83209, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7391, stateTaxDue: makeFromInt 4019 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12084, ordinaryIncomeNonSS: makeFromInt 23326, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4349, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 537 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27831, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17396, itemizedDeductions: makeFromInt 5960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 395 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90402, itemizedDeductions: makeFromInt 27441, federalTaxDue: makeFromInt 35310, stateTaxDue: makeFromInt 11445 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17211, ordinaryIncomeNonSS: makeFromInt 15785, qualifiedIncome: makeFromInt 46527, itemizedDeductions: makeFromInt 8282, federalTaxDue: makeFromInt 926, stateTaxDue: makeFromInt 2541 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46598, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38192, itemizedDeductions: makeFromInt 14941, federalTaxDue: makeFromInt 42002, stateTaxDue: makeFromInt 9169 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25299, ordinaryIncomeNonSS: makeFromInt 56450, qualifiedIncome: makeFromInt 51251, itemizedDeductions: makeFromInt 11323, federalTaxDue: makeFromInt 8451, stateTaxDue: makeFromInt 4910 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94514, qualifiedIncome: makeFromInt 1266, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14157, stateTaxDue: makeFromInt 4615 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130073, qualifiedIncome: makeFromInt 82619, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31821, stateTaxDue: makeFromInt 10296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38557, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8246, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33243, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57813, itemizedDeductions: makeFromInt 4652, federalTaxDue: makeFromInt 386, stateTaxDue: makeFromInt 2475 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40726, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35196, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21138, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12671, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9087, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 117 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20516, ordinaryIncomeNonSS: makeFromInt 89653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13683, stateTaxDue: makeFromInt 4022 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12059, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43481, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25565, stateTaxDue: makeFromInt 9215 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 119450, qualifiedIncome: makeFromInt 32015, itemizedDeductions: makeFromInt 2420, federalTaxDue: makeFromInt 25659, stateTaxDue: makeFromInt 6898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37934, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44067, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1728 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13671, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97753, qualifiedIncome: makeFromInt 52813, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14873, stateTaxDue: makeFromInt 7053 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57066, qualifiedIncome: makeFromInt 83522, itemizedDeductions: makeFromInt 27736, federalTaxDue: makeFromInt 25212, stateTaxDue: makeFromInt 6946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75676, itemizedDeductions: makeFromInt 3030, federalTaxDue: makeFromInt 5704, stateTaxDue: makeFromInt 3635 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43706, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91479, itemizedDeductions: makeFromInt 21467, federalTaxDue: makeFromInt 11500, stateTaxDue: makeFromInt 4119 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8245, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1505, stateTaxDue: makeFromInt 2208 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24370, ordinaryIncomeNonSS: makeFromInt 32535, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16899, stateTaxDue: makeFromInt 6331 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 171, ordinaryIncomeNonSS: makeFromInt 106541, qualifiedIncome: makeFromInt 35163, itemizedDeductions: makeFromInt 2512, federalTaxDue: makeFromInt 15344, stateTaxDue: makeFromInt 6778 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26359, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61827, itemizedDeductions: makeFromInt 7200, federalTaxDue: makeFromInt 6103, stateTaxDue: makeFromInt 2929 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16864, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 20559, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 353 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13994, ordinaryIncomeNonSS: makeFromInt 11310, qualifiedIncome: makeFromInt 61730, itemizedDeductions: makeFromInt 22411, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3177 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26043, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 981 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26086, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10626, federalTaxDue: makeFromInt 11338, stateTaxDue: makeFromInt 7247 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 43707, itemizedDeductions: makeFromInt 8798, federalTaxDue: makeFromInt 24784, stateTaxDue: makeFromInt 9210 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32363, qualifiedIncome: makeFromInt 98399, itemizedDeductions: makeFromInt 27030, federalTaxDue: makeFromInt 9388, stateTaxDue: makeFromInt 6444 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34973, qualifiedIncome: makeFromInt 76342, itemizedDeductions: makeFromInt 13040, federalTaxDue: makeFromInt 11393, stateTaxDue: makeFromInt 5249 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12831, ordinaryIncomeNonSS: makeFromInt 80435, qualifiedIncome: makeFromInt 27111, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9267, stateTaxDue: makeFromInt 4832 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40801, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14373, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137021, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21165, stateTaxDue: makeFromInt 6437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39432, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1222, stateTaxDue: makeFromInt 1583 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114412, qualifiedIncome: makeFromInt 71483, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21121, stateTaxDue: makeFromInt 8820 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42290, ordinaryIncomeNonSS: makeFromInt 18377, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21874, federalTaxDue: makeFromInt 570, stateTaxDue: makeFromInt 464 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 97576, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11046, federalTaxDue: makeFromInt 23926, stateTaxDue: makeFromInt 4424 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1600, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 37635, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42191, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 31390, itemizedDeductions: makeFromInt 21646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1152 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40886, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 57539, itemizedDeductions: makeFromInt 24014, federalTaxDue: makeFromInt 899, stateTaxDue: makeFromInt 2259 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12402, ordinaryIncomeNonSS: makeFromInt 84127, qualifiedIncome: makeFromInt 94679, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20320, stateTaxDue: makeFromInt 8265 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22050, ordinaryIncomeNonSS: makeFromInt 131912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26465, stateTaxDue: makeFromInt 6141 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45255, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2135, federalTaxDue: makeFromInt 9323, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14272, ordinaryIncomeNonSS: makeFromInt 117132, qualifiedIncome: makeFromInt 27456, itemizedDeductions: makeFromInt 9144, federalTaxDue: makeFromInt 17784, stateTaxDue: makeFromInt 6554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49818, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19906, federalTaxDue: makeFromInt 25306, stateTaxDue: makeFromInt 9162 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5690, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80523, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4166, stateTaxDue: makeFromInt 3723 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75373, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11, stateTaxDue: makeFromInt 3191 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19499, ordinaryIncomeNonSS: makeFromInt 18935, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 517 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22887, ordinaryIncomeNonSS: makeFromInt 30932, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19384, stateTaxDue: makeFromInt 6249 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17982, federalTaxDue: makeFromInt 33512, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36380, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85518, itemizedDeductions: makeFromInt 17201, federalTaxDue: makeFromInt 7180, stateTaxDue: makeFromInt 3933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53370, itemizedDeductions: makeFromInt 7614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1994 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30648, ordinaryIncomeNonSS: makeFromInt 4410, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 81529, qualifiedIncome: makeFromInt 53568, itemizedDeductions: makeFromInt 26247, federalTaxDue: makeFromInt 16614, stateTaxDue: makeFromInt 6666 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 83423, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 513, stateTaxDue: makeFromInt 3696 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44477, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17378, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48430, qualifiedIncome: makeFromInt 89222, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20905, stateTaxDue: makeFromInt 6308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35068, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20695, federalTaxDue: makeFromInt 33811, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45333, ordinaryIncomeNonSS: makeFromInt 80462, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13079, stateTaxDue: makeFromInt 3451 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 142217, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17608, federalTaxDue: makeFromInt 38927, stateTaxDue: makeFromInt 11656 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78256, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4178, stateTaxDue: makeFromInt 3440 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4074, ordinaryIncomeNonSS: makeFromInt 3116, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27972, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 129371, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30153, stateTaxDue: makeFromInt 6047 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5983, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 44675, qualifiedIncome: makeFromInt 66455, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6154, stateTaxDue: makeFromInt 5219 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27873, federalTaxDue: makeFromInt 23332, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19609, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14640, federalTaxDue: makeFromInt 21895, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 31638, ordinaryIncomeNonSS: makeFromInt 115660, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24355, federalTaxDue: makeFromInt 22542, stateTaxDue: makeFromInt 5417 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27297, ordinaryIncomeNonSS: makeFromInt 86424, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12180, federalTaxDue: makeFromInt 13582, stateTaxDue: makeFromInt 3946 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20633, ordinaryIncomeNonSS: makeFromInt 23573, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1911, federalTaxDue: makeFromInt 687, stateTaxDue: makeFromInt 604 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17991, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81947, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39222, stateTaxDue: makeFromInt 11222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39055, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42617, itemizedDeductions: makeFromInt 24994, federalTaxDue: makeFromInt 343, stateTaxDue: makeFromInt 1556 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33052, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36881, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1228 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36332, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9415, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5063, itemizedDeductions: makeFromInt 16847, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17502, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 342 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 13880, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2596, itemizedDeductions: makeFromInt 4404, federalTaxDue: makeFromInt 29528, stateTaxDue: makeFromInt 7375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22954, ordinaryIncomeNonSS: makeFromInt 99049, qualifiedIncome: makeFromInt 92018, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29517, stateTaxDue: makeFromInt 9178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34399, ordinaryIncomeNonSS: makeFromInt 37039, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 849, stateTaxDue: makeFromInt 1338 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37507, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18932, federalTaxDue: makeFromInt 13558, stateTaxDue: makeFromInt 6620 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103943, qualifiedIncome: makeFromInt 8727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14675, stateTaxDue: makeFromInt 5297 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55470, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 940, stateTaxDue: makeFromInt 2299 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84024, itemizedDeductions: makeFromInt 21618, federalTaxDue: makeFromInt 6814, stateTaxDue: makeFromInt 3857 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24541, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97906, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9056, stateTaxDue: makeFromInt 4320 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23753, ordinaryIncomeNonSS: makeFromInt 130101, qualifiedIncome: makeFromInt 90431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36895, stateTaxDue: makeFromInt 10452 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17362, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 126, stateTaxDue: makeFromInt 661 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91992, qualifiedIncome: makeFromInt 46952, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23225, stateTaxDue: makeFromInt 6862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17790, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8502, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19283, federalTaxDue: makeFromInt 25208, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44655, ordinaryIncomeNonSS: makeFromInt 128525, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5013, federalTaxDue: makeFromInt 46365, stateTaxDue: makeFromInt 11226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44712, itemizedDeductions: makeFromInt 15441, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1561 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19744, federalTaxDue: makeFromInt 48095, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 5124, ordinaryIncomeNonSS: makeFromInt 48487, qualifiedIncome: makeFromInt 36227, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9276, stateTaxDue: makeFromInt 3981 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22389, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40844, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35261, itemizedDeductions: makeFromInt 10788, federalTaxDue: makeFromInt 178, stateTaxDue: makeFromInt 1188 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14899, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15351, ordinaryIncomeNonSS: makeFromInt 6630, qualifiedIncome: makeFromInt 53028, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2408 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129972, qualifiedIncome: makeFromInt 95055, itemizedDeductions: makeFromInt 5863, federalTaxDue: makeFromInt 35759, stateTaxDue: makeFromInt 10796 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16649, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28418, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120698, qualifiedIncome: makeFromInt 60652, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21007, stateTaxDue: makeFromInt 8698 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24242, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2511 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24149, ordinaryIncomeNonSS: makeFromInt 121708, qualifiedIncome: makeFromInt 39706, itemizedDeductions: makeFromInt 18291, federalTaxDue: makeFromInt 27352, stateTaxDue: makeFromInt 7496 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54775, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3587, stateTaxDue: makeFromInt 2243 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92069, itemizedDeductions: makeFromInt 24647, federalTaxDue: makeFromInt 36533, stateTaxDue: makeFromInt 11728 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46654, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1793, stateTaxDue: makeFromInt 2078 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39814, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19043, itemizedDeductions: makeFromInt 4492, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38676, ordinaryIncomeNonSS: makeFromInt 101256, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15039, federalTaxDue: makeFromInt 20303, stateTaxDue: makeFromInt 4715 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37848, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85247, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7715, stateTaxDue: makeFromInt 3887 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120797, qualifiedIncome: makeFromInt 59743, itemizedDeductions: makeFromInt 6356, federalTaxDue: makeFromInt 28372, stateTaxDue: makeFromInt 8779 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 22383, ordinaryIncomeNonSS: makeFromInt 47749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9748, federalTaxDue: makeFromInt 7073, stateTaxDue: makeFromInt 1932 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8051, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29317, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145374, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41307, stateTaxDue: makeFromInt 12086 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17246, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5812, federalTaxDue: makeFromInt 29826, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79658, itemizedDeductions: makeFromInt 19505, federalTaxDue: makeFromInt 654, stateTaxDue: makeFromInt 3410 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28938, ordinaryIncomeNonSS: makeFromInt 148912, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24521, stateTaxDue: makeFromInt 7076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28594, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15519, federalTaxDue: makeFromInt 9696, stateTaxDue: makeFromInt 6211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61126, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2881, federalTaxDue: makeFromInt 15181, stateTaxDue: makeFromInt 2601 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33983, ordinaryIncomeNonSS: makeFromInt 81717, qualifiedIncome: makeFromInt 14066, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11688, stateTaxDue: makeFromInt 4114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24834, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67957, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43707, stateTaxDue: makeFromInt 10687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14752, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25831, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21166, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53071, itemizedDeductions: makeFromInt 20502, federalTaxDue: makeFromInt 31313, stateTaxDue: makeFromInt 9704 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79921, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13037, stateTaxDue: makeFromInt 3741 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116190, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15535, stateTaxDue: makeFromInt 5235 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35105, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3132, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113520, qualifiedIncome: makeFromInt 36425, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23016, stateTaxDue: makeFromInt 7242 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79149, itemizedDeductions: makeFromInt 3546, federalTaxDue: makeFromInt 292, stateTaxDue: makeFromInt 3384 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 12890, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9988, stateTaxDue: makeFromInt 5533 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125037, qualifiedIncome: makeFromInt 73338, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24347, stateTaxDue: makeFromInt 9244 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3833, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68474, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1901, stateTaxDue: makeFromInt 2849 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3312, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58958, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35135, stateTaxDue: makeFromInt 10432 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51073, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31427, stateTaxDue: makeFromInt 9479 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79307, itemizedDeductions: makeFromInt 8424, federalTaxDue: makeFromInt 601, stateTaxDue: makeFromInt 3596 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41803, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 94921, itemizedDeductions: makeFromInt 7884, federalTaxDue: makeFromInt 3794, stateTaxDue: makeFromInt 4271 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45097, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16480, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97227, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7980, stateTaxDue: makeFromInt 4186 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34971, ordinaryIncomeNonSS: makeFromInt 10834, qualifiedIncome: makeFromInt 58532, itemizedDeductions: makeFromInt 27373, federalTaxDue: makeFromInt 3444, stateTaxDue: makeFromInt 3191 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44583, ordinaryIncomeNonSS: makeFromInt 82844, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20641, federalTaxDue: makeFromInt 16237, stateTaxDue: makeFromInt 3767 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40276, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39617, stateTaxDue: makeFromInt 7802 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43988, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 44145, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41210, stateTaxDue: makeFromInt 9351 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37652, ordinaryIncomeNonSS: makeFromInt 142275, qualifiedIncome: makeFromInt 84542, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47013, stateTaxDue: makeFromInt 11139 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15382, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90071, qualifiedIncome: makeFromInt 90520, itemizedDeductions: makeFromInt 2888, federalTaxDue: makeFromInt 18238, stateTaxDue: makeFromInt 8555 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 28764, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1039 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33865, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 79858, itemizedDeductions: makeFromInt 5293, federalTaxDue: makeFromInt 45709, stateTaxDue: makeFromInt 11238 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44605, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81865, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47940, stateTaxDue: makeFromInt 11338 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32575, ordinaryIncomeNonSS: makeFromInt 56945, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6469, stateTaxDue: makeFromInt 2372 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48826, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 46106, itemizedDeductions: makeFromInt 3963, federalTaxDue: makeFromInt 40161, stateTaxDue: makeFromInt 9230 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27352, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84004, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42758, stateTaxDue: makeFromInt 11587 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46006, ordinaryIncomeNonSS: makeFromInt 119582, qualifiedIncome: makeFromInt 54081, itemizedDeductions: makeFromInt 8203, federalTaxDue: makeFromInt 28251, stateTaxDue: makeFromInt 8008 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49498, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3970, stateTaxDue: makeFromInt 2020 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9374, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3818, ordinaryIncomeNonSS: makeFromInt 144308, qualifiedIncome: makeFromInt 90233, itemizedDeductions: makeFromInt 8789, federalTaxDue: makeFromInt 32596, stateTaxDue: makeFromInt 11513 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 149022, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34365, stateTaxDue: makeFromInt 7076 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31330, ordinaryIncomeNonSS: makeFromInt 40553, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3010, federalTaxDue: makeFromInt 6913, stateTaxDue: makeFromInt 1721 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8306, ordinaryIncomeNonSS: makeFromInt 25523, qualifiedIncome: makeFromInt 10409, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1940, stateTaxDue: makeFromInt 1542 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 68406, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4690, stateTaxDue: makeFromInt 3264 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40996, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81335, itemizedDeductions: makeFromInt 15831, federalTaxDue: makeFromInt 47301, stateTaxDue: makeFromInt 11312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63299, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41634, stateTaxDue: makeFromInt 10654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3934, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66632, qualifiedIncome: makeFromInt 55659, itemizedDeductions: makeFromInt 5451, federalTaxDue: makeFromInt 6897, stateTaxDue: makeFromInt 5640 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 117059, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27595, stateTaxDue: makeFromInt 10417 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20274, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4687, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 127164, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16624, federalTaxDue: makeFromInt 13204, stateTaxDue: makeFromInt 5683 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20079, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42708, itemizedDeductions: makeFromInt 5665, federalTaxDue: makeFromInt 31503, stateTaxDue: makeFromInt 9175 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28452, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19698, federalTaxDue: makeFromInt 815, stateTaxDue: makeFromInt 1048 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28797, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17392, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 434 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111767, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13928, stateTaxDue: makeFromInt 5272 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2621, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34435, qualifiedIncome: makeFromInt 62928, itemizedDeductions: makeFromInt 5515, federalTaxDue: makeFromInt 8311, stateTaxDue: makeFromInt 4413 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13769, itemizedDeductions: makeFromInt 19523, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 313 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38272, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 10727, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 200 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16480, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37551, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 25555, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13361, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18724, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27080, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41277, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7712, itemizedDeductions: makeFromInt 11631, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93559, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6134, stateTaxDue: makeFromInt 4003 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9001, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15332, federalTaxDue: makeFromInt 19911, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25709, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22351, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20465, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59881, itemizedDeductions: makeFromInt 19503, federalTaxDue: makeFromInt 3335, stateTaxDue: makeFromInt 2830 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34066, ordinaryIncomeNonSS: makeFromInt 51650, qualifiedIncome: makeFromInt 6862, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8645, stateTaxDue: makeFromInt 2551 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47305, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1690 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9423, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28703, itemizedDeductions: makeFromInt 10167, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 860 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18600, ordinaryIncomeNonSS: makeFromInt 7852, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19721, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5963, federalTaxDue: makeFromInt 51832, stateTaxDue: makeFromInt 12526 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48023, ordinaryIncomeNonSS: makeFromInt 105798, qualifiedIncome: makeFromInt 42059, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29873, stateTaxDue: makeFromInt 6990 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7948, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8014, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34377, itemizedDeductions: makeFromInt 24792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1144 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30316, ordinaryIncomeNonSS: makeFromInt 27967, qualifiedIncome: makeFromInt 33254, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4021, stateTaxDue: makeFromInt 2571 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116786, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11173, federalTaxDue: makeFromInt 18336, stateTaxDue: makeFromInt 5584 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 18846, itemizedDeductions: makeFromInt 27597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 467 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43633, ordinaryIncomeNonSS: makeFromInt 31248, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2178, federalTaxDue: makeFromInt 1060, stateTaxDue: makeFromInt 941 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20214, itemizedDeductions: makeFromInt 14550, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 636 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6829, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82726, itemizedDeductions: makeFromInt 25049, federalTaxDue: makeFromInt 6349, stateTaxDue: makeFromInt 3681 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22067, federalTaxDue: makeFromInt 2649, stateTaxDue: makeFromInt 2165 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8684, ordinaryIncomeNonSS: makeFromInt 25145, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7317, federalTaxDue: makeFromInt 1317, stateTaxDue: makeFromInt 1002 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82310, itemizedDeductions: makeFromInt 19514, federalTaxDue: makeFromInt 6287, stateTaxDue: makeFromInt 3861 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16192, ordinaryIncomeNonSS: makeFromInt 91954, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11206, stateTaxDue: makeFromInt 4139 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29911, federalTaxDue: makeFromInt 7088, stateTaxDue: makeFromInt 4707 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 27152, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1855, federalTaxDue: makeFromInt 1289, stateTaxDue: makeFromInt 903 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47558, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9785, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1975, ordinaryIncomeNonSS: makeFromInt 7735, qualifiedIncome: makeFromInt 19607, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 742 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29782, federalTaxDue: makeFromInt 37688, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21882, federalTaxDue: makeFromInt 23084, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 64590, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12780, stateTaxDue: makeFromInt 7755 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45143, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17463, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 394, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9603, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8228, itemizedDeductions: makeFromInt 18936, federalTaxDue: makeFromInt 23235, stateTaxDue: makeFromInt 7519 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48221, ordinaryIncomeNonSS: makeFromInt 99720, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11926, federalTaxDue: makeFromInt 27907, stateTaxDue: makeFromInt 4861 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10685, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53023, itemizedDeductions: makeFromInt 1647, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81299, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4635, stateTaxDue: makeFromInt 3799 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19326, itemizedDeductions: makeFromInt 20988, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 537 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139394, qualifiedIncome: makeFromInt 90857, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35857, stateTaxDue: makeFromInt 11294 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74184, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26713, federalTaxDue: makeFromInt 13202, stateTaxDue: makeFromInt 3355 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33594, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26991, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62258, qualifiedIncome: makeFromInt 52920, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8326, stateTaxDue: makeFromInt 5184 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 113728, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19487, stateTaxDue: makeFromInt 5299 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5961, itemizedDeductions: makeFromInt 23815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1046, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47171, ordinaryIncomeNonSS: makeFromInt 33683, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1133, federalTaxDue: makeFromInt 4238, stateTaxDue: makeFromInt 1289 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3318, ordinaryIncomeNonSS: makeFromInt 94742, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7719, stateTaxDue: makeFromInt 4138 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32974, ordinaryIncomeNonSS: makeFromInt 122416, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24115, federalTaxDue: makeFromInt 34447, stateTaxDue: makeFromInt 10788 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2104, ordinaryIncomeNonSS: makeFromInt 64325, qualifiedIncome: makeFromInt 26880, itemizedDeductions: makeFromInt 8713, federalTaxDue: makeFromInt 6649, stateTaxDue: makeFromInt 4203 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31125, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15403, ordinaryIncomeNonSS: makeFromInt 9265, qualifiedIncome: makeFromInt 92412, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1359, stateTaxDue: makeFromInt 4609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8853, federalTaxDue: makeFromInt 37127, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13461, ordinaryIncomeNonSS: makeFromInt 69329, qualifiedIncome: makeFromInt 127, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7122, stateTaxDue: makeFromInt 2991 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 138676, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2055, federalTaxDue: makeFromInt 21048, stateTaxDue: makeFromInt 6559 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33920, ordinaryIncomeNonSS: makeFromInt 63674, qualifiedIncome: makeFromInt 32055, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14845, stateTaxDue: makeFromInt 4331 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10752, ordinaryIncomeNonSS: makeFromInt 18274, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 5481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39555, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25031, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105287, qualifiedIncome: makeFromInt 55598, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18102, stateTaxDue: makeFromInt 7756 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14585, ordinaryIncomeNonSS: makeFromInt 116601, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30580, stateTaxDue: makeFromInt 10394 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4222, itemizedDeductions: makeFromInt 28669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117522, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19155, federalTaxDue: makeFromInt 17444, stateTaxDue: makeFromInt 5621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 294, ordinaryIncomeNonSS: makeFromInt 66932, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4307, stateTaxDue: makeFromInt 3067 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 85275, itemizedDeductions: makeFromInt 21796, federalTaxDue: makeFromInt 5231, stateTaxDue: makeFromInt 4002 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 104199, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27461, federalTaxDue: makeFromInt 27470, stateTaxDue: makeFromInt 10067 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148148, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 119, federalTaxDue: makeFromInt 35705, stateTaxDue: makeFromInt 7107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46889, qualifiedIncome: makeFromInt 45762, itemizedDeductions: makeFromInt 6630, federalTaxDue: makeFromInt 8703, stateTaxDue: makeFromInt 4378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106227, qualifiedIncome: makeFromInt 38801, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21622, stateTaxDue: makeFromInt 6996 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29370, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86168, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 423, stateTaxDue: makeFromInt 3833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55384, itemizedDeductions: makeFromInt 21381, federalTaxDue: makeFromInt 748, stateTaxDue: makeFromInt 2478 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20780, ordinaryIncomeNonSS: makeFromInt 57967, qualifiedIncome: makeFromInt 29225, itemizedDeductions: makeFromInt 13034, federalTaxDue: makeFromInt 10709, stateTaxDue: makeFromInt 4018 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113239, qualifiedIncome: makeFromInt 66520, itemizedDeductions: makeFromInt 3802, federalTaxDue: makeFromInt 27863, stateTaxDue: makeFromInt 8533 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19269, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49604, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36415, stateTaxDue: makeFromInt 9731 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79835, qualifiedIncome: makeFromInt 55013, itemizedDeductions: makeFromInt 8501, federalTaxDue: makeFromInt 18990, stateTaxDue: makeFromInt 6386 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5547, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20107, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10676, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12942, itemizedDeductions: makeFromInt 500, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 172 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4558, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128240, qualifiedIncome: makeFromInt 3318, itemizedDeductions: makeFromInt 17400, federalTaxDue: makeFromInt 13939, stateTaxDue: makeFromInt 5903 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40791, ordinaryIncomeNonSS: makeFromInt 13600, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 610, stateTaxDue: makeFromInt 469 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40188, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34683, stateTaxDue: makeFromInt 9353 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34853, itemizedDeductions: makeFromInt 12951, federalTaxDue: makeFromInt 29806, stateTaxDue: makeFromInt 9081 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15311, ordinaryIncomeNonSS: makeFromInt 6920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18499, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11206, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28721, stateTaxDue: makeFromInt 7569 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45613, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25962, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27480, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 22900, itemizedDeductions: makeFromInt 3352, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 719 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 65444, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33057, stateTaxDue: makeFromInt 10641 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45895, ordinaryIncomeNonSS: makeFromInt 72636, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29055, stateTaxDue: makeFromInt 8057 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55864, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5138, federalTaxDue: makeFromInt 10642, stateTaxDue: makeFromInt 7318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114869, qualifiedIncome: makeFromInt 53523, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36105, stateTaxDue: makeFromInt 8165 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21489, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 668 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36150, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35364, ordinaryIncomeNonSS: makeFromInt 38859, qualifiedIncome: makeFromInt 26375, itemizedDeductions: makeFromInt 16222, federalTaxDue: makeFromInt 4954, stateTaxDue: makeFromInt 2850 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6841, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 59723, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28466, stateTaxDue: makeFromInt 9811 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28690, ordinaryIncomeNonSS: makeFromInt 23690, qualifiedIncome: makeFromInt 56255, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13641, stateTaxDue: makeFromInt 3853 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10902, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 90 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10426, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11817, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 173 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35026, qualifiedIncome: makeFromInt 51437, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8988, stateTaxDue: makeFromInt 3648 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12005, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 42096, itemizedDeductions: makeFromInt 12960, federalTaxDue: makeFromInt 26787, stateTaxDue: makeFromInt 8930 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 55888, qualifiedIncome: makeFromInt 75591, itemizedDeductions: makeFromInt 16826, federalTaxDue: makeFromInt 18244, stateTaxDue: makeFromInt 6099 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 57753, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4186, stateTaxDue: makeFromInt 2313 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48151, ordinaryIncomeNonSS: makeFromInt 25038, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3693, stateTaxDue: makeFromInt 930 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 140182, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6808, federalTaxDue: makeFromInt 34725, stateTaxDue: makeFromInt 6554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 148709, qualifiedIncome: makeFromInt 21156, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19266, stateTaxDue: makeFromInt 8010 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8156, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70608, itemizedDeductions: makeFromInt 26007, federalTaxDue: makeFromInt 34562, stateTaxDue: makeFromInt 10823 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40393, itemizedDeductions: makeFromInt 1244, federalTaxDue: makeFromInt 4053, stateTaxDue: makeFromInt 1765 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 18379, itemizedDeductions: makeFromInt 26353, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 544 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147564, qualifiedIncome: makeFromInt 61648, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28310, stateTaxDue: makeFromInt 10017 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54092, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3773, stateTaxDue: makeFromInt 2130 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48105, ordinaryIncomeNonSS: makeFromInt 108544, qualifiedIncome: makeFromInt 69772, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29690, stateTaxDue: makeFromInt 8561 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19461, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44002, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7038, stateTaxDue: makeFromInt 1795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76476, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3911, stateTaxDue: makeFromInt 3349 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103489, qualifiedIncome: makeFromInt 33618, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17274, stateTaxDue: makeFromInt 6480 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 15480, ordinaryIncomeNonSS: makeFromInt 972, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4594 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42026, ordinaryIncomeNonSS: makeFromInt 23184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 345, stateTaxDue: makeFromInt 524 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42823, itemizedDeductions: makeFromInt 8068, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1566 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26765, ordinaryIncomeNonSS: makeFromInt 39852, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21155, stateTaxDue: makeFromInt 6538 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 9848, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26357, stateTaxDue: makeFromInt 7703 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79222, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11914, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 3386 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61788, itemizedDeductions: makeFromInt 1622, federalTaxDue: makeFromInt 4312, stateTaxDue: makeFromInt 2702 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 14416, ordinaryIncomeNonSS: makeFromInt 71876, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15562, federalTaxDue: makeFromInt 22851, stateTaxDue: makeFromInt 8337 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1478, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60936, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4292, federalTaxDue: makeFromInt 8558, stateTaxDue: makeFromInt 2572 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30852, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89409, itemizedDeductions: makeFromInt 24333, federalTaxDue: makeFromInt 5851, stateTaxDue: makeFromInt 4213 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12671, ordinaryIncomeNonSS: makeFromInt 117542, qualifiedIncome: makeFromInt 99728, itemizedDeductions: makeFromInt 11610, federalTaxDue: makeFromInt 36062, stateTaxDue: makeFromInt 10609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73491, qualifiedIncome: makeFromInt 24192, itemizedDeductions: makeFromInt 23028, federalTaxDue: makeFromInt 14375, stateTaxDue: makeFromInt 4409 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36717, ordinaryIncomeNonSS: makeFromInt 60977, qualifiedIncome: makeFromInt 73178, itemizedDeductions: makeFromInt 2755, federalTaxDue: makeFromInt 17426, stateTaxDue: makeFromInt 6393 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16483, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25867, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27910, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 699, itemizedDeductions: makeFromInt 24604, federalTaxDue: makeFromInt 24162, stateTaxDue: makeFromInt 6860 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44224, ordinaryIncomeNonSS: makeFromInt 102352, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20222, stateTaxDue: makeFromInt 4863 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17327, federalTaxDue: makeFromInt 40863, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28403, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 91757, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2469, stateTaxDue: makeFromInt 4027 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24490, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12783, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43349, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1846 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26294, ordinaryIncomeNonSS: makeFromInt 76968, qualifiedIncome: makeFromInt 88637, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22841, stateTaxDue: makeFromInt 7705 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30055, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11390, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 315 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48918, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25113, stateTaxDue: makeFromInt 7370 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35299, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8552, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21821, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 460 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26026, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6142, ordinaryIncomeNonSS: makeFromInt 124051, qualifiedIncome: makeFromInt 86567, itemizedDeductions: makeFromInt 13584, federalTaxDue: makeFromInt 34318, stateTaxDue: makeFromInt 10076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26508, ordinaryIncomeNonSS: makeFromInt 145813, qualifiedIncome: makeFromInt 44990, itemizedDeductions: makeFromInt 7026, federalTaxDue: makeFromInt 36215, stateTaxDue: makeFromInt 9282 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21143, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 18554, federalTaxDue: makeFromInt 44019, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5695, ordinaryIncomeNonSS: makeFromInt 8394, qualifiedIncome: makeFromInt 80788, itemizedDeductions: makeFromInt 27703, federalTaxDue: makeFromInt 4558, stateTaxDue: makeFromInt 4201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41746, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 15903, itemizedDeductions: makeFromInt 9757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 362 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1574, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17928, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17487, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12559, federalTaxDue: makeFromInt 8204, stateTaxDue: makeFromInt 4127 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19159, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 483 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29265, ordinaryIncomeNonSS: makeFromInt 103477, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23865, federalTaxDue: makeFromInt 14837, stateTaxDue: makeFromInt 4829 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12417, ordinaryIncomeNonSS: makeFromInt 22694, qualifiedIncome: makeFromInt 93555, itemizedDeductions: makeFromInt 8588, federalTaxDue: makeFromInt 7398, stateTaxDue: makeFromInt 5378 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20803, ordinaryIncomeNonSS: makeFromInt 114851, qualifiedIncome: makeFromInt 98322, itemizedDeductions: makeFromInt 29868, federalTaxDue: makeFromInt 29214, stateTaxDue: makeFromInt 10423 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2195, federalTaxDue: makeFromInt 28655, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45022, ordinaryIncomeNonSS: makeFromInt 67111, qualifiedIncome: makeFromInt 80417, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24710, stateTaxDue: makeFromInt 6801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25002, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 477, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46248, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22181, ordinaryIncomeNonSS: makeFromInt 103066, qualifiedIncome: makeFromInt 20079, itemizedDeductions: makeFromInt 24443, federalTaxDue: makeFromInt 22153, stateTaxDue: makeFromInt 6056 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7739, ordinaryIncomeNonSS: makeFromInt 141185, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17736, stateTaxDue: makeFromInt 6584 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15483, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34677, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27496, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 171, stateTaxDue: makeFromInt 974 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116016, qualifiedIncome: makeFromInt 7278, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19243, stateTaxDue: makeFromInt 5910 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2918, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 139459, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 29856, federalTaxDue: makeFromInt 35686, stateTaxDue: makeFromInt 11866 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 97749, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18535, federalTaxDue: makeFromInt 10347, stateTaxDue: makeFromInt 4536 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39789, ordinaryIncomeNonSS: makeFromInt 84988, qualifiedIncome: makeFromInt 80213, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35437, stateTaxDue: makeFromInt 8201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 144819, qualifiedIncome: makeFromInt 66650, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 47352, stateTaxDue: makeFromInt 10457 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3118, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12197, federalTaxDue: makeFromInt 26694, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23604, itemizedDeductions: makeFromInt 18466, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 970 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24174, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 118897, qualifiedIncome: makeFromInt 32588, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25624, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34449, ordinaryIncomeNonSS: makeFromInt 5633, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77224, qualifiedIncome: makeFromInt 89992, itemizedDeductions: makeFromInt 19796, federalTaxDue: makeFromInt 31317, stateTaxDue: makeFromInt 8106 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1456, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10360, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 17341, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27722, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 5279 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49126, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21990, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76952, qualifiedIncome: makeFromInt 83758, itemizedDeductions: makeFromInt 23948, federalTaxDue: makeFromInt 19842, stateTaxDue: makeFromInt 7581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49609, qualifiedIncome: makeFromInt 57897, itemizedDeductions: makeFromInt 27149, federalTaxDue: makeFromInt 8292, stateTaxDue: makeFromInt 4920 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 11767, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43122, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1481 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73405, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3111, stateTaxDue: makeFromInt 3195 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122171, qualifiedIncome: makeFromInt 11751, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18045, stateTaxDue: makeFromInt 6483 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15794, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42226, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14, federalTaxDue: makeFromInt 1888, stateTaxDue: makeFromInt 1725 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88206, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8962, stateTaxDue: makeFromInt 3948 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1959, ordinaryIncomeNonSS: makeFromInt 85779, qualifiedIncome: makeFromInt 74140, itemizedDeductions: makeFromInt 1751, federalTaxDue: makeFromInt 23058, stateTaxDue: makeFromInt 7741 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 93980, qualifiedIncome: makeFromInt 23540, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16590, stateTaxDue: makeFromInt 5621 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33319, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11090, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 136 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16529, federalTaxDue: makeFromInt 26323, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 124295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20405, stateTaxDue: makeFromInt 5911 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34693, qualifiedIncome: makeFromInt 7080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1354, stateTaxDue: makeFromInt 1514 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15094, ordinaryIncomeNonSS: makeFromInt 118013, qualifiedIncome: makeFromInt 98814, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37634, stateTaxDue: makeFromInt 10834 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3209, ordinaryIncomeNonSS: makeFromInt 98486, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14437, stateTaxDue: makeFromInt 4594 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34546, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9369, federalTaxDue: makeFromInt 13672, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57926, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21143, federalTaxDue: makeFromInt 7775, stateTaxDue: makeFromInt 2421 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47501, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16721, qualifiedIncome: makeFromInt 16852, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1049 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9436, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10491, ordinaryIncomeNonSS: makeFromInt 48438, qualifiedIncome: makeFromInt 84330, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9694, stateTaxDue: makeFromInt 6322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 28735, ordinaryIncomeNonSS: makeFromInt 21366, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11650, stateTaxDue: makeFromInt 5639 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92541, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5841, stateTaxDue: makeFromInt 4052 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44456, itemizedDeductions: makeFromInt 27296, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1848 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38025, qualifiedIncome: makeFromInt 77732, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5850, stateTaxDue: makeFromInt 5455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19219, ordinaryIncomeNonSS: makeFromInt 5330, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23625, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133817, qualifiedIncome: makeFromInt 16150, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17090, stateTaxDue: makeFromInt 7023 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26398, ordinaryIncomeNonSS: makeFromInt 60068, qualifiedIncome: makeFromInt 63123, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16948, stateTaxDue: makeFromInt 5732 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92379, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 34769, stateTaxDue: makeFromInt 11933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77535, qualifiedIncome: makeFromInt 25019, itemizedDeductions: makeFromInt 12774, federalTaxDue: makeFromInt 5617, stateTaxDue: makeFromInt 4453 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21483, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21390, ordinaryIncomeNonSS: makeFromInt 132589, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23445, stateTaxDue: makeFromInt 6254 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7597, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4872, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35480, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12659, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40901, ordinaryIncomeNonSS: makeFromInt 121005, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29165, federalTaxDue: makeFromInt 24937, stateTaxDue: makeFromInt 5825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21643, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 694, stateTaxDue: makeFromInt 827 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56962, qualifiedIncome: makeFromInt 21649, itemizedDeductions: makeFromInt 15833, federalTaxDue: makeFromInt 4254, stateTaxDue: makeFromInt 3356 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24825, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 817 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40824, ordinaryIncomeNonSS: makeFromInt 146690, qualifiedIncome: makeFromInt 84800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38975, stateTaxDue: makeFromInt 11246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3571, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24751, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25390, ordinaryIncomeNonSS: makeFromInt 20270, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 687 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8535, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24369, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49455, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29035, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4898, itemizedDeductions: makeFromInt 26785, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16875, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 389 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9887, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19959, itemizedDeductions: makeFromInt 10307, federalTaxDue: makeFromInt 28271, stateTaxDue: makeFromInt 7923 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4571, ordinaryIncomeNonSS: makeFromInt 6071, qualifiedIncome: makeFromInt 5176, itemizedDeductions: makeFromInt 16330, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5452, ordinaryIncomeNonSS: makeFromInt 116600, qualifiedIncome: makeFromInt 8414, itemizedDeductions: makeFromInt 17026, federalTaxDue: makeFromInt 20108, stateTaxDue: makeFromInt 5796 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23392, ordinaryIncomeNonSS: makeFromInt 100932, qualifiedIncome: makeFromInt 43437, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22147, stateTaxDue: makeFromInt 6963 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 77048, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19886, federalTaxDue: makeFromInt 11529, stateTaxDue: makeFromInt 3177 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22436, ordinaryIncomeNonSS: makeFromInt 111332, qualifiedIncome: makeFromInt 88011, itemizedDeductions: makeFromInt 28349, federalTaxDue: makeFromInt 30031, stateTaxDue: makeFromInt 9592 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 111794, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15207, stateTaxDue: makeFromInt 5477 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46484, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22312, federalTaxDue: makeFromInt 6146, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10395, itemizedDeductions: makeFromInt 23246, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10400, ordinaryIncomeNonSS: makeFromInt 61117, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5079, stateTaxDue: makeFromInt 2642 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8017, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31483, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31612, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45343, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1692 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48428, ordinaryIncomeNonSS: makeFromInt 95423, qualifiedIncome: makeFromInt 458, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23157, stateTaxDue: makeFromInt 4339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 117674, qualifiedIncome: makeFromInt 25707, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20185, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54440, qualifiedIncome: makeFromInt 86429, itemizedDeductions: makeFromInt 27148, federalTaxDue: makeFromInt 7715, stateTaxDue: makeFromInt 6736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7970, ordinaryIncomeNonSS: makeFromInt 120280, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13903, federalTaxDue: makeFromInt 36573, stateTaxDue: makeFromInt 10887 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13363, ordinaryIncomeNonSS: makeFromInt 139851, qualifiedIncome: makeFromInt 22044, itemizedDeductions: makeFromInt 4141, federalTaxDue: makeFromInt 27947, stateTaxDue: makeFromInt 7832 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30673, ordinaryIncomeNonSS: makeFromInt 22766, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28834, federalTaxDue: makeFromInt 192, stateTaxDue: makeFromInt 763 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 14424, itemizedDeductions: makeFromInt 11698, federalTaxDue: makeFromInt 20392, stateTaxDue: makeFromInt 7746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58467, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7444, stateTaxDue: makeFromInt 2553 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 67389, qualifiedIncome: makeFromInt 17966, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1714, stateTaxDue: makeFromInt 3700 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26412, federalTaxDue: makeFromInt 42937, stateTaxDue: makeFromInt 12097 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42203, ordinaryIncomeNonSS: makeFromInt 128913, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25344, federalTaxDue: makeFromInt 27301, stateTaxDue: makeFromInt 6191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47506, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 58745, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44442, stateTaxDue: makeFromInt 10197 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16325, ordinaryIncomeNonSS: makeFromInt 110510, qualifiedIncome: makeFromInt 6131, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21351, stateTaxDue: makeFromInt 5520 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 62439, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11574, stateTaxDue: makeFromInt 7447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34478, qualifiedIncome: makeFromInt 8042, itemizedDeductions: makeFromInt 14488, federalTaxDue: makeFromInt 2168, stateTaxDue: makeFromInt 1871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 38449, ordinaryIncomeNonSS: makeFromInt 33409, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24975, federalTaxDue: makeFromInt 3160, stateTaxDue: makeFromInt 1295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92423, itemizedDeductions: makeFromInt 16657, federalTaxDue: makeFromInt 2568, stateTaxDue: makeFromInt 4265 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30692, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5449, itemizedDeductions: makeFromInt 26397, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53120, qualifiedIncome: makeFromInt 70306, itemizedDeductions: makeFromInt 5412, federalTaxDue: makeFromInt 24281, stateTaxDue: makeFromInt 5916 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18004, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 30519, itemizedDeductions: makeFromInt 27775, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19753, ordinaryIncomeNonSS: makeFromInt 49483, qualifiedIncome: makeFromInt 39357, itemizedDeductions: makeFromInt 6230, federalTaxDue: makeFromInt 4266, stateTaxDue: makeFromInt 3767 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10204, ordinaryIncomeNonSS: makeFromInt 82132, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12591, stateTaxDue: makeFromInt 3852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83162, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13546, federalTaxDue: makeFromInt 27163, stateTaxDue: makeFromInt 9117 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41177, ordinaryIncomeNonSS: makeFromInt 126112, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25873, federalTaxDue: makeFromInt 25211, stateTaxDue: makeFromInt 5823 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1922, ordinaryIncomeNonSS: makeFromInt 15545, qualifiedIncome: makeFromInt 6570, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 679 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12026, ordinaryIncomeNonSS: makeFromInt 15137, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 89, stateTaxDue: makeFromInt 502 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78980, itemizedDeductions: makeFromInt 10063, federalTaxDue: makeFromInt 6200, stateTaxDue: makeFromInt 3600 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21019, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 19507, federalTaxDue: makeFromInt 44686, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94098, qualifiedIncome: makeFromInt 63136, itemizedDeductions: makeFromInt 7319, federalTaxDue: makeFromInt 30604, stateTaxDue: makeFromInt 7395 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35948, qualifiedIncome: makeFromInt 46296, itemizedDeductions: makeFromInt 9938, federalTaxDue: makeFromInt 7421, stateTaxDue: makeFromInt 3970 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28776, ordinaryIncomeNonSS: makeFromInt 15539, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5885, federalTaxDue: makeFromInt 330, stateTaxDue: makeFromInt 322 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12776, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6479, ordinaryIncomeNonSS: makeFromInt 106890, qualifiedIncome: makeFromInt 15785, itemizedDeductions: makeFromInt 2485, federalTaxDue: makeFromInt 20051, stateTaxDue: makeFromInt 5679 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72723, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24299, stateTaxDue: makeFromInt 8584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103955, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19246, stateTaxDue: makeFromInt 5077 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 16458, qualifiedIncome: makeFromInt 34858, itemizedDeductions: makeFromInt 7769, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1964 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18160, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79247, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4327, stateTaxDue: makeFromInt 3491 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 21460, ordinaryIncomeNonSS: makeFromInt 42423, qualifiedIncome: makeFromInt 80017, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7368, stateTaxDue: makeFromInt 5447 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 34640, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2930, federalTaxDue: makeFromInt 4333, stateTaxDue: makeFromInt 6257 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22390, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19206, itemizedDeductions: makeFromInt 13964, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 755 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1154, federalTaxDue: makeFromInt 3000, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40695, ordinaryIncomeNonSS: makeFromInt 28458, qualifiedIncome: makeFromInt 13374, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2957, stateTaxDue: makeFromInt 1583 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83037, qualifiedIncome: makeFromInt 63095, itemizedDeductions: makeFromInt 25622, federalTaxDue: makeFromInt 17713, stateTaxDue: makeFromInt 6852 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68996, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4842, stateTaxDue: makeFromInt 3172 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6950, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48062, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31887, stateTaxDue: makeFromInt 9328 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149384, qualifiedIncome: makeFromInt 28201, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30390, stateTaxDue: makeFromInt 8624 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6209, ordinaryIncomeNonSS: makeFromInt 95634, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8422, stateTaxDue: makeFromInt 4307 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40111, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1617 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18455, ordinaryIncomeNonSS: makeFromInt 41621, qualifiedIncome: makeFromInt 89589, itemizedDeductions: makeFromInt 29635, federalTaxDue: makeFromInt 14712, stateTaxDue: makeFromInt 6306 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 27065, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1382, stateTaxDue: makeFromInt 1034 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 69578, qualifiedIncome: makeFromInt 70111, itemizedDeductions: makeFromInt 14964, federalTaxDue: makeFromInt 13463, stateTaxDue: makeFromInt 6675 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25960, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31898, qualifiedIncome: makeFromInt 18687, itemizedDeductions: makeFromInt 15045, federalTaxDue: makeFromInt 8240, stateTaxDue: makeFromInt 1954 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31661, ordinaryIncomeNonSS: makeFromInt 123561, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1424, federalTaxDue: makeFromInt 23374, stateTaxDue: makeFromInt 5603 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13317, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 411 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45169, itemizedDeductions: makeFromInt 25620, federalTaxDue: makeFromInt 34963, stateTaxDue: makeFromInt 9283 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8241, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 31045, itemizedDeductions: makeFromInt 21064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 977 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47950, ordinaryIncomeNonSS: makeFromInt 112667, qualifiedIncome: makeFromInt 25576, itemizedDeductions: makeFromInt 16258, federalTaxDue: makeFromInt 24608, stateTaxDue: makeFromInt 6398 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73336, qualifiedIncome: makeFromInt 49016, itemizedDeductions: makeFromInt 12130, federalTaxDue: makeFromInt 28293, stateTaxDue: makeFromInt 6016 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45615, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25060, ordinaryIncomeNonSS: makeFromInt 105382, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27095, federalTaxDue: makeFromInt 15606, stateTaxDue: makeFromInt 4946 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18370, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40962, stateTaxDue: makeFromInt 10881 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12752, qualifiedIncome: makeFromInt 5074, itemizedDeductions: makeFromInt 2533, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41462, ordinaryIncomeNonSS: makeFromInt 78223, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21145, federalTaxDue: makeFromInt 27315, stateTaxDue: makeFromInt 8539 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9642, ordinaryIncomeNonSS: makeFromInt 62325, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28741, federalTaxDue: makeFromInt 2766, stateTaxDue: makeFromInt 2750 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66519, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2418, stateTaxDue: makeFromInt 3046 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 130790, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29002, stateTaxDue: makeFromInt 10865 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 54968, qualifiedIncome: makeFromInt 47240, itemizedDeductions: makeFromInt 25336, federalTaxDue: makeFromInt 8630, stateTaxDue: makeFromInt 4655 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28332, federalTaxDue: makeFromInt 23702, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41628, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10189, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48581, ordinaryIncomeNonSS: makeFromInt 148137, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38644, stateTaxDue: makeFromInt 7127 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22097, ordinaryIncomeNonSS: makeFromInt 128500, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33080, stateTaxDue: makeFromInt 10950 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41601, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 42193, ordinaryIncomeNonSS: makeFromInt 708, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4255, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26386, ordinaryIncomeNonSS: makeFromInt 25085, qualifiedIncome: makeFromInt 64786, itemizedDeductions: makeFromInt 13989, federalTaxDue: makeFromInt 7541, stateTaxDue: makeFromInt 4155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93107, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25485, federalTaxDue: makeFromInt 16765, stateTaxDue: makeFromInt 4198 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4195, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21450, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49371, ordinaryIncomeNonSS: makeFromInt 104640, qualifiedIncome: makeFromInt 77790, itemizedDeductions: makeFromInt 518, federalTaxDue: makeFromInt 35432, stateTaxDue: makeFromInt 8957 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31914, ordinaryIncomeNonSS: makeFromInt 73899, qualifiedIncome: makeFromInt 23956, itemizedDeductions: makeFromInt 29668, federalTaxDue: makeFromInt 15082, stateTaxDue: makeFromInt 4638 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2955, qualifiedIncome: makeFromInt 7572, itemizedDeductions: makeFromInt 17232, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 71 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33434, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41549, itemizedDeductions: makeFromInt 16182, federalTaxDue: makeFromInt 2217, stateTaxDue: makeFromInt 1622 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26195, ordinaryIncomeNonSS: makeFromInt 48728, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17738, federalTaxDue: makeFromInt 7333, stateTaxDue: makeFromInt 2181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15944, ordinaryIncomeNonSS: makeFromInt 105371, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7576, federalTaxDue: makeFromInt 23080, stateTaxDue: makeFromInt 5150 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1399, ordinaryIncomeNonSS: makeFromInt 115938, qualifiedIncome: makeFromInt 56194, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23800, stateTaxDue: makeFromInt 8232 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48023, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9000, itemizedDeductions: makeFromInt 16918, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 10 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 5938, ordinaryIncomeNonSS: makeFromInt 146252, qualifiedIncome: makeFromInt 56910, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29867, stateTaxDue: makeFromInt 9933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16767, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 363 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27207, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 76797, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3823, federalTaxDue: makeFromInt 5529, stateTaxDue: makeFromInt 3365 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16633, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99811, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9324, stateTaxDue: makeFromInt 4662 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10440, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38999, itemizedDeductions: makeFromInt 2329, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1695 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41212, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25500, itemizedDeductions: makeFromInt 28837, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34419, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96836, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11999, stateTaxDue: makeFromInt 4587 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11443, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38505, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28737, stateTaxDue: makeFromInt 9165 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44915, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81995, itemizedDeductions: makeFromInt 22054, federalTaxDue: makeFromInt 8626, stateTaxDue: makeFromInt 3631 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55878, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2347, stateTaxDue: makeFromInt 2401 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34391, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24776, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36020, stateTaxDue: makeFromInt 8363 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40165, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11854, itemizedDeductions: makeFromInt 18304, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30737, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 45218, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1586 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3094, ordinaryIncomeNonSS: makeFromInt 137096, qualifiedIncome: makeFromInt 80041, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32800, stateTaxDue: makeFromInt 10482 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41688, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 606, stateTaxDue: makeFromInt 1698 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 97367, itemizedDeductions: makeFromInt 21051, federalTaxDue: makeFromInt 2485, stateTaxDue: makeFromInt 4393 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35538, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 16605, itemizedDeductions: makeFromInt 12131, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 375 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2879 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46804, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38604, itemizedDeductions: makeFromInt 20738, federalTaxDue: makeFromInt 40901, stateTaxDue: makeFromInt 9175 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 31521, qualifiedIncome: makeFromInt 2063, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5214, stateTaxDue: makeFromInt 1424 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29093, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99488, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8672, stateTaxDue: makeFromInt 4719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11597, ordinaryIncomeNonSS: makeFromInt 16006, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12653, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 266 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65434, itemizedDeductions: makeFromInt 10, federalTaxDue: makeFromInt 2195, stateTaxDue: makeFromInt 2990 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8962, federalTaxDue: makeFromInt 39410, stateTaxDue: makeFromInt 12199 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49555, ordinaryIncomeNonSS: makeFromInt 25392, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17213, federalTaxDue: makeFromInt 2405, stateTaxDue: makeFromInt 895 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109920, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14959, stateTaxDue: makeFromInt 5055 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34358, ordinaryIncomeNonSS: makeFromInt 30714, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27151, federalTaxDue: makeFromInt 732, stateTaxDue: makeFromInt 1118 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9299, ordinaryIncomeNonSS: makeFromInt 50962, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14253, federalTaxDue: makeFromInt 4632, stateTaxDue: makeFromInt 2048 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 138423, qualifiedIncome: makeFromInt 43305, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40658, stateTaxDue: makeFromInt 8631 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45108, ordinaryIncomeNonSS: makeFromInt 68078, qualifiedIncome: makeFromInt 54985, itemizedDeductions: makeFromInt 25913, federalTaxDue: makeFromInt 23101, stateTaxDue: makeFromInt 6052 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2890, ordinaryIncomeNonSS: makeFromInt 85154, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11235, federalTaxDue: makeFromInt 27449, stateTaxDue: makeFromInt 9128 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 121488, qualifiedIncome: makeFromInt 2041, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36293, stateTaxDue: makeFromInt 6076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26983, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 31562, qualifiedIncome: makeFromInt 41569, itemizedDeductions: makeFromInt 18918, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30883, ordinaryIncomeNonSS: makeFromInt 102096, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10025, federalTaxDue: makeFromInt 25033, stateTaxDue: makeFromInt 4983 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48966, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16548, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 191 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78628, itemizedDeductions: makeFromInt 24308, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3526 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95084, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41672, stateTaxDue: makeFromInt 12275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16480, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41734, ordinaryIncomeNonSS: makeFromInt 131466, qualifiedIncome: makeFromInt 21301, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28699, stateTaxDue: makeFromInt 7063 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26225, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8226, federalTaxDue: makeFromInt 1238, stateTaxDue: makeFromInt 856 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48406, ordinaryIncomeNonSS: makeFromInt 102100, qualifiedIncome: makeFromInt 28721, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29933, stateTaxDue: makeFromInt 6182 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67028, itemizedDeductions: makeFromInt 3014, federalTaxDue: makeFromInt 1939, stateTaxDue: makeFromInt 2976 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16333, qualifiedIncome: makeFromInt 61740, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15504, stateTaxDue: makeFromInt 3553 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 112164, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29893, stateTaxDue: makeFromInt 10270 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70188, qualifiedIncome: makeFromInt 1060, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4736, stateTaxDue: makeFromInt 3087 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42404, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10505, itemizedDeductions: makeFromInt 17993, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26272, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8931, itemizedDeductions: makeFromInt 7477, federalTaxDue: makeFromInt 29959, stateTaxDue: makeFromInt 7572 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11255, qualifiedIncome: makeFromInt 3696, itemizedDeductions: makeFromInt 15238, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 212 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27176, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23218, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107516, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3918, federalTaxDue: makeFromInt 20744, stateTaxDue: makeFromInt 4831 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26369, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41140, ordinaryIncomeNonSS: makeFromInt 47591, qualifiedIncome: makeFromInt 62689, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17968, stateTaxDue: makeFromInt 5226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 82925, itemizedDeductions: makeFromInt 28077, federalTaxDue: makeFromInt 29399, stateTaxDue: makeFromInt 11226 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37355, itemizedDeductions: makeFromInt 26355, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1293 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 147526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25714, stateTaxDue: makeFromInt 6921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12154, ordinaryIncomeNonSS: makeFromInt 36360, qualifiedIncome: makeFromInt 80997, itemizedDeductions: makeFromInt 4255, federalTaxDue: makeFromInt 12081, stateTaxDue: makeFromInt 5557 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56721, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22808, federalTaxDue: makeFromInt 3872, stateTaxDue: makeFromInt 2581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98822, itemizedDeductions: makeFromInt 7601, federalTaxDue: makeFromInt 11925, stateTaxDue: makeFromInt 4566 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13159, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87288, itemizedDeductions: makeFromInt 3762, federalTaxDue: makeFromInt 14142, stateTaxDue: makeFromInt 3909 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29373, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1014 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89906, qualifiedIncome: makeFromInt 41083, itemizedDeductions: makeFromInt 543, federalTaxDue: makeFromInt 26290, stateTaxDue: makeFromInt 6272 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35436, ordinaryIncomeNonSS: makeFromInt 7237, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7895, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41815, itemizedDeductions: makeFromInt 18291, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23973, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5180, federalTaxDue: makeFromInt 1165, stateTaxDue: makeFromInt 672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33838, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 642, federalTaxDue: makeFromInt 8533, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25153, ordinaryIncomeNonSS: makeFromInt 142556, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 5035, federalTaxDue: makeFromInt 30754, stateTaxDue: makeFromInt 6842 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62874, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32716, stateTaxDue: makeFromInt 10510 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32541, ordinaryIncomeNonSS: makeFromInt 19672, qualifiedIncome: makeFromInt 95300, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13931, stateTaxDue: makeFromInt 5261 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 95947, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11422, federalTaxDue: makeFromInt 10366, stateTaxDue: makeFromInt 4342 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65617, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1473, stateTaxDue: makeFromInt 2906 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 16480, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32939, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37615, itemizedDeductions: makeFromInt 16370, federalTaxDue: makeFromInt 127, stateTaxDue: makeFromInt 1306 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61214, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3774, stateTaxDue: makeFromInt 2586 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 332, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45231, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1887 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 21621, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21856, federalTaxDue: makeFromInt 32929, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40924, ordinaryIncomeNonSS: makeFromInt 69621, qualifiedIncome: makeFromInt 7234, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10404, stateTaxDue: makeFromInt 3437 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 368, ordinaryIncomeNonSS: makeFromInt 128965, qualifiedIncome: makeFromInt 3505, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18812, stateTaxDue: makeFromInt 6049 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38371, ordinaryIncomeNonSS: makeFromInt 121431, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24231, stateTaxDue: makeFromInt 5497 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35711, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 118547, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16036, federalTaxDue: makeFromInt 17029, stateTaxDue: makeFromInt 5699 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45536, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24790, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39540, ordinaryIncomeNonSS: makeFromInt 47740, qualifiedIncome: makeFromInt 31432, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7020, stateTaxDue: makeFromInt 3484 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 19972, ordinaryIncomeNonSS: makeFromInt 134695, qualifiedIncome: makeFromInt 87462, itemizedDeductions: makeFromInt 18264, federalTaxDue: makeFromInt 39217, stateTaxDue: makeFromInt 10853 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27602, ordinaryIncomeNonSS: makeFromInt 21787, qualifiedIncome: makeFromInt 75738, itemizedDeductions: makeFromInt 16785, federalTaxDue: makeFromInt 9204, stateTaxDue: makeFromInt 4301 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 4650, ordinaryIncomeNonSS: makeFromInt 126358, qualifiedIncome: makeFromInt 49891, itemizedDeductions: makeFromInt 2050, federalTaxDue: makeFromInt 29066, stateTaxDue: makeFromInt 8557 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86512, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26416, stateTaxDue: makeFromInt 8871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10885, ordinaryIncomeNonSS: makeFromInt 91190, qualifiedIncome: makeFromInt 61904, itemizedDeductions: makeFromInt 5097, federalTaxDue: makeFromInt 20847, stateTaxDue: makeFromInt 7080 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25330, ordinaryIncomeNonSS: makeFromInt 78503, qualifiedIncome: makeFromInt 67641, itemizedDeductions: makeFromInt 11547, federalTaxDue: makeFromInt 22555, stateTaxDue: makeFromInt 7037 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8842, ordinaryIncomeNonSS: makeFromInt 123702, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14050, federalTaxDue: makeFromInt 14096, stateTaxDue: makeFromInt 5710 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33026, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1032 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14814, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27702, ordinaryIncomeNonSS: makeFromInt 59348, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10620, stateTaxDue: makeFromInt 2712 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3918, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36687, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19595, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 571 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 63370, qualifiedIncome: makeFromInt 9816, itemizedDeductions: makeFromInt 7251, federalTaxDue: makeFromInt 7797, stateTaxDue: makeFromInt 3204 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3060, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27410, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15203, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 32435, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25936, stateTaxDue: makeFromInt 8647 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74052, itemizedDeductions: makeFromInt 3567, federalTaxDue: makeFromInt 4857, stateTaxDue: makeFromInt 3248 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35135, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5003, federalTaxDue: makeFromInt 37017, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 51059, itemizedDeductions: makeFromInt 22425, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34898, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 62601, itemizedDeductions: makeFromInt 28745, federalTaxDue: makeFromInt 3743, stateTaxDue: makeFromInt 2968 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22548, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8894, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88421, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8917, stateTaxDue: makeFromInt 4046 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61781, itemizedDeductions: makeFromInt 19567, federalTaxDue: makeFromInt 3620, stateTaxDue: makeFromInt 2722 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5806, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87396, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1814, stateTaxDue: makeFromInt 4008 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42784, ordinaryIncomeNonSS: makeFromInt 34917, qualifiedIncome: makeFromInt 23921, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6536, stateTaxDue: makeFromInt 2654 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48454, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16726, stateTaxDue: makeFromInt 4828 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26385, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96736, itemizedDeductions: makeFromInt 17068, federalTaxDue: makeFromInt 9944, stateTaxDue: makeFromInt 4461 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 40819, stateTaxDue: makeFromInt 8476 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76041, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21, stateTaxDue: makeFromInt 3429 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28275, ordinaryIncomeNonSS: makeFromInt 99920, qualifiedIncome: makeFromInt 83584, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32594, stateTaxDue: makeFromInt 8720 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61284, qualifiedIncome: makeFromInt 64835, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9673, stateTaxDue: makeFromInt 6085 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23535, ordinaryIncomeNonSS: makeFromInt 133558, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23491, stateTaxDue: makeFromInt 6223 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8196, ordinaryIncomeNonSS: makeFromInt 61859, qualifiedIncome: makeFromInt 15105, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4366, stateTaxDue: makeFromInt 3473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 130450, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27393, stateTaxDue: makeFromInt 6225 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 18494, qualifiedIncome: makeFromInt 19683, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4983, stateTaxDue: makeFromInt 1600 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68996, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7562, stateTaxDue: makeFromInt 2995 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13277, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64918, itemizedDeductions: makeFromInt 27438, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2658 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2780, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34143, itemizedDeductions: makeFromInt 1530, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1332 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8447, ordinaryIncomeNonSS: makeFromInt 120832, qualifiedIncome: makeFromInt 96400, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 32832, stateTaxDue: makeFromInt 10287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40920, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49011, itemizedDeductions: makeFromInt 14191, federalTaxDue: makeFromInt 6163, stateTaxDue: makeFromInt 2275 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 134124, qualifiedIncome: makeFromInt 39281, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22753, stateTaxDue: makeFromInt 8191 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22886, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2849, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21356, ordinaryIncomeNonSS: makeFromInt 92291, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11815, stateTaxDue: makeFromInt 4240 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 64059, qualifiedIncome: makeFromInt 16611, itemizedDeductions: makeFromInt 26761, federalTaxDue: makeFromInt 4183, stateTaxDue: makeFromInt 3659 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2897, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23371, ordinaryIncomeNonSS: makeFromInt 144743, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21442, stateTaxDue: makeFromInt 6562 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62565, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12918, stateTaxDue: makeFromInt 2966 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47500, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2929, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26236, qualifiedIncome: makeFromInt 97545, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11290, stateTaxDue: makeFromInt 5734 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22874, ordinaryIncomeNonSS: makeFromInt 128768, qualifiedIncome: makeFromInt 97545, itemizedDeductions: makeFromInt 29805, federalTaxDue: makeFromInt 37070, stateTaxDue: makeFromInt 11061 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34622, qualifiedIncome: makeFromInt 42968, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 817, stateTaxDue: makeFromInt 3405 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10276, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97379, itemizedDeductions: makeFromInt 10249, federalTaxDue: makeFromInt 36127, stateTaxDue: makeFromInt 11964 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1724, ordinaryIncomeNonSS: makeFromInt 148193, qualifiedIncome: makeFromInt 72479, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38379, stateTaxDue: makeFromInt 10826 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76716, qualifiedIncome: makeFromInt 60411, itemizedDeductions: makeFromInt 14879, federalTaxDue: makeFromInt 28431, stateTaxDue: makeFromInt 6647 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42949, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1742 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17941, itemizedDeductions: makeFromInt 23949, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 364 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 49821, qualifiedIncome: makeFromInt 48135, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8028, stateTaxDue: makeFromInt 4567 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19220, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 86757, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41616, stateTaxDue: makeFromInt 11524 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60072, qualifiedIncome: makeFromInt 28920, itemizedDeductions: makeFromInt 8072, federalTaxDue: makeFromInt 16833, stateTaxDue: makeFromInt 3988 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8879, ordinaryIncomeNonSS: makeFromInt 131094, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3249, federalTaxDue: makeFromInt 36624, stateTaxDue: makeFromInt 11125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28982, ordinaryIncomeNonSS: makeFromInt 138379, qualifiedIncome: makeFromInt 40961, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31903, stateTaxDue: makeFromInt 8712 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137599, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30500, stateTaxDue: makeFromInt 11205 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33598, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1005 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93340, itemizedDeductions: makeFromInt 20025, federalTaxDue: makeFromInt 5299, stateTaxDue: makeFromInt 3992 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32462, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75184, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3182 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41415, qualifiedIncome: makeFromInt 66919, itemizedDeductions: makeFromInt 24497, federalTaxDue: makeFromInt 5695, stateTaxDue: makeFromInt 5178 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70864, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6307, stateTaxDue: makeFromInt 3063 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5639, ordinaryIncomeNonSS: makeFromInt 94013, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3733, federalTaxDue: makeFromInt 15662, stateTaxDue: makeFromInt 4448 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110302, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21989, federalTaxDue: makeFromInt 30485, stateTaxDue: makeFromInt 10501 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3958, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7679, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 9 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16560, ordinaryIncomeNonSS: makeFromInt 87681, qualifiedIncome: makeFromInt 30238, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 15760, stateTaxDue: makeFromInt 5667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6736, ordinaryIncomeNonSS: makeFromInt 143762, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13532, federalTaxDue: makeFromInt 25434, stateTaxDue: makeFromInt 6903 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9768, ordinaryIncomeNonSS: makeFromInt 99863, qualifiedIncome: makeFromInt 64729, itemizedDeductions: makeFromInt 26791, federalTaxDue: makeFromInt 19491, stateTaxDue: makeFromInt 7945 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101846, qualifiedIncome: makeFromInt 47624, itemizedDeductions: makeFromInt 1906, federalTaxDue: makeFromInt 24738, stateTaxDue: makeFromInt 6799 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22161, itemizedDeductions: makeFromInt 27669, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70663, qualifiedIncome: makeFromInt 6014, itemizedDeductions: makeFromInt 29781, federalTaxDue: makeFromInt 2432, stateTaxDue: makeFromInt 3360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42772, ordinaryIncomeNonSS: makeFromInt 64488, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4278, federalTaxDue: makeFromInt 14569, stateTaxDue: makeFromInt 2769 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111111, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26018, stateTaxDue: makeFromInt 10114 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84052, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9183, stateTaxDue: makeFromInt 3838 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26265, ordinaryIncomeNonSS: makeFromInt 136980, qualifiedIncome: makeFromInt 29379, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30406, stateTaxDue: makeFromInt 7943 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47864, ordinaryIncomeNonSS: makeFromInt 139914, qualifiedIncome: makeFromInt 14691, itemizedDeductions: makeFromInt 20734, federalTaxDue: makeFromInt 32817, stateTaxDue: makeFromInt 7436 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 82826, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25135, federalTaxDue: makeFromInt 20121, stateTaxDue: makeFromInt 8896 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12913, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52562, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1953 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26308, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28854, ordinaryIncomeNonSS: makeFromInt 148340, qualifiedIncome: makeFromInt 90637, itemizedDeductions: makeFromInt 20057, federalTaxDue: makeFromInt 42732, stateTaxDue: makeFromInt 11574 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45320, ordinaryIncomeNonSS: makeFromInt 16456, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 64, federalTaxDue: makeFromInt 336, stateTaxDue: makeFromInt 391 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32603, ordinaryIncomeNonSS: makeFromInt 130124, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28188, stateTaxDue: makeFromInt 6051 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 45153, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1830, stateTaxDue: makeFromInt 1803 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42829, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2383, federalTaxDue: makeFromInt 6893, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93453, qualifiedIncome: makeFromInt 94624, itemizedDeductions: makeFromInt 17230, federalTaxDue: makeFromInt 36708, stateTaxDue: makeFromInt 8949 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23460, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9572, ordinaryIncomeNonSS: makeFromInt 97663, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17352, stateTaxDue: makeFromInt 4634 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9279, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 80168, itemizedDeductions: makeFromInt 18094, federalTaxDue: makeFromInt 445, stateTaxDue: makeFromInt 3640 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27848, ordinaryIncomeNonSS: makeFromInt 57098, qualifiedIncome: makeFromInt 10708, itemizedDeductions: makeFromInt 16717, federalTaxDue: makeFromInt 8068, stateTaxDue: makeFromInt 3009 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 34071, qualifiedIncome: makeFromInt 6978, itemizedDeductions: makeFromInt 25915, federalTaxDue: makeFromInt 4495, stateTaxDue: makeFromInt 1677 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22188, ordinaryIncomeNonSS: makeFromInt 44929, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13768, federalTaxDue: makeFromInt 4824, stateTaxDue: makeFromInt 1671 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14546, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97212, itemizedDeductions: makeFromInt 14830, federalTaxDue: makeFromInt 3287, stateTaxDue: makeFromInt 4509 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143809, qualifiedIncome: makeFromInt 90819, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36955, stateTaxDue: makeFromInt 11517 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 137671, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22431, federalTaxDue: makeFromInt 19579, stateTaxDue: makeFromInt 6593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29280, stateTaxDue: makeFromInt 11026 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9206, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24498, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16692, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2164, qualifiedIncome: makeFromInt 32496, itemizedDeductions: makeFromInt 26720, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1421 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32588, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27202, ordinaryIncomeNonSS: makeFromInt 59620, qualifiedIncome: makeFromInt 994, itemizedDeductions: makeFromInt 26769, federalTaxDue: makeFromInt 8901, stateTaxDue: makeFromInt 2867 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15068, ordinaryIncomeNonSS: makeFromInt 58114, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4500, stateTaxDue: makeFromInt 2431 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119367, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7314, federalTaxDue: makeFromInt 16998, stateTaxDue: makeFromInt 5483 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26944, ordinaryIncomeNonSS: makeFromInt 27098, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12001, stateTaxDue: makeFromInt 5980 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28628, ordinaryIncomeNonSS: makeFromInt 81831, qualifiedIncome: makeFromInt 24645, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19884, stateTaxDue: makeFromInt 5069 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46033, itemizedDeductions: makeFromInt 22241, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1627 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 92255, itemizedDeductions: makeFromInt 4774, federalTaxDue: makeFromInt 10940, stateTaxDue: makeFromInt 4038 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56554, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4825, stateTaxDue: makeFromInt 2373 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47732, ordinaryIncomeNonSS: makeFromInt 31227, qualifiedIncome: makeFromInt 84282, itemizedDeductions: makeFromInt 15752, federalTaxDue: makeFromInt 19939, stateTaxDue: makeFromInt 5544 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 88972, qualifiedIncome: makeFromInt 38284, itemizedDeductions: makeFromInt 4226, federalTaxDue: makeFromInt 21265, stateTaxDue: makeFromInt 6041 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23868, ordinaryIncomeNonSS: makeFromInt 43549, qualifiedIncome: makeFromInt 13078, itemizedDeductions: makeFromInt 873, federalTaxDue: makeFromInt 7036, stateTaxDue: makeFromInt 2460 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34130, ordinaryIncomeNonSS: makeFromInt 3923, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4851 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3404, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42970, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2724, stateTaxDue: makeFromInt 1845 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7489, ordinaryIncomeNonSS: makeFromInt 145035, qualifiedIncome: makeFromInt 20322, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27808, stateTaxDue: makeFromInt 7882 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 99698, itemizedDeductions: makeFromInt 28203, federalTaxDue: makeFromInt 37084, stateTaxDue: makeFromInt 12184 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3300, ordinaryIncomeNonSS: makeFromInt 130881, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3042, federalTaxDue: makeFromInt 14639, stateTaxDue: makeFromInt 6069 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 40607, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15806, federalTaxDue: makeFromInt 2771, stateTaxDue: makeFromInt 1775 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29624, ordinaryIncomeNonSS: makeFromInt 93045, qualifiedIncome: makeFromInt 76269, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 22430, stateTaxDue: makeFromInt 7791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 19990, qualifiedIncome: makeFromInt 50166, itemizedDeductions: makeFromInt 8646, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3027 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 37099, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73209, itemizedDeductions: makeFromInt 16018, federalTaxDue: makeFromInt 42199, stateTaxDue: makeFromInt 10785 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7541, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12984, federalTaxDue: makeFromInt 28712, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45403, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 42761, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1009, stateTaxDue: makeFromInt 1563 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2888, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66525, itemizedDeductions: makeFromInt 13653, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2740 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49991, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127940, qualifiedIncome: makeFromInt 14594, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20155, stateTaxDue: makeFromInt 6552 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3396, ordinaryIncomeNonSS: makeFromInt 79449, qualifiedIncome: makeFromInt 40186, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8599, stateTaxDue: makeFromInt 5507 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9556, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21603, federalTaxDue: makeFromInt 40101, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37020, ordinaryIncomeNonSS: makeFromInt 57216, qualifiedIncome: makeFromInt 91423, itemizedDeductions: makeFromInt 7253, federalTaxDue: makeFromInt 22688, stateTaxDue: makeFromInt 6857 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 101895, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21976, federalTaxDue: makeFromInt 10510, stateTaxDue: makeFromInt 4748 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36238, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44729, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34726, itemizedDeductions: makeFromInt 17251, federalTaxDue: makeFromInt 39913, stateTaxDue: makeFromInt 9074 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42089, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1521, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35261, ordinaryIncomeNonSS: makeFromInt 43277, qualifiedIncome: makeFromInt 24999, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5112, stateTaxDue: makeFromInt 2829 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 15946, ordinaryIncomeNonSS: makeFromInt 39561, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3942, stateTaxDue: makeFromInt 1467 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19063, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53839, itemizedDeductions: makeFromInt 27693, federalTaxDue: makeFromInt 35154, stateTaxDue: makeFromInt 9737 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 7516, itemizedDeductions: makeFromInt 26251, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 37 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129195, qualifiedIncome: makeFromInt 3200, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20159, stateTaxDue: makeFromInt 6303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27603, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38735, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1532 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23205, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10621, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 3392, qualifiedIncome: makeFromInt 17499, itemizedDeductions: makeFromInt 8921, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 413 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15612, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9746, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 997, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27833, federalTaxDue: makeFromInt 38359, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32796, ordinaryIncomeNonSS: makeFromInt 63339, qualifiedIncome: makeFromInt 80039, itemizedDeductions: makeFromInt 15727, federalTaxDue: makeFromInt 16350, stateTaxDue: makeFromInt 6694 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43145, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51965, itemizedDeductions: makeFromInt 16605, federalTaxDue: makeFromInt 351, stateTaxDue: makeFromInt 1923 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87835, itemizedDeductions: makeFromInt 26264, federalTaxDue: makeFromInt 35208, stateTaxDue: makeFromInt 11317 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 12250, qualifiedIncome: makeFromInt 44203, itemizedDeductions: makeFromInt 14939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2348 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 20789, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1296, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3188, ordinaryIncomeNonSS: makeFromInt 140177, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31663, stateTaxDue: makeFromInt 11334 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 135850, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19658, federalTaxDue: makeFromInt 18238, stateTaxDue: makeFromInt 6378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 938, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9014, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5878, federalTaxDue: makeFromInt 36138, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 74946, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5387, stateTaxDue: makeFromInt 3169 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141441, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16345, stateTaxDue: makeFromInt 6397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39722, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9637, federalTaxDue: makeFromInt 5423, stateTaxDue: makeFromInt 6473 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91626, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 105, federalTaxDue: makeFromInt 37498, stateTaxDue: makeFromInt 9126 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44267, ordinaryIncomeNonSS: makeFromInt 59287, qualifiedIncome: makeFromInt 28309, itemizedDeductions: makeFromInt 5422, federalTaxDue: makeFromInt 15855, stateTaxDue: makeFromInt 4019 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27656, ordinaryIncomeNonSS: makeFromInt 11497, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8783, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 362 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 43581, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26047, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 3647, itemizedDeductions: makeFromInt 9961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49385, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66334, itemizedDeductions: makeFromInt 8284, federalTaxDue: makeFromInt 10858, stateTaxDue: makeFromInt 2862 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90796, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17360, stateTaxDue: makeFromInt 3965 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2162, federalTaxDue: makeFromInt 42578, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99401, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8850, stateTaxDue: makeFromInt 4715 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147357, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39815, stateTaxDue: makeFromInt 7168 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48928, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27521, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 61946, qualifiedIncome: makeFromInt 9874, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1291, stateTaxDue: makeFromInt 3234 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41477, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14093, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2139, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84279, qualifiedIncome: makeFromInt 77805, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13413, stateTaxDue: makeFromInt 7429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14554, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 18528, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31478, stateTaxDue: makeFromInt 8066 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52682, qualifiedIncome: makeFromInt 32736, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2429, stateTaxDue: makeFromInt 3896 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46893, ordinaryIncomeNonSS: makeFromInt 34329, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4136, stateTaxDue: makeFromInt 1302 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 126256, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28709, federalTaxDue: makeFromInt 12695, stateTaxDue: makeFromInt 5638 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42971, ordinaryIncomeNonSS: makeFromInt 119239, qualifiedIncome: makeFromInt 22496, itemizedDeductions: makeFromInt 23371, federalTaxDue: makeFromInt 23481, stateTaxDue: makeFromInt 6612 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30689, itemizedDeductions: makeFromInt 19878, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1159 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89825, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24285, federalTaxDue: makeFromInt 26144, stateTaxDue: makeFromInt 9457 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23123, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78016, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 407, stateTaxDue: makeFromInt 3326 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42218, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17319, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6574, ordinaryIncomeNonSS: makeFromInt 16835, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14970, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 430 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47580, ordinaryIncomeNonSS: makeFromInt 19824, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7596, federalTaxDue: makeFromInt 898, stateTaxDue: makeFromInt 562 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49367, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88059, itemizedDeductions: makeFromInt 2569, federalTaxDue: makeFromInt 5787, stateTaxDue: makeFromInt 3801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49968, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87233, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 52580, stateTaxDue: makeFromInt 11670 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140826, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10200, federalTaxDue: makeFromInt 21058, stateTaxDue: makeFromInt 6666 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1197, ordinaryIncomeNonSS: makeFromInt 138437, qualifiedIncome: makeFromInt 90829, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 42810, stateTaxDue: makeFromInt 11468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40219, qualifiedIncome: makeFromInt 78339, itemizedDeductions: makeFromInt 7124, federalTaxDue: makeFromInt 19349, stateTaxDue: makeFromInt 5598 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12887, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16072, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98103, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2213, stateTaxDue: makeFromInt 4230 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53373, itemizedDeductions: makeFromInt 27550, federalTaxDue: makeFromInt 2358, stateTaxDue: makeFromInt 2498 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29588, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32343, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29165, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 324, federalTaxDue: makeFromInt 23682, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20908, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62485, itemizedDeductions: makeFromInt 17075, federalTaxDue: makeFromInt 43471, stateTaxDue: makeFromInt 10612 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121578, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4681, federalTaxDue: makeFromInt 17774, stateTaxDue: makeFromInt 5752 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97800, itemizedDeductions: makeFromInt 15060, federalTaxDue: makeFromInt 34885, stateTaxDue: makeFromInt 11985 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3556, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64391, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34033, stateTaxDue: makeFromInt 10345 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45519, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11521, federalTaxDue: makeFromInt 42350, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21317, ordinaryIncomeNonSS: makeFromInt 115729, qualifiedIncome: makeFromInt 26487, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26984, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30808, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58823, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4473, stateTaxDue: makeFromInt 2653 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25566, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23811, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 616 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6388, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67737, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2712 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 35011, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32217, itemizedDeductions: makeFromInt 1762, federalTaxDue: makeFromInt 316, stateTaxDue: makeFromInt 1356 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58242, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15255, stateTaxDue: makeFromInt 7622 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127419, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18347, stateTaxDue: makeFromInt 5796 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41740, ordinaryIncomeNonSS: makeFromInt 24885, qualifiedIncome: makeFromInt 60678, itemizedDeductions: makeFromInt 29917, federalTaxDue: makeFromInt 11342, stateTaxDue: makeFromInt 3935 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106497, qualifiedIncome: makeFromInt 63791, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 23045, stateTaxDue: makeFromInt 8134 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28777, ordinaryIncomeNonSS: makeFromInt 5641, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26146, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34855, ordinaryIncomeNonSS: makeFromInt 117494, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12111, federalTaxDue: makeFromInt 22569, stateTaxDue: makeFromInt 5300 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 48780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2039 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 13328, itemizedDeductions: makeFromInt 22804, federalTaxDue: makeFromInt 29462, stateTaxDue: makeFromInt 8105 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44653, ordinaryIncomeNonSS: makeFromInt 45975, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7225, stateTaxDue: makeFromInt 1896 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11211, ordinaryIncomeNonSS: makeFromInt 64801, qualifiedIncome: makeFromInt 27794, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10404, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38260, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 119003, qualifiedIncome: makeFromInt 22173, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26786, stateTaxDue: makeFromInt 6976 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12869, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 26032, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22582, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 634, ordinaryIncomeNonSS: makeFromInt 42171, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4390, stateTaxDue: makeFromInt 1926 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1509, ordinaryIncomeNonSS: makeFromInt 31071, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2221, federalTaxDue: makeFromInt 528, stateTaxDue: makeFromInt 1156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40106, ordinaryIncomeNonSS: makeFromInt 145454, qualifiedIncome: makeFromInt 29288, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44804, stateTaxDue: makeFromInt 8687 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13597, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25161, federalTaxDue: makeFromInt 21381, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23908, itemizedDeductions: makeFromInt 15649, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 669 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 82565, itemizedDeductions: makeFromInt 6341, federalTaxDue: makeFromInt 1000, stateTaxDue: makeFromInt 3762 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79480, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5671, stateTaxDue: makeFromInt 3719 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111242, qualifiedIncome: makeFromInt 39811, itemizedDeductions: makeFromInt 27167, federalTaxDue: makeFromInt 20327, stateTaxDue: makeFromInt 7406 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36968, ordinaryIncomeNonSS: makeFromInt 32424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7958, federalTaxDue: makeFromInt 1670, stateTaxDue: makeFromInt 946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77819, itemizedDeductions: makeFromInt 1082, federalTaxDue: makeFromInt 6025, stateTaxDue: makeFromInt 3540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20448, ordinaryIncomeNonSS: makeFromInt 9413, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 96 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122734, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27413, federalTaxDue: makeFromInt 14295, stateTaxDue: makeFromInt 5811 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 90832, itemizedDeductions: makeFromInt 27463, federalTaxDue: makeFromInt 7977, stateTaxDue: makeFromInt 4204 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36481, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74363, itemizedDeductions: makeFromInt 15510, federalTaxDue: makeFromInt 43346, stateTaxDue: makeFromInt 10994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76417, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7140, stateTaxDue: makeFromInt 3346 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36334, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 78, stateTaxDue: makeFromInt 1506 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 105163, qualifiedIncome: makeFromInt 58984, itemizedDeductions: makeFromInt 4147, federalTaxDue: makeFromInt 26099, stateTaxDue: makeFromInt 8025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57545, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15176, stateTaxDue: makeFromInt 7484 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10450, ordinaryIncomeNonSS: makeFromInt 10250, qualifiedIncome: makeFromInt 18009, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 890 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18866, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56800, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63569, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1165, stateTaxDue: makeFromInt 2804 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33592, ordinaryIncomeNonSS: makeFromInt 83839, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15478, stateTaxDue: makeFromInt 3827 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32485, ordinaryIncomeNonSS: makeFromInt 138765, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24924, stateTaxDue: makeFromInt 6424 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3406, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 23380, itemizedDeductions: makeFromInt 11484, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 540 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46428, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67496, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46280, stateTaxDue: makeFromInt 10420 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 140736, qualifiedIncome: makeFromInt 89235, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32531, stateTaxDue: makeFromInt 11124 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72327, qualifiedIncome: makeFromInt 82914, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21479, stateTaxDue: makeFromInt 7570 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68280, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12323, stateTaxDue: makeFromInt 3024 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27031, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3149, itemizedDeductions: makeFromInt 7585, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 5896, qualifiedIncome: makeFromInt 10488, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 364 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38690, ordinaryIncomeNonSS: makeFromInt 71287, qualifiedIncome: makeFromInt 33354, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17385, stateTaxDue: makeFromInt 4657 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10400, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23569, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 636, itemizedDeductions: makeFromInt 27787, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32233, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73787, itemizedDeductions: makeFromInt 14094, federalTaxDue: makeFromInt 45976, stateTaxDue: makeFromInt 11066 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34609, ordinaryIncomeNonSS: makeFromInt 84604, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14343, stateTaxDue: makeFromInt 3848 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44094, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52070, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3680, stateTaxDue: makeFromInt 2149 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33234, ordinaryIncomeNonSS: makeFromInt 72868, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8447, stateTaxDue: makeFromInt 3168 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89317, qualifiedIncome: makeFromInt 74219, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20721, stateTaxDue: makeFromInt 8116 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33228, stateTaxDue: makeFromInt 11825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 28437, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21579, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 57894, qualifiedIncome: makeFromInt 13862, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14437, stateTaxDue: makeFromInt 3435 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28292, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24023, ordinaryIncomeNonSS: makeFromInt 68285, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12690, stateTaxDue: makeFromInt 3024 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17995, ordinaryIncomeNonSS: makeFromInt 17642, qualifiedIncome: makeFromInt 36917, itemizedDeductions: makeFromInt 21619, federalTaxDue: makeFromInt 727, stateTaxDue: makeFromInt 2436 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25647, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36419, ordinaryIncomeNonSS: makeFromInt 84526, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27011, federalTaxDue: makeFromInt 13802, stateTaxDue: makeFromInt 3851 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 40143, itemizedDeductions: makeFromInt 7596, federalTaxDue: makeFromInt 982, stateTaxDue: makeFromInt 1432 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 43664, ordinaryIncomeNonSS: makeFromInt 71523, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17482, stateTaxDue: makeFromInt 3219 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 12933, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 29497, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1100 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 29353, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6336, federalTaxDue: makeFromInt 2381, stateTaxDue: makeFromInt 1273 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39880, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 101259, qualifiedIncome: makeFromInt 99925, itemizedDeductions: makeFromInt 11882, federalTaxDue: makeFromInt 23540, stateTaxDue: makeFromInt 9513 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108861, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9627, stateTaxDue: makeFromInt 4968 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26453, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10695, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131224, qualifiedIncome: makeFromInt 15578, itemizedDeductions: makeFromInt 28838, federalTaxDue: makeFromInt 22908, stateTaxDue: makeFromInt 7263 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19212, qualifiedIncome: makeFromInt 45168, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12735, stateTaxDue: makeFromInt 2964 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16525, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 371 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 31529, ordinaryIncomeNonSS: makeFromInt 97003, qualifiedIncome: makeFromInt 57092, itemizedDeductions: makeFromInt 4761, federalTaxDue: makeFromInt 33298, stateTaxDue: makeFromInt 7634 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4997, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15348, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39657, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1574 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29747, ordinaryIncomeNonSS: makeFromInt 91443, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28197, stateTaxDue: makeFromInt 9197 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8545, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38023, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19277, ordinaryIncomeNonSS: makeFromInt 66388, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15333, federalTaxDue: makeFromInt 7569, stateTaxDue: makeFromInt 2957 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90175, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3725, federalTaxDue: makeFromInt 27221, stateTaxDue: makeFromInt 9054 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 76529, qualifiedIncome: makeFromInt 90921, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29854, stateTaxDue: makeFromInt 7798 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26308, qualifiedIncome: makeFromInt 64997, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9539, stateTaxDue: makeFromInt 3965 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25183, ordinaryIncomeNonSS: makeFromInt 52111, qualifiedIncome: makeFromInt 27360, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9071, stateTaxDue: makeFromInt 3502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67603, qualifiedIncome: makeFromInt 63400, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7479, stateTaxDue: makeFromInt 6075 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48217, ordinaryIncomeNonSS: makeFromInt 94087, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12683, stateTaxDue: makeFromInt 4146 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8871, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13355, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 93 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27592, itemizedDeductions: makeFromInt 11514, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1005 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42713, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3224, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16942, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10644, ordinaryIncomeNonSS: makeFromInt 57388, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3961, stateTaxDue: makeFromInt 2394 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33688, ordinaryIncomeNonSS: makeFromInt 41737, qualifiedIncome: makeFromInt 11524, itemizedDeductions: makeFromInt 21, federalTaxDue: makeFromInt 12505, stateTaxDue: makeFromInt 2492 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33544, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5064, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 31790, itemizedDeductions: makeFromInt 3249, federalTaxDue: makeFromInt 22996, stateTaxDue: makeFromInt 8415 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46200, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67223, itemizedDeductions: makeFromInt 25438, federalTaxDue: makeFromInt 6907, stateTaxDue: makeFromInt 3204 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13042, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 173, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4334 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20197, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 555 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14886, qualifiedIncome: makeFromInt 26471, itemizedDeductions: makeFromInt 27312, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1660 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 78746, qualifiedIncome: makeFromInt 44476, itemizedDeductions: makeFromInt 4734, federalTaxDue: makeFromInt 16695, stateTaxDue: makeFromInt 5706 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34811, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 71578, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5044, stateTaxDue: makeFromInt 3426 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42725, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 93074, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5460, stateTaxDue: makeFromInt 4298 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9143, ordinaryIncomeNonSS: makeFromInt 4544, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4341, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4852 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 2200, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 98862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6459, stateTaxDue: makeFromInt 4568 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75587, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11861, stateTaxDue: makeFromInt 3508 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19472, qualifiedIncome: makeFromInt 83253, itemizedDeductions: makeFromInt 15032, federalTaxDue: makeFromInt 15286, stateTaxDue: makeFromInt 4561 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23315, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57468, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2620, stateTaxDue: makeFromInt 2618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9178, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11954, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10753, ordinaryIncomeNonSS: makeFromInt 48147, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9199, stateTaxDue: makeFromInt 7005 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27008, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7405, federalTaxDue: makeFromInt 12339, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 84737, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11256, stateTaxDue: makeFromInt 3782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 41478, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3008, stateTaxDue: makeFromInt 1619 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33243, itemizedDeductions: makeFromInt 7464, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 987 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 63683, qualifiedIncome: makeFromInt 52575, itemizedDeductions: makeFromInt 19251, federalTaxDue: makeFromInt 13410, stateTaxDue: makeFromInt 5358 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44207, itemizedDeductions: makeFromInt 2506, federalTaxDue: makeFromInt 2953, stateTaxDue: makeFromInt 1826 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13944, ordinaryIncomeNonSS: makeFromInt 87313, qualifiedIncome: makeFromInt 71774, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17256, stateTaxDue: makeFromInt 7279 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42276, ordinaryIncomeNonSS: makeFromInt 35680, qualifiedIncome: makeFromInt 94770, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13267, stateTaxDue: makeFromInt 6048 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25954, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27874, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 977 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22319, ordinaryIncomeNonSS: makeFromInt 12090, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15168, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 130 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 507, ordinaryIncomeNonSS: makeFromInt 54133, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21714, federalTaxDue: makeFromInt 1426, stateTaxDue: makeFromInt 2332 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15538, federalTaxDue: makeFromInt 10986, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18456, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 27028, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 726 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120403, qualifiedIncome: makeFromInt 11769, itemizedDeductions: makeFromInt 5998, federalTaxDue: makeFromInt 17922, stateTaxDue: makeFromInt 6034 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1328, ordinaryIncomeNonSS: makeFromInt 25065, qualifiedIncome: makeFromInt 95086, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7154, stateTaxDue: makeFromInt 5433 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20009, ordinaryIncomeNonSS: makeFromInt 29599, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10065, federalTaxDue: makeFromInt 11665, stateTaxDue: makeFromInt 6059 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6279, ordinaryIncomeNonSS: makeFromInt 3575, qualifiedIncome: makeFromInt 85676, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6600, stateTaxDue: makeFromInt 4208 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58387, itemizedDeductions: makeFromInt 12452, federalTaxDue: makeFromInt 388, stateTaxDue: makeFromInt 2544 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50929, itemizedDeductions: makeFromInt 2556, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41970, qualifiedIncome: makeFromInt 95640, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15252, stateTaxDue: makeFromInt 6626 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 90392, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7769, stateTaxDue: makeFromInt 4386 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 50159, qualifiedIncome: makeFromInt 69168, itemizedDeductions: makeFromInt 8812, federalTaxDue: makeFromInt 20392, stateTaxDue: makeFromInt 5535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48665, ordinaryIncomeNonSS: makeFromInt 136817, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30750, stateTaxDue: makeFromInt 6631 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78801, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 3365 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40573, ordinaryIncomeNonSS: makeFromInt 34730, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7412, stateTaxDue: makeFromInt 1547 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 137357, qualifiedIncome: makeFromInt 8222, itemizedDeductions: makeFromInt 3642, federalTaxDue: makeFromInt 17130, stateTaxDue: makeFromInt 6604 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 128355, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15579, federalTaxDue: makeFromInt 46102, stateTaxDue: makeFromInt 10963 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 53574, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10370, stateTaxDue: makeFromInt 2281 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42563, qualifiedIncome: makeFromInt 74785, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1856, stateTaxDue: makeFromInt 5392 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 44424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5600, stateTaxDue: makeFromInt 1646 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24427, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16401, federalTaxDue: makeFromInt 803, stateTaxDue: makeFromInt 966 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128322, qualifiedIncome: makeFromInt 39860, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23597, stateTaxDue: makeFromInt 8154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46976, itemizedDeductions: makeFromInt 26264, federalTaxDue: makeFromInt 1399, stateTaxDue: makeFromInt 1967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8955, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25087, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23435, ordinaryIncomeNonSS: makeFromInt 109507, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 37309, stateTaxDue: makeFromInt 10156 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 34657, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13103, federalTaxDue: makeFromInt 130, stateTaxDue: makeFromInt 1115 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34741, ordinaryIncomeNonSS: makeFromInt 140759, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7179, federalTaxDue: makeFromInt 31177, stateTaxDue: makeFromInt 6783 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44029, ordinaryIncomeNonSS: makeFromInt 19605, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2012, stateTaxDue: makeFromInt 768 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85879, itemizedDeductions: makeFromInt 25213, federalTaxDue: makeFromInt 7234, stateTaxDue: makeFromInt 4155 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39085, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46587, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5151, stateTaxDue: makeFromInt 2074 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46782, ordinaryIncomeNonSS: makeFromInt 90798, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8110, federalTaxDue: makeFromInt 23543, stateTaxDue: makeFromInt 4284 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2163, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33337, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 6147 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10255, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9210, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 13460, ordinaryIncomeNonSS: makeFromInt 62379, qualifiedIncome: makeFromInt 50672, itemizedDeductions: makeFromInt 16741, federalTaxDue: makeFromInt 11192, stateTaxDue: makeFromInt 5317 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68430, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4013, stateTaxDue: makeFromInt 2967 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49520, ordinaryIncomeNonSS: makeFromInt 63128, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15439, stateTaxDue: makeFromInt 2791 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43687, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39053, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22925, ordinaryIncomeNonSS: makeFromInt 12645, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 615, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 196 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67868, qualifiedIncome: makeFromInt 83124, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9780, stateTaxDue: makeFromInt 7075 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33611, ordinaryIncomeNonSS: makeFromInt 46536, qualifiedIncome: makeFromInt 23320, itemizedDeductions: makeFromInt 16263, federalTaxDue: makeFromInt 9403, stateTaxDue: makeFromInt 3118 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36112, ordinaryIncomeNonSS: makeFromInt 89192, qualifiedIncome: makeFromInt 48899, itemizedDeductions: makeFromInt 4951, federalTaxDue: makeFromInt 28267, stateTaxDue: makeFromInt 6696 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 53083, qualifiedIncome: makeFromInt 79439, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6589, stateTaxDue: makeFromInt 6151 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10742, qualifiedIncome: makeFromInt 52718, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 102284, qualifiedIncome: makeFromInt 62727, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21890, stateTaxDue: makeFromInt 7865 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10027, ordinaryIncomeNonSS: makeFromInt 20965, qualifiedIncome: makeFromInt 22342, itemizedDeductions: makeFromInt 737, federalTaxDue: makeFromInt 2981, stateTaxDue: makeFromInt 1984 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 110049, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20953, stateTaxDue: makeFromInt 5388 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6123, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 5039, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145834, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18051, federalTaxDue: makeFromInt 17311, stateTaxDue: makeFromInt 6617 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 102286, qualifiedIncome: makeFromInt 7718, itemizedDeductions: makeFromInt 7287, federalTaxDue: makeFromInt 26214, stateTaxDue: makeFromInt 5045 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6353, ordinaryIncomeNonSS: makeFromInt 84231, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27189, federalTaxDue: makeFromInt 7112, stateTaxDue: makeFromInt 3847 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 92484, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29433, federalTaxDue: makeFromInt 14718, stateTaxDue: makeFromInt 3949 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 49880, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84372, itemizedDeductions: makeFromInt 10090, federalTaxDue: makeFromInt 10300, stateTaxDue: makeFromInt 3644 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31434, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19720, itemizedDeductions: makeFromInt 18470, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 411 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 44465, ordinaryIncomeNonSS: makeFromInt 41785, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10721, federalTaxDue: makeFromInt 10028, stateTaxDue: makeFromInt 1907 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41088, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4231, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 136835, qualifiedIncome: makeFromInt 53147, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29391, stateTaxDue: makeFromInt 9342 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14744, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131361, qualifiedIncome: makeFromInt 78652, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38718, stateTaxDue: makeFromInt 10486 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26617, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1970 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9189, ordinaryIncomeNonSS: makeFromInt 92664, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8277, federalTaxDue: makeFromInt 27499, stateTaxDue: makeFromInt 9377 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113294, qualifiedIncome: makeFromInt 47647, itemizedDeductions: makeFromInt 13, federalTaxDue: makeFromInt 17300, stateTaxDue: makeFromInt 7372 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 39324, itemizedDeductions: makeFromInt 1407, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1455 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13279, qualifiedIncome: makeFromInt 28619, itemizedDeductions: makeFromInt 16016, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1688 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 71971, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4756, stateTaxDue: makeFromInt 3222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22988, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42337, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10246, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 86958, qualifiedIncome: makeFromInt 68755, itemizedDeductions: makeFromInt 14225, federalTaxDue: makeFromInt 22105, stateTaxDue: makeFromInt 7331 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107250, qualifiedIncome: makeFromInt 12534, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17826, stateTaxDue: makeFromInt 5681 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46857, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12623, federalTaxDue: makeFromInt 38395, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39301, ordinaryIncomeNonSS: makeFromInt 37404, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6527, federalTaxDue: makeFromInt 4901, stateTaxDue: makeFromInt 1546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14440, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23460, federalTaxDue: makeFromInt 40651, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22495, federalTaxDue: makeFromInt 51860, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63990, itemizedDeductions: makeFromInt 19219, federalTaxDue: makeFromInt 27826, stateTaxDue: makeFromInt 10225 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2799, ordinaryIncomeNonSS: makeFromInt 76854, qualifiedIncome: makeFromInt 91928, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14169, stateTaxDue: makeFromInt 7764 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40703, ordinaryIncomeNonSS: makeFromInt 11367, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1921, federalTaxDue: makeFromInt 438, stateTaxDue: makeFromInt 355 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46575, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9755, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41474, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74057, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 795, stateTaxDue: makeFromInt 3028 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21698, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 71133, qualifiedIncome: makeFromInt 32358, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9686, stateTaxDue: makeFromInt 4600 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34120, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89940, itemizedDeductions: makeFromInt 26823, federalTaxDue: makeFromInt 2223, stateTaxDue: makeFromInt 4098 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19165, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92991, itemizedDeductions: makeFromInt 13360, federalTaxDue: makeFromInt 35761, stateTaxDue: makeFromInt 11475 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17257, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29562, ordinaryIncomeNonSS: makeFromInt 122413, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17455, federalTaxDue: makeFromInt 22670, stateTaxDue: makeFromInt 5546 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24441, ordinaryIncomeNonSS: makeFromInt 12493, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10876, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27956, ordinaryIncomeNonSS: makeFromInt 82821, qualifiedIncome: makeFromInt 90726, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24574, stateTaxDue: makeFromInt 8302 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47371, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27013, federalTaxDue: makeFromInt 2055, stateTaxDue: makeFromInt 1746 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60788, itemizedDeductions: makeFromInt 14894, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 67488, itemizedDeductions: makeFromInt 21934, federalTaxDue: makeFromInt 6856, stateTaxDue: makeFromInt 3095 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 145405, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24360, federalTaxDue: makeFromInt 32217, stateTaxDue: makeFromInt 11795 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56225, qualifiedIncome: makeFromInt 77608, itemizedDeductions: makeFromInt 6130, federalTaxDue: makeFromInt 16281, stateTaxDue: makeFromInt 6479 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133853, qualifiedIncome: makeFromInt 48902, itemizedDeductions: makeFromInt 15539, federalTaxDue: makeFromInt 32482, stateTaxDue: makeFromInt 8583 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68214, itemizedDeductions: makeFromInt 22591, federalTaxDue: makeFromInt 35369, stateTaxDue: makeFromInt 10782 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7297, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6633, federalTaxDue: makeFromInt 20714, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3420, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13118, ordinaryIncomeNonSS: makeFromInt 141057, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23351, stateTaxDue: makeFromInt 6598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14073, ordinaryIncomeNonSS: makeFromInt 148867, qualifiedIncome: makeFromInt 68871, itemizedDeductions: makeFromInt 8909, federalTaxDue: makeFromInt 30941, stateTaxDue: makeFromInt 10212 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23514, ordinaryIncomeNonSS: makeFromInt 43090, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3130, stateTaxDue: makeFromInt 1480 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35169, ordinaryIncomeNonSS: makeFromInt 99638, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18923, federalTaxDue: makeFromInt 20382, stateTaxDue: makeFromInt 4527 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48234, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11273, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 24 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34236, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1318 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42218, ordinaryIncomeNonSS: makeFromInt 76734, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23447, federalTaxDue: makeFromInt 30237, stateTaxDue: makeFromInt 8382 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24988, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1029, stateTaxDue: makeFromInt 794 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8076, ordinaryIncomeNonSS: makeFromInt 25547, qualifiedIncome: makeFromInt 32616, itemizedDeductions: makeFromInt 14335, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2314 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27899, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 3578, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11006, ordinaryIncomeNonSS: makeFromInt 4893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12701, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 25 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12124, federalTaxDue: makeFromInt 16049, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44017, ordinaryIncomeNonSS: makeFromInt 117321, qualifiedIncome: makeFromInt 85516, itemizedDeductions: makeFromInt 1464, federalTaxDue: makeFromInt 37224, stateTaxDue: makeFromInt 9567 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23938, ordinaryIncomeNonSS: makeFromInt 107186, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 17668, stateTaxDue: makeFromInt 5120 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 68632, itemizedDeductions: makeFromInt 13308, federalTaxDue: makeFromInt 5615, stateTaxDue: makeFromInt 3051 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49889, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16286, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13359, ordinaryIncomeNonSS: makeFromInt 33863, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1347, federalTaxDue: makeFromInt 3387, stateTaxDue: makeFromInt 1238 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 75778, qualifiedIncome: makeFromInt 48845, itemizedDeductions: makeFromInt 21385, federalTaxDue: makeFromInt 18576, stateTaxDue: makeFromInt 5556 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49650, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12655, itemizedDeductions: makeFromInt 25922, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42848, ordinaryIncomeNonSS: makeFromInt 45722, qualifiedIncome: makeFromInt 24206, itemizedDeductions: makeFromInt 19913, federalTaxDue: makeFromInt 11759, stateTaxDue: makeFromInt 3188 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 149757, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23708, stateTaxDue: makeFromInt 6913 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3461, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18805, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22123, ordinaryIncomeNonSS: makeFromInt 98044, qualifiedIncome: makeFromInt 24093, itemizedDeductions: makeFromInt 14143, federalTaxDue: makeFromInt 20236, stateTaxDue: makeFromInt 5882 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 17448, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4350, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 46489, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11771, federalTaxDue: makeFromInt 1508, stateTaxDue: makeFromInt 1820 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33031, ordinaryIncomeNonSS: makeFromInt 1575, qualifiedIncome: makeFromInt 13505, itemizedDeductions: makeFromInt 12649, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 317 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13465, itemizedDeductions: makeFromInt 18121, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 418 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 27695, federalTaxDue: makeFromInt 36689, stateTaxDue: makeFromInt 12125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17205, federalTaxDue: makeFromInt 9898, stateTaxDue: makeFromInt 4938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80394, qualifiedIncome: makeFromInt 20116, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9721, stateTaxDue: makeFromInt 4571 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74711, itemizedDeductions: makeFromInt 17961, federalTaxDue: makeFromInt 3452, stateTaxDue: makeFromInt 3260 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34102, ordinaryIncomeNonSS: makeFromInt 115531, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33143, stateTaxDue: makeFromInt 10440 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 49500, itemizedDeductions: makeFromInt 7192, federalTaxDue: makeFromInt 31835, stateTaxDue: makeFromInt 9624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10455, ordinaryIncomeNonSS: makeFromInt 27901, qualifiedIncome: makeFromInt 7579, itemizedDeductions: makeFromInt 7933, federalTaxDue: makeFromInt 724, stateTaxDue: makeFromInt 1259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6206, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36896, ordinaryIncomeNonSS: makeFromInt 68435, qualifiedIncome: makeFromInt 36061, itemizedDeductions: makeFromInt 26787, federalTaxDue: makeFromInt 13161, stateTaxDue: makeFromInt 4880 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2853, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 73329, itemizedDeductions: makeFromInt 13836, federalTaxDue: makeFromInt 46877, stateTaxDue: makeFromInt 10941 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35508, ordinaryIncomeNonSS: makeFromInt 46218, qualifiedIncome: makeFromInt 58574, itemizedDeductions: makeFromInt 4293, federalTaxDue: makeFromInt 14619, stateTaxDue: makeFromInt 4794 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10916, ordinaryIncomeNonSS: makeFromInt 74024, qualifiedIncome: makeFromInt 28901, itemizedDeductions: makeFromInt 8662, federalTaxDue: makeFromInt 12126, stateTaxDue: makeFromInt 4771 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4082, qualifiedIncome: makeFromInt 35306, itemizedDeductions: makeFromInt 28196, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1784 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24853, ordinaryIncomeNonSS: makeFromInt 36423, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26227, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1205 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8507, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 6449, ordinaryIncomeNonSS: makeFromInt 20629, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 624 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11287, ordinaryIncomeNonSS: makeFromInt 5177, qualifiedIncome: makeFromInt 16716, itemizedDeductions: makeFromInt 9811, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 770 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1515, ordinaryIncomeNonSS: makeFromInt 38455, qualifiedIncome: makeFromInt 66993, itemizedDeductions: makeFromInt 29333, federalTaxDue: makeFromInt 6403, stateTaxDue: makeFromInt 5017 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 26312, ordinaryIncomeNonSS: makeFromInt 140181, qualifiedIncome: makeFromInt 76571, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 35152, stateTaxDue: makeFromInt 10606 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46530, ordinaryIncomeNonSS: makeFromInt 72327, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9661, federalTaxDue: makeFromInt 14111, stateTaxDue: makeFromInt 3041 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48187, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63346, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6188, stateTaxDue: makeFromInt 2592 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74000, itemizedDeductions: makeFromInt 21372, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 3192 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48903, ordinaryIncomeNonSS: makeFromInt 90839, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14247, stateTaxDue: makeFromInt 4143 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28832, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 36133, itemizedDeductions: makeFromInt 27518, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48466, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2094, itemizedDeductions: makeFromInt 11920, federalTaxDue: makeFromInt 36173, stateTaxDue: makeFromInt 7308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29001, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8264, ordinaryIncomeNonSS: makeFromInt 5717, qualifiedIncome: makeFromInt 49693, itemizedDeductions: makeFromInt 298, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2096 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16788, stateTaxDue: makeFromInt 6173 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54082, qualifiedIncome: makeFromInt 5022, itemizedDeductions: makeFromInt 24899, federalTaxDue: makeFromInt 893, stateTaxDue: makeFromInt 2586 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29352, ordinaryIncomeNonSS: makeFromInt 123705, qualifiedIncome: makeFromInt 55226, itemizedDeductions: makeFromInt 13555, federalTaxDue: makeFromInt 33478, stateTaxDue: makeFromInt 8697 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 35565, itemizedDeductions: makeFromInt 17356, federalTaxDue: makeFromInt 1706, stateTaxDue: makeFromInt 1523 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119364, qualifiedIncome: makeFromInt 37196, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17067, stateTaxDue: makeFromInt 7153 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23537, ordinaryIncomeNonSS: makeFromInt 66311, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23528, federalTaxDue: makeFromInt 7878, stateTaxDue: makeFromInt 2933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49329, ordinaryIncomeNonSS: makeFromInt 77056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11908, federalTaxDue: makeFromInt 15817, stateTaxDue: makeFromInt 3478 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6356, ordinaryIncomeNonSS: makeFromInt 117675, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16799, stateTaxDue: makeFromInt 5309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44389, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26893, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1611 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 35867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 935, federalTaxDue: makeFromInt 5105, stateTaxDue: makeFromInt 1468 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15805, qualifiedIncome: makeFromInt 70100, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2955, stateTaxDue: makeFromInt 3830 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 16199, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 33723, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1169 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 38423, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1145, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23765, qualifiedIncome: makeFromInt 34132, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8673, stateTaxDue: makeFromInt 2728 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 54009, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13615, stateTaxDue: makeFromInt 2445 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16661, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8578, ordinaryIncomeNonSS: makeFromInt 18413, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 5611 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34404, ordinaryIncomeNonSS: makeFromInt 81544, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13849, stateTaxDue: makeFromInt 3502 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25303, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 66156, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5374, stateTaxDue: makeFromInt 2853 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30632, ordinaryIncomeNonSS: makeFromInt 130788, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29514, stateTaxDue: makeFromInt 6242 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 68258, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19513, federalTaxDue: makeFromInt 16073, stateTaxDue: makeFromInt 3023 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31425, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5558, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26718, ordinaryIncomeNonSS: makeFromInt 57535, qualifiedIncome: makeFromInt 89358, itemizedDeductions: makeFromInt 28858, federalTaxDue: makeFromInt 21009, stateTaxDue: makeFromInt 7267 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22641, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40588, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1654 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114030, qualifiedIncome: makeFromInt 80248, itemizedDeductions: makeFromInt 16563, federalTaxDue: makeFromInt 36864, stateTaxDue: makeFromInt 9339 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10506, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5289 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 6187, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64291, itemizedDeductions: makeFromInt 10256, federalTaxDue: makeFromInt 2084, stateTaxDue: makeFromInt 2932 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114595, qualifiedIncome: makeFromInt 33789, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30420, stateTaxDue: makeFromInt 6844 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 45358, ordinaryIncomeNonSS: makeFromInt 69773, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2606, federalTaxDue: makeFromInt 17408, stateTaxDue: makeFromInt 3130 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46739, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8222, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 4849, qualifiedIncome: makeFromInt 50986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2501 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1011, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 83227, itemizedDeductions: makeFromInt 18090, federalTaxDue: makeFromInt 32091, stateTaxDue: makeFromInt 11242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12430, ordinaryIncomeNonSS: makeFromInt 91267, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24920, stateTaxDue: makeFromInt 8988 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 40438, qualifiedIncome: makeFromInt 76912, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21405, stateTaxDue: makeFromInt 5556 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 23871, ordinaryIncomeNonSS: makeFromInt 78839, qualifiedIncome: makeFromInt 48041, itemizedDeductions: makeFromInt 19758, federalTaxDue: makeFromInt 15530, stateTaxDue: makeFromInt 5818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8241, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29564, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48406, qualifiedIncome: makeFromInt 12694, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1690, stateTaxDue: makeFromInt 2892 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20737, ordinaryIncomeNonSS: makeFromInt 88285, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28768, stateTaxDue: makeFromInt 9154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34059, ordinaryIncomeNonSS: makeFromInt 51688, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5725, stateTaxDue: makeFromInt 1983 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16302, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16257, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26433, stateTaxDue: makeFromInt 8030 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24908, itemizedDeductions: makeFromInt 24437, federalTaxDue: makeFromInt 31314, stateTaxDue: makeFromInt 8070 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 32095, itemizedDeductions: makeFromInt 28690, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1130 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45616, ordinaryIncomeNonSS: makeFromInt 71999, qualifiedIncome: makeFromInt 320, itemizedDeductions: makeFromInt 14929, federalTaxDue: makeFromInt 13244, stateTaxDue: makeFromInt 3137 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20852, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9540, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 120840, qualifiedIncome: makeFromInt 98028, itemizedDeductions: makeFromInt 1074, federalTaxDue: makeFromInt 27888, stateTaxDue: makeFromInt 10509 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41308, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16284, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16073, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89178, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21910, stateTaxDue: makeFromInt 4204 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36042, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34485, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 41937, ordinaryIncomeNonSS: makeFromInt 25879, qualifiedIncome: makeFromInt 9752, itemizedDeductions: makeFromInt 29389, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1266 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13920, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 86687, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1618, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89029, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10175, stateTaxDue: makeFromInt 4194 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 40522, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 16066, qualifiedIncome: makeFromInt 37053, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2485 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29298, ordinaryIncomeNonSS: makeFromInt 136414, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2800, federalTaxDue: makeFromInt 29963, stateTaxDue: makeFromInt 6667 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38138, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33400, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39074, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 952, stateTaxDue: makeFromInt 1442 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22946, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10292, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39090, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38973, itemizedDeductions: makeFromInt 26701, federalTaxDue: makeFromInt 35748, stateTaxDue: makeFromInt 9074 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35315, ordinaryIncomeNonSS: makeFromInt 53604, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 912, federalTaxDue: makeFromInt 6066, stateTaxDue: makeFromInt 2205 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 7839, ordinaryIncomeNonSS: makeFromInt 51225, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10345, stateTaxDue: makeFromInt 6886 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113669, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15600, federalTaxDue: makeFromInt 11356, stateTaxDue: makeFromInt 5296 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15919, ordinaryIncomeNonSS: makeFromInt 47733, qualifiedIncome: makeFromInt 67394, itemizedDeductions: makeFromInt 26043, federalTaxDue: makeFromInt 6366, stateTaxDue: makeFromInt 5081 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1146, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50795, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 33395, stateTaxDue: makeFromInt 10016 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78829, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3454, stateTaxDue: makeFromInt 3367 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8796, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25449, ordinaryIncomeNonSS: makeFromInt 36599, qualifiedIncome: makeFromInt 54233, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 798, stateTaxDue: makeFromInt 3980 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35874, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30578, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 122622, qualifiedIncome: makeFromInt 95986, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 30802, stateTaxDue: makeFromInt 10818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73954, itemizedDeductions: makeFromInt 5614, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3119 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42902, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44436, qualifiedIncome: makeFromInt 56560, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4727, stateTaxDue: makeFromInt 4600 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 49032, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10246, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113747, qualifiedIncome: makeFromInt 55626, itemizedDeductions: makeFromInt 3729, federalTaxDue: makeFromInt 25951, stateTaxDue: makeFromInt 8214 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 30202, ordinaryIncomeNonSS: makeFromInt 45764, qualifiedIncome: makeFromInt 1544, itemizedDeductions: makeFromInt 17442, federalTaxDue: makeFromInt 6927, stateTaxDue: makeFromInt 2066 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4221, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89137, qualifiedIncome: makeFromInt 81180, itemizedDeductions: makeFromInt 22672, federalTaxDue: makeFromInt 30665, stateTaxDue: makeFromInt 7941 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57473, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2278 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 132737, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39144, stateTaxDue: makeFromInt 11523 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23072, ordinaryIncomeNonSS: makeFromInt 117237, qualifiedIncome: makeFromInt 26780, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25609, stateTaxDue: makeFromInt 6896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5818, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11073, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11945, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 79 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 20803, ordinaryIncomeNonSS: makeFromInt 97253, qualifiedIncome: makeFromInt 64663, itemizedDeductions: makeFromInt 1837, federalTaxDue: makeFromInt 20213, stateTaxDue: makeFromInt 7421 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 90637, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6895, stateTaxDue: makeFromInt 4174 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 86941, qualifiedIncome: makeFromInt 21543, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18151, stateTaxDue: makeFromInt 5308 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39560, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 54022, qualifiedIncome: makeFromInt 73194, itemizedDeductions: makeFromInt 21474, federalTaxDue: makeFromInt 11241, stateTaxDue: makeFromInt 6141 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 48984, qualifiedIncome: makeFromInt 6913, itemizedDeductions: makeFromInt 28501, federalTaxDue: makeFromInt 2259, stateTaxDue: makeFromInt 2340 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54085, itemizedDeductions: makeFromInt 15757, federalTaxDue: makeFromInt 2113, stateTaxDue: makeFromInt 2249 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30536, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 38687, itemizedDeductions: makeFromInt 13014, federalTaxDue: makeFromInt 111, stateTaxDue: makeFromInt 1545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1489, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17968, itemizedDeductions: makeFromInt 228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 692 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 119193, qualifiedIncome: makeFromInt 32544, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22060, stateTaxDue: makeFromInt 7290 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 799, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17296, stateTaxDue: makeFromInt 4666 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45139, ordinaryIncomeNonSS: makeFromInt 92249, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14015, stateTaxDue: makeFromInt 4052 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25044, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 930 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140435, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 6128, federalTaxDue: makeFromInt 33439, stateTaxDue: makeFromInt 11609 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131449, qualifiedIncome: makeFromInt 63418, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31368, stateTaxDue: makeFromInt 9288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 66826, qualifiedIncome: makeFromInt 76645, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9467, stateTaxDue: makeFromInt 6664 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 40584, ordinaryIncomeNonSS: makeFromInt 117333, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 136, federalTaxDue: makeFromInt 23699, stateTaxDue: makeFromInt 5492 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21047, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51098, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63796, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2009, stateTaxDue: makeFromInt 2703 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42562, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 65195, itemizedDeductions: makeFromInt 17709, federalTaxDue: makeFromInt 5174, stateTaxDue: makeFromInt 2685 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 74757, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4962, stateTaxDue: makeFromInt 3483 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31145, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9714, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 43676, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15558, ordinaryIncomeNonSS: makeFromInt 3629, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48895, ordinaryIncomeNonSS: makeFromInt 108389, qualifiedIncome: makeFromInt 14030, itemizedDeductions: makeFromInt 24502, federalTaxDue: makeFromInt 26501, stateTaxDue: makeFromInt 5815 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 127746, qualifiedIncome: makeFromInt 83916, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26370, stateTaxDue: makeFromInt 10108 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31395, ordinaryIncomeNonSS: makeFromInt 129748, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19643, stateTaxDue: makeFromInt 5812 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 20256, federalTaxDue: makeFromInt 50016, stateTaxDue: makeFromInt 12080 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33221, ordinaryIncomeNonSS: makeFromInt 56639, qualifiedIncome: makeFromInt 6975, itemizedDeductions: makeFromInt 29993, federalTaxDue: makeFromInt 8052, stateTaxDue: makeFromInt 2898 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1144, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19808, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 30129, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70074, itemizedDeductions: makeFromInt 14108, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2921 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36936, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 38819, itemizedDeductions: makeFromInt 11008, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1466 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 101582, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16462, federalTaxDue: makeFromInt 21840, stateTaxDue: makeFromInt 4704 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129922, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10190, federalTaxDue: makeFromInt 19860, stateTaxDue: makeFromInt 6177 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103064, qualifiedIncome: makeFromInt 5741, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15761, stateTaxDue: makeFromInt 5121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14997, ordinaryIncomeNonSS: makeFromInt 4177, qualifiedIncome: makeFromInt 856, itemizedDeductions: makeFromInt 29769, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4771, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109142, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10525, stateTaxDue: makeFromInt 4913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3252, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 5280, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 8195, federalTaxDue: makeFromInt 44912, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 38872, ordinaryIncomeNonSS: makeFromInt 11952, qualifiedIncome: makeFromInt 85072, itemizedDeductions: makeFromInt 17996, federalTaxDue: makeFromInt 4682, stateTaxDue: makeFromInt 4176 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146525, qualifiedIncome: makeFromInt 42819, itemizedDeductions: makeFromInt 23606, federalTaxDue: makeFromInt 28259, stateTaxDue: makeFromInt 9092 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28754, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52149, itemizedDeductions: makeFromInt 12484, federalTaxDue: makeFromInt 4007, stateTaxDue: makeFromInt 2353 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 15036, ordinaryIncomeNonSS: makeFromInt 72612, qualifiedIncome: makeFromInt 69007, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24883, stateTaxDue: makeFromInt 6998 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91034, qualifiedIncome: makeFromInt 50317, itemizedDeductions: makeFromInt 20063, federalTaxDue: makeFromInt 19101, stateTaxDue: makeFromInt 6781 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44089, ordinaryIncomeNonSS: makeFromInt 54203, qualifiedIncome: makeFromInt 99341, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26910, stateTaxDue: makeFromInt 7402 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31765, ordinaryIncomeNonSS: makeFromInt 18382, qualifiedIncome: makeFromInt 10082, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 168, stateTaxDue: makeFromInt 848 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18636, ordinaryIncomeNonSS: makeFromInt 148634, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5913, federalTaxDue: makeFromInt 21862, stateTaxDue: makeFromInt 6957 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 49288, ordinaryIncomeNonSS: makeFromInt 125762, qualifiedIncome: makeFromInt 49292, itemizedDeductions: makeFromInt 9469, federalTaxDue: makeFromInt 43589, stateTaxDue: makeFromInt 8703 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 104292, qualifiedIncome: makeFromInt 45751, itemizedDeductions: makeFromInt 129, federalTaxDue: makeFromInt 22200, stateTaxDue: makeFromInt 7047 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73519, qualifiedIncome: makeFromInt 97821, itemizedDeductions: makeFromInt 6302, federalTaxDue: makeFromInt 25425, stateTaxDue: makeFromInt 8092 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21138, ordinaryIncomeNonSS: makeFromInt 67056, qualifiedIncome: makeFromInt 77663, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19814, stateTaxDue: makeFromInt 6932 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30228, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33020, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1122 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 99929, qualifiedIncome: makeFromInt 49752, itemizedDeductions: makeFromInt 1648, federalTaxDue: makeFromInt 21830, stateTaxDue: makeFromInt 7229 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7633, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1223, itemizedDeductions: makeFromInt 709, federalTaxDue: makeFromInt 26685, stateTaxDue: makeFromInt 7264 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47442, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12906, stateTaxDue: makeFromInt 7295 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13988, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73388, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3060 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31855, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11161, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25229, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27337, ordinaryIncomeNonSS: makeFromInt 45426, qualifiedIncome: makeFromInt 97375, itemizedDeductions: makeFromInt 28085, federalTaxDue: makeFromInt 8482, stateTaxDue: makeFromInt 6630 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 23149, ordinaryIncomeNonSS: makeFromInt 146439, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37223, stateTaxDue: makeFromInt 11847 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79569, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3503 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 95867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15642, federalTaxDue: makeFromInt 21786, stateTaxDue: makeFromInt 4542 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35995, ordinaryIncomeNonSS: makeFromInt 24706, qualifiedIncome: makeFromInt 6357, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1246, stateTaxDue: makeFromInt 1033 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 123345, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13866, stateTaxDue: makeFromInt 5842 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2324, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78957, itemizedDeductions: makeFromInt 25727, federalTaxDue: makeFromInt 5844, stateTaxDue: makeFromInt 3693 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21659, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27913, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 49405, itemizedDeductions: makeFromInt 2446, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1969 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6484, itemizedDeductions: makeFromInt 978, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79911, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26176, federalTaxDue: makeFromInt 6155, stateTaxDue: makeFromInt 3621 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9641, ordinaryIncomeNonSS: makeFromInt 59967, qualifiedIncome: makeFromInt 35972, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4611, stateTaxDue: makeFromInt 4464 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7468, ordinaryIncomeNonSS: makeFromInt 96706, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16723, stateTaxDue: makeFromInt 4585 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1132, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88787, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4948, stateTaxDue: makeFromInt 4064 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 27740, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88006, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 44127, stateTaxDue: makeFromInt 11690 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16665, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 47167, ordinaryIncomeNonSS: makeFromInt 7226, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8582, ordinaryIncomeNonSS: makeFromInt 17578, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 93, stateTaxDue: makeFromInt 448 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29460, ordinaryIncomeNonSS: makeFromInt 11489, qualifiedIncome: makeFromInt 54416, itemizedDeductions: makeFromInt 26208, federalTaxDue: makeFromInt 4493, stateTaxDue: makeFromInt 2840 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46184, ordinaryIncomeNonSS: makeFromInt 41033, qualifiedIncome: makeFromInt 26008, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13948, stateTaxDue: makeFromInt 3097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 24459, itemizedDeductions: makeFromInt 4377, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 595 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 136626, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 13167, federalTaxDue: makeFromInt 25757, stateTaxDue: makeFromInt 6455 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 22616, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 656 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27262, ordinaryIncomeNonSS: makeFromInt 22539, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6920, stateTaxDue: makeFromInt 5597 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33389, ordinaryIncomeNonSS: makeFromInt 107090, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9070, federalTaxDue: makeFromInt 16403, stateTaxDue: makeFromInt 5013 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44322, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63157, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9220, stateTaxDue: makeFromInt 2703 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18291, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 83609, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4426, stateTaxDue: makeFromInt 3806 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48548, ordinaryIncomeNonSS: makeFromInt 1089, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 107089, qualifiedIncome: makeFromInt 17113, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11074, stateTaxDue: makeFromInt 5784 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34559, ordinaryIncomeNonSS: makeFromInt 104773, qualifiedIncome: makeFromInt 6992, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18682, stateTaxDue: makeFromInt 5013 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2265, ordinaryIncomeNonSS: makeFromInt 63792, qualifiedIncome: makeFromInt 19289, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5521, stateTaxDue: makeFromInt 3686 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13406, ordinaryIncomeNonSS: makeFromInt 6882, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2635, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39640, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 61671, itemizedDeductions: makeFromInt 10388, federalTaxDue: makeFromInt 639, stateTaxDue: makeFromInt 2409 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24176, ordinaryIncomeNonSS: makeFromInt 82964, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9372, stateTaxDue: makeFromInt 3782 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41929, ordinaryIncomeNonSS: makeFromInt 129804, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 24843, stateTaxDue: makeFromInt 6115 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47481, ordinaryIncomeNonSS: makeFromInt 126041, qualifiedIncome: makeFromInt 86342, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37881, stateTaxDue: makeFromInt 10179 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11331, ordinaryIncomeNonSS: makeFromInt 12644, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24024, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 216 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2794, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95676, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42331, stateTaxDue: makeFromInt 12305 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1197, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 488, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 94660, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22515, federalTaxDue: makeFromInt 15403, stateTaxDue: makeFromInt 4058 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 113355, qualifiedIncome: makeFromInt 56644, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18663, stateTaxDue: makeFromInt 7825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25830, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 8028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16722, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 68826, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 46442, stateTaxDue: makeFromInt 10936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36044, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 92595, qualifiedIncome: makeFromInt 72927, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20774, stateTaxDue: makeFromInt 7901 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4574, ordinaryIncomeNonSS: makeFromInt 107370, qualifiedIncome: makeFromInt 23239, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9566, stateTaxDue: makeFromInt 6008 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1221, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 77862, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3767, stateTaxDue: makeFromInt 3589 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35709, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4676, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62108, qualifiedIncome: makeFromInt 42688, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3849, stateTaxDue: makeFromInt 4916 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85416, qualifiedIncome: makeFromInt 9895, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12975, stateTaxDue: makeFromInt 4511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27753, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41510, itemizedDeductions: makeFromInt 23654, federalTaxDue: makeFromInt 579, stateTaxDue: makeFromInt 1893 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16117, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30020, stateTaxDue: makeFromInt 8044 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83737, qualifiedIncome: makeFromInt 70609, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12187, stateTaxDue: makeFromInt 7242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65692, qualifiedIncome: makeFromInt 34506, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 12011, stateTaxDue: makeFromInt 4555 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24584, federalTaxDue: makeFromInt 38936, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 47264, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5126, federalTaxDue: makeFromInt 10096, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 109, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141220, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14827, federalTaxDue: makeFromInt 24883, stateTaxDue: makeFromInt 6855 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33925, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 20798, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32029, itemizedDeductions: makeFromInt 1699, federalTaxDue: makeFromInt 131, stateTaxDue: makeFromInt 1409 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 22927, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 12332, itemizedDeductions: makeFromInt 13073, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 405 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 122736, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16717, stateTaxDue: makeFromInt 5562 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 97788, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8048, stateTaxDue: makeFromInt 4214 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8430, ordinaryIncomeNonSS: makeFromInt 101526, qualifiedIncome: makeFromInt 90813, itemizedDeductions: makeFromInt 20327, federalTaxDue: makeFromInt 24948, stateTaxDue: makeFromInt 9258 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22314, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52412, qualifiedIncome: makeFromInt 22191, itemizedDeductions: makeFromInt 12123, federalTaxDue: makeFromInt 14735, stateTaxDue: makeFromInt 3376 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140279, qualifiedIncome: makeFromInt 49368, itemizedDeductions: makeFromInt 15099, federalTaxDue: makeFromInt 28721, stateTaxDue: makeFromInt 8907 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9903, ordinaryIncomeNonSS: makeFromInt 97115, qualifiedIncome: makeFromInt 86476, itemizedDeductions: makeFromInt 703, federalTaxDue: makeFromInt 26735, stateTaxDue: makeFromInt 8914 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 60995, qualifiedIncome: makeFromInt 29013, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13323, stateTaxDue: makeFromInt 3938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84820, itemizedDeductions: makeFromInt 29600, federalTaxDue: makeFromInt 6472, stateTaxDue: makeFromInt 3986 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27422, ordinaryIncomeNonSS: makeFromInt 21094, qualifiedIncome: makeFromInt 79671, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9566, stateTaxDue: makeFromInt 4663 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38535, ordinaryIncomeNonSS: makeFromInt 31512, qualifiedIncome: makeFromInt 36028, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7467, stateTaxDue: makeFromInt 2996 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9919, ordinaryIncomeNonSS: makeFromInt 113434, qualifiedIncome: makeFromInt 88188, itemizedDeductions: makeFromInt 4011, federalTaxDue: makeFromInt 33183, stateTaxDue: makeFromInt 9626 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 31631, ordinaryIncomeNonSS: makeFromInt 30668, qualifiedIncome: makeFromInt 88856, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10080, stateTaxDue: makeFromInt 5390 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 33362, itemizedDeductions: makeFromInt 6360, federalTaxDue: makeFromInt 42871, stateTaxDue: makeFromInt 8713 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32643, ordinaryIncomeNonSS: makeFromInt 51143, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28451, federalTaxDue: makeFromInt 4065, stateTaxDue: makeFromInt 2180 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 39923, ordinaryIncomeNonSS: makeFromInt 122080, qualifiedIncome: makeFromInt 77938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31852, stateTaxDue: makeFromInt 9326 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1150, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11375, itemizedDeductions: makeFromInt 21908, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7612, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 46449, qualifiedIncome: makeFromInt 17088, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1645, stateTaxDue: makeFromInt 2702 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 143350, qualifiedIncome: makeFromInt 99070, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36524, stateTaxDue: makeFromInt 11546 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 42005, ordinaryIncomeNonSS: makeFromInt 41772, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19156, stateTaxDue: makeFromInt 6514 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 66770, qualifiedIncome: makeFromInt 35936, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 18447, stateTaxDue: makeFromInt 4880 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31805, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67910, itemizedDeductions: makeFromInt 12994, federalTaxDue: makeFromInt 2627, stateTaxDue: makeFromInt 2913 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21608, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1713, federalTaxDue: makeFromInt 44472, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27943, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15138, federalTaxDue: makeFromInt 11154, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10497, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 25810, itemizedDeductions: makeFromInt 21331, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 716 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26486, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 6297, itemizedDeductions: makeFromInt 1764, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 134867, qualifiedIncome: makeFromInt 52399, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29126, stateTaxDue: makeFromInt 9326 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 52839, qualifiedIncome: makeFromInt 63822, itemizedDeductions: makeFromInt 22637, federalTaxDue: makeFromInt 11747, stateTaxDue: makeFromInt 5521 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22879, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4533, itemizedDeductions: makeFromInt 18746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17828, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13394, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 30 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15680, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4606 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10004, ordinaryIncomeNonSS: makeFromInt 53371, qualifiedIncome: makeFromInt 95426, itemizedDeductions: makeFromInt 10395, federalTaxDue: makeFromInt 15659, stateTaxDue: makeFromInt 7140 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34336, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 63519, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 189, stateTaxDue: makeFromInt 2701 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65016, itemizedDeductions: makeFromInt 3286, federalTaxDue: makeFromInt 1853, stateTaxDue: makeFromInt 2576 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6522, ordinaryIncomeNonSS: makeFromInt 35947, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17050, federalTaxDue: makeFromInt 6045, stateTaxDue: makeFromInt 6322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13828, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29567, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55494, itemizedDeductions: makeFromInt 13459, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2300 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 43271, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 21728, federalTaxDue: makeFromInt 46949, stateTaxDue: makeFromInt 11925 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 100737, qualifiedIncome: makeFromInt 40824, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36369, stateTaxDue: makeFromInt 6995 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36917, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33912, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 176, stateTaxDue: makeFromInt 1369 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29757, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27353, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33433, stateTaxDue: makeFromInt 8493 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37750, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1213 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 47795, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12950, federalTaxDue: makeFromInt 17479, stateTaxDue: makeFromInt 7135 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23718, ordinaryIncomeNonSS: makeFromInt 46192, qualifiedIncome: makeFromInt 21334, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7312, stateTaxDue: makeFromInt 3001 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 33678, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 638, stateTaxDue: makeFromInt 1009 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6907, ordinaryIncomeNonSS: makeFromInt 101273, qualifiedIncome: makeFromInt 39943, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16162, stateTaxDue: makeFromInt 6549 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26393, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21521, qualifiedIncome: makeFromInt 89456, itemizedDeductions: makeFromInt 3580, federalTaxDue: makeFromInt 11045, stateTaxDue: makeFromInt 5074 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10172, ordinaryIncomeNonSS: makeFromInt 123608, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16394, stateTaxDue: makeFromInt 5651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102880, qualifiedIncome: makeFromInt 52498, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20505, stateTaxDue: makeFromInt 7373 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19351, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 70580, itemizedDeductions: makeFromInt 18310, federalTaxDue: makeFromInt 2472, stateTaxDue: makeFromInt 3154 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46684, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 14459, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 309 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 88667, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18656, stateTaxDue: makeFromInt 8958 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32663, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 39059, itemizedDeductions: makeFromInt 3335, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1326 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18023, qualifiedIncome: makeFromInt 78341, itemizedDeductions: makeFromInt 25072, federalTaxDue: makeFromInt 456, stateTaxDue: makeFromInt 4262 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23080, ordinaryIncomeNonSS: makeFromInt 127480, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23882, stateTaxDue: makeFromInt 5951 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20707, ordinaryIncomeNonSS: makeFromInt 35041, qualifiedIncome: makeFromInt 47243, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5537, stateTaxDue: makeFromInt 3748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17798, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30492, itemizedDeductions: makeFromInt 15939, federalTaxDue: makeFromInt 32783, stateTaxDue: makeFromInt 8858 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26031, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 28926, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29, stateTaxDue: makeFromInt 1071 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102779, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29861, federalTaxDue: makeFromInt 11832, stateTaxDue: makeFromInt 4684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19274, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2678, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36252, ordinaryIncomeNonSS: makeFromInt 48518, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5356, stateTaxDue: makeFromInt 2006 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 46124, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 17424, itemizedDeductions: makeFromInt 2316, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 460 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 148009, qualifiedIncome: makeFromInt 51310, itemizedDeductions: makeFromInt 4375, federalTaxDue: makeFromInt 44926, stateTaxDue: makeFromInt 9711 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 103771, qualifiedIncome: makeFromInt 70978, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20075, stateTaxDue: makeFromInt 8259 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 36791, ordinaryIncomeNonSS: makeFromInt 126515, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25979, federalTaxDue: makeFromInt 26237, stateTaxDue: makeFromInt 6105 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91264, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5225, stateTaxDue: makeFromInt 4002 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 53261, itemizedDeductions: makeFromInt 1396, federalTaxDue: makeFromInt 39548, stateTaxDue: makeFromInt 9714 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10871, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22504, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 95080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33861, stateTaxDue: makeFromInt 12050 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10357, ordinaryIncomeNonSS: makeFromInt 111404, qualifiedIncome: makeFromInt 45752, itemizedDeductions: makeFromInt 9129, federalTaxDue: makeFromInt 23479, stateTaxDue: makeFromInt 7283 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 70661, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2951 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62092, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2718 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 52857, qualifiedIncome: makeFromInt 53846, itemizedDeductions: makeFromInt 26288, federalTaxDue: makeFromInt 10405, stateTaxDue: makeFromInt 4789 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50620, itemizedDeductions: makeFromInt 23829, federalTaxDue: makeFromInt 738, stateTaxDue: makeFromInt 2133 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16361, ordinaryIncomeNonSS: makeFromInt 112390, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33954, stateTaxDue: makeFromInt 10383 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 84329, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21455, federalTaxDue: makeFromInt 8380, stateTaxDue: makeFromInt 3750 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 22522, ordinaryIncomeNonSS: makeFromInt 148621, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27524, stateTaxDue: makeFromInt 6856 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8135, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 50949, itemizedDeductions: makeFromInt 11987, federalTaxDue: makeFromInt 35609, stateTaxDue: makeFromInt 9792 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25399, ordinaryIncomeNonSS: makeFromInt 90298, qualifiedIncome: makeFromInt 43288, itemizedDeductions: makeFromInt 13018, federalTaxDue: makeFromInt 24396, stateTaxDue: makeFromInt 6524 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8784, ordinaryIncomeNonSS: makeFromInt 74466, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2955, federalTaxDue: makeFromInt 10724, stateTaxDue: makeFromInt 3268 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26765, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27397, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2816, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 35829, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 853, stateTaxDue: makeFromInt 1316 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42241, ordinaryIncomeNonSS: makeFromInt 68362, qualifiedIncome: makeFromInt 94949, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26198, stateTaxDue: makeFromInt 7711 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34765, ordinaryIncomeNonSS: makeFromInt 81692, qualifiedIncome: makeFromInt 96853, itemizedDeductions: makeFromInt 26878, federalTaxDue: makeFromInt 24967, stateTaxDue: makeFromInt 8453 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 15227, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10278, federalTaxDue: makeFromInt 40281, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 37882, qualifiedIncome: makeFromInt 32560, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11889, stateTaxDue: makeFromInt 3042 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84910, itemizedDeductions: makeFromInt 3337, federalTaxDue: makeFromInt 4622, stateTaxDue: makeFromInt 3871 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24201, federalTaxDue: makeFromInt 34683, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25744, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23061, ordinaryIncomeNonSS: makeFromInt 121204, qualifiedIncome: makeFromInt 95023, itemizedDeductions: makeFromInt 27158, federalTaxDue: makeFromInt 33442, stateTaxDue: makeFromInt 10599 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34635, ordinaryIncomeNonSS: makeFromInt 4070, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29401, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6419, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99960, itemizedDeductions: makeFromInt 2110, federalTaxDue: makeFromInt 3699, stateTaxDue: makeFromInt 4445 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 46329, ordinaryIncomeNonSS: makeFromInt 10786, qualifiedIncome: makeFromInt 71031, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3194, stateTaxDue: makeFromInt 3616 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1648, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25127, stateTaxDue: makeFromInt 7285 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 597, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73278, itemizedDeductions: makeFromInt 27153, federalTaxDue: makeFromInt 6472, stateTaxDue: makeFromInt 3289 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31006, ordinaryIncomeNonSS: makeFromInt 128283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10820, federalTaxDue: makeFromInt 19698, stateTaxDue: makeFromInt 5939 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 19310, ordinaryIncomeNonSS: makeFromInt 38722, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1694, stateTaxDue: makeFromInt 1461 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 60074, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17115, federalTaxDue: makeFromInt 14450, stateTaxDue: makeFromInt 7715 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45781, ordinaryIncomeNonSS: makeFromInt 75837, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10473, stateTaxDue: makeFromInt 3317 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22150, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23535, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89452, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6746, stateTaxDue: makeFromInt 3871 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10375, ordinaryIncomeNonSS: makeFromInt 137377, qualifiedIncome: makeFromInt 98656, itemizedDeductions: makeFromInt 7063, federalTaxDue: makeFromInt 42388, stateTaxDue: makeFromInt 11691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13619, ordinaryIncomeNonSS: makeFromInt 125628, qualifiedIncome: makeFromInt 12398, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19491, stateTaxDue: makeFromInt 6387 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14316, ordinaryIncomeNonSS: makeFromInt 21317, qualifiedIncome: makeFromInt 10492, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1173 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 3584, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 81339, itemizedDeductions: makeFromInt 17555, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3392 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 12440, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 41976, ordinaryIncomeNonSS: makeFromInt 85991, qualifiedIncome: makeFromInt 78249, itemizedDeductions: makeFromInt 20738, federalTaxDue: makeFromInt 30255, stateTaxDue: makeFromInt 8029 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95607, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8551, stateTaxDue: makeFromInt 4405 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40967, ordinaryIncomeNonSS: makeFromInt 65612, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9428, federalTaxDue: makeFromInt 8525, stateTaxDue: makeFromInt 2606 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48888, ordinaryIncomeNonSS: makeFromInt 68456, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 128, federalTaxDue: makeFromInt 9880, stateTaxDue: makeFromInt 2748 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 70681, qualifiedIncome: makeFromInt 91246, itemizedDeductions: makeFromInt 21946, federalTaxDue: makeFromInt 14330, stateTaxDue: makeFromInt 7605 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 664, ordinaryIncomeNonSS: makeFromInt 148557, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 25257, stateTaxDue: makeFromInt 7352 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10157, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8564, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 85516, itemizedDeductions: makeFromInt 7152, federalTaxDue: makeFromInt 39135, stateTaxDue: makeFromInt 11521 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 496, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15668, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 4172, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17684, qualifiedIncome: makeFromInt 47973, itemizedDeductions: makeFromInt 2050, federalTaxDue: makeFromInt 8034, stateTaxDue: makeFromInt 2900 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3188, stateTaxDue: makeFromInt 4404 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 22006, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 34880, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25338, ordinaryIncomeNonSS: makeFromInt 140072, qualifiedIncome: makeFromInt 97399, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43363, stateTaxDue: makeFromInt 11887 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 29888, itemizedDeductions: makeFromInt 96, federalTaxDue: makeFromInt 27743, stateTaxDue: makeFromInt 8619 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48541, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33589, stateTaxDue: makeFromInt 9472 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27179, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32380, itemizedDeductions: makeFromInt 29900, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 106900, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39260, stateTaxDue: makeFromInt 10001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48392, ordinaryIncomeNonSS: makeFromInt 17718, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5199, federalTaxDue: makeFromInt 2325, stateTaxDue: makeFromInt 679 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17915, ordinaryIncomeNonSS: makeFromInt 130616, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36638, stateTaxDue: makeFromInt 11076 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 2065, ordinaryIncomeNonSS: makeFromInt 37826, qualifiedIncome: makeFromInt 5345, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1919, stateTaxDue: makeFromInt 1584 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2799, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62954, itemizedDeductions: makeFromInt 17961, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2762 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10089, ordinaryIncomeNonSS: makeFromInt 136427, qualifiedIncome: makeFromInt 3317, itemizedDeductions: makeFromInt 28733, federalTaxDue: makeFromInt 20365, stateTaxDue: makeFromInt 6699 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43878, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7171, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 8535, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90490, itemizedDeductions: makeFromInt 26357, federalTaxDue: makeFromInt 33848, stateTaxDue: makeFromInt 11350 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 56836, qualifiedIncome: makeFromInt 18958, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8522, stateTaxDue: makeFromInt 3403 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 56364, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7275, stateTaxDue: makeFromInt 2650 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 45059, qualifiedIncome: makeFromInt 73881, itemizedDeductions: makeFromInt 19421, federalTaxDue: makeFromInt 9336, stateTaxDue: makeFromInt 5719 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 38631, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40554, stateTaxDue: makeFromInt 9273 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23823, ordinaryIncomeNonSS: makeFromInt 98283, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19694, stateTaxDue: makeFromInt 4539 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23738, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27634, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1795, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9094, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45782, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92111, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15103, stateTaxDue: makeFromInt 4473 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47802, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 35826, stateTaxDue: makeFromInt 9741 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39218, qualifiedIncome: makeFromInt 41360, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8753, stateTaxDue: makeFromInt 3885 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23862, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28110, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 416, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 118709, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16447, federalTaxDue: makeFromInt 14801, stateTaxDue: makeFromInt 5503 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 15775, qualifiedIncome: makeFromInt 2332, itemizedDeductions: makeFromInt 27077, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 530 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66273, qualifiedIncome: makeFromInt 90115, itemizedDeductions: makeFromInt 3083, federalTaxDue: makeFromInt 23269, stateTaxDue: makeFromInt 7751 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32330, itemizedDeductions: makeFromInt 5964, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1142 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32506, ordinaryIncomeNonSS: makeFromInt 36780, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3524, stateTaxDue: makeFromInt 1325 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 16767, ordinaryIncomeNonSS: makeFromInt 21845, qualifiedIncome: makeFromInt 35599, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1000, stateTaxDue: makeFromInt 2397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47954, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 18350, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 7031, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 11980, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 124 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22743, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26323, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32929, ordinaryIncomeNonSS: makeFromInt 77097, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 13182, stateTaxDue: makeFromInt 3381 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26845, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 62482, itemizedDeductions: makeFromInt 28655, federalTaxDue: makeFromInt 31893, stateTaxDue: makeFromInt 10184 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 17425, ordinaryIncomeNonSS: makeFromInt 35334, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2974, stateTaxDue: makeFromInt 1392 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6940, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 96495, itemizedDeductions: makeFromInt 20823, federalTaxDue: makeFromInt 6914, stateTaxDue: makeFromInt 4370 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39504, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9574, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17175, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27475, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 748 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12256, ordinaryIncomeNonSS: makeFromInt 28205, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 299, stateTaxDue: makeFromInt 1202 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 3619, ordinaryIncomeNonSS: makeFromInt 54152, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27533, federalTaxDue: makeFromInt 3152, stateTaxDue: makeFromInt 2233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 48957, ordinaryIncomeNonSS: makeFromInt 72206, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17624, stateTaxDue: makeFromInt 3155 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 17953, qualifiedIncome: makeFromInt 62216, itemizedDeductions: makeFromInt 12568, federalTaxDue: makeFromInt 9400, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 29814, ordinaryIncomeNonSS: makeFromInt 24170, qualifiedIncome: makeFromInt 14359, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3930, stateTaxDue: makeFromInt 1671 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 140633, qualifiedIncome: makeFromInt 25183, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21316, stateTaxDue: makeFromInt 7804 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 33467, ordinaryIncomeNonSS: makeFromInt 57771, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27267, stateTaxDue: makeFromInt 7618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87318, itemizedDeductions: makeFromInt 10183, federalTaxDue: makeFromInt 7450, stateTaxDue: makeFromInt 4025 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36939, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2295, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21283, ordinaryIncomeNonSS: makeFromInt 21581, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14262, federalTaxDue: makeFromInt 11908, stateTaxDue: makeFromInt 5504 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99989, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14058, federalTaxDue: makeFromInt 12191, stateTaxDue: makeFromInt 4671 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54535, itemizedDeductions: makeFromInt 7782, federalTaxDue: makeFromInt 5282, stateTaxDue: makeFromInt 2152 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7625, federalTaxDue: makeFromInt 31713, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80963, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28850, federalTaxDue: makeFromInt 5843, stateTaxDue: makeFromInt 3573 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41767, ordinaryIncomeNonSS: makeFromInt 116452, qualifiedIncome: makeFromInt 32563, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37570, stateTaxDue: makeFromInt 7375 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39763, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 89366, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6907, stateTaxDue: makeFromInt 4007 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 125935, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21471, stateTaxDue: makeFromInt 5936 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74982, qualifiedIncome: makeFromInt 84645, itemizedDeductions: makeFromInt 16553, federalTaxDue: makeFromInt 23771, stateTaxDue: makeFromInt 7306 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39578, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23085, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95587, qualifiedIncome: makeFromInt 53460, itemizedDeductions: makeFromInt 26458, federalTaxDue: makeFromInt 17345, stateTaxDue: makeFromInt 7077 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4312, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16566, federalTaxDue: makeFromInt 2498, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 51436, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2615, federalTaxDue: makeFromInt 8603, stateTaxDue: makeFromInt 7097 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 18209, ordinaryIncomeNonSS: makeFromInt 101557, qualifiedIncome: makeFromInt 35415, itemizedDeductions: makeFromInt 7756, federalTaxDue: makeFromInt 21979, stateTaxDue: makeFromInt 6639 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76692, qualifiedIncome: makeFromInt 41756, itemizedDeductions: makeFromInt 23499, federalTaxDue: makeFromInt 11963, stateTaxDue: makeFromInt 5547 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 30914, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 891, ordinaryIncomeNonSS: makeFromInt 67685, qualifiedIncome: makeFromInt 61951, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16733, stateTaxDue: makeFromInt 6027 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 16287, ordinaryIncomeNonSS: makeFromInt 20383, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11621, federalTaxDue: makeFromInt 790, stateTaxDue: makeFromInt 764 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33483, ordinaryIncomeNonSS: makeFromInt 83180, qualifiedIncome: makeFromInt 44095, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16403, stateTaxDue: makeFromInt 5689 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 25679, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39151, stateTaxDue: makeFromInt 11979 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29748, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 79711, itemizedDeductions: makeFromInt 6030, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3311 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2421, ordinaryIncomeNonSS: makeFromInt 127988, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21310, federalTaxDue: makeFromInt 14959, stateTaxDue: makeFromInt 5817 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89653, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13373, stateTaxDue: makeFromInt 4226 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12680, ordinaryIncomeNonSS: makeFromInt 120683, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16195, stateTaxDue: makeFromInt 5502 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83524, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4320, federalTaxDue: makeFromInt 20953, stateTaxDue: makeFromInt 3921 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 95690, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14883, stateTaxDue: makeFromInt 4533 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41890, ordinaryIncomeNonSS: makeFromInt 86724, qualifiedIncome: makeFromInt 28946, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20676, stateTaxDue: makeFromInt 5417 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28066, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28788, stateTaxDue: makeFromInt 8735 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6539, ordinaryIncomeNonSS: makeFromInt 66421, qualifiedIncome: makeFromInt 17206, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5110, stateTaxDue: makeFromInt 3506 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4949, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12844, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 48313, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 98754, itemizedDeductions: makeFromInt 1654, federalTaxDue: makeFromInt 46099, stateTaxDue: makeFromInt 12034 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28700, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1112, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 28987, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52403, itemizedDeductions: makeFromInt 11502, federalTaxDue: makeFromInt 4522, stateTaxDue: makeFromInt 2365 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47321, itemizedDeductions: makeFromInt 14966, federalTaxDue: makeFromInt 45599, stateTaxDue: makeFromInt 9635 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 48309, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2732, federalTaxDue: makeFromInt 10689, stateTaxDue: makeFromInt 2035 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 36779, qualifiedIncome: makeFromInt 32092, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1583, stateTaxDue: makeFromInt 2869 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 131184, qualifiedIncome: makeFromInt 49697, itemizedDeductions: makeFromInt 7519, federalTaxDue: makeFromInt 31211, stateTaxDue: makeFromInt 8878 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29297, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 34240, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28843, stateTaxDue: makeFromInt 8537 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28355, ordinaryIncomeNonSS: makeFromInt 50404, qualifiedIncome: makeFromInt 1219, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5125, stateTaxDue: makeFromInt 1906 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 61265, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8208, stateTaxDue: makeFromInt 2388 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85925, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24499, federalTaxDue: makeFromInt 6983, stateTaxDue: makeFromInt 3895 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 89008, qualifiedIncome: makeFromInt 49080, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26184, stateTaxDue: makeFromInt 6329 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 25746, ordinaryIncomeNonSS: makeFromInt 81657, qualifiedIncome: makeFromInt 90987, itemizedDeductions: makeFromInt 18620, federalTaxDue: makeFromInt 24113, stateTaxDue: makeFromInt 8254 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 2041, ordinaryIncomeNonSS: makeFromInt 133596, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36213, stateTaxDue: makeFromInt 11465 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40420, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 32065, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 533, stateTaxDue: makeFromInt 1348 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35705, itemizedDeductions: makeFromInt 28725, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1530 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 42603, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40623, ordinaryIncomeNonSS: makeFromInt 133547, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38754, stateTaxDue: makeFromInt 11360 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91180, qualifiedIncome: makeFromInt 65900, itemizedDeductions: makeFromInt 10003, federalTaxDue: makeFromInt 29228, stateTaxDue: makeFromInt 7279 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 72225, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5186, stateTaxDue: makeFromInt 3459 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 73483, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18543, stateTaxDue: makeFromInt 3419 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31723, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99741, itemizedDeductions: makeFromInt 6697, federalTaxDue: makeFromInt 10823, stateTaxDue: makeFromInt 4740 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 15025, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 114707, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19814, stateTaxDue: makeFromInt 5060 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1003, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 10216, itemizedDeductions: makeFromInt 21690, federalTaxDue: makeFromInt 24288, stateTaxDue: makeFromInt 7722 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 92453, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5498, stateTaxDue: makeFromInt 4248 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 28687, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133380, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 16675, stateTaxDue: makeFromInt 6150 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 24447, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27513, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 967 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44919, ordinaryIncomeNonSS: makeFromInt 149189, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26449, stateTaxDue: makeFromInt 6984 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48960, ordinaryIncomeNonSS: makeFromInt 69143, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30070, stateTaxDue: makeFromInt 8177 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 38987, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8265, stateTaxDue: makeFromInt 4549 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136850, qualifiedIncome: makeFromInt 68544, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28680, stateTaxDue: makeFromInt 10029 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 126602, qualifiedIncome: makeFromInt 42520, itemizedDeductions: makeFromInt 7807, federalTaxDue: makeFromInt 25408, stateTaxDue: makeFromInt 8176 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9160, ordinaryIncomeNonSS: makeFromInt 88630, qualifiedIncome: makeFromInt 32756, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15911, stateTaxDue: makeFromInt 5494 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 109994, qualifiedIncome: makeFromInt 37592, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 20615, stateTaxDue: makeFromInt 7180 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9437, ordinaryIncomeNonSS: makeFromInt 102839, qualifiedIncome: makeFromInt 16761, itemizedDeductions: makeFromInt 3203, federalTaxDue: makeFromInt 21189, stateTaxDue: makeFromInt 5753 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 34440, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88511, itemizedDeductions: makeFromInt 22579, federalTaxDue: makeFromInt 44963, stateTaxDue: makeFromInt 11671 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18465, federalTaxDue: makeFromInt 23649, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 3645, qualifiedIncome: makeFromInt 84977, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9373, stateTaxDue: makeFromInt 4071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 473, ordinaryIncomeNonSS: makeFromInt 52833, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2130, stateTaxDue: makeFromInt 2042 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 48411, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3926, stateTaxDue: makeFromInt 2166 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10783, qualifiedIncome: makeFromInt 34846, itemizedDeductions: makeFromInt 26732, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1899 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 75380, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27029, stateTaxDue: makeFromInt 8720 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 5969, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46085, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 54709, itemizedDeductions: makeFromInt 29809, federalTaxDue: makeFromInt 1915, stateTaxDue: makeFromInt 2443 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10599, ordinaryIncomeNonSS: makeFromInt 118553, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11972, federalTaxDue: makeFromInt 22025, stateTaxDue: makeFromInt 5618 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11940, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 33155, itemizedDeductions: makeFromInt 16689, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 34263, ordinaryIncomeNonSS: makeFromInt 66675, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7809, stateTaxDue: makeFromInt 2659 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 43576, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1774 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49182, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30569, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 84064, itemizedDeductions: makeFromInt 25417, federalTaxDue: makeFromInt 107, stateTaxDue: makeFromInt 3728 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8733, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52690, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2260 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20493, ordinaryIncomeNonSS: makeFromInt 95117, qualifiedIncome: makeFromInt 84859, itemizedDeductions: makeFromInt 6525, federalTaxDue: makeFromInt 26998, stateTaxDue: makeFromInt 8624 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 16919, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 516 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15569, ordinaryIncomeNonSS: makeFromInt 53505, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8638, federalTaxDue: makeFromInt 4322, stateTaxDue: makeFromInt 2200 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1426, ordinaryIncomeNonSS: makeFromInt 88414, qualifiedIncome: makeFromInt 78214, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20467, stateTaxDue: makeFromInt 8076 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12250, ordinaryIncomeNonSS: makeFromInt 21149, qualifiedIncome: makeFromInt 86005, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13153, stateTaxDue: makeFromInt 5240 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89618, qualifiedIncome: makeFromInt 68373, itemizedDeductions: makeFromInt 3649, federalTaxDue: makeFromInt 25844, stateTaxDue: makeFromInt 7833 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17979, ordinaryIncomeNonSS: makeFromInt 76873, qualifiedIncome: makeFromInt 3157, itemizedDeductions: makeFromInt 8090, federalTaxDue: makeFromInt 12199, stateTaxDue: makeFromInt 3653 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9114, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 26583, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1646, stateTaxDue: makeFromInt 999 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3722, ordinaryIncomeNonSS: makeFromInt 138750, qualifiedIncome: makeFromInt 41279, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27511, stateTaxDue: makeFromInt 8626 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65560, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21806, stateTaxDue: makeFromInt 8023 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15754, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99827, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7414, stateTaxDue: makeFromInt 4744 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 12701, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6630, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106131, qualifiedIncome: makeFromInt 99323, itemizedDeductions: makeFromInt 14113, federalTaxDue: makeFromInt 30677, stateTaxDue: makeFromInt 9818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18562, ordinaryIncomeNonSS: makeFromInt 13484, qualifiedIncome: makeFromInt 19804, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1147 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 3261, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28237, federalTaxDue: makeFromInt 23968, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106428, qualifiedIncome: makeFromInt 57043, itemizedDeductions: makeFromInt 26504, federalTaxDue: makeFromInt 14236, stateTaxDue: makeFromInt 7684 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 3595, ordinaryIncomeNonSS: makeFromInt 80794, qualifiedIncome: makeFromInt 70058, itemizedDeductions: makeFromInt 20370, federalTaxDue: makeFromInt 19664, stateTaxDue: makeFromInt 7347 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18968, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23385, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 43348, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41872, ordinaryIncomeNonSS: makeFromInt 78515, qualifiedIncome: makeFromInt 69708, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28149, stateTaxDue: makeFromInt 7156 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42730, itemizedDeductions: makeFromInt 29621, federalTaxDue: makeFromInt 503, stateTaxDue: makeFromInt 1936 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38521, ordinaryIncomeNonSS: makeFromInt 103851, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28385, stateTaxDue: makeFromInt 5072 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 57751, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10308, stateTaxDue: makeFromInt 7413 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124328, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9445, federalTaxDue: makeFromInt 22006, stateTaxDue: makeFromInt 5994 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 43305, ordinaryIncomeNonSS: makeFromInt 69531, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7486, stateTaxDue: makeFromInt 2893 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1279, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26454, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 14496, ordinaryIncomeNonSS: makeFromInt 45490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5893, stateTaxDue: makeFromInt 2075 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 39492, ordinaryIncomeNonSS: makeFromInt 72067, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 16166, federalTaxDue: makeFromInt 11602, stateTaxDue: makeFromInt 3125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12435, ordinaryIncomeNonSS: makeFromInt 31956, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 99, stateTaxDue: makeFromInt 1181 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51399, itemizedDeductions: makeFromInt 15724, federalTaxDue: makeFromInt 150, stateTaxDue: makeFromInt 2071 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32640, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52968, itemizedDeductions: makeFromInt 18035, federalTaxDue: makeFromInt 391, stateTaxDue: makeFromInt 2253 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 6941, ordinaryIncomeNonSS: makeFromInt 81603, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23299, federalTaxDue: makeFromInt 20824, stateTaxDue: makeFromInt 8813 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 93146, qualifiedIncome: makeFromInt 30164, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17400, stateTaxDue: makeFromInt 5911 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 55489, qualifiedIncome: makeFromInt 70994, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6266, stateTaxDue: makeFromInt 6022 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1810, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 115909, qualifiedIncome: makeFromInt 33950, itemizedDeductions: makeFromInt 12409, federalTaxDue: makeFromInt 21450, stateTaxDue: makeFromInt 7194 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15969, ordinaryIncomeNonSS: makeFromInt 97346, qualifiedIncome: makeFromInt 76732, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30200, stateTaxDue: makeFromInt 8531 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14857, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 27982, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64785, itemizedDeductions: makeFromInt 2765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2651 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46669, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22000, federalTaxDue: makeFromInt 32577, stateTaxDue: makeFromInt 6925 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 58939, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 7429, stateTaxDue: makeFromInt 2659 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 116572, qualifiedIncome: makeFromInt 38154, itemizedDeductions: makeFromInt 9189, federalTaxDue: makeFromInt 20960, stateTaxDue: makeFromInt 7161 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7465, ordinaryIncomeNonSS: makeFromInt 7931, qualifiedIncome: makeFromInt 72445, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3538, stateTaxDue: makeFromInt 3752 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2060, ordinaryIncomeNonSS: makeFromInt 4234, qualifiedIncome: makeFromInt 71712, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4967, stateTaxDue: makeFromInt 3649 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 3030, ordinaryIncomeNonSS: makeFromInt 112251, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 10490, stateTaxDue: makeFromInt 4938 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 129552, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 23329, federalTaxDue: makeFromInt 13730, stateTaxDue: makeFromInt 6003 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17540, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 4053, itemizedDeductions: makeFromInt 29367, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 67252, itemizedDeductions: makeFromInt 10399, federalTaxDue: makeFromInt 1205, stateTaxDue: makeFromInt 2777 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 108717, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17339, stateTaxDue: makeFromInt 5268 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 44710, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26682, federalTaxDue: makeFromInt 1434, stateTaxDue: makeFromInt 1933 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43829, ordinaryIncomeNonSS: makeFromInt 122728, qualifiedIncome: makeFromInt 70553, itemizedDeductions: makeFromInt 28104, federalTaxDue: makeFromInt 36069, stateTaxDue: makeFromInt 9409 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5572, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25537, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 24497, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4396, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 39373, qualifiedIncome: makeFromInt 94444, itemizedDeductions: makeFromInt 7049, federalTaxDue: makeFromInt 4682, stateTaxDue: makeFromInt 6216 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 28588, ordinaryIncomeNonSS: makeFromInt 47864, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4155, stateTaxDue: makeFromInt 1788 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 9954, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14962, stateTaxDue: makeFromInt 5330 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 28405, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1547, federalTaxDue: makeFromInt 231, stateTaxDue: makeFromInt 745 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8886, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17129, ordinaryIncomeNonSS: makeFromInt 110683, qualifiedIncome: makeFromInt 89707, itemizedDeductions: makeFromInt 5903, federalTaxDue: makeFromInt 26237, stateTaxDue: makeFromInt 9345 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 87826, itemizedDeductions: makeFromInt 14761, federalTaxDue: makeFromInt 5059, stateTaxDue: makeFromInt 3816 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41990, ordinaryIncomeNonSS: makeFromInt 25912, qualifiedIncome: makeFromInt 27692, itemizedDeductions: makeFromInt 9681, federalTaxDue: makeFromInt 3455, stateTaxDue: makeFromInt 2061 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14824, ordinaryIncomeNonSS: makeFromInt 42184, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3110, stateTaxDue: makeFromInt 1601 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 48799, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51826, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42171, stateTaxDue: makeFromInt 9946 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37864, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21866, federalTaxDue: makeFromInt 30741, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5977, ordinaryIncomeNonSS: makeFromInt 56153, qualifiedIncome: makeFromInt 4847, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4087, stateTaxDue: makeFromInt 2662 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29598, ordinaryIncomeNonSS: makeFromInt 3392, qualifiedIncome: makeFromInt 34852, itemizedDeductions: makeFromInt 12332, federalTaxDue: makeFromInt 573, stateTaxDue: makeFromInt 1386 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47893, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22267, federalTaxDue: makeFromInt 7647, stateTaxDue: makeFromInt 6920 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 9649, ordinaryIncomeNonSS: makeFromInt 80352, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11272, stateTaxDue: makeFromInt 3670 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 49545, ordinaryIncomeNonSS: makeFromInt 133407, qualifiedIncome: makeFromInt 48759, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31156, stateTaxDue: makeFromInt 8433 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49705, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6612, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 37050, stateTaxDue: makeFromInt 7640 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47938, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 88990, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13925, stateTaxDue: makeFromInt 4195 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5846, ordinaryIncomeNonSS: makeFromInt 104204, qualifiedIncome: makeFromInt 45110, itemizedDeductions: makeFromInt 8057, federalTaxDue: makeFromInt 21318, stateTaxDue: makeFromInt 6995 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47769, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26040, federalTaxDue: makeFromInt 2047, stateTaxDue: makeFromInt 1714 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44172, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14712, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14993, ordinaryIncomeNonSS: makeFromInt 83874, qualifiedIncome: makeFromInt 22257, itemizedDeductions: makeFromInt 19312, federalTaxDue: makeFromInt 9141, stateTaxDue: makeFromInt 4632 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8817, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 96135, itemizedDeductions: makeFromInt 29824, federalTaxDue: makeFromInt 34225, stateTaxDue: makeFromInt 11985 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69618, qualifiedIncome: makeFromInt 14122, itemizedDeductions: makeFromInt 18797, federalTaxDue: makeFromInt 4667, stateTaxDue: makeFromInt 3512 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20671, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7980, federalTaxDue: makeFromInt 37093, stateTaxDue: makeFromInt 12025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48716, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10512, ordinaryIncomeNonSS: makeFromInt 129885, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24024, stateTaxDue: makeFromInt 6239 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 35828, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 20712, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10913, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 27194, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 108 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10567, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 19821, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 31436, stateTaxDue: makeFromInt 8236 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 17182, ordinaryIncomeNonSS: makeFromInt 78176, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19507, federalTaxDue: makeFromInt 9456, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20807, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9483, ordinaryIncomeNonSS: makeFromInt 145799, qualifiedIncome: makeFromInt 26647, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26059, stateTaxDue: makeFromInt 8247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10499, ordinaryIncomeNonSS: makeFromInt 131117, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3080, federalTaxDue: makeFromInt 29350, stateTaxDue: makeFromInt 6463 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11192, ordinaryIncomeNonSS: makeFromInt 144720, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 43788, stateTaxDue: makeFromInt 12052 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10075, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 28363, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 13268, federalTaxDue: makeFromInt 11598, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45270, ordinaryIncomeNonSS: makeFromInt 79149, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 28268, federalTaxDue: makeFromInt 30621, stateTaxDue: makeFromInt 8825 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40637, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16062, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 38504, stateTaxDue: makeFromInt 8020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 6161, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24184, stateTaxDue: makeFromInt 7433 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 139808, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25786, stateTaxDue: makeFromInt 6315 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 26307, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81642, itemizedDeductions: makeFromInt 601, federalTaxDue: makeFromInt 126, stateTaxDue: makeFromInt 3407 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 32207, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 128757, qualifiedIncome: makeFromInt 66272, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27478, stateTaxDue: makeFromInt 9496 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 42258, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23685, ordinaryIncomeNonSS: makeFromInt 61798, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9616, stateTaxDue: makeFromInt 2723 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14150, ordinaryIncomeNonSS: makeFromInt 76065, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6884, stateTaxDue: makeFromInt 3128 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47135, ordinaryIncomeNonSS: makeFromInt 92162, qualifiedIncome: makeFromInt 92024, itemizedDeductions: makeFromInt 20641, federalTaxDue: makeFromInt 34420, stateTaxDue: makeFromInt 8954 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62592, qualifiedIncome: makeFromInt 96104, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 11873, stateTaxDue: makeFromInt 7460 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1384, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 66949, itemizedDeductions: makeFromInt 17917, federalTaxDue: makeFromInt 4350, stateTaxDue: makeFromInt 3190 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10648, federalTaxDue: makeFromInt 28028, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40062, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24258, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22166, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 5888 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27578, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17416, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 70718, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 28887, stateTaxDue: makeFromInt 10604 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49893, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7092, federalTaxDue: makeFromInt 2300, stateTaxDue: makeFromInt 2020 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 24675, qualifiedIncome: makeFromInt 90112, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6028, stateTaxDue: makeFromInt 5164 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106393, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 19795, federalTaxDue: makeFromInt 9080, stateTaxDue: makeFromInt 4645 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4734, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42568, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11779, stateTaxDue: makeFromInt 4672 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 56235, itemizedDeductions: makeFromInt 8675, federalTaxDue: makeFromInt 320, stateTaxDue: makeFromInt 2437 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 53405, itemizedDeductions: makeFromInt 28119, federalTaxDue: makeFromInt 2970, stateTaxDue: makeFromInt 2377 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18228, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32270, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 90961, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 42863, stateTaxDue: makeFromInt 11593 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27078, ordinaryIncomeNonSS: makeFromInt 31168, qualifiedIncome: makeFromInt 15081, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6290, stateTaxDue: makeFromInt 2012 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8046, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 10316, ordinaryIncomeNonSS: makeFromInt 149399, qualifiedIncome: makeFromInt 27859, itemizedDeductions: makeFromInt 6792, federalTaxDue: makeFromInt 25575, stateTaxDue: makeFromInt 8387 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 135247, qualifiedIncome: makeFromInt 4551, itemizedDeductions: makeFromInt 14378, federalTaxDue: makeFromInt 27940, stateTaxDue: makeFromInt 6477 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 50107, qualifiedIncome: makeFromInt 59698, itemizedDeductions: makeFromInt 14234, federalTaxDue: makeFromInt 7530, stateTaxDue: makeFromInt 5172 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98965, qualifiedIncome: makeFromInt 61078, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20398, stateTaxDue: makeFromInt 7627 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 38120, stateTaxDue: makeFromInt 7245 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1832, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 35766, ordinaryIncomeNonSS: makeFromInt 85706, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 13240, stateTaxDue: makeFromInt 3910 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25691, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11494, federalTaxDue: makeFromInt 47263, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14646, ordinaryIncomeNonSS: makeFromInt 113740, qualifiedIncome: makeFromInt 83240, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 25926, stateTaxDue: makeFromInt 9374 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77064, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25097, federalTaxDue: makeFromInt 6260, stateTaxDue: makeFromInt 3481 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 32828, ordinaryIncomeNonSS: makeFromInt 133196, qualifiedIncome: makeFromInt 72448, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 41578, stateTaxDue: makeFromInt 10059 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 95045, itemizedDeductions: makeFromInt 23153, federalTaxDue: makeFromInt 6697, stateTaxDue: makeFromInt 4501 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121960, qualifiedIncome: makeFromInt 26395, itemizedDeductions: makeFromInt 4893, federalTaxDue: makeFromInt 21580, stateTaxDue: makeFromInt 6947 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25075, ordinaryIncomeNonSS: makeFromInt 148287, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26073, stateTaxDue: makeFromInt 7039 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 60625, itemizedDeductions: makeFromInt 23733, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2439 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23527, qualifiedIncome: makeFromInt 23945, itemizedDeductions: makeFromInt 8853, federalTaxDue: makeFromInt 5615, stateTaxDue: makeFromInt 1999 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49829, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25486, federalTaxDue: makeFromInt 409, stateTaxDue: makeFromInt 1889 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74397, itemizedDeductions: makeFromInt 21607, federalTaxDue: makeFromInt 3600, stateTaxDue: makeFromInt 3243 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108010, qualifiedIncome: makeFromInt 56794, itemizedDeductions: makeFromInt 1452, federalTaxDue: makeFromInt 34949, stateTaxDue: makeFromInt 7985 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4396, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 63979, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2814 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 37405, ordinaryIncomeNonSS: makeFromInt 46191, qualifiedIncome: makeFromInt 94576, itemizedDeductions: makeFromInt 17732, federalTaxDue: makeFromInt 19958, stateTaxDue: makeFromInt 6751 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 35478, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95431, itemizedDeductions: makeFromInt 5645, federalTaxDue: makeFromInt 2526, stateTaxDue: makeFromInt 4097 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 38517, qualifiedIncome: makeFromInt 53209, itemizedDeductions: makeFromInt 8959, federalTaxDue: makeFromInt 8274, stateTaxDue: makeFromInt 4331 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98811, itemizedDeductions: makeFromInt 18049, federalTaxDue: makeFromInt 3437, stateTaxDue: makeFromInt 4591 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45706, ordinaryIncomeNonSS: makeFromInt 109082, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32525, stateTaxDue: makeFromInt 9779 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18749, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21686, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 83844, qualifiedIncome: makeFromInt 18885, itemizedDeductions: makeFromInt 15959, federalTaxDue: makeFromInt 10742, stateTaxDue: makeFromInt 4761 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 50863, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4302, federalTaxDue: makeFromInt 4134, stateTaxDue: makeFromInt 2288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9353, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20830, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142349, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 29690, federalTaxDue: makeFromInt 19607, stateTaxDue: makeFromInt 6742 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28773, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29519, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4344, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18620, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 40564, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30909, itemizedDeductions: makeFromInt 22510, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 970 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19327, ordinaryIncomeNonSS: makeFromInt 62516, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28969, federalTaxDue: makeFromInt 6612, stateTaxDue: makeFromInt 2671 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39537, ordinaryIncomeNonSS: makeFromInt 127100, qualifiedIncome: makeFromInt 78418, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31752, stateTaxDue: makeFromInt 9801 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 23865, federalTaxDue: makeFromInt 39819, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 102971, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21789, stateTaxDue: makeFromInt 9474 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38110, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48537, itemizedDeductions: makeFromInt 28154, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 806, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4745, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49412, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14460, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 30079, ordinaryIncomeNonSS: makeFromInt 30316, qualifiedIncome: makeFromInt 20487, itemizedDeductions: makeFromInt 4708, federalTaxDue: makeFromInt 7736, stateTaxDue: makeFromInt 2085 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 75508, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 25519, federalTaxDue: makeFromInt 5534, stateTaxDue: makeFromInt 3100 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10816, qualifiedIncome: makeFromInt 65166, itemizedDeductions: makeFromInt 12519, federalTaxDue: makeFromInt 1405, stateTaxDue: makeFromInt 3224 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 46961, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26046, federalTaxDue: makeFromInt 31665, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26837, ordinaryIncomeNonSS: makeFromInt 107555, qualifiedIncome: makeFromInt 22938, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17349, stateTaxDue: makeFromInt 5850 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 131404, qualifiedIncome: makeFromInt 20287, itemizedDeductions: makeFromInt 24760, federalTaxDue: makeFromInt 18384, stateTaxDue: makeFromInt 7287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 64999, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34160, stateTaxDue: makeFromInt 10414 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11523, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 55289, qualifiedIncome: makeFromInt 3868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5083, stateTaxDue: makeFromInt 2503 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25076, ordinaryIncomeNonSS: makeFromInt 8924, qualifiedIncome: makeFromInt 93783, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8127, stateTaxDue: makeFromInt 4880 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 14194, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5028, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 173 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1271, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 26301, itemizedDeductions: makeFromInt 8399, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 840 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2594, ordinaryIncomeNonSS: makeFromInt 83552, qualifiedIncome: makeFromInt 85142, itemizedDeductions: makeFromInt 3889, federalTaxDue: makeFromInt 24812, stateTaxDue: makeFromInt 8297 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 89728, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 24576, stateTaxDue: makeFromInt 9227 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 13112, ordinaryIncomeNonSS: makeFromInt 113917, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17006, federalTaxDue: makeFromInt 19769, stateTaxDue: makeFromInt 5241 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 34599, stateTaxDue: makeFromInt 12301 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10665, ordinaryIncomeNonSS: makeFromInt 83662, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10562, stateTaxDue: makeFromInt 3818 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9575, ordinaryIncomeNonSS: makeFromInt 118367, qualifiedIncome: makeFromInt 18067, itemizedDeductions: makeFromInt 25828, federalTaxDue: makeFromInt 22803, stateTaxDue: makeFromInt 6734 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23961, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 41860, itemizedDeductions: makeFromInt 2652, federalTaxDue: makeFromInt 702, stateTaxDue: makeFromInt 1788 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 31953, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5173, federalTaxDue: makeFromInt 8133, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10414, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 20698, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 460 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 30680, ordinaryIncomeNonSS: makeFromInt 89331, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24712, federalTaxDue: makeFromInt 13139, stateTaxDue: makeFromInt 4107 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 52276, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12246, stateTaxDue: makeFromInt 7419 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4884, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18471, stateTaxDue: makeFromInt 4876 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45678, ordinaryIncomeNonSS: makeFromInt 113287, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23767, stateTaxDue: makeFromInt 5089 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27022, ordinaryIncomeNonSS: makeFromInt 63888, qualifiedIncome: makeFromInt 64688, itemizedDeductions: makeFromInt 13259, federalTaxDue: makeFromInt 19400, stateTaxDue: makeFromInt 6211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 77857, itemizedDeductions: makeFromInt 15102, federalTaxDue: makeFromInt 34939, stateTaxDue: makeFromInt 11018 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 88046, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9270, stateTaxDue: makeFromInt 4266 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 13224, ordinaryIncomeNonSS: makeFromInt 37683, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1513, stateTaxDue: makeFromInt 1209 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 143153, qualifiedIncome: makeFromInt 28609, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 27877, stateTaxDue: makeFromInt 8535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 13942, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 29813, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25059, federalTaxDue: makeFromInt 2880, stateTaxDue: makeFromInt 4325 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 26053, federalTaxDue: makeFromInt 7245, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 43148, qualifiedIncome: makeFromInt 65571, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12660, stateTaxDue: makeFromInt 5046 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 67011, qualifiedIncome: makeFromInt 15822, itemizedDeductions: makeFromInt 28840, federalTaxDue: makeFromInt 4358, stateTaxDue: makeFromInt 3567 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 2525, ordinaryIncomeNonSS: makeFromInt 120633, qualifiedIncome: makeFromInt 54210, itemizedDeductions: makeFromInt 16618, federalTaxDue: makeFromInt 27785, stateTaxDue: makeFromInt 8607 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 32056, ordinaryIncomeNonSS: makeFromInt 22972, qualifiedIncome: makeFromInt 91756, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12503, stateTaxDue: makeFromInt 5627 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14300, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3705, stateTaxDue: makeFromInt 4447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 28157, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23459, stateTaxDue: makeFromInt 8535 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21472, ordinaryIncomeNonSS: makeFromInt 100614, qualifiedIncome: makeFromInt 28063, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19711, stateTaxDue: makeFromInt 6216 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17758, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 64092, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2054, stateTaxDue: makeFromInt 2718 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 47633, qualifiedIncome: makeFromInt 1599, itemizedDeductions: makeFromInt 10648, federalTaxDue: makeFromInt 3720, stateTaxDue: makeFromInt 2062 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23049, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68598, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5261, stateTaxDue: makeFromInt 2975 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 4293, ordinaryIncomeNonSS: makeFromInt 29992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1101 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7260, ordinaryIncomeNonSS: makeFromInt 13860, qualifiedIncome: makeFromInt 46407, itemizedDeductions: makeFromInt 8213, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2438 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 81595, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 49367, stateTaxDue: makeFromInt 11325 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 146022, qualifiedIncome: makeFromInt 85045, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 39246, stateTaxDue: makeFromInt 11356 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 78811, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8999, stateTaxDue: makeFromInt 3686 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 58327, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6084, stateTaxDue: makeFromInt 2628 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20398, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 25370, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72992, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17326, federalTaxDue: makeFromInt 8186, stateTaxDue: makeFromInt 3294 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23759, itemizedDeductions: makeFromInt 7261, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 813 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 19809, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8060, federalTaxDue: makeFromInt 30642, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 107412, qualifiedIncome: makeFromInt 49784, itemizedDeductions: makeFromInt 22792, federalTaxDue: makeFromInt 21833, stateTaxDue: makeFromInt 7405 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 21452, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46231, itemizedDeductions: makeFromInt 13768, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1837 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 57975, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4374, stateTaxDue: makeFromInt 2406 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106886, qualifiedIncome: makeFromInt 30961, itemizedDeductions: makeFromInt 12719, federalTaxDue: makeFromInt 18063, stateTaxDue: makeFromInt 6317 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18168, ordinaryIncomeNonSS: makeFromInt 41852, qualifiedIncome: makeFromInt 45168, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5482, stateTaxDue: makeFromInt 3776 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42361, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2182, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45614, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 15692, federalTaxDue: makeFromInt 11534, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80951, qualifiedIncome: makeFromInt 85481, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19970, stateTaxDue: makeFromInt 7937 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16990, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 11117, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3598, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 62941, itemizedDeductions: makeFromInt 24854, federalTaxDue: makeFromInt 1326, stateTaxDue: makeFromInt 2572 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 10496, ordinaryIncomeNonSS: makeFromInt 87179, qualifiedIncome: makeFromInt 25042, itemizedDeductions: makeFromInt 12873, federalTaxDue: makeFromInt 15299, stateTaxDue: makeFromInt 5122 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24961, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 44, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 12572, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 99232, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2382, stateTaxDue: makeFromInt 4487 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 12027, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 45822, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 36573, stateTaxDue: makeFromInt 9465 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7146, ordinaryIncomeNonSS: makeFromInt 35864, qualifiedIncome: makeFromInt 92165, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8177, stateTaxDue: makeFromInt 6101 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41802, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 105210, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 656, federalTaxDue: makeFromInt 15436, stateTaxDue: makeFromInt 4937 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10249, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17893, federalTaxDue: makeFromInt 9094, stateTaxDue: makeFromInt 4626 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 20465, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 10704, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 18779, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11228, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 10871, ordinaryIncomeNonSS: makeFromInt 29892, qualifiedIncome: makeFromInt 49012, itemizedDeductions: makeFromInt 21156, federalTaxDue: makeFromInt 5749, stateTaxDue: makeFromInt 3490 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17587, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 142087, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 21750, stateTaxDue: makeFromInt 6529 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 110151, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 6941, federalTaxDue: makeFromInt 28166, stateTaxDue: makeFromInt 5189 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72479, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6534, stateTaxDue: makeFromInt 3146 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30928, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1353 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 15752, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8567, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 63007, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 35549, stateTaxDue: makeFromInt 10413 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6249, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35612, ordinaryIncomeNonSS: makeFromInt 126424, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11464, federalTaxDue: makeFromInt 28031, stateTaxDue: makeFromInt 6019 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36489, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 7333, stateTaxDue: makeFromInt 1621 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 106936, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10673, federalTaxDue: makeFromInt 9875, stateTaxDue: makeFromInt 4956 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23080, ordinaryIncomeNonSS: makeFromInt 103620, qualifiedIncome: makeFromInt 99222, itemizedDeductions: makeFromInt 2280, federalTaxDue: makeFromInt 31720, stateTaxDue: makeFromInt 9567 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27250, ordinaryIncomeNonSS: makeFromInt 88785, qualifiedIncome: makeFromInt 48216, itemizedDeductions: makeFromInt 16591, federalTaxDue: makeFromInt 23953, stateTaxDue: makeFromInt 6595 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49683, ordinaryIncomeNonSS: makeFromInt 57554, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14336, stateTaxDue: makeFromInt 2423 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 43567, ordinaryIncomeNonSS: makeFromInt 47262, qualifiedIncome: makeFromInt 24385, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15502, stateTaxDue: makeFromInt 3430 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 14564, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 54121, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2031 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8017, ordinaryIncomeNonSS: makeFromInt 22940, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10184, stateTaxDue: makeFromInt 5923 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 141154, qualifiedIncome: makeFromInt 56253, itemizedDeductions: makeFromInt 3479, federalTaxDue: makeFromInt 29964, stateTaxDue: makeFromInt 9295 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 18862, qualifiedIncome: makeFromInt 81512, itemizedDeductions: makeFromInt 8445, federalTaxDue: makeFromInt 6579, stateTaxDue: makeFromInt 4691 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11951, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24790, stateTaxDue: makeFromInt 7201 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 40777, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30375, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 844 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 83693, qualifiedIncome: makeFromInt 13501, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6356, stateTaxDue: makeFromInt 4385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9578, ordinaryIncomeNonSS: makeFromInt 123703, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29234, stateTaxDue: makeFromInt 10510 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 19090, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48365, itemizedDeductions: makeFromInt 5880, federalTaxDue: makeFromInt 29663, stateTaxDue: makeFromInt 9243 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 92472, itemizedDeductions: makeFromInt 16105, federalTaxDue: makeFromInt 38221, stateTaxDue: makeFromInt 11901 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 98295, itemizedDeductions: makeFromInt 24651, federalTaxDue: makeFromInt 13107, stateTaxDue: makeFromInt 4460 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 62460, qualifiedIncome: makeFromInt 49954, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10554, stateTaxDue: makeFromInt 5246 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 319, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 97868, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8774, stateTaxDue: makeFromInt 4720 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 7887, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 58815, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3032, stateTaxDue: makeFromInt 2775 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 94803, qualifiedIncome: makeFromInt 76153, itemizedDeductions: makeFromInt 7944, federalTaxDue: makeFromInt 17787, stateTaxDue: makeFromInt 8066 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 20066, itemizedDeductions: makeFromInt 13268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 428 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8013, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 78333, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5499, stateTaxDue: makeFromInt 3462 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7621, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9792, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 76114, qualifiedIncome: makeFromInt 77246, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17764, stateTaxDue: makeFromInt 7093 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 19052, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 421 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44782, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 39864, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 45293, stateTaxDue: makeFromInt 9336 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17509, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4745 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 114332, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 17717, stateTaxDue: makeFromInt 5403 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35794, itemizedDeductions: makeFromInt 27371, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1335 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 11338, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 231 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47644, ordinaryIncomeNonSS: makeFromInt 101285, qualifiedIncome: makeFromInt 23441, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22292, stateTaxDue: makeFromInt 5708 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 20245, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20815, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 637 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 13526, qualifiedIncome: makeFromInt 1720, itemizedDeductions: makeFromInt 27640, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 287 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 9356, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 250 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 36924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 74685, itemizedDeductions: makeFromInt 25961, federalTaxDue: makeFromInt 6499, stateTaxDue: makeFromInt 3479 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29683, ordinaryIncomeNonSS: makeFromInt 27015, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 819, stateTaxDue: makeFromInt 896 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21755, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 34387, ordinaryIncomeNonSS: makeFromInt 129467, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27289, federalTaxDue: makeFromInt 23874, stateTaxDue: makeFromInt 5898 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 9559, ordinaryIncomeNonSS: makeFromInt 64553, qualifiedIncome: makeFromInt 1973, itemizedDeductions: makeFromInt 1279, federalTaxDue: makeFromInt 7477, stateTaxDue: makeFromInt 2944 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80789, qualifiedIncome: makeFromInt 42161, itemizedDeductions: makeFromInt 23871, federalTaxDue: makeFromInt 7853, stateTaxDue: makeFromInt 5673 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 79867, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26993, federalTaxDue: makeFromInt 7249, stateTaxDue: makeFromInt 3538 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11841, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 41247, itemizedDeductions: makeFromInt 21652, federalTaxDue: makeFromInt 31280, stateTaxDue: makeFromInt 9529 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146319, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11677, federalTaxDue: makeFromInt 32418, stateTaxDue: makeFromInt 11841 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33562, ordinaryIncomeNonSS: makeFromInt 125394, qualifiedIncome: makeFromInt 20967, itemizedDeductions: makeFromInt 2260, federalTaxDue: makeFromInt 27346, stateTaxDue: makeFromInt 6943 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 120374, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11445, federalTaxDue: makeFromInt 31656, stateTaxDue: makeFromInt 10644 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 69934, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 4843, stateTaxDue: makeFromInt 3342 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 59422, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22443, federalTaxDue: makeFromInt 4232, stateTaxDue: makeFromInt 2516 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 74177, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 10904, stateTaxDue: makeFromInt 3232 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 52873, itemizedDeductions: makeFromInt 25053, federalTaxDue: makeFromInt 371, stateTaxDue: makeFromInt 2146 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 65037, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20249, stateTaxDue: makeFromInt 3093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 54446, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 29303, stateTaxDue: makeFromInt 9647 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5808, ordinaryIncomeNonSS: makeFromInt 130617, qualifiedIncome: makeFromInt 10687, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 19272, stateTaxDue: makeFromInt 6490 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 15411, qualifiedIncome: makeFromInt 58144, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 352, stateTaxDue: makeFromInt 3303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 32332, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13304, stateTaxDue: makeFromInt 6162 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 40783, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 24626, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 38903, stateTaxDue: makeFromInt 8682 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 46565, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 35213, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1233 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 8656, ordinaryIncomeNonSS: makeFromInt 128089, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16011, federalTaxDue: makeFromInt 19767, stateTaxDue: makeFromInt 5829 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 88601, itemizedDeductions: makeFromInt 29615, federalTaxDue: makeFromInt 34519, stateTaxDue: makeFromInt 11555 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 11657, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 2929, itemizedDeductions: makeFromInt 10653, federalTaxDue: makeFromInt 21297, stateTaxDue: makeFromInt 7171 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 48704, ordinaryIncomeNonSS: makeFromInt 78295, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17228, federalTaxDue: makeFromInt 15986, stateTaxDue: makeFromInt 3340 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 36100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16080, federalTaxDue: makeFromInt 27566, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 29481, ordinaryIncomeNonSS: makeFromInt 9489, qualifiedIncome: makeFromInt 34507, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1795 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 38907, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3940, stateTaxDue: makeFromInt 4525 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36685, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1359 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 17293, ordinaryIncomeNonSS: makeFromInt 112600, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 4907, federalTaxDue: makeFromInt 20859, stateTaxDue: makeFromInt 5175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 58712, qualifiedIncome: makeFromInt 27999, itemizedDeductions: makeFromInt 2494, federalTaxDue: makeFromInt 5382, stateTaxDue: makeFromInt 3973 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 4015, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 73159, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2983 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 47677, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 76305, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13167, stateTaxDue: makeFromInt 3463 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 21316, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27608, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 31632, ordinaryIncomeNonSS: makeFromInt 55053, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6146, stateTaxDue: makeFromInt 2278 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 10302, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 986, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 5260 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37204, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 133440, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 3825, federalTaxDue: makeFromInt 39402, stateTaxDue: makeFromInt 6581 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36094, ordinaryIncomeNonSS: makeFromInt 5945, qualifiedIncome: makeFromInt 17877, itemizedDeductions: makeFromInt 22268, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 46753, ordinaryIncomeNonSS: makeFromInt 66480, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7569, federalTaxDue: makeFromInt 19525, stateTaxDue: makeFromInt 3166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 40876, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 626, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34017, stateTaxDue: makeFromInt 7233 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 7531, ordinaryIncomeNonSS: makeFromInt 47943, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 2628, stateTaxDue: makeFromInt 1822 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 20884, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 52119, itemizedDeductions: makeFromInt 11238, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2131 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44129, ordinaryIncomeNonSS: makeFromInt 43622, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6151, stateTaxDue: makeFromInt 1674 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144566, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 27133, stateTaxDue: makeFromInt 7026 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 121307, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20523, stateTaxDue: makeFromInt 5758 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 27019, ordinaryIncomeNonSS: makeFromInt 123135, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19272, federalTaxDue: makeFromInt 22713, stateTaxDue: makeFromInt 5582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 23120, ordinaryIncomeNonSS: makeFromInt 118455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 28809, stateTaxDue: makeFromInt 5817 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12685, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 48140, itemizedDeductions: makeFromInt 7022, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1802 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 69263, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 28450, federalTaxDue: makeFromInt 4621, stateTaxDue: makeFromInt 3154 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12654, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 42320, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19328, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33800, ordinaryIncomeNonSS: makeFromInt 63201, qualifiedIncome: makeFromInt 37882, itemizedDeductions: makeFromInt 27219, federalTaxDue: makeFromInt 16619, stateTaxDue: makeFromInt 4931 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 116455, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18248, stateTaxDue: makeFromInt 5511 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 47924, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91738, itemizedDeductions: makeFromInt 2616, federalTaxDue: makeFromInt 16765, stateTaxDue: makeFromInt 4454 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 11053, itemizedDeductions: makeFromInt 25108, federalTaxDue: makeFromInt 20336, stateTaxDue: makeFromInt 7578 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125925, qualifiedIncome: makeFromInt 76070, itemizedDeductions: makeFromInt 6407, federalTaxDue: makeFromInt 33852, stateTaxDue: makeFromInt 9955 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34372, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 10174, itemizedDeductions: makeFromInt 16089, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 90 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 750, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 37192, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1385 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 68726, qualifiedIncome: makeFromInt 64819, itemizedDeductions: makeFromInt 22618, federalTaxDue: makeFromInt 15484, stateTaxDue: makeFromInt 6222 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13523, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 80354, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 3683, stateTaxDue: makeFromInt 3643 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2996, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 23438, ordinaryIncomeNonSS: makeFromInt 20743, qualifiedIncome: makeFromInt 96058, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14963, stateTaxDue: makeFromInt 5385 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 19565, qualifiedIncome: makeFromInt 66811, itemizedDeductions: makeFromInt 9633, federalTaxDue: makeFromInt 16975, stateTaxDue: makeFromInt 4181 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 149982, qualifiedIncome: makeFromInt 38682, itemizedDeductions: makeFromInt 25459, federalTaxDue: makeFromInt 29978, stateTaxDue: makeFromInt 9397 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 36456, ordinaryIncomeNonSS: makeFromInt 149917, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32772, stateTaxDue: makeFromInt 7095 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49756, qualifiedIncome: makeFromInt 6986, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2369, stateTaxDue: makeFromInt 2343 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 50790, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5537, stateTaxDue: makeFromInt 2039 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 146024, qualifiedIncome: makeFromInt 34251, itemizedDeductions: makeFromInt 1821, federalTaxDue: makeFromInt 30891, stateTaxDue: makeFromInt 8759 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 465, itemizedDeductions: makeFromInt 29757, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 10832, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 24767, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 44907, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 55602, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9252, stateTaxDue: makeFromInt 2384 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14511, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113110, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17566, federalTaxDue: makeFromInt 10362, stateTaxDue: makeFromInt 5116 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40725, itemizedDeductions: makeFromInt 13874, federalTaxDue: makeFromInt 43976, stateTaxDue: makeFromInt 9281 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 18034, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 48095, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30186, stateTaxDue: makeFromInt 9654 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25872, ordinaryIncomeNonSS: makeFromInt 114419, qualifiedIncome: makeFromInt 64333, itemizedDeductions: makeFromInt 6827, federalTaxDue: makeFromInt 33635, stateTaxDue: makeFromInt 8603 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17637, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44100, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 72158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 36704, stateTaxDue: makeFromInt 10633 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 106473, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24550, federalTaxDue: makeFromInt 9671, stateTaxDue: makeFromInt 4879 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 21146, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2156, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 30944, ordinaryIncomeNonSS: makeFromInt 59612, qualifiedIncome: makeFromInt 37925, itemizedDeductions: makeFromInt 16577, federalTaxDue: makeFromInt 12192, stateTaxDue: makeFromInt 4424 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1273, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 30636, itemizedDeductions: makeFromInt 23225, federalTaxDue: makeFromInt 23040, stateTaxDue: makeFromInt 8560 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 14482, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33673, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8041, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 51506, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2100 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 7086, itemizedDeductions: makeFromInt 126, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 8100, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 66 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41178, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14481, federalTaxDue: makeFromInt 25928, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 99825, qualifiedIncome: makeFromInt 69464, itemizedDeductions: makeFromInt 14978, federalTaxDue: makeFromInt 24876, stateTaxDue: makeFromInt 8009 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 18289, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37253, ordinaryIncomeNonSS: makeFromInt 117758, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29432, federalTaxDue: makeFromInt 16478, stateTaxDue: makeFromInt 5353 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 14110, ordinaryIncomeNonSS: makeFromInt 112561, qualifiedIncome: makeFromInt 46093, itemizedDeductions: makeFromInt 16805, federalTaxDue: makeFromInt 19994, stateTaxDue: makeFromInt 7458 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 34334, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 2786, stateTaxDue: makeFromInt 1310 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100074, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29399, stateTaxDue: makeFromInt 9749 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20840, ordinaryIncomeNonSS: makeFromInt 41114, qualifiedIncome: makeFromInt 76207, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14428, stateTaxDue: makeFromInt 5637 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 14289, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 69804, itemizedDeductions: makeFromInt 13095, federalTaxDue: makeFromInt 37964, stateTaxDue: makeFromInt 10659 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 65068, qualifiedIncome: makeFromInt 16952, itemizedDeductions: makeFromInt 20104, federalTaxDue: makeFromInt 8052, stateTaxDue: makeFromInt 3646 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 24499, federalTaxDue: makeFromInt 24660, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 22641, qualifiedIncome: makeFromInt 48986, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3006 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 24517, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 24650, itemizedDeductions: makeFromInt 26932, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 829 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 25372, ordinaryIncomeNonSS: makeFromInt 7853, qualifiedIncome: makeFromInt 662, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 51 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46050, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1828, itemizedDeductions: makeFromInt 9845, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 107982, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9548, federalTaxDue: makeFromInt 25001, stateTaxDue: makeFromInt 5058 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 74293, itemizedDeductions: makeFromInt 5292, federalTaxDue: makeFromInt 35494, stateTaxDue: makeFromInt 10781 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 19718, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 23504, itemizedDeductions: makeFromInt 29267, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 800 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 2349, ordinaryIncomeNonSS: makeFromInt 94754, qualifiedIncome: makeFromInt 26786, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9646, stateTaxDue: makeFromInt 5402 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 28328, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21106, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17124, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 19297, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 64279, itemizedDeductions: makeFromInt 6077, federalTaxDue: makeFromInt 1602, stateTaxDue: makeFromInt 2639 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26784, ordinaryIncomeNonSS: makeFromInt 85710, qualifiedIncome: makeFromInt 87421, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33625, stateTaxDue: makeFromInt 8605 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 58093, qualifiedIncome: makeFromInt 70157, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26075, stateTaxDue: makeFromInt 6112 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 37633, ordinaryIncomeNonSS: makeFromInt 59996, qualifiedIncome: makeFromInt 18432, itemizedDeductions: makeFromInt 14658, federalTaxDue: makeFromInt 7665, stateTaxDue: makeFromInt 3347 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11716, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42410, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21782, federalTaxDue: makeFromInt 27547, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 79680, qualifiedIncome: makeFromInt 79654, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 18942, stateTaxDue: makeFromInt 7392 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 29947, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 11081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13737, itemizedDeductions: makeFromInt 11556, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 312 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 53292, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21507, stateTaxDue: makeFromInt 7593 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1517, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 36922, ordinaryIncomeNonSS: makeFromInt 30166, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7061, federalTaxDue: makeFromInt 1130, stateTaxDue: makeFromInt 1033 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29019, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 25879, qualifiedIncome: makeFromInt 56741, itemizedDeductions: makeFromInt 12691, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3656 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24007, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 4157, federalTaxDue: makeFromInt 34278, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 604, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21981, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 644 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 38997, ordinaryIncomeNonSS: makeFromInt 107981, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 29655, stateTaxDue: makeFromInt 5283 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 19599, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 55315, itemizedDeductions: makeFromInt 21731, federalTaxDue: makeFromInt 385, stateTaxDue: makeFromInt 2450 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 6087, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 11368, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 121864, qualifiedIncome: makeFromInt 39860, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19775, stateTaxDue: makeFromInt 7595 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26459, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 799 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 53480, itemizedDeductions: makeFromInt 4540, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2299 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 10185, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 73548, itemizedDeductions: makeFromInt 12545, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3302 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 66372, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 4393, stateTaxDue: makeFromInt 2844 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3894, federalTaxDue: makeFromInt 7380, stateTaxDue: makeFromInt 4753 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 42852, ordinaryIncomeNonSS: makeFromInt 90840, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 6715, federalTaxDue: makeFromInt 22776, stateTaxDue: makeFromInt 4286 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26698, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 620, stateTaxDue: makeFromInt 760 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 111093, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10789, stateTaxDue: makeFromInt 5166 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12355, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 32741, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 760, federalTaxDue: makeFromInt 36447, stateTaxDue: makeFromInt 7303 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 110823, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9612, stateTaxDue: makeFromInt 4866 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46786, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 257, stateTaxDue: makeFromInt 2039 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 8832, ordinaryIncomeNonSS: makeFromInt 38159, qualifiedIncome: makeFromInt 31880, itemizedDeductions: makeFromInt 23460, federalTaxDue: makeFromInt 1922, stateTaxDue: makeFromInt 3027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 21579, itemizedDeductions: makeFromInt 3613, federalTaxDue: makeFromInt 484, stateTaxDue: makeFromInt 876 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 56060, itemizedDeductions: makeFromInt 23944, federalTaxDue: makeFromInt 955, stateTaxDue: makeFromInt 2328 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 133585, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19009, federalTaxDue: makeFromInt 15067, stateTaxDue: makeFromInt 6004 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 79640, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6040, stateTaxDue: makeFromInt 3598 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13212, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28900, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 186 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 8971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 34663, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1543 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 49253, qualifiedIncome: makeFromInt 91716, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11316, stateTaxDue: makeFromInt 6741 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 87120, qualifiedIncome: makeFromInt 56728, itemizedDeductions: makeFromInt 20321, federalTaxDue: makeFromInt 22314, stateTaxDue: makeFromInt 6683 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 4993, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 51637, itemizedDeductions: makeFromInt 9120, federalTaxDue: makeFromInt 34453, stateTaxDue: makeFromInt 9827 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 48489, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20378, federalTaxDue: makeFromInt 28416, stateTaxDue: makeFromInt 7131 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 20356, ordinaryIncomeNonSS: makeFromInt 119740, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20150, stateTaxDue: makeFromInt 5612 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 25481, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 23623, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17546, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 41829, ordinaryIncomeNonSS: makeFromInt 30869, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 9517, federalTaxDue: makeFromInt 4149, stateTaxDue: makeFromInt 1288 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21127, ordinaryIncomeNonSS: makeFromInt 44650, qualifiedIncome: makeFromInt 8399, itemizedDeductions: makeFromInt 16931, federalTaxDue: makeFromInt 3350, stateTaxDue: makeFromInt 2277 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 14454, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 22784, ordinaryIncomeNonSS: makeFromInt 65771, qualifiedIncome: makeFromInt 60445, itemizedDeductions: makeFromInt 12802, federalTaxDue: makeFromInt 12612, stateTaxDue: makeFromInt 5836 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 245, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 11056, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 22207, federalTaxDue: makeFromInt 17078, stateTaxDue: makeFromInt 5439 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 32070, stateTaxDue: makeFromInt 7426 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 53119, stateTaxDue: makeFromInt 12045 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 27852, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 718 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 95491, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8534, stateTaxDue: makeFromInt 4442 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 42267, itemizedDeductions: makeFromInt 4781, federalTaxDue: makeFromInt 340, stateTaxDue: makeFromInt 1858 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 44165, ordinaryIncomeNonSS: makeFromInt 102066, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 9092, federalTaxDue: makeFromInt 21812, stateTaxDue: makeFromInt 4655 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28644, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 62350, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16477, federalTaxDue: makeFromInt 27531, stateTaxDue: makeFromInt 7543 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 26754, qualifiedIncome: makeFromInt 95484, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 5554, stateTaxDue: makeFromInt 5785 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31595, ordinaryIncomeNonSS: makeFromInt 22049, qualifiedIncome: makeFromInt 8895, itemizedDeductions: makeFromInt 14658, federalTaxDue: makeFromInt 247, stateTaxDue: makeFromInt 1027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 7471, ordinaryIncomeNonSS: makeFromInt 99668, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12290, stateTaxDue: makeFromInt 4736 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35689, ordinaryIncomeNonSS: makeFromInt 80847, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 10067, federalTaxDue: makeFromInt 14514, stateTaxDue: makeFromInt 3572 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 128377, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15730, federalTaxDue: makeFromInt 18692, stateTaxDue: makeFromInt 6098 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125920, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 14052, stateTaxDue: makeFromInt 5915 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 10260, ordinaryIncomeNonSS: makeFromInt 112870, qualifiedIncome: makeFromInt 75794, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 27811, stateTaxDue: makeFromInt 9058 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 26651, federalTaxDue: makeFromInt 18634, stateTaxDue: makeFromInt 7025 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 41142, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9337, federalTaxDue: makeFromInt 8285, stateTaxDue: makeFromInt 4651 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 93380, itemizedDeductions: makeFromInt 7417, federalTaxDue: makeFromInt 43026, stateTaxDue: makeFromInt 11760 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 87463, itemizedDeductions: makeFromInt 21167, federalTaxDue: makeFromInt 37875, stateTaxDue: makeFromInt 11618 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 55032, itemizedDeductions: makeFromInt 27369, federalTaxDue: makeFromInt 43750, stateTaxDue: makeFromInt 10110 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 203, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 2336, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 33711, ordinaryIncomeNonSS: makeFromInt 47757, qualifiedIncome: makeFromInt 95446, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20023, stateTaxDue: makeFromInt 6855 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 49507, ordinaryIncomeNonSS: makeFromInt 147477, qualifiedIncome: makeFromInt 60033, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 41759, stateTaxDue: makeFromInt 10001 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 46887, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1942 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37223, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 9308, stateTaxDue: makeFromInt 6570 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 4362, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 3732, ordinaryIncomeNonSS: makeFromInt 57679, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2160, federalTaxDue: makeFromInt 4471, stateTaxDue: makeFromInt 2309 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49017, ordinaryIncomeNonSS: makeFromInt 83842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18863, federalTaxDue: makeFromInt 17370, stateTaxDue: makeFromInt 3848 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 12479, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4517, federalTaxDue: makeFromInt 43853, stateTaxDue: makeFromInt 12245 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 97380, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 40110, stateTaxDue: makeFromInt 12392 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 21596, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 551 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1070, ordinaryIncomeNonSS: makeFromInt 11675, qualifiedIncome: makeFromInt 43934, itemizedDeductions: makeFromInt 13420, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2105 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 88871, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 16802, stateTaxDue: makeFromInt 4308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 25998, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 68466, itemizedDeductions: makeFromInt 6695, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2948 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 9097, ordinaryIncomeNonSS: makeFromInt 60911, qualifiedIncome: makeFromInt 64697, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17505, stateTaxDue: makeFromInt 6025 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 139600, qualifiedIncome: makeFromInt 97276, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36674, stateTaxDue: makeFromInt 11530 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 6588, ordinaryIncomeNonSS: makeFromInt 109495, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 15272, stateTaxDue: makeFromInt 4900 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 9788, ordinaryIncomeNonSS: makeFromInt 47775, qualifiedIncome: makeFromInt 90075, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8372, stateTaxDue: makeFromInt 6218 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 125214, qualifiedIncome: makeFromInt 11218, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19500, stateTaxDue: makeFromInt 6247 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 2220, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 15585, federalTaxDue: makeFromInt 25531, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 18500, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26091, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 495 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13448, qualifiedIncome: makeFromInt 41271, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2240 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27076, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 44884, itemizedDeductions: makeFromInt 9009, federalTaxDue: makeFromInt 2974, stateTaxDue: makeFromInt 1989 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 85972, qualifiedIncome: makeFromInt 30903, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 13038, stateTaxDue: makeFromInt 5410 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65641, itemizedDeductions: makeFromInt 4160, federalTaxDue: makeFromInt 3595, stateTaxDue: makeFromInt 2827 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 39576, ordinaryIncomeNonSS: makeFromInt 21294, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 25091, federalTaxDue: makeFromInt 16957, stateTaxDue: makeFromInt 5903 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 147981, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 2217, federalTaxDue: makeFromInt 32976, stateTaxDue: makeFromInt 7024 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 13919, ordinaryIncomeNonSS: makeFromInt 131733, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 22222, stateTaxDue: makeFromInt 6212 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 17373, ordinaryIncomeNonSS: makeFromInt 28328, qualifiedIncome: makeFromInt 67205, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 5922, stateTaxDue: makeFromInt 4321 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48966, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 131063, qualifiedIncome: makeFromInt 78263, itemizedDeductions: makeFromInt 6964, federalTaxDue: makeFromInt 43702, stateTaxDue: makeFromInt 10211 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 49787, ordinaryIncomeNonSS: makeFromInt 76509, qualifiedIncome: makeFromInt 83794, itemizedDeductions: makeFromInt 12173, federalTaxDue: makeFromInt 31395, stateTaxDue: makeFromInt 7560 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29910, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 37115, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 16731, itemizedDeductions: makeFromInt 22899, federalTaxDue: makeFromInt 28288, stateTaxDue: makeFromInt 7862 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 37048, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 32957, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 8346, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 91867, qualifiedIncome: makeFromInt 83403, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 22387, stateTaxDue: makeFromInt 8388 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21290, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 13150, itemizedDeductions: makeFromInt 18738, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 242 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 8150, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 12801, federalTaxDue: makeFromInt 8749, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 34896, ordinaryIncomeNonSS: makeFromInt 53400, qualifiedIncome: makeFromInt 83708, itemizedDeductions: makeFromInt 429, federalTaxDue: makeFromInt 23213, stateTaxDue: makeFromInt 6400 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 18292, ordinaryIncomeNonSS: makeFromInt 107218, qualifiedIncome: makeFromInt 97930, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 26678, stateTaxDue: makeFromInt 9582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33532, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 91518, itemizedDeductions: makeFromInt 6960, federalTaxDue: makeFromInt 2433, stateTaxDue: makeFromInt 4015 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 40288, ordinaryIncomeNonSS: makeFromInt 132607, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 30352, stateTaxDue: makeFromInt 6175 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 27532, ordinaryIncomeNonSS: makeFromInt 136193, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 14906, federalTaxDue: makeFromInt 41653, stateTaxDue: makeFromInt 11584 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18619, ordinaryIncomeNonSS: makeFromInt 18256, qualifiedIncome: makeFromInt 31382, itemizedDeductions: makeFromInt 22768, federalTaxDue: makeFromInt 1305, stateTaxDue: makeFromInt 2027 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 36919, ordinaryIncomeNonSS: makeFromInt 135077, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 2980, federalTaxDue: makeFromInt 32211, stateTaxDue: makeFromInt 6461 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 37369, qualifiedIncome: makeFromInt 40867, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 737, stateTaxDue: makeFromInt 3337 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 104222, qualifiedIncome: makeFromInt 12716, itemizedDeductions: makeFromInt 8642, federalTaxDue: makeFromInt 19414, stateTaxDue: makeFromInt 5172 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 72624, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28758, federalTaxDue: makeFromInt 4853, stateTaxDue: makeFromInt 2956 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 69978, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4849, stateTaxDue: makeFromInt 3345 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 41578, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 7830, federalTaxDue: makeFromInt 3080, stateTaxDue: makeFromInt 1824 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 18458, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 5492, federalTaxDue: makeFromInt 8996, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 45021, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 11488, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 80390, qualifiedIncome: makeFromInt 90864, itemizedDeductions: makeFromInt 29298, federalTaxDue: makeFromInt 20660, stateTaxDue: makeFromInt 8308 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12446, ordinaryIncomeNonSS: makeFromInt 72476, qualifiedIncome: makeFromInt 701, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 6280, stateTaxDue: makeFromInt 2984 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 129011, qualifiedIncome: makeFromInt 40244, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 20257, stateTaxDue: makeFromInt 7788 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 12865, ordinaryIncomeNonSS: makeFromInt 52102, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1279, stateTaxDue: makeFromInt 2004 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 25191, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 99431, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 10645, stateTaxDue: makeFromInt 4717 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 37809, qualifiedIncome: makeFromInt 19094, itemizedDeductions: makeFromInt 18672, federalTaxDue: makeFromInt 2097, stateTaxDue: makeFromInt 2390 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 16013, qualifiedIncome: makeFromInt 37390, itemizedDeductions: makeFromInt 26179, federalTaxDue: makeFromInt 2441, stateTaxDue: makeFromInt 2050 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 77529, qualifiedIncome: makeFromInt 78395, itemizedDeductions: makeFromInt 16234, federalTaxDue: makeFromInt 12408, stateTaxDue: makeFromInt 7121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 20076, ordinaryIncomeNonSS: makeFromInt 62409, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21755, stateTaxDue: makeFromInt 7732 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 9755, federalTaxDue: makeFromInt 6885, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10391, ordinaryIncomeNonSS: makeFromInt 116625, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 25198, stateTaxDue: makeFromInt 5723 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 32906, ordinaryIncomeNonSS: makeFromInt 62832, qualifiedIncome: makeFromInt 79659, itemizedDeductions: makeFromInt 22354, federalTaxDue: makeFromInt 17023, stateTaxDue: makeFromInt 6450 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 27903, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 31290, stateTaxDue: makeFromInt 8420 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 13103, qualifiedIncome: makeFromInt 61271, itemizedDeductions: makeFromInt 18906, federalTaxDue: makeFromInt 3543, stateTaxDue: makeFromInt 3569 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 26155, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 22746, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 2509, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3357, federalTaxDue: makeFromInt 3615, stateTaxDue: makeFromInt 4575 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 29223, ordinaryIncomeNonSS: makeFromInt 104976, qualifiedIncome: makeFromInt 38136, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29077, stateTaxDue: makeFromInt 6952 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14964, qualifiedIncome: makeFromInt 50890, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2706 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 47168, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 1015, stateTaxDue: makeFromInt 2103 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 16842, ordinaryIncomeNonSS: makeFromInt 129997, qualifiedIncome: makeFromInt 22919, itemizedDeductions: makeFromInt 19115, federalTaxDue: makeFromInt 21217, stateTaxDue: makeFromInt 7146 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 90381, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 34151, stateTaxDue: makeFromInt 9144 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 8983, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 9639, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59056, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 818, stateTaxDue: makeFromInt 2378 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1277, ordinaryIncomeNonSS: makeFromInt 120071, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14214, stateTaxDue: makeFromInt 5429 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47660, ordinaryIncomeNonSS: makeFromInt 19484, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 15781, stateTaxDue: makeFromInt 5645 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41252, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 48248, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 27199, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 59489, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 11001, stateTaxDue: makeFromInt 7481 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 35299, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 98196, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 13925, federalTaxDue: makeFromInt 14400, stateTaxDue: makeFromInt 4737 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 4394, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 4911, federalTaxDue: makeFromInt 40246, stateTaxDue: makeFromInt 12080 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 10554, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 5184, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 41045, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 59978, itemizedDeductions: makeFromInt 10782, federalTaxDue: makeFromInt 844, stateTaxDue: makeFromInt 2324 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 23474, ordinaryIncomeNonSS: makeFromInt 86414, qualifiedIncome: makeFromInt 2619, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 8720, stateTaxDue: makeFromInt 3990 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24672, ordinaryIncomeNonSS: makeFromInt 92209, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14423, stateTaxDue: makeFromInt 4035 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 14321, qualifiedIncome: makeFromInt 81404, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6563, stateTaxDue: makeFromInt 4454 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 33750, ordinaryIncomeNonSS: makeFromInt 11015, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 3380, federalTaxDue: makeFromInt 15294, stateTaxDue: makeFromInt 5296 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 26629, itemizedDeductions: makeFromInt 29487, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1011 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 21971, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 87392, itemizedDeductions: makeFromInt 15755, federalTaxDue: makeFromInt 7416, stateTaxDue: makeFromInt 4029 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 24326, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 16115, federalTaxDue: makeFromInt 47460, stateTaxDue: makeFromInt 12403 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 39190, ordinaryIncomeNonSS: makeFromInt 19761, qualifiedIncome: makeFromInt 61194, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 3014, stateTaxDue: makeFromInt 3573 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 3179, ordinaryIncomeNonSS: makeFromInt 107110, qualifiedIncome: makeFromInt 60225, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 23746, stateTaxDue: makeFromInt 8310 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 11543, federalTaxDue: makeFromInt 50626, stateTaxDue: makeFromInt 12282 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 26459, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33138, ordinaryIncomeNonSS: makeFromInt 34475, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21485, stateTaxDue: makeFromInt 6511 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 33867, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 86575, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6525, stateTaxDue: makeFromInt 3954 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 83573, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18836, stateTaxDue: makeFromInt 3915 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 45192, ordinaryIncomeNonSS: makeFromInt 60712, qualifiedIncome: makeFromInt 79263, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 23579, stateTaxDue: makeFromInt 6424 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17002, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 100024, qualifiedIncome: makeFromInt 33778, itemizedDeductions: makeFromInt 1133, federalTaxDue: makeFromInt 21033, stateTaxDue: makeFromInt 6477 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 17442, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39708, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 84941, itemizedDeductions: makeFromInt 23897, federalTaxDue: makeFromInt 44867, stateTaxDue: makeFromInt 11554 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 61914, qualifiedIncome: makeFromInt 77941, itemizedDeductions: makeFromInt 28443, federalTaxDue: makeFromInt 7436, stateTaxDue: makeFromInt 6582 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 39736, ordinaryIncomeNonSS: makeFromInt 65783, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 14024, stateTaxDue: makeFromInt 2927 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 25914, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7642, federalTaxDue: makeFromInt 7440, stateTaxDue: makeFromInt 5871 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 21471, qualifiedIncome: makeFromInt 4747, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 211, stateTaxDue: makeFromInt 836 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16413, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 17831, federalTaxDue: makeFromInt 44358, stateTaxDue: makeFromInt 12322 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 94139, qualifiedIncome: makeFromInt 12047, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 8436, stateTaxDue: makeFromInt 4918 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 11415, ordinaryIncomeNonSS: makeFromInt 44339, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 24920, federalTaxDue: makeFromInt 16665, stateTaxDue: makeFromInt 6762 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27817, ordinaryIncomeNonSS: makeFromInt 123798, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 26887, stateTaxDue: makeFromInt 5885 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 24410, stateTaxDue: makeFromInt 7099 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 24528, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 89732, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 1880, stateTaxDue: makeFromInt 3924 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 26081, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 21549, itemizedDeductions: makeFromInt 13752, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 822 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 40851, itemizedDeductions: makeFromInt 8556, federalTaxDue: makeFromInt 49535, stateTaxDue: makeFromInt 9509 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 11654, federalTaxDue: makeFromInt 18678, stateTaxDue: makeFromInt 6825 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1353, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 7162, federalTaxDue: makeFromInt 8940, stateTaxDue: makeFromInt 4613 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 17970, itemizedDeductions: makeFromInt 29472, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 366 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9000, stateTaxDue: makeFromInt 4545 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 47355, ordinaryIncomeNonSS: makeFromInt 78652, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 12508, stateTaxDue: makeFromInt 3326 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 29939, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 33561, ordinaryIncomeNonSS: makeFromInt 131490, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 21701, federalTaxDue: makeFromInt 25532, stateTaxDue: makeFromInt 6000 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 33549, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1840, federalTaxDue: makeFromInt 7930, stateTaxDue: makeFromInt 6362 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 11859, ordinaryIncomeNonSS: makeFromInt 102014, qualifiedIncome: makeFromInt 90236, itemizedDeductions: makeFromInt 7485, federalTaxDue: makeFromInt 32519, stateTaxDue: makeFromInt 9458 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 79018, qualifiedIncome: makeFromInt 5656, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 12963, stateTaxDue: makeFromInt 3768 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 5807, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7247, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 12592, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 36217, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 19462, federalTaxDue: makeFromInt 2955, stateTaxDue: makeFromInt 1136 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 75404, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 7776, stateTaxDue: makeFromInt 3621 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 16560, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 26879, ordinaryIncomeNonSS: makeFromInt 91055, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1319, federalTaxDue: makeFromInt 14597, stateTaxDue: makeFromInt 3978 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 45294, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 29127, itemizedDeductions: makeFromInt 27277, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1249 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 47760, ordinaryIncomeNonSS: makeFromInt 97693, qualifiedIncome: makeFromInt 41752, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 21803, stateTaxDue: makeFromInt 6598 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 39130, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 3256, stateTaxDue: makeFromInt 1343 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24782, ordinaryIncomeNonSS: makeFromInt 33377, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 1874, stateTaxDue: makeFromInt 1151 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 124903, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 18555, stateTaxDue: makeFromInt 6023 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 16738, ordinaryIncomeNonSS: makeFromInt 99978, qualifiedIncome: makeFromInt 28269, itemizedDeductions: makeFromInt 15501, federalTaxDue: makeFromInt 18910, stateTaxDue: makeFromInt 6037 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 42245, qualifiedIncome: makeFromInt 69981, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 5188, stateTaxDue: makeFromInt 5236 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 37939, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 9405, stateTaxDue: makeFromInt 4425 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 44785, ordinaryIncomeNonSS: makeFromInt 26536, qualifiedIncome: makeFromInt 57485, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 6624, stateTaxDue: makeFromInt 3726 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1451, qualifiedIncome: makeFromInt 56006, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 2753, stateTaxDue: makeFromInt 2706 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 31121, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 30120, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 931 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 85834, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 373, stateTaxDue: makeFromInt 3817 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 7532, qualifiedIncome: makeFromInt 38268, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1715 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 39449, stateTaxDue: makeFromInt 7222 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 13289, itemizedDeductions: makeFromInt 26570, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 453 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 36728, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1649 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 5258, ordinaryIncomeNonSS: makeFromInt 94224, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 11526, stateTaxDue: makeFromInt 4255 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 108842, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21165, stateTaxDue: makeFromInt 4898 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46608, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 81768, itemizedDeductions: makeFromInt 20259, federalTaxDue: makeFromInt 2842, stateTaxDue: makeFromInt 3413 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 38676, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 10418, federalTaxDue: makeFromInt 17275, stateTaxDue: makeFromInt 6420 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 16800, ordinaryIncomeNonSS: makeFromInt 24673, qualifiedIncome: makeFromInt 67096, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 6051, stateTaxDue: makeFromInt 4133 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 14426, federalTaxDue: makeFromInt 23766, stateTaxDue: makeFromInt 7125 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 41439, ordinaryIncomeNonSS: makeFromInt 18276, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 17860, federalTaxDue: makeFromInt 916, stateTaxDue: makeFromInt 499 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 144639, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 32895, stateTaxDue: makeFromInt 11926 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 91559, qualifiedIncome: makeFromInt 60133, itemizedDeductions: makeFromInt 9546, federalTaxDue: makeFromInt 31250, stateTaxDue: makeFromInt 7308 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 113446, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 33474, stateTaxDue: makeFromInt 10557 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 136613, qualifiedIncome: makeFromInt 30213, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21186, stateTaxDue: makeFromInt 8059 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47547, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 44260, stateTaxDue: makeFromInt 9622 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 65158, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 4081, stateTaxDue: makeFromInt 2895 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 26981, qualifiedIncome: makeFromInt 49781, itemizedDeductions: makeFromInt 21060, federalTaxDue: makeFromInt 833, stateTaxDue: makeFromInt 3463 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 46163, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 17498, federalTaxDue: makeFromInt 10036, stateTaxDue: makeFromInt 1853 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 72472, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 20346, federalTaxDue: makeFromInt 7216, stateTaxDue: makeFromInt 3369 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 33747, ordinaryIncomeNonSS: makeFromInt 49129, qualifiedIncome: makeFromInt 41414, itemizedDeductions: makeFromInt 27288, federalTaxDue: makeFromInt 7336, stateTaxDue: makeFromInt 3852 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 8117, itemizedDeductions: makeFromInt 17432, federalTaxDue: makeFromInt 37471, stateTaxDue: makeFromInt 7451 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 45470, ordinaryIncomeNonSS: makeFromInt 63989, qualifiedIncome: makeFromInt 65641, itemizedDeductions: makeFromInt 25149, federalTaxDue: makeFromInt 17274, stateTaxDue: makeFromInt 6007 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 18821, federalTaxDue: makeFromInt 25318, stateTaxDue: makeFromInt 7045 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 93056, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 26375, federalTaxDue: makeFromInt 13775, stateTaxDue: makeFromInt 4093 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 67234, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 33345, stateTaxDue: makeFromInt 10287 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 7666, ordinaryIncomeNonSS: makeFromInt 139992, qualifiedIncome: makeFromInt 68961, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 36969, stateTaxDue: makeFromInt 10228 },
  TestCase { year: (unsafeMakeYear 2019), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 22647, ordinaryIncomeNonSS: makeFromInt 141880, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 21798, stateTaxDue: makeFromInt 6519 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28597, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 22765, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 31558, stateTaxDue: makeFromInt 6997 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 1, ordinaryIncomeNonSS: makeFromInt 132591, qualifiedIncome: makeFromInt 49063, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 30019, stateTaxDue: makeFromInt 8836 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 39949, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 2455, federalTaxDue: makeFromInt 9832, stateTaxDue: makeFromInt 4625 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 8350, ordinaryIncomeNonSS: makeFromInt 114088, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 1366, federalTaxDue: makeFromInt 16345, stateTaxDue: makeFromInt 5329 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 44517, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 23559, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 464, stateTaxDue: makeFromInt 703 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 70515, qualifiedIncome: makeFromInt 47238, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 17898, stateTaxDue: makeFromInt 5781 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 50000, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 47306, itemizedDeductions: makeFromInt 17677, federalTaxDue: makeFromInt 43271, stateTaxDue: makeFromInt 9410 },
  TestCase { year: (unsafeMakeYear 2020), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Single, socSec: makeFromInt 27659, ordinaryIncomeNonSS: makeFromInt 93537, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 14971, stateTaxDue: makeFromInt 4422 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 42184, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 30000, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 46277, ordinaryIncomeNonSS: makeFromInt 143763, qualifiedIncome: makeFromInt 45988, itemizedDeductions: makeFromInt 9282, federalTaxDue: makeFromInt 32408, stateTaxDue: makeFromInt 8813 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 35801, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 19569, itemizedDeductions: makeFromInt 25240, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 447 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 24213, ordinaryIncomeNonSS: makeFromInt 49349, qualifiedIncome: makeFromInt 1, itemizedDeductions: makeFromInt 21932, federalTaxDue: makeFromInt 3500, stateTaxDue: makeFromInt 1966 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 20360, qualifiedIncome: makeFromInt 30105, itemizedDeductions: makeFromInt 12728, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 2048 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 15812, ordinaryIncomeNonSS: makeFromInt 1, qualifiedIncome: makeFromInt 46673, itemizedDeductions: makeFromInt 6869, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 1932 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 9826, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 7149, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 76708, itemizedDeductions: makeFromInt 29837, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 3160 },
  TestCase { year: (unsafeMakeYear 2017), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: Married, socSec: makeFromInt 4, ordinaryIncomeNonSS: makeFromInt 110157, qualifiedIncome: makeFromInt 100000, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 29830, stateTaxDue: makeFromInt 10269 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 29733, ordinaryIncomeNonSS: makeFromInt 125764, qualifiedIncome: makeFromInt 18803, itemizedDeductions: makeFromInt 2379, federalTaxDue: makeFromInt 30714, stateTaxDue: makeFromInt 6945 },
  TestCase { year: (unsafeMakeYear 2018), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: HeadOfHousehold, socSec: makeFromInt 0, ordinaryIncomeNonSS: makeFromInt 150000, qualifiedIncome: makeFromInt 80273, itemizedDeductions: makeFromInt 5481, federalTaxDue: makeFromInt 36619, stateTaxDue: makeFromInt 11193 },
  TestCase { year: (unsafeMakeYear 2022), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Married, socSec: makeFromInt 6587, ordinaryIncomeNonSS: makeFromInt 100617, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 9059, stateTaxDue: makeFromInt 4356 },
  TestCase { year: (unsafeMakeYear 2021), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 34464, ordinaryIncomeNonSS: makeFromInt 56450, qualifiedIncome: makeFromInt 73467, itemizedDeductions: makeFromInt 1, federalTaxDue: makeFromInt 19670, stateTaxDue: makeFromInt 6121 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 5, filingStatus: Single, socSec: makeFromInt 27342, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 879, itemizedDeductions: makeFromInt 0, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 },
  TestCase { year: (unsafeMakeYear 2016), birthDate: (unsafeMakeDate 1955 10 2), personalExemptions: 1, filingStatus: HeadOfHousehold, socSec: makeFromInt 23331, ordinaryIncomeNonSS: makeFromInt 0, qualifiedIncome: makeFromInt 0, itemizedDeductions: makeFromInt 28944, federalTaxDue: makeFromInt 0, stateTaxDue: makeFromInt 0 }
  ]